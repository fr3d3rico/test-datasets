[
  {
    "commit": "95f41d59b389b6f25000b7bc4ddb948cfdb90448",
    "author": "Jakub Scholz",
    "author_email": "www@scholzj.com",
    "date": "Fri Nov 24 16:41:16 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Nov 24 16:41:16 2023 +0100",
    "stats": {
      "files_changed": 6,
      "insertions": 118,
      "deletions": 18,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/config/internals/BrokerSecurityConfigs.java",
        "clients/src/main/java/org/apache/kafka/common/security/ssl/SslFactory.java",
        "clients/src/main/java/org/apache/kafka/common/utils/ConfigUtils.java",
        "clients/src/test/java/org/apache/kafka/common/security/ssl/SslFactoryTest.java",
        "clients/src/test/java/org/apache/kafka/common/utils/ConfigUtilsTest.java",
        "core/src/main/scala/kafka/server/KafkaConfig.scala"
      ]
    },
    "message": "KIP-978: Allow dynamic reloading of certificates with different DN / SANs (#14756)\n\nThis PR implements KIP-978: Allow dynamic reloading of certificates with different DN / SANs. It adds two new options ssl.allow.dn.changes and ssl.allow.san.changes that can be used to enable dynamic reloading of certificates even if their DN / SANs change. They both default to false to maintain the current behavior by default.\n\nReviewers: Mickael Maison <mimaison@apache.org>, Viktor Somogyi-Vass <viktorsomogyi@gmail.com>",
    "epoch": 1700854876,
    "epoch_utc": null
  },
  {
    "commit": "768a458b126c81a57e654b67befe7eb59beb2e17",
    "author": "Lucas Brutschy",
    "author_email": "lbrutschy@confluent.io",
    "date": "Fri Nov 24 10:47:31 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Nov 24 10:47:31 2023 +0100",
    "stats": {
      "files_changed": 2,
      "insertions": 88,
      "deletions": 2,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AsyncKafkaConsumer.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/AsyncKafkaConsumerTest.java"
      ]
    },
    "message": "KAFKA-15803: Update leader epoch in commitAsync and committed (#14817)\n\nTo align the new consumer completely with the legacy consumer,\nwe need to update the latest seen leader epoch in the metadata\nboth when we commit offsets with a leader epoch using\ncommitAsync and when we fetch the latest committed offsets\nusing committed.\n\nWe add unit tests to AsyncKafkaConsumer to test that\nmetadata is correctly updated. We also add a corresponding test\nfor commitSync, which already had the leader epoch logic.\n\nReviewers: Andrew Schofield <aschofield@confluent.io>, Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1700833651,
    "epoch_utc": null
  },
  {
    "commit": "fe58cb1ebdd748118efcdbabe61da2098fada0d2",
    "author": "Lucas Brutschy",
    "author_email": "lbrutschy@confluent.io",
    "date": "Fri Nov 24 10:44:25 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Nov 24 10:44:25 2023 +0100",
    "stats": {
      "files_changed": 1,
      "insertions": 4,
      "deletions": 0,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/integration/NamedTopologyIntegrationTest.java"
      ]
    },
    "message": "KAFKA-13531: Disable flaky NamedTopologyIntegrationTest (#14830)\n\nNamed topologies is a feature that is planned to be removed from AK with 4.0 and was never used via the public interface. It was used in a few versions of KSQL only, but was disabled there as well. While we do not want to remove it in 3.7 yet, we should disable flaky tests in that feature, that are disruptive to AK development.\n\nReviewers: Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1700833465,
    "epoch_utc": null
  },
  {
    "commit": "d5a8b892ae5884663be29e74a6bed5cbb2f0f7a8",
    "author": "Dongnuo Lyu",
    "author_email": "139248811+dongnuo123@users.noreply.github.com",
    "date": "Thu Nov 23 05:30:48 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 23 02:30:48 2023 -0800",
    "stats": {
      "files_changed": 8,
      "insertions": 724,
      "deletions": 24,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/JoinGroupResponse.java",
        "clients/src/test/java/org/apache/kafka/common/requests/JoinGroupResponseTest.java",
        "core/src/test/scala/unit/kafka/server/DeleteGroupsRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/GroupCoordinatorBaseRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/HeartbeatRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/JoinGroupRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/LeaveGroupRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/SyncGroupRequestTest.scala"
      ]
    },
    "message": "KAFKA-15856: Add integration tests for JoinGroup API and SyncGroup API (#14800)\n\nThis patch adds integration tests for JoinGroup API and SyncGroup API.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1700728248,
    "epoch_utc": null
  },
  {
    "commit": "891dd2a58a26a9c6c6dbc49a4611fc203209a327",
    "author": "Dongnuo Lyu",
    "author_email": "139248811+dongnuo123@users.noreply.github.com",
    "date": "Thu Nov 23 05:05:54 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 23 02:05:54 2023 -0800",
    "stats": {
      "files_changed": 8,
      "insertions": 250,
      "deletions": 160,
      "files": [
        "core/src/test/scala/integration/kafka/api/AbstractConsumerTest.scala",
        "core/src/test/scala/integration/kafka/api/BaseAsyncConsumerTest.scala",
        "core/src/test/scala/integration/kafka/api/BaseConsumerTest.scala",
        "core/src/test/scala/integration/kafka/api/IntegrationTestHarness.scala",
        "core/src/test/scala/integration/kafka/api/PlaintextConsumerTest.scala",
        "core/src/test/scala/integration/kafka/server/QuorumTestHarness.scala",
        "core/src/test/scala/kafka/utils/TestInfoUtils.scala",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorShard.java"
      ]
    },
    "message": "KAFKA-15756: [1/2] Migrate existing integration tests to run old protocol in new coordinator (#14781)\n\nThis patch updates the testing framework to support running tests with kraft and the new group coordinator introduced in the context of KIP-848. This can be done by using `kraft+kip-848` as a quorum. Note that this is temporary until we make it the default and only option in 4.0. To verify this, this patch also enables kraft and kraft+kip-848 in PlaintextConsumerTest and its parent classes.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1700726754,
    "epoch_utc": null
  },
  {
    "commit": "ebf435e7188c340980973708fbdcefe2f46d4fdc",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Thu Nov 23 10:01:39 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 23 15:31:39 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 5,
      "deletions": 7,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java"
      ]
    },
    "message": "KAFKA-15888: DistributedHerder log context should not use the same client ID for each Connect worker by default (#14825)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1700744499,
    "epoch_utc": 1700733699
  },
  {
    "commit": "75572f904b99cec5c57967cde68eac789feda6fa",
    "author": "Bruno Cadonna",
    "author_email": "cadonna@apache.org",
    "date": "Thu Nov 23 10:53:17 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 23 10:53:17 2023 +0100",
    "stats": {
      "files_changed": 8,
      "insertions": 271,
      "deletions": 11,
      "files": [
        "build.gradle",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AsyncKafkaConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/FetchBuffer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/WakeupTrigger.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/AsyncKafkaConsumerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerTestBuilder.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetchBufferTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/WakeupTriggerTest.java"
      ]
    },
    "message": "KAFKA-15555: Ensure wakeups are handled correctly in poll() (#14746)\n\nWe need to be careful when aborting a long poll with wakeup() since the\nconsumer might never return records if the poll is interrupted after the\nconsumer position has been updated but the records have not been returned\nto the caller of poll().\n\nThis PR avoid wake-ups during this critical period.\n\nReviewers: Philip Nee <pnee@confluent.io>, Kirk True <ktrue@confluent.io>, Lucas Brutschy <lbrutschy@confluent.io>",
    "epoch": 1700747597,
    "epoch_utc": null
  },
  {
    "commit": "55017a4f6886dbe1ed1eb31e4aaf2b9dee260ac6",
    "author": "Ritika Reddy",
    "author_email": "98577846+rreddy-22@users.noreply.github.com",
    "date": "Thu Nov 23 01:18:50 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 23 01:18:50 2023 -0800",
    "stats": {
      "files_changed": 5,
      "insertions": 1959,
      "deletions": 21,
      "files": [
        "checkstyle/suppressions.xml",
        ".../src/main/java/org/apache/kafka/coordinator/group/assignor/AbstractUniformAssignmentBuilder.java",
        ".../src/main/java/org/apache/kafka/coordinator/group/assignor/GeneralUniformAssignmentBuilder.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/assignor/UniformAssignor.java",
        ".../src/test/java/org/apache/kafka/coordinator/group/assignor/GeneralUniformAssignmentBuilderTest.java"
      ]
    },
    "message": "KAFKA-15484: General Rack Aware Assignor (#14481)\n\nThis patch adds the second part of the Uniform Assignor, used when the subscriptions of each member in a consumer group are different.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, David Jacot <djacot@confluent.io>",
    "epoch": 1700713130,
    "epoch_utc": null
  },
  {
    "commit": "209f268d6c375c1c16c4b26c609985b64b327e96",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Wed Nov 22 21:25:21 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Nov 22 21:25:21 2023 -0800",
    "stats": {
      "files_changed": 4,
      "insertions": 138,
      "deletions": 34,
      "files": [
        "metadata/src/main/java/org/apache/kafka/image/ClusterImage.java",
        "metadata/src/main/java/org/apache/kafka/image/writer/ImageWriterOptions.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "metadata/src/test/java/org/apache/kafka/image/ClusterImageTest.java"
      ]
    },
    "message": "KAFKA-15860: ControllerRegistration must be written out to the metadata image (#14807)\n\nThe ControllerRegistration records added in KIP-919 should be written out to the metadata\nimage, not just the log.\n\nReviewers: Jos\u00e9 Armando Garc\u00eda Sancio <jsancio@apache.org>",
    "epoch": 1700699121,
    "epoch_utc": null
  },
  {
    "commit": "5d717f23434bc18e5d9317cfc196564a2e85fc23",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Wed Nov 22 21:52:56 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 23 03:22:56 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java"
      ]
    },
    "message": "MINOR: Fix broken method link in DistributedHerder::writeToConfigTopicAsLeader Javadoc (#14824)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1700700776,
    "epoch_utc": 1700689976
  },
  {
    "commit": "150b0e8290cda57df668ba89f6b422719866de5a",
    "author": "Ritika Reddy",
    "author_email": "98577846+rreddy-22@users.noreply.github.com",
    "date": "Wed Nov 22 01:52:30 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Nov 22 01:52:30 2023 -0800",
    "stats": {
      "files_changed": 15,
      "insertions": 429,
      "deletions": 102,
      "files": [
        "tests/kafkatest/tests/client/consumer_rolling_upgrade_test.py",
        "tests/kafkatest/tests/client/consumer_test.py",
        "tests/kafkatest/tests/connect/connect_distributed_test.py",
        "tests/kafkatest/tests/core/consumer_group_command_test.py",
        "tests/kafkatest/tests/core/fetch_from_follower_test.py",
        "tests/kafkatest/tests/core/kraft_upgrade_test.py",
        "tests/kafkatest/tests/core/reassign_partitions_test.py",
        "tests/kafkatest/tests/core/replica_scale_test.py",
        "tests/kafkatest/tests/core/replication_replica_failure_test.py",
        "tests/kafkatest/tests/core/security_test.py",
        "tests/kafkatest/tests/core/snapshot_test.py",
        "tests/kafkatest/tests/core/transactions_test.py",
        "tests/kafkatest/tests/streams/streams_broker_down_resilience_test.py",
        "tests/kafkatest/tests/streams/streams_standby_replica_test.py",
        "tests/kafkatest/tests/streams/streams_static_membership_test.py"
      ]
    },
    "message": "KAFKA-15578: Migrating other system tests to use the group coordinator (#14582)\n\nThis patch converts a few more system tests to using the new group coordinator. This is only applied to KRaft clusters.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1700628750,
    "epoch_utc": null
  },
  {
    "commit": "93096532195d1e9730be8664f6f6cc84fb77eb41",
    "author": "Almog Gavra",
    "author_email": "almog.gavra@gmail.com",
    "date": "Tue Nov 21 13:51:39 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Nov 21 13:51:39 2023 -0800",
    "stats": {
      "files_changed": 33,
      "insertions": 1846,
      "deletions": 417,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java",
        "streams/src/main/java/org/apache/kafka/streams/TopologyConfig.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/Materialized.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/StreamJoined.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/AbstractConfigurableStoreFactory.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/InternalStreamsBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamImplJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KeyValueStoreMaterializer.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/MaterializedInternal.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/MaterializedStoreFactory.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/OuterStreamJoinStoreFactory.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/SessionStoreMaterializer.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/SlidingWindowStoreMaterializer.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/StreamJoinedInternal.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/StreamJoinedStoreFactory.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/WindowStoreMaterializer.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/StreamStreamJoinNode.java",
        "streams/src/main/java/org/apache/kafka/streams/state/BuiltInDslStoreSuppliers.java",
        "streams/src/main/java/org/apache/kafka/streams/state/DslKeyValueParams.java",
        "streams/src/main/java/org/apache/kafka/streams/state/DslSessionParams.java",
        "streams/src/main/java/org/apache/kafka/streams/state/DslStoreSuppliers.java",
        "streams/src/main/java/org/apache/kafka/streams/state/DslWindowParams.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/TimestampedKeyValueStoreBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/TimestampedWindowStoreBuilder.java",
        "streams/src/test/java/org/apache/kafka/streams/StreamsBuilderTest.java",
        "streams/src/test/java/org/apache/kafka/streams/StreamsConfigTest.java",
        "streams/src/test/java/org/apache/kafka/streams/TopologyTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamJoinTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/MaterializedInternalTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/KeyValueStoreMaterializerTest.java",
        "streams/streams-scala/src/test/scala/org/apache/kafka/streams/scala/kstream/StreamJoinedTest.scala"
      ]
    },
    "message": "KAFKA-15215: [KIP-954] support custom DSL store providers (#14648)\n\nImplementation for KIP-954: support custom DSL store providers\n\nTesting Strategy:\n- Updated the topology tests to ensure that the configuration is picked up in the topology builder\n- Manually built a Kafka Streams application using a customer DslStoreSuppliers class and verified that it was used\n\nReviewers: Anna Sophie Blee-Goldman <ableegoldman@apache.org>, Guozhang Wang <guozhang.wang.us@gmail.com>",
    "epoch": 1700585499,
    "epoch_utc": null
  },
  {
    "commit": "24aa9e0f411d8eaa773f24efc7d34091ea43a503",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Tue Nov 21 12:45:03 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Nov 21 21:45:03 2023 +0100",
    "stats": {
      "files_changed": 10,
      "insertions": 406,
      "deletions": 111,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CommitRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerNetworkThread.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CoordinatorRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/RequestManagers.java",
        ".../main/java/org/apache/kafka/clients/consumer/internals/events/AutoCommitCompletionBackgroundEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/BackgroundEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/BackgroundEventProcessor.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CommitRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerNetworkThreadTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerTestBuilder.java"
      ]
    },
    "message": "KAFKA-15327: Ensure the commit manager commit on close (#14710)\n\nWhen shutting down the network thread, we need to do the following:\n\n- autocommit the current progress\n- send a leave group heartbeat (KIP-848)\n- Send out the pending request (for example, unsent commits) and complete them within the timebound\n\nIn this commit, we add a closing procedure to the ConsumerNetworkThread. The actions can be summarized into the following:\n\n- Make sure we have a reachable coordinator node, if not, try to discover one\n- Once the node is discovered, prepare the requests (we need the node prior to sending because we need to know the destination)\n- Continue to poll until either: 1. timer runs out of time or 2. all requests are completed.\n\nAfter the closingTasks are done: we then perform the last poll for the request managers, via the pollOnClose method, to send out the remaining requests. For commit request manager, we need to send out the unsent commits and block until 1. timer runs out or 2. all requests are completed.\n\nReviewers: Lucas Brutschy <lbrutschy@confluent.io>",
    "epoch": 1700581503,
    "epoch_utc": null
  },
  {
    "commit": "e90692246ad76ec9c5710603faaec4dcb057bc81",
    "author": "Igor Soarez",
    "author_email": "soarez@apple.com",
    "date": "Tue Nov 21 17:40:04 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Nov 21 09:40:04 2023 -0800",
    "stats": {
      "files_changed": 8,
      "insertions": 173,
      "deletions": 25,
      "files": [
        "core/src/main/scala/kafka/server/metadata/KRaftMetadataCache.scala",
        "core/src/test/scala/unit/kafka/server/MetadataCacheTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/ClusterControlManager.java",
        "metadata/src/main/java/org/apache/kafka/metadata/BrokerRegistration.java",
        "metadata/src/main/java/org/apache/kafka/metadata/PartitionRegistration.java",
        "metadata/src/test/java/org/apache/kafka/image/node/ClusterImageBrokersNodeTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/BrokerRegistrationTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/PartitionRegistrationTest.java"
      ]
    },
    "message": "KAFKA-15362: Resolve offline replicas in metadata cache (#14737)\n\nThe metadata cache now considers registered log directories\nand directory assignments when determining offline replicas.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>, Proven Provenzano <pprovenzano@confluent.io>",
    "epoch": 1700599204,
    "epoch_utc": 1700588404
  },
  {
    "commit": "70bd8aeb08ab03221dbd67f43f0bb237e03d5e0e",
    "author": "Andrew Schofield",
    "author_email": "aschofield@confluent.io",
    "date": "Tue Nov 21 14:02:16 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Nov 21 15:02:16 2023 +0100",
    "stats": {
      "files_changed": 2,
      "insertions": 10,
      "deletions": 1,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AsyncKafkaConsumer.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/AsyncKafkaConsumerTest.java"
      ]
    },
    "message": "KAFKA-15837: Throw error on use of Consumer.poll(long timeout) in AsyncKafkaConsumer (#14810)\n\nConsumer.poll(long timeout) has been deprecated for many years and will finally be removed\nin Apache Kafka 4.0. The new consumer under development does not support the deprecated\nmethod, which has different timeout behaviour than Consumer.poll(Duration). Rather than\nimplement a dead method and immediately throw it away, the new consumer throws an exception\nif this deprecated method is called.\n\nReviewer: Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1700586136,
    "epoch_utc": 1700575336
  },
  {
    "commit": "7826d5fc8ab695a5ad927338469ddc01b435a298",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Tue Nov 21 11:51:59 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Nov 21 02:51:59 2023 -0800",
    "stats": {
      "files_changed": 10,
      "insertions": 8,
      "deletions": 45,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/MembershipManagerImpl.java",
        "clients/src/main/resources/common/message/ConsumerGroupHeartbeatRequest.json",
        "clients/src/main/resources/common/message/OffsetCommitRequest.json",
        "clients/src/main/resources/common/message/OffsetFetchRequest.json",
        "core/src/test/scala/unit/kafka/server/ConsumerGroupHeartbeatRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/DeleteGroupsRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/ListGroupsRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/OffsetCommitRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/OffsetDeleteRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/OffsetFetchRequestTest.scala"
      ]
    },
    "message": "MINOR: Mark ConsumerGroupHeartbeat API (v1), OffsetCommit API (v9) and OffsetFetch API (v9) as stable (KIP-848) (#14801)\n\nWe plan to ship an early access of KIP-848 in AK 3.7. Therefore, we need to mark the ConsumerGroupHeartbeat API (v1), OffsetCommit API (v9) and OffsetFetch API (v9) as stable.\n\nReviewers: Andrew Schofield <aschofield@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1700578319,
    "epoch_utc": null
  },
  {
    "commit": "4ad1d7842efb03098512203ea5e2628481b4c753",
    "author": "Dongnuo Lyu",
    "author_email": "139248811+dongnuo123@users.noreply.github.com",
    "date": "Tue Nov 21 03:37:39 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Nov 21 00:37:39 2023 -0800",
    "stats": {
      "files_changed": 9,
      "insertions": 486,
      "deletions": 62,
      "files": [
        "core/src/test/scala/unit/kafka/server/DeleteGroupsRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/DescribeGroupsRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/GroupCoordinatorBaseRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/HeartbeatRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/LeaveGroupRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/ListGroupsRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/OffsetCommitRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/OffsetDeleteRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/OffsetFetchRequestTest.scala"
      ]
    },
    "message": "KAFKA-15705: Add integration tests for Heartbeat API and GroupLeave API (#14656)\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1700548659,
    "epoch_utc": null
  },
  {
    "commit": "14065a7fdc7fc6587d898b59a0be7689501e2601",
    "author": "Jeff Kim",
    "author_email": "kimkb2011@gmail.com",
    "date": "Tue Nov 21 03:16:32 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Nov 21 00:16:32 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 0,
      "deletions": 2,
      "files": [
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/runtime/MultiThreadedEventProcessorTest.java"
      ]
    },
    "message": "MINOR: fix MultiThreadedEventProcessorTest.testMetrics() (#14802)\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1700547392,
    "epoch_utc": null
  },
  {
    "commit": "07fee62afe98fc631dec9797b0fd2a7e29b8c7ed",
    "author": "Jeff Kim",
    "author_email": "kimkb2011@gmail.com",
    "date": "Tue Nov 21 00:38:50 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Nov 20 21:38:50 2023 -0800",
    "stats": {
      "files_changed": 25,
      "insertions": 2055,
      "deletions": 101,
      "files": [
        "checkstyle/import-control.xml",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorShard.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/OffsetMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroup.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/generic/GenericGroup.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/metrics/CoordinatorMetrics.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/metrics/CoordinatorMetricsShard.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetrics.java",
        ".../src/main/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetricsShard.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorShardBuilder.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorServiceTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorShardTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/RecordHelpersTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroupTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/generic/GenericGroupTest.java",
        ".../src/test/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetricsShardTest.java",
        ".../src/test/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorMetricsTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/metrics/MetricsTestUtils.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntimeTest.java"
      ]
    },
    "message": "KAFKA-14519; [2/N] New coordinator metrics (#14387)\n\nThis patch copy over existing metrics and add new consumer group metrics to the new GroupCoordinatorService.\n\nNow that each coordinator is responsible for a topic partition, this patch introduces a GroupCoordinatorMetrics that records gauges for global metrics such as the number of generic groups in PreparingRebalance state, etc. For GroupCoordinatorShard specific metrics, GroupCoordinatorMetrics will activate new GroupCoordinatorMetricsShards that will be responsible for incrementing/decrementing TimelineLong objects and then aggregate the total amount across all shards.\n\nAs the CoordinatorRuntime/CoordinatorShard does not care about group metadata, we have introduced a CoordinatorMetrics.java/CoordinatorMetricsShard.java so that in the future transaction coordinator metrics can also be onboarded in a similar fashion.\n\nMain files to look at:\n\nGroupCoordinatorMetrics.java\nGroupCoordinatorMetricsShard.java\nCoordinatorMetrics.java\nCoordinatorMetricsShard.java\nCoordinatorRuntime.java\nMetrics to add after #14408 is merged:\n\noffset deletions sensor (OffsetDeletions); Meter(offset-deletion-rate, offset-deletion-count)\nMetrics to add after https://issues.apache.org/jira/browse/KAFKA-14987 is merged:\n\noffset expired sensor (OffsetExpired); Meter(offset-expiration-rate, offset-expiration-count)\n\nReviewers: Justine Olshan <jolshan@confluent.io>",
    "epoch": 1700537930,
    "epoch_utc": null
  },
  {
    "commit": "c7c82baf873011a0d79ab0bcfcde53205c26af4c",
    "author": "Igor Soarez",
    "author_email": "soarez@apple.com",
    "date": "Tue Nov 21 00:18:38 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Nov 20 16:18:38 2023 -0800",
    "stats": {
      "files_changed": 2,
      "insertions": 27,
      "deletions": 27,
      "files": [
        "core/src/main/scala/kafka/server/BrokerLifecycleManager.scala",
        "core/src/test/scala/unit/kafka/server/BrokerLifecycleManagerTest.scala"
      ]
    },
    "message": "MINOR: Always send cumulative failed dirs in HB request (#14770)\n\nInstead of only sending failed log directory UUIDs in the heartbeat\nrequest until a successful response is received, the broker sends\nthe full cumulative set of failed directories since startup time.\n\nThis aims to simplify the handling of log directory failure in the\ncontroller side, considering overload mode handling of heartbeat\nrequests, which returns an undifferentiated reply.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>, Proven Provenzano <pprovenzano@confluent.io>",
    "epoch": 1700536718,
    "epoch_utc": 1700525918
  },
  {
    "commit": "e905ef1edfb92d8771e8c2a9a668f32210ad7e07",
    "author": "Jason Gustafson",
    "author_email": "jason@confluent.io",
    "date": "Mon Nov 20 10:40:45 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Nov 20 10:40:45 2023 -0800",
    "stats": {
      "files_changed": 16,
      "insertions": 140,
      "deletions": 116,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/record/ConvertedRecords.java",
        "clients/src/main/java/org/apache/kafka/common/record/FileRecords.java",
        "clients/src/main/java/org/apache/kafka/common/record/LazyDownConversionRecordsSend.java",
        "clients/src/main/java/org/apache/kafka/common/record/MultiRecordsSend.java",
        ".../main/java/org/apache/kafka/common/record/{RecordConversionStats.java => RecordValidationStats.java}",
        "clients/src/main/java/org/apache/kafka/common/record/RecordsUtil.java",
        "clients/src/test/java/org/apache/kafka/common/record/MemoryRecordsBuilderTest.java",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/unit/kafka/coordinator/AbstractCoordinatorConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/log/LogValidatorTest.scala",
        "core/src/test/scala/unit/kafka/server/MockFetcherThread.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaFetcherThreadTest.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogAppendInfo.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogValidator.java"
      ]
    },
    "message": "MINOR: Small LogValidator clean ups (#14697)\n\nThis patch contains a few small clean-ups in LogValidator and associated classes:\n\n1. Set shallowOffsetOfMaxTimestamp consistently as the last offset in the\nbatch for v2 compressed and non-compressed data.\n2. Rename `RecordConversionStats` to `RecordValidationStats` since one of its\nfields `temporaryMemoryBytes` does not depend on conversion.\n3. Rename `batchIndex` in `recordIndex` in loops over the records in each batch\ninside `LogValidator`.\n\nReviewers: Qichao Chu <5326144+ex172000@users.noreply.github.com>, Jun Rao <junrao@gmail.com>",
    "epoch": 1700487645,
    "epoch_utc": null
  },
  {
    "commit": "4eb8ae68ca1a8c783356e35e863806d4899d4fb7",
    "author": "Andrew Schofield",
    "author_email": "aschofield@confluent.io",
    "date": "Mon Nov 20 16:18:54 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Nov 20 08:18:54 2023 -0800",
    "stats": {
      "files_changed": 2,
      "insertions": 87,
      "deletions": 3,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/FetchCollector.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetcherTest.java"
      ]
    },
    "message": "KAFKA-15836: KafkaConsumer subscribes to multiple topics does not respect max.poll.records (#14789)\n\nWhen returning fetched records, the code was not properly honouring max.poll.records.\nWhen it had fetched records for multiple topic-partitions, it was intended to accumulate records up to\nmax.poll.records. Actually, whenever it accumulated records from a partition, it was prepared to add\nmax.poll.records for that partition regardless of how many records it had already accumulated,\nrather than reducing the number of records to add based on records already added from other partitions.\n\nI added a test case which failed before the code change in the PR and passes afterwards.\n\nReviewers: Kirk True <ktrue@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1700507934,
    "epoch_utc": 1700497134
  },
  {
    "commit": "9e884bcff5a9cac8b49c4d3b783c7eedf60feff1",
    "author": "Igor Soarez",
    "author_email": "soarez@apple.com",
    "date": "Mon Nov 20 15:31:45 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Nov 20 07:31:45 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 22,
      "deletions": 8,
      "files": [
        "server/src/test/java/org/apache/kafka/server/AssignmentsManagerTest.java"
      ]
    },
    "message": "MINOR: Fix unstable sorting in AssignmentsManagerTest (#14794)\n\nBuilding AssignReplicasToDirsRequestData relies on iteration over Map entries, which can result in different sorting order. The order does not matter to the semantics of the request, but it can cause issues with test assertions. This issue was introduced in #14369.\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Ismael Juma <ismael@juma.me.uk>, David Jacot <djacot@confluent.io>",
    "epoch": 1700505105,
    "epoch_utc": 1700494305
  },
  {
    "commit": "6499cb041247c28652c9ad7e4763afb82b6fcd05",
    "author": "Lianet Magrans",
    "author_email": "98415067+lianetm@users.noreply.github.com",
    "date": "Mon Nov 20 10:20:14 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Nov 20 07:20:14 2023 -0800",
    "stats": {
      "files_changed": 23,
      "insertions": 2402,
      "deletions": 320,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/Metadata.java",
        "clients/src/main/java/org/apache/kafka/clients/MetadataCache.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AsyncKafkaConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CommitRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/HeartbeatRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/MemberState.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/MembershipManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/MembershipManagerImpl.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/RequestManagers.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/RequestState.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Utils.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEventProcessor.java",
        ".../main/java/org/apache/kafka/clients/consumer/internals/events/SubscriptionChangeApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/UnsubscribeApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/common/requests/ConsumerGroupHeartbeatRequest.java",
        "clients/src/test/java/org/apache/kafka/clients/MetadataCacheTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/AsyncKafkaConsumerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerTestBuilder.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/HeartbeatRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/MembershipManagerImplTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/TopicMetadataRequestManagerTest.java"
      ]
    },
    "message": "KAFKA-15574; [1/N]: Client state machine updates (#14690)\n\nUpdates for the Client state machine, Heartbeat and Commit managers, to support required states and transitions as the member interacts with a consumer group based on heartbeat requests.\n\nIncludes support for the subscribe and unsubscribe API calls, that drive the full lifecycle of a member as it joins a group, reconciles assignments, commits offsets if needed, handles fencing and fatal errors, and leaves the group.\n\nThis also includes support for topic ID only when needed for the reconciliation process.\n\nReviewers: Kirk True <ktrue@confluent.io>, Philip Nee <pnee@confluent.io>, Andrew Schofield <aschofield@confluent.io>, David Jacot <djacot@confluent.io>",
    "epoch": 1700486414,
    "epoch_utc": null
  },
  {
    "commit": "feee616f738a059d6de3e5ec32fba6e9c2b23fb9",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Mon Nov 20 14:50:11 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Nov 20 14:50:11 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 68,
      "deletions": 10,
      "files": [
        ".../main/java/org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManager.java",
        ".../java/org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManagerTest.java"
      ]
    },
    "message": "MINOR: Query before creating the internal remote log metadata topic (#14755)\n\nWhen a node starts (or) restarts, then we send a CREATE_TOPICS request to the controller to create the internal __remote_log_metadata topic.\n\nTopic creation event is costly and handled by the controller. During re-balance, the controller can have pending requests in its queue and can lead to CREATE_TOPICS timeout. Instead of firing the CREATE_TOPICS request when a node restarts, send a METADATA request (topic describe) which is handled by the least loaded node before sending a request to create the topic.\n\nReviewers: Satish Duggana <satishd@apache.org>, Christo Lolov <lolovc@amazon.com>",
    "epoch": 1700502611,
    "epoch_utc": null
  },
  {
    "commit": "e63f23718fdec514582fe1107536c1d2bacf72a1",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Mon Nov 20 00:15:48 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Nov 20 09:15:48 2023 +0100",
    "stats": {
      "files_changed": 4,
      "insertions": 237,
      "deletions": 37,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AsyncKafkaConsumer.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/AsyncKafkaConsumerTest.java",
        "core/src/test/scala/integration/kafka/api/BaseAsyncConsumerTest.scala"
      ]
    },
    "message": "KAFKA-15174: Ensure CommitAsync propagate the exception to the user (#14680)\n\nThe commit covers a few important points:\n\n- Exception handling: We should be thrown RetriableCommitException when the commit exception is retriable. We should throw FencedIdException on commit and poll similar to the current implementation. Other errors should be thrown as it is.\n- Callback invocation: The callbacks need to be invoked on the main/application thread; however, the future is completed in the background thread. To achieve this, I created an Invoker class with a queue, so that this callback can be invoked during the consumer.poll()\nNote: One change I made is to remove the DefaultOffsetCommit callback. Since the callback is purely for logging, I think it is reasonable for us to move the logging to the background thread instead of relying on the application thread to trigger the logging.\n\nReviewers: Lucas Brutschy <lbrutschy@confluent.io>",
    "epoch": 1700450148,
    "epoch_utc": null
  },
  {
    "commit": "df78204e05bb1c416d977a0a36f4c263251ae4ef",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Sun Nov 19 22:09:19 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Nov 19 22:09:19 2023 -0800",
    "stats": {
      "files_changed": 40,
      "insertions": 268,
      "deletions": 102,
      "files": [
        "build.gradle",
        "checkstyle/import-control-metadata.xml",
        "checkstyle/import-control-server-common.xml",
        "checkstyle/import-control-server.xml",
        "checkstyle/import-control-storage.xml",
        "core/src/main/java/kafka/server/builders/KafkaApisBuilder.java",
        "core/src/main/scala/kafka/coordinator/transaction/ProducerIdManager.scala",
        "core/src/main/scala/kafka/server/AlterPartitionManager.scala",
        "core/src/main/scala/kafka/server/AutoTopicCreationManager.scala",
        "core/src/main/scala/kafka/server/BrokerLifecycleManager.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/ConfigHandler.scala",
        "core/src/main/scala/kafka/server/ControllerConfigurationValidator.scala",
        "core/src/main/scala/kafka/server/ControllerRegistrationManager.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/ForwardingManager.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/main/scala/kafka/server/KafkaBroker.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/server/NodeToControllerChannelManager.scala",
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala",
        "core/src/test/scala/kafka/server/NodeToControllerRequestThreadTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/ProducerIdManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/AlterPartitionManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/AutoTopicCreationManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/BrokerRegistrationRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/ControllerConfigurationValidatorTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "core/src/test/scala/unit/kafka/server/MockNodeToControllerChannelManager.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala",
        "{core/src/main/java => server/src/main/java/org/apache}/kafka/server/AssignmentsManager.java",
        "{core/src/main/java => server/src/main/java/org/apache}/kafka/server/ClientMetricsManager.java",
        "server/src/main/java/org/apache/kafka/server/ControllerRequestCompletionHandler.java",
        "server/src/main/java/org/apache/kafka/server/NodeToControllerChannelManager.java",
        ".../main/java/kafka => server/src/main/java/org/apache/kafka/server}/metrics/ClientMetricsConfigs.java",
        "server/src/main/java/org/apache/kafka/server/package-info.java",
        "{core/src/test/java => server/src/test/java/org/apache}/kafka/server/AssignmentsManagerTest.java",
        ".../test/java/kafka => server/src/test/java/org/apache/kafka/server}/metrics/ClientMetricsTestUtils.java",
        "settings.gradle"
      ]
    },
    "message": "KAFKA-15854: Move Java classes from `kafka.server` to the `server` module (#14796)\n\nWe only move Java classes that have minimal or no dependencies on Scala classes in this PR.\n\nDetails:\n* Configured `server` module in build files.\n* Changed `ControllerRequestCompletionHandler` to be an interface since it has no implementations.\n* Cleaned up various import control files.\n* Minor build clean-ups for `server-common`.\n* Disabled `testAssignmentAggregation` when executed with Java 8, this is an existing issue (see #14794).\n\nFor broader context on this change, please check:\n* KAFKA-15852: Move server code from `core` to `server` module\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1700442559,
    "epoch_utc": null
  },
  {
    "commit": "066635819a9c59d15616249e93fac43dea797474",
    "author": "runom",
    "author_email": "jeatommy@gmail.com",
    "date": "Mon Nov 20 09:03:07 2023 +0900",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Nov 19 16:03:07 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 5,
      "deletions": 5,
      "files": [
        "tools/src/main/java/org/apache/kafka/tools/TopicCommand.java"
      ]
    },
    "message": "MINOR: Improve printing topic name when created topic in TopicCommand (#14661)\n\nThe topic name was displayed as `Optional<String>` when the topic was created.\n```\n% bin/kafka-topics.sh --create --topic test --bootstrap-server localhost:9092\nCreated topic Optional[test].\n```\nThis PR fixed to print the topic name as `String` instead of `Optional<String>`.\n```\n% bin/kafka-topics.sh --create --topic test --bootstrap-server localhost:9092\nCreated topic test.\n```\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1700481787,
    "epoch_utc": null
  },
  {
    "commit": "b9556611cdab932bdbae667bd3fd0287fa912a40",
    "author": "Lucas Brutschy",
    "author_email": "lbrutschy@confluent.io",
    "date": "Sun Nov 19 21:24:28 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Nov 19 21:24:28 2023 +0100",
    "stats": {
      "files_changed": 2,
      "insertions": 315,
      "deletions": 160,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AsyncKafkaConsumer.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/AsyncKafkaConsumerTest.java"
      ]
    },
    "message": "KAFKA-15833: Restrict Consumer API to be used from one thread (#14779)\n\nThe legacy consumer detects any concurrent operations from different\nthreads. This was not enforced in the new consumer. To avoid inconsistencies\nin the behavior, we enforce the same restriction in the new consumer.\n\nReviewers: Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1700439868,
    "epoch_utc": null
  },
  {
    "commit": "922d0d0e5cbc759c80a5464f88f3338026e56d0e",
    "author": "Bruno Cadonna",
    "author_email": "cadonna@apache.org",
    "date": "Sat Nov 18 21:10:21 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Nov 18 21:10:21 2023 +0100",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 1,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.java"
      ]
    },
    "message": "MINOR: Do not check whether updating tasks exist in the waiting loop (#14791)\n\nThe state updater waits on a condition variable if no tasks exist that need to be updated. The condition variable is wrapped by a loop to account for spurious wake-ups. The check whether updating tasks exist is done in the condition of the loop. Actually, the state updater thread can change whether updating tasks exists, but since the state updater thread is waiting for the condition variable the check for the existence of updating tasks will always return the same value as long as the state updater thread is waiting. Thus, the check only need to be done once before entering the loop.\n\nThis commit moves check before the loop making also the usage of mocks more robust since the processing becomes more deterministic.\n\nReviewers: Lucas Brutschy <lbrutschy@confluent.io>",
    "epoch": 1700352621,
    "epoch_utc": null
  },
  {
    "commit": "b1796ce6d2c04444a62393fbfd7c61811e001d67",
    "author": "Dongnuo Lyu",
    "author_email": "139248811+dongnuo123@users.noreply.github.com",
    "date": "Fri Nov 17 07:48:02 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Nov 17 04:48:02 2023 -0800",
    "stats": {
      "files_changed": 2,
      "insertions": 28,
      "deletions": 0,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorServiceTest.java"
      ]
    },
    "message": "KAFKA-15849: Fix ListGroups API when runtime partition size is zero (#14785)\n\nWhen the group coordinator does not host any __consumer_offsets partitions, the existing ListGroup implementation won't schedule any operation, thus a `new CompletableFuture<>()` is returned directly and never gets completed. This patch fixes the issue.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1700218082,
    "epoch_utc": null
  },
  {
    "commit": "fe7a373baac08a254949d2a4c7abecb4dacd6e6d",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Fri Nov 17 09:29:26 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Nov 17 00:29:26 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "core/src/test/scala/unit/kafka/server/ReplicaManagerConcurrencyTest.scala"
      ]
    },
    "message": "HOTFIX: Fix compilation error in ReplicaManagerConcurrencyTest for Scala 2.12 (#14786)\n\nhttps://github.com/apache/kafka/pull/14369 introduced a compilation error in ReplicaManagerConcurrencyTest for Scala 2.12.\n\nReviewers: Lucas Brutschy <lbrutschy@confluent.io>",
    "epoch": 1700224166,
    "epoch_utc": null
  },
  {
    "commit": "a03a71d7b5f123304d98f0de07cd56c2534d381a",
    "author": "Igor Soarez",
    "author_email": "i@soarez.me",
    "date": "Mon Sep 11 22:44:40 2023 +0100",
    "commit_by": "Colin P. McCabe",
    "commit_by_email": "cmccabe@apache.org",
    "commit_by_date": "Thu Nov 16 16:19:49 2023 -0800",
    "stats": {
      "files_changed": 15,
      "insertions": 839,
      "deletions": 38,
      "files": [
        "checkstyle/import-control-core.xml",
        "clients/src/main/java/org/apache/kafka/common/requests/AssignReplicasToDirsRequest.java",
        "core/src/main/java/kafka/server/AssignmentsManager.java",
        "core/src/main/java/kafka/server/builders/ReplicaManagerBuilder.java",
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/java/kafka/server/AssignmentsManagerTest.java",
        "core/src/test/scala/integration/kafka/server/QuorumTestHarness.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/server/StopReplicaRequestTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala",
        "metadata/src/main/java/org/apache/kafka/metadata/ControllerRegistration.java",
        "server-common/src/main/java/org/apache/kafka/queue/EventQueue.java",
        "server-common/src/main/java/org/apache/kafka/server/common/DirectoryEventHandler.java"
      ]
    },
    "message": "KAFKA-15357: Aggregate and propagate assignments\n\nA new AssignmentsManager accumulates, batches, and sends KIP-858\nassignment events to the Controller. Assignments are sent via\nAssignReplicasToDirs requests.\n\nMove QuorumTestHarness.formatDirectories into TestUtils so it can be\nused in other test contexts.\n\nFix a bug in ControllerRegistration.java where the wrong version of the\nrecord was being generated in ControllerRegistration.toRecord.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>, Proven Provenzano <pprovenzano@confluent.io>, Omnia G H Ibrahim <o.g.h.ibrahim@gmail.com>",
    "epoch": 1694483080,
    "epoch_utc": null
  },
  {
    "commit": "b1d83e2b04c92cebb5687c55ef2797186dbd0cf2",
    "author": "Crispin Bernier",
    "author_email": "chb2ab@virginia.edu",
    "date": "Thu Nov 16 18:42:34 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 16 15:42:34 2023 -0800",
    "stats": {
      "files_changed": 3,
      "insertions": 342,
      "deletions": 7,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/ProduceResponse.java",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala"
      ]
    },
    "message": "Revert \"Revert \"KAFKA-15661: KIP-951: Server side changes (#14444)\" (#14738)\" (#14747)\n\nThis KIP-951 commit was reverted to investigate the org.apache.kafka.tiered.storage.integration.ReassignReplicaShrinkTest test failure (#14738).\n\nA fix for that was merged in #14757, hence unreverting this change.\n\nThis reverts commit a98bd7d.\n\nReviewers: Justine Olshan <jolshan@confluent.io>, Mayank Shekhar Narula <mayanks.narula@gmail.com>",
    "epoch": 1700170954,
    "epoch_utc": null
  },
  {
    "commit": "a8622faf471da9291596d4dae1eb9044d07f2b8c",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Thu Nov 16 17:38:44 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 16 14:38:44 2023 -0800",
    "stats": {
      "files_changed": 17,
      "insertions": 406,
      "deletions": 81,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/AbstractControlRequest.java",
        "clients/src/main/java/org/apache/kafka/common/requests/LeaderAndIsrRequest.java",
        "clients/src/main/java/org/apache/kafka/common/requests/UpdateMetadataRequest.java",
        "clients/src/main/resources/common/message/UpdateMetadataRequest.json",
        "core/src/main/scala/kafka/controller/ControllerChannelManager.scala",
        "core/src/main/scala/kafka/migration/MigrationPropagator.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/server/MetadataCache.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/main/scala/kafka/server/metadata/ZkMetadataCache.scala",
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/server/MetadataCacheTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/fetcher/ReplicaFetcherThreadBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/metadata/MetadataRequestBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/server/CheckpointBench.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/server/PartitionCreationBench.java"
      ]
    },
    "message": "KAFKA-15799 Handle full metadata updates on ZK brokers (#14719)\n\nThis patch adds the concept of a \"Full\" UpdateMetadataRequest, similar to what is used in\nLeaderAndIsr. A new tagged field is added to UpdateMetadataRequest at version 8 which allows the\nKRaft controller to indicate if a UMR contains all the metadata or not. Since UMR is implicitly\ntreated as incremental by the ZK broker, we needed a way to detect topic deletions when the KRaft\nbroker sends a metadata snapshot to the ZK broker. By sending a \"Full\" flag, the broker can now\ncompare existing topic IDs to incoming topic IDs and calculate which topics should be removed from\nthe MetadataCache.\n\nThis patch only removes deleted topics from the MetadataCache. Partition/log management was\nimplemented in KAFKA-15605.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1700167124,
    "epoch_utc": null
  },
  {
    "commit": "e7f4f5dfe7ef2c95f3e9a1dbbeded8502d3e1e05",
    "author": "vamossagar12",
    "author_email": "sagarmeansocean@gmail.com",
    "date": "Thu Nov 16 15:30:11 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 16 11:00:11 2023 +0100",
    "stats": {
      "files_changed": 1,
      "insertions": 0,
      "deletions": 13,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java"
      ]
    },
    "message": "[MINOR] Removing unused variables from StreamThreadTest (#14777)\n\nA few variables which aren't being used anymore but still exist. This commit removes those unused variables.\n\nCo-authored-by: Sagar Rao <sagarrao@Sagars-MacBook-Pro.local>\nReviewers: Lucas Brutschy <lbrutschy@confluent.io>",
    "epoch": 1700159411,
    "epoch_utc": null
  },
  {
    "commit": "3fd6293449a0e92b709d2f74f0c444a05f52a287",
    "author": "Robert Wagner",
    "author_email": "tholos@gmail.com",
    "date": "Thu Nov 16 04:17:33 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 16 01:17:33 2023 -0800",
    "stats": {
      "files_changed": 2,
      "insertions": 60,
      "deletions": 3,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/LeaveGroupResponse.java",
        "clients/src/test/java/org/apache/kafka/common/requests/LeaveGroupResponseTest.java"
      ]
    },
    "message": "KAFKA-15755: LeaveGroupResponse v0 - v2 loses its member under certain error conditions (#14635)\n\nThis patch fixes a bug in the LeaveGroupResponse construction. Basically, when a top level error is set, no members are expected but the current check always requires one for versions prior to version 3.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1700119053,
    "epoch_utc": null
  },
  {
    "commit": "875e610a2ba7ccc3514740db91743b9716411ff4",
    "author": "Jorge Esteban Quilcate Otoya",
    "author_email": "jorge.quilcate@aiven.io",
    "date": "Thu Nov 16 05:22:01 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 16 08:52:01 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 118,
      "deletions": 19,
      "files": [
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java"
      ]
    },
    "message": "KAFKA-15802: Validate remote segment state before fetching index (#14727) (#14759)\n\nReviewers: Satish Duggana <satishd@apache.org>, Divij Vaidya <diviv@amazon.com>, Christo Lolov <lolovc@amazon.com>, Luke Chen <showuon@gmail.com>, Kamal Chandraprakash<kamal.chandraprakash@gmail.com>",
    "epoch": 1700122921,
    "epoch_utc": null
  },
  {
    "commit": "0489b7cd331b22b5a2912e79e1cfa517ba6cecc9",
    "author": "Alieh",
    "author_email": "107070585+aliehsaeedii@users.noreply.github.com",
    "date": "Thu Nov 16 02:34:54 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Nov 15 17:34:54 2023 -0800",
    "stats": {
      "files_changed": 6,
      "insertions": 444,
      "deletions": 1,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/query/VersionedKeyQuery.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredVersionedKeyValueStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBVersionedStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/StoreQueryUtils.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/IQv2VersionedStoreIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/query/VersionedKeyQueryTest.java"
      ]
    },
    "message": "KAFKA-15346: add support for 'single key single timestamp' IQs with versioned state stores (KIP-960) (#14596)\n\nThis PR implements KIP-960 which add support for `VersionedKeyQuery`.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1700112894,
    "epoch_utc": null
  },
  {
    "commit": "22f7ffe5e1623d279096b45ab475768eeb05eee1",
    "author": "Kirk True",
    "author_email": "kirk@kirktrue.pro",
    "date": "Wed Nov 15 05:00:40 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Nov 15 05:00:40 2023 -0800",
    "stats": {
      "files_changed": 18,
      "insertions": 2434,
      "deletions": 1495,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java",
        ".../org/apache/kafka/clients/consumer/internals/{PrototypeAsyncConsumer.java => AsyncKafkaConsumer.java}",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CommitRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerDelegate.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerDelegateCreator.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerNetworkThread.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerUtils.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/LegacyKafkaConsumer.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/ConsumerConfigTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java",
        ".../kafka/clients/consumer/internals/{PrototypeAsyncConsumerTest.java => AsyncKafkaConsumerTest.java}",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CommitRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerTestBuilder.java",
        "core/src/test/scala/integration/kafka/api/BaseAsyncConsumerTest.scala",
        "core/src/test/scala/integration/kafka/api/IntegrationTestHarness.scala",
        "gradle/spotbugs-exclude.xml",
        "streams/src/test/java/org/apache/kafka/streams/integration/TaskAssignorIntegrationTest.java"
      ]
    },
    "message": "KAFKA-15277: Design & implement support for internal Consumer delegates (#14670)\n\nThe consumer refactoring project introduced another `Consumer` implementation, creating two different, coexisting implementations of the `Consumer` interface:\n\n* `KafkaConsumer` (AKA \"existing\", \"legacy\" consumer)\n* `PrototypeAsyncConsumer` (AKA \"new\", \"refactored\" consumer)\n\nThe goal of this task is to refactor the code via the delegation pattern so that we can keep a top-level `KafkaConsumer` but then delegate to another implementation under the covers. There will be two delegates at first:\n\n* `LegacyKafkaConsumer`\n* `AsyncKafkaConsumer`\n\n`LegacyKafkaConsumer` is essentially a renamed `KafkaConsumer`. That implementation handles the existing group protocol. `AsyncKafkaConsumer` is renamed from `PrototypeAsyncConsumer` and will implement the new consumer group protocol from KIP-848. Both of those implementations will live in the `internals` sub-package to discourage their use.\n\nThis task is part of the work to implement support for the new KIP-848 consumer group protocol.\n\nReviewers: Philip Nee <pnee@confluent.io>, Andrew Schofield <aschofield@confluent.io>, David Jacot <djacot@confluent.io>",
    "epoch": 1700035240,
    "epoch_utc": null
  },
  {
    "commit": "a64037cdef6163002c6aae1b37463a267f1bff4b",
    "author": "Jay Wang",
    "author_email": "xdddxyyyxzzz123@gmail.com",
    "date": "Wed Nov 15 16:45:11 2023 +0900",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Nov 14 23:45:11 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorShardTest.java"
      ]
    },
    "message": "MINOR: Fix GroupCoordinatorShardTest stubbing (#14637)\n\nThis patch fixes incorrect stubs in GroupCoordinatorShardTest.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1700077511,
    "epoch_utc": null
  },
  {
    "commit": "1bc4de75a2f870c31ad0025ff4feab063c5a5267",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Wed Nov 15 06:07:50 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Nov 15 11:37:50 2023 +0530",
    "stats": {
      "files_changed": 23,
      "insertions": 929,
      "deletions": 85,
      "files": [
        "bin/connect-standalone.sh",
        "checkstyle/import-control.xml",
        "connect/runtime/src/main/java/org/apache/kafka/connect/cli/ConnectStandalone.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Herder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/entities/CreateConnectorRequest.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResource.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/ConfigBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaConfigBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/MemoryConfigBackingStore.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/cli/ConnectStandaloneTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/ConnectWorkerIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/RestForwardingIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/StandaloneWorkerIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedHerderTest.java",
        ".../runtime/src/test/java/org/apache/kafka/connect/runtime/rest/entities/CreateConnectorRequestTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaConfigBackingStoreTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/MemoryConfigBackingStoreTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnect.java",
        "docs/connect.html"
      ]
    },
    "message": "KAFKA-15470: Allow creating connectors in a stopped state (#14704)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1700039270,
    "epoch_utc": 1700028470
  },
  {
    "commit": "83b7c9a053546e59546d8ff904025a21bd41daa7",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Tue Nov 14 15:56:42 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Nov 14 15:56:42 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 21,
      "deletions": 20,
      "files": [
        "core/src/main/scala/kafka/server/ReplicaManager.scala"
      ]
    },
    "message": "MINOR Re-add action queue parameter removed from appendRecords (#14753)\n\nIn 91fa196, I accidentally removed the action queue paramater that was added in 7d147cf. I also renamed the actionQueue as to not confuse this in the future.\n\nI don't think this broke anything since we don't use verification for group coordinator commits, but I should fix it to be as it was before.\n\nReviewers:  Artem Livshits <alivshits@confluent.io>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1699988202,
    "epoch_utc": null
  },
  {
    "commit": "bd030f34995d18879d36549173752f1a92515c1b",
    "author": "Mayank Shekhar Narula",
    "author_email": "42991652+msn-tldr@users.noreply.github.com",
    "date": "Tue Nov 14 23:46:58 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Nov 14 17:46:58 2023 -0600",
    "stats": {
      "files_changed": 2,
      "insertions": 13,
      "deletions": 3,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/SubscriptionState.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/SubscriptionStateTest.java"
      ]
    },
    "message": "KAFKA-15824 SubscriptionState's maybeValidatePositionForCurrentLeader should handle partition which isn't subscribed yet (#14757)\n\nSee the motivation in jira description https://issues.apache.org/jira/browse/KAFKA-15824\n\nThis was discovered as ReassignReplicaShrinkTest started to fail with KIP-951 changes. KIP-951 changes since then have been reverted(PR), would be put back once this is in.\n\nReviewers: Walker Carlson <wcarlson@apache.org>, Andrew Schofield <aschofield@confluent.io>",
    "epoch": 1700016418,
    "epoch_utc": 1700005618
  },
  {
    "commit": "832627fc78484fdc7c8d6da8a2d20e7691dbf882",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Tue Nov 14 09:25:09 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Nov 14 09:25:09 2023 +0100",
    "stats": {
      "files_changed": 36,
      "insertions": 128,
      "deletions": 170,
      "files": [
        "metadata/src/main/java/org/apache/kafka/metadata/BrokerRegistrationFencingChange.java",
        "metadata/src/main/java/org/apache/kafka/metadata/BrokerRegistrationInControlledShutdownChange.java",
        "metadata/src/main/java/org/apache/kafka/metadata/DelegationTokenData.java",
        "metadata/src/main/java/org/apache/kafka/metadata/LeaderRecoveryState.java",
        "metadata/src/main/java/org/apache/kafka/metadata/PartitionRegistration.java",
        "metadata/src/main/java/org/apache/kafka/metadata/authorizer/StandardAuthorizer.java",
        "metadata/src/main/java/org/apache/kafka/metadata/placement/StripedReplicaPlacer.java",
        "metadata/src/main/java/org/apache/kafka/metadata/util/BatchFileReader.java",
        "metadata/src/main/java/org/apache/kafka/metadata/util/RecordRedactor.java",
        "metadata/src/test/java/org/apache/kafka/controller/ClusterControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/ProducerIdControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerMetricsIntegrationTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTestEnv.java",
        "metadata/src/test/java/org/apache/kafka/controller/ReplicationControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/image/AclsDeltaTest.java",
        "metadata/src/test/java/org/apache/kafka/image/ClusterImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/DelegationTokenImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/FakeSnapshotWriter.java",
        "metadata/src/test/java/org/apache/kafka/image/ImageDowngradeTest.java",
        "metadata/src/test/java/org/apache/kafka/image/MetadataImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/MetadataVersionChangeTest.java",
        "metadata/src/test/java/org/apache/kafka/image/loader/metrics/MetadataLoaderMetricsTest.java",
        "metadata/src/test/java/org/apache/kafka/image/publisher/SnapshotEmitterTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/BrokerStateTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/ListenerInfoTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/PartitionRegistrationTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/RecordTestUtils.java",
        "metadata/src/test/java/org/apache/kafka/metadata/VersionRangeTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/bootstrap/BootstrapDirectoryTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/bootstrap/BootstrapMetadataTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/CapturingDelegationTokenMigrationClient.java",
        "metadata/src/test/java/org/apache/kafka/metadata/util/BatchFileWriterReaderTest.java",
        "metadata/src/test/java/org/apache/kafka/metalog/LocalLogManager.java",
        "metadata/src/test/java/org/apache/kafka/metalog/LocalLogManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/metalog/MockMetaLogManagerListener.java"
      ]
    },
    "message": "MINOR: Various cleanups in metadata (#14734)\n\n- Remove unused code, suppression\n- Simplify/fix test assertions\n- Javadoc cleanups\n\nReviewers: Josep Prat <josep.prat@aiven.io>",
    "epoch": 1699964709,
    "epoch_utc": null
  },
  {
    "commit": "49d3122d425171b6a59a2b6f02d3fe63d3ac2397",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Mon Nov 13 10:15:35 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Nov 13 01:15:35 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 10,
      "deletions": 1,
      "files": [
        "clients/src/test/java/org/apache/kafka/clients/ClusterConnectionStatesTest.java"
      ]
    },
    "message": "MINOR: Fix ClusterConnectionStatesTest.testSingleIP (#14741)\n\nThis test fails because `localhost` resolved to more than one IP on the Ci. This patch updates the ClusterConnectionStatesTest.testSingleIP test to use a static resolver.\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1699881335,
    "epoch_utc": null
  },
  {
    "commit": "7c562a776ddfb724376e9668574ee15449b214e3",
    "author": "Zihao Lin",
    "author_email": "104664078@163.com",
    "date": "Sun Nov 12 15:59:40 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Nov 12 08:59:40 2023 +0100",
    "stats": {
      "files_changed": 3,
      "insertions": 3,
      "deletions": 3,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/SessionStoreMaterializer.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/SlidingWindowStoreMaterializer.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/WindowStoreMaterializer.java"
      ]
    },
    "message": "HOTFIX: Fix compilation error for JDK 21 caused by this-escape warning (#14740)\n\nThis patch fixes the compilation error for JDK 21 introduced in https://github.com/apache/kafka/pull/14708.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>, David Jacot <djacot@confluent.io>",
    "epoch": 1699815580,
    "epoch_utc": null
  },
  {
    "commit": "a98bd7d65fb5a3a188ff524db7619dc7fe4257fa",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Sun Nov 12 03:12:17 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Nov 11 18:12:17 2023 -0800",
    "stats": {
      "files_changed": 3,
      "insertions": 7,
      "deletions": 342,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/ProduceResponse.java",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala"
      ]
    },
    "message": "Revert \"KAFKA-15661: KIP-951: Server side changes (#14444)\" (#14738)\n\nThis reverts commit f38b0d8.\n\nTrying to find the root cause of org.apache.kafka.tiered.storage.integration.ReassignReplicaShrinkTest failing in CI.\n\nReviewers: Justine Olshan <jolshan@confluent.io>",
    "epoch": 1699769537,
    "epoch_utc": null
  },
  {
    "commit": "39cacca89b0396398a783307e77df31b7ebf9e5e",
    "author": "Almog Gavra",
    "author_email": "almog.gavra@gmail.com",
    "date": "Fri Nov 10 18:19:11 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Nov 10 18:19:11 2023 -0800",
    "stats": {
      "files_changed": 16,
      "insertions": 553,
      "deletions": 515,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java",
        "streams/src/main/java/org/apache/kafka/streams/TopologyConfig.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/Materialized.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KeyValueStoreMaterializer.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/MaterializedInternal.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/MaterializedStoreFactory.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/SessionStoreMaterializer.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/SessionWindowedCogroupedKStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/SessionWindowedKStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/SlidingWindowStoreMaterializer.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/SlidingWindowedCogroupedKStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/SlidingWindowedKStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/TimeWindowedCogroupedKStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/TimeWindowedKStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/WindowStoreMaterializer.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.java"
      ]
    },
    "message": "KAFKA-15774: refactor windowed stores to use StoreFactory (#14708)\n\nThis is a follow up from #14659 that ports the windowed classes to use the StoreFactory abstraction as well. There's a side benefit of not duplicating the materialization code twice for each StreamImpl/CogroupedStreamImpl class as well.\n\nReviewers: Anna Sophie Blee-Goldman <ableegoldman@apache.org>, Matthias Sax <mjsax@apache.org>",
    "epoch": 1699651151,
    "epoch_utc": null
  },
  {
    "commit": "989618a56e3d98432371b9ee1ded1d791c7984e9",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Fri Nov 10 08:40:16 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Nov 10 08:40:16 2023 -0800",
    "stats": {
      "files_changed": 2,
      "insertions": 38,
      "deletions": 29,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/OffsetUtils.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/OffsetUtilsTest.java"
      ]
    },
    "message": "KAFKA-15800: Prevent DataExceptions from corrupting KafkaOffsetBackingStore (#14718)\n\nSigned-off-by: Greg Harris <greg.harris@aiven.io>\n\nReviewers: Yash Mayya <yash.mayya@gmail.com>",
    "epoch": 1699616416,
    "epoch_utc": null
  },
  {
    "commit": "fcfd378129e936a5f8404e8f171864d45b3548d2",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Fri Nov 10 10:27:35 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Nov 10 01:27:35 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "core/src/main/scala/kafka/server/BrokerLifecycleManager.scala"
      ]
    },
    "message": "HOTFIX: Fix compilation error in BrokerLifecycleManager (#14732)\n\nThis patch fixes a compilation error introduced by https://github.com/apache/kafka/pull/14392 for Scala 2.12.\n\n```\n> Task :core:compileScala\n\n[Error] /home/jenkins/workspace/Kafka_kafka-pr_PR-14392/core/src/main/scala/kafka/server/BrokerLifecycleManager.scala:305:49: value incl is not a member of scala.collection.immutable.Set[org.apache.kafka.common.Uuid]\n```\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1699622855,
    "epoch_utc": null
  },
  {
    "commit": "f38b0d886c01bf4e83a08ca7c8a4da01c2d0c686",
    "author": "Crispin Bernier",
    "author_email": "chb2ab@virginia.edu",
    "date": "Fri Nov 10 00:07:21 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 9 21:07:21 2023 -0800",
    "stats": {
      "files_changed": 3,
      "insertions": 342,
      "deletions": 7,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/ProduceResponse.java",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala"
      ]
    },
    "message": "KAFKA-15661: KIP-951: Server side changes (#14444)\n\nThis is the server side changes to populate the fields in KIP-951. On NOT_LEADER_OR_FOLLOWER errors in both FETCH and PRODUCE the new leader ID and epoch are retrieved from the local cache through ReplicaManager and included in the response, falling back to the metadata cache if they are unavailable there. The endpoint for the new leader is retrieved from the metadata cache. The new fields are all optional (tagged) and an IBP bump was required.\n\nhttps://cwiki.apache.org/confluence/display/KAFKA/KIP-951%3A+Leader+discovery+optimisations+for+the+client\n\nhttps://issues.apache.org/jira/browse/KAFKA-15661\n\nProtocol changes: #14627\n\nTesting\nBenchmarking described here https://cwiki.apache.org/confluence/display/KAFKA/KIP-951%3A+Leader+discovery+optimisations+for+the+client#KIP951:Leaderdiscoveryoptimisationsfortheclient-BenchmarkResults\n./gradlew core:test --tests kafka.server.KafkaApisTest\n\nReviewers: Justine Olshan <jolshan@confluent.io>, David Jacot <djacot@confluent.io>, Jason Gustafson <jason@confluent.io>, Fred Zheng <zhengyd2014@gmail.com>, Mayank Shekhar Narula <mayanks.narula@gmail.com>,  Yang Yang <yayang@uber.com>, David Mao <dmao@confluent.io>, Kirk True <ktrue@confluent.io>",
    "epoch": 1699585641,
    "epoch_utc": null
  },
  {
    "commit": "809694a9f62ee584f5bdc4324bc1e1aa821bb588",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Thu Nov 9 15:47:15 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 9 15:47:15 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 5,
      "deletions": 0,
      "files": [
        "tests/kafkatest/tests/core/zookeeper_migration_test.py"
      ]
    },
    "message": "MINOR; Fix cluster size for migration tests (#14726)\n\nUse smaller cluster sizes instead of the default cluster size\n\nReviewers: David Arthur <mumrah@gmail.com>, Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1699555635,
    "epoch_utc": null
  },
  {
    "commit": "35317d8f7ba88e6a0f9bdff7b49fd8634ffd3791",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Thu Nov 9 12:03:12 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 9 12:03:12 2023 -0800",
    "stats": {
      "files_changed": 3,
      "insertions": 5,
      "deletions": 5,
      "files": [
        "gradle/dependencies.gradle",
        "tests/kafkatest/version.py",
        "vagrant/base.sh"
      ]
    },
    "message": "MINOR; Fix KRaft metadata version system tests (#14722)\n\nThe latest metadata version is now 3.7. Fix the KRaft upgrade\ntest to upgrade to that version instead of 3.6.\n\nChange the vagrant setup and gradle dependencies to use 3.3.2 instead of 3.3.1.\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1699542192,
    "epoch_utc": null
  },
  {
    "commit": "eaa6b8abdd543fd1fc7152fbdb76643aad6223d6",
    "author": "Igor Soarez",
    "author_email": "i@soarez.me",
    "date": "Mon Sep 11 22:41:06 2023 +0100",
    "commit_by": "Colin P. McCabe",
    "commit_by_email": "cmccabe@apache.org",
    "commit_by_date": "Thu Nov 9 11:01:01 2023 -0800",
    "stats": {
      "files_changed": 3,
      "insertions": 202,
      "deletions": 72,
      "files": [
        "core/src/main/scala/kafka/server/BrokerLifecycleManager.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/test/scala/unit/kafka/server/BrokerLifecycleManagerTest.scala"
      ]
    },
    "message": "KAFKA-15360: Include dirs in BrokerRegistration #14392\n\nBrokerLifecycleManager should send the offline log directories in the BrokerHeartbeatRequests it\nsends. Also, when handling BrokerHeartbeatResponses, do so by enqueing a BrokerLifecycleManager\nevent, rather than trying to do the handling directly in the callback.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>, Proven Provenzano <pprovenzano@confluent.io>",
    "epoch": 1694482866,
    "epoch_utc": null
  },
  {
    "commit": "fa472d26a5b13b2125229527be99cd080eb3a122",
    "author": "Proven Provenzano",
    "author_email": "pprovenzano@confluent.io",
    "date": "Wed Nov 8 23:42:20 2023 -0500",
    "commit_by": "Colin P. McCabe",
    "commit_by_email": "cmccabe@apache.org",
    "commit_by_date": "Thu Nov 9 10:08:31 2023 -0800",
    "stats": {
      "files_changed": 7,
      "insertions": 225,
      "deletions": 146,
      "files": [
        "metadata/src/main/java/org/apache/kafka/controller/ClusterControlManager.java",
        "metadata/src/main/java/org/apache/kafka/metadata/BrokerRegistration.java",
        "metadata/src/test/java/org/apache/kafka/controller/ClusterControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/metrics/ControllerMetricsChangesTest.java",
        "metadata/src/test/java/org/apache/kafka/image/ClusterImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/node/ClusterImageBrokersNodeTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/BrokerRegistrationTest.java"
      ]
    },
    "message": "MINOR: Update BrokerRegistration to use a Builder\n\nUpdate BrokerRegistration to use a Builder. This fixes the proliferation of different constructors,\nand makes it clear what arguments are being used where.\n\nReviewers: Colin P. McCabe <cmccabe@confluent.io>",
    "epoch": 1699497740,
    "epoch_utc": null
  },
  {
    "commit": "7060c08d6f9b0408e7f40a90499caf2e636fac61",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Thu Nov 9 09:32:35 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 9 09:32:35 2023 -0800",
    "stats": {
      "files_changed": 30,
      "insertions": 2572,
      "deletions": 968,
      "files": [
        "checkstyle/suppressions.xml",
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/main/scala/kafka/server/BrokerMetadataCheckpoint.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/KafkaRaftServer.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/server/SharedServer.scala",
        "core/src/main/scala/kafka/tools/StorageTool.scala",
        "core/src/test/java/kafka/testkit/BrokerNode.java",
        "core/src/test/java/kafka/testkit/ControllerNode.java",
        "core/src/test/java/kafka/testkit/KafkaClusterTestKit.java",
        "core/src/test/java/kafka/testkit/TestKitNode.java",
        "core/src/test/java/kafka/testkit/TestKitNodes.java",
        "core/src/test/scala/integration/kafka/server/QuorumTestHarness.scala",
        "core/src/test/scala/kafka/server/BrokerMetadataCheckpointTest.scala",
        "core/src/test/scala/unit/kafka/log/LogManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaRaftServerTest.scala",
        "core/src/test/scala/unit/kafka/server/ServerGenerateBrokerIdTest.scala",
        "core/src/test/scala/unit/kafka/server/ServerGenerateClusterIdTest.scala",
        "core/src/test/scala/unit/kafka/tools/StorageToolTest.scala",
        "metadata/src/main/java/org/apache/kafka/metadata/bootstrap/BootstrapDirectory.java",
        "metadata/src/main/java/org/apache/kafka/metadata/properties/MetaProperties.java",
        "metadata/src/main/java/org/apache/kafka/metadata/properties/MetaPropertiesEnsemble.java",
        "metadata/src/main/java/org/apache/kafka/metadata/properties/MetaPropertiesVersion.java",
        "metadata/src/main/java/org/apache/kafka/metadata/properties/PropertiesUtils.java",
        "metadata/src/test/java/org/apache/kafka/metadata/properties/MetaPropertiesEnsembleTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/properties/MetaPropertiesTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/properties/MetaPropertiesVersionTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/properties/PropertiesUtilsTest.java"
      ]
    },
    "message": "MINOR: Rewrite the meta.properties handling code in Java and fix some issues #14628 (#14628)\n\nmeta.properties files are used by Kafka to identify log directories within the filesystem.\nPreviously, the code for handling them was in BrokerMetadataCheckpoint.scala. This PR rewrites the\ncode for handling them as Java and moves it to the apache.kafka.metadata.properties namespace. It\nalso gets rid of the separate types for v0 and v1 meta.properties objects. Having separate types\nwasn't so bad back when we had a strict rule that zk clusters used v0 and kraft clusters used v1.\nBut ZK migration has blurred the lines. Now, a zk cluster may have either v0 or v1, if it is\nmigrating, and a kraft cluster may have either v0 or v1, at any time.\n\nThe new code distinguishes between an individual meta.properties file, which is represented by\nMetaProperties, and a collection of meta.properties files, which is represented by\nMetaPropertiesEnsemble. It is useful to have this distinction, because in JBOD mode, even if some\nlog directories are inaccessible, we can still use the ensemble to extract needed information like\nthe cluster ID. (Of course, even when not in JBOD mode, KRaft servers have always been able to\nconfigure a metadata log directory separate from the main log directory.)\n\nSince we recently added a unique directory.id to each meta.properties file, the previous convention\nof passing a \"canonical\" MetaProperties object for the cluster around to various places in the code\nneeds to be revisited. After all, we can no longer assume all of the meta.properties files are the\nsame. This PR fixes these parts of the code. For example, it fixes the constructors of\nControllerApis and RaftManager to just take a cluster ID, rather than a MetaProperties object. It\nfixes some other parts of the code, like the constructor of SharedServer, to take a\nMetaPropertiesEnsemble object.\n\nAnother goal of this PR was to centralize meta.properties validation a bit more and make it\nunit-testable. For this purpose, the PR adds MetaPropertiesEnsemble.verify, and a few other\nverification methods. These enforce invariants like \"the metadata directory must be readable,\" and\nso on.\n\nReviewers: Igor Soarez <soarez@apple.com>, David Arthur <mumrah@gmail.com>, Divij Vaidya <diviv@amazon.com>, Proven Provenzano <pprovenzano@confluent.io>",
    "epoch": 1699533155,
    "epoch_utc": null
  },
  {
    "commit": "39c6170aa96e4c9840ac469d1b43bb059f0513af",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Thu Nov 9 10:48:43 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 9 10:48:43 2023 -0500",
    "stats": {
      "files_changed": 3,
      "insertions": 96,
      "deletions": 10,
      "files": [
        ".../src/main/java/org/apache/kafka/connect/runtime/distributed/IncrementalCooperativeAssignor.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/WorkerCoordinator.java",
        ".../src/test/java/org/apache/kafka/connect/runtime/distributed/IncrementalCooperativeAssignorTest.java"
      ]
    },
    "message": "KAFKA-15693: Immediately reassign lost connectors and tasks when scheduled rebalance delay is disabled (#14647)\n\nReviewers: Sagar Rao <sagarmeansocean@gmail.com>, Yash Mayya <yash.mayya@gmail.com>",
    "epoch": 1699537723,
    "epoch_utc": null
  },
  {
    "commit": "81cceedf7e7985160397459ca0f7a6fbbfd3b019",
    "author": "Bruno Cadonna",
    "author_email": "cadonna@apache.org",
    "date": "Thu Nov 9 15:37:13 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 9 15:37:13 2023 +0100",
    "stats": {
      "files_changed": 5,
      "insertions": 2,
      "deletions": 116,
      "files": [
        "docs/ops.html",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/TaskMetrics.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/ThreadMetrics.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/TaskMetricsTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/ThreadMetricsTest.java"
      ]
    },
    "message": "MINOR: Delete task-level commit sensor (#14677)\n\nThe task-level commit metrics were removed without deprecation in KIP-447 and the corresponding PR #8218. However, we forgot to update the docs and to remove the code that creates the task-level commit sensor.\nThis PR removes the task-level commit metrics from the docs and removes the code that creates the task-level commit sensor. The code was effectively dead since it was only used in tests.\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>, Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1699555033,
    "epoch_utc": null
  },
  {
    "commit": "f1e58a35d7aebbe72844faf3e5019d9aa7a85e4a",
    "author": "Bruno Cadonna",
    "author_email": "cadonna@apache.org",
    "date": "Wed Nov 8 17:09:24 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Nov 8 16:09:24 2023 +0000",
    "stats": {
      "files_changed": 2,
      "insertions": 40,
      "deletions": 3,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java"
      ]
    },
    "message": "MINOR: Do not checkpoint standbys when handling corrupted tasks (#14709)\n\nWhen a task is corrupted, uncorrupted tasks are committed. That is also true for standby tasks. Committing standby tasks actually means that they are checkpointed.\n\nWhen the state updater is enabled, standbys are owned by the state updater. The stream thread should not checkpoint them when handling corrupted tasks. That is not a big limitation since the state updater periodically checkpoints standbys anyway. Additionally, when handling corrupted tasks the important thing is to commit active running tasks to abort the transaction. Committing standby tasks do not abort any transaction.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>, Lucas Brutschy <lbrutschy@confluent.io>",
    "epoch": 1699474164,
    "epoch_utc": null
  },
  {
    "commit": "91fa196930ece7342f38a5404dfc09cf607916eb",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Tue Nov 7 15:14:17 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Nov 7 15:14:17 2023 -0800",
    "stats": {
      "files_changed": 4,
      "insertions": 222,
      "deletions": 113,
      "files": [
        "core/src/main/scala/kafka/network/RequestChannel.scala",
        "core/src/main/scala/kafka/server/KafkaRequestHandler.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/kafka/server/KafkaRequestHandlerTest.scala"
      ]
    },
    "message": "KAFKA-15653: Pass requestLocal as argument to callback so we use the correct one for the thread (#14629)\n\nWith the new callback mechanism we were accidentally passing context with the wrong request local. Now include a RequestLocal as an explicit argument to the callback.\n\nAlso make the arguments passed through the callback clearer by separating the method out.\n\nAdded a test to ensure we use the request handler's request local and not the one passed in when the callback is executed via the request handler.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>,  Divij Vaidya <diviv@amazon.com>, David Jacot <djacot@confluent.io>, Jason Gustafson <jason@confluent.io>, Artem Livshits <alivshits@confluent.io>, Jun Rao <junrao@gmail.com>,",
    "epoch": 1699380857,
    "epoch_utc": null
  },
  {
    "commit": "edc7e10a745c350ad1efa9e4866370dc8ea0e034",
    "author": "Calvin Liu",
    "author_email": "83986057+CalvinConfluent@users.noreply.github.com",
    "date": "Tue Nov 7 07:24:40 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Nov 7 10:24:40 2023 -0500",
    "stats": {
      "files_changed": 5,
      "insertions": 86,
      "deletions": 19,
      "files": [
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/test/scala/integration/kafka/api/ProducerFailureHandlingTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerQuotasTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala"
      ]
    },
    "message": "KAFKA-15583: Enforce HWM advance only if partition is not under-min-ISR (#14594)\n\nOnly advance the HWM for a partition if the ISR set is equal to or above the min ISR config. This patch also sets an upper bound on the min ISR config so it cannot exceed the number of replicas.\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1699352680,
    "epoch_utc": null
  },
  {
    "commit": "317f61dfd9a7f1443cf75b6a32568d1c81984d08",
    "author": "Yanming Zhou",
    "author_email": "zhouyanming@gmail.com",
    "date": "Tue Nov 7 17:01:54 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Nov 7 10:01:54 2023 +0100",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 2,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/producer/RoundRobinPartitioner.java"
      ]
    },
    "message": "MINOR: Avoid unnecessary Map lookup in RoundRobinPartitioner (#14613)\n\nAvoid calling cluster.partitionsForTopic(topic) if cluster.availablePartitionsForTopic(topic) is not empty\n\nReviewers: Divij Vaidya <diviv@amazon.com>, hudeqi <1217150961@qq.com>",
    "epoch": 1699387314,
    "epoch_utc": null
  },
  {
    "commit": "2d07e572877933423349eb73995062101987e902",
    "author": "Xiaobing Fang",
    "author_email": "bingxf@qq.com",
    "date": "Tue Nov 7 16:44:07 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Nov 7 09:44:07 2023 +0100",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 2,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/ProduceRequest.java"
      ]
    },
    "message": "KAFKA-15771: fix concurrency bug in ProduceRequest#partitionSizes() (#14674)\n\nA commit fixes a bug in ProduceRequest#partitionSizes() that may cause this method to incorrectly returning an empty or incomplete response for a thread when another thread is in the process of initialising it.\n\nReviewers: Divij Vaidya <diviv@amazon.com>, hudeqi <1217150961@qq.com>, vamossagar12 <sagarmeansocean@gmail.com>\n\n--------------------------------\nCo-authored-by: fangxiaobing <fangxiaobing@kuaishou.com>",
    "epoch": 1699386247,
    "epoch_utc": null
  },
  {
    "commit": "febf0fb5739ea86a6082e4c93da0101d216e5279",
    "author": "Almog Gavra",
    "author_email": "almog.gavra@gmail.com",
    "date": "Mon Nov 6 17:30:58 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Nov 6 17:30:58 2023 -0800",
    "stats": {
      "files_changed": 40,
      "insertions": 576,
      "deletions": 317,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/StreamsBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java",
        "streams/src/main/java/org/apache/kafka/streams/Topology.java",
        "streams/src/main/java/org/apache/kafka/streams/TopologyConfig.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/Materialized.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/CogroupedStreamAggregateBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/GroupedStreamAggregateBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/InternalStreamsBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KGroupedStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KeyValueStoreMaterializer.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/MaterializedInternal.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/SessionWindowedCogroupedKStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/SessionWindowedKStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/SlidingWindowedCogroupedKStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/SlidingWindowedKStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/TimeWindowedCogroupedKStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/TimeWindowedKStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/GlobalStoreNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/StateStoreNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/StatefulProcessorNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/StreamToTableNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/TableFilterNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/TableProcessorNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/TableSourceNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/TableSuppressNode.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreBuilderWrapper.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreFactory.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/graph/GraphGraceSearchUtilTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/graph/TableProcessorNodeTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/GlobalStreamThreadTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/KeyValueStoreMaterializerTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StandbyTaskTest.java",
        "streams/src/test/java/org/apache/kafka/test/MockKeyValueStoreBuilder.java"
      ]
    },
    "message": "KAFKA-15774: introduce internal StoreFactory (#14659)\n\nThis PR sets up the necessary prerequisites to respect configurations such as dsl.default.store.type and the dsl.store.suppliers.class (introduced in #14648) without requiring them to be passed in to StreamBuilder#new(TopologyConfig) (passing them only into new KafkaStreams(...).\n\nIt essentially makes StoreBuilder an external-only API and internally it uses the StoreFactory equivalent. It replaces KeyValueStoreMaterializer with an implementation of StoreFactory that creates the store builder only after configure() is called (in a Future PR we will create the missing equivalents for all of the places where the same thing happens for window stores, such as in all the *WindowKStreamImpl classes)\n\nReviewers: Anna Sophie Blee-Goldman <ableegoldman@apache.org>",
    "epoch": 1699302658,
    "epoch_utc": null
  },
  {
    "commit": "c6ea0a84ab107327d26b454cfe8e595c8befcc9c",
    "author": "David Mao",
    "author_email": "47232755+splett2@users.noreply.github.com",
    "date": "Mon Nov 6 17:07:56 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Nov 6 17:07:56 2023 -0800",
    "stats": {
      "files_changed": 13,
      "insertions": 70,
      "deletions": 47,
      "files": [
        "core/src/test/scala/integration/kafka/admin/RemoteTopicCrudTest.scala",
        "core/src/test/scala/integration/kafka/api/BaseProducerSendTest.scala",
        "core/src/test/scala/integration/kafka/api/EndToEndAuthorizationTest.scala",
        "core/src/test/scala/integration/kafka/api/PlaintextAdminIntegrationTest.scala",
        "core/src/test/scala/integration/kafka/api/PlaintextProducerSendTest.scala",
        "core/src/test/scala/integration/kafka/api/ProducerCompressionTest.scala",
        "core/src/test/scala/integration/kafka/server/DynamicBrokerReconfigurationTest.scala",
        "core/src/test/scala/integration/kafka/server/FetchFromFollowerIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/integration/KafkaServerTestHarness.scala",
        "core/src/test/scala/unit/kafka/server/ConsumerGroupHeartbeatRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/GroupCoordinatorBaseRequestTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala",
        "storage/src/test/java/org/apache/kafka/tiered/storage/TieredStorageTestContext.java"
      ]
    },
    "message": "KAFKA-15780: Wait for consistent KRaft metadata when creating or deleting topics (#14695)\n\nTestUtils.createTopicWithAdmin calls waitForAllPartitionsMetadata which waits for partition(s) to be present in each brokers' metadata cache. This is a sufficient check in ZK mode because the controller sends an LISR request before sending an UpdateMetadataRequest which means that the partition in the ReplicaManager will be updated before the metadata cache.\n\nIn KRaft mode, the metadata cache is updated first, so the check may return before partitions and other metadata listeners are fully initialized.\n\nTesting:\nInsert a Thread.sleep(100) in BrokerMetadataPublisher.onMetadataUpdate after\n\n// Publish the new metadata image to the metadata cache.\nmetadataCache.setImage(newImage)\nand run EdgeCaseRequestTest.testProduceRequestWithNullClientId and the test will fail locally nearly deterministically. After the change(s), the test no longer fails.\n\nReviewers: Justine Olshan <jolshan@confluent.io>",
    "epoch": 1699301276,
    "epoch_utc": null
  },
  {
    "commit": "505e5b3eaa62696c038e53104d568d23512559a6",
    "author": "Calvin Liu",
    "author_email": "83986057+CalvinConfluent@users.noreply.github.com",
    "date": "Mon Nov 6 14:21:51 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Nov 6 17:21:51 2023 -0500",
    "stats": {
      "files_changed": 7,
      "insertions": 375,
      "deletions": 47,
      "files": [
        "checkstyle/suppressions.xml",
        "metadata/src/main/java/org/apache/kafka/controller/PartitionChangeBuilder.java",
        "metadata/src/main/java/org/apache/kafka/controller/ReplicationControlManager.java",
        "metadata/src/main/java/org/apache/kafka/metadata/PartitionRegistration.java",
        "metadata/src/test/java/org/apache/kafka/controller/PartitionChangeBuilderTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/ReplicationControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/PartitionRegistrationTest.java"
      ]
    },
    "message": "KAFKA-15584: Leader election with ELR (#14593)\n\nThe patch includes the following changes as part of KIP-966\n\n* Allow ISR shrink to empty\n* Allow leader election with ELR members\n* Allow electing the last known leader\n\nReviewers: Artem Livshits <alivshits@confluent.io>, David Arthur <mumrah@gmail.com>",
    "epoch": 1699291311,
    "epoch_utc": null
  },
  {
    "commit": "ca05da95c337f051e721464588d1b6678e8f2afb",
    "author": "kumarpritam863",
    "author_email": "148938310+kumarpritam863@users.noreply.github.com",
    "date": "Mon Nov 6 22:02:05 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Nov 6 11:32:05 2023 -0500",
    "stats": {
      "files_changed": 5,
      "insertions": 52,
      "deletions": 17,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/MockConsumer.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/MockConsumerTest.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSinkTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSinkTaskContext.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerSinkTaskTest.java"
      ]
    },
    "message": "KAFKA-15680: Fix sink task partition-count metric when cooperative consumer protocol is used (#14630)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1699318925,
    "epoch_utc": null
  },
  {
    "commit": "173c9c9dfc1ad646e1f657303ce4132f325e51d8",
    "author": "Qichao Chu",
    "author_email": "5326144+ex172000@users.noreply.github.com",
    "date": "Mon Nov 6 03:07:48 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Nov 6 12:07:48 2023 +0100",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 0,
      "files": [
        "core/src/test/scala/unit/kafka/coordinator/transaction/ProducerIdManagerTest.scala"
      ]
    },
    "message": "MINOR: Fix flaky ProducerIdManagerTest.testUnrecoverableErrors (#14688)\n\nWe add a sleep until RetryBackoffMs to ensure that next call to generateProducerId() is triggered.\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1699250868,
    "epoch_utc": null
  },
  {
    "commit": "d682b15eeb7141d17ca24c09df986f1628e6303b",
    "author": "gongzhongqiang",
    "author_email": "gongzhongqiang@apache.org",
    "date": "Mon Nov 6 18:02:05 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Nov 6 11:02:05 2023 +0100",
    "stats": {
      "files_changed": 5,
      "insertions": 6,
      "deletions": 6,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.java",
        "clients/src/main/java/org/apache/kafka/common/network/Selector.java",
        "clients/src/main/java/org/apache/kafka/common/security/kerberos/KerberosError.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogSegment.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateManagerImpl.java"
      ]
    },
    "message": "KAFKA-15769: Fix logging with exception trace (#14683)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, hudeqi <1217150961@qq.com>",
    "epoch": 1699304525,
    "epoch_utc": null
  },
  {
    "commit": "ba394aa28a28ede013f809e0038d84c8062f5b50",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Mon Nov 6 09:41:37 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Nov 6 10:41:37 2023 +0100",
    "stats": {
      "files_changed": 1,
      "insertions": 58,
      "deletions": 157,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StandbyTaskTest.java"
      ]
    },
    "message": "KAFKA-14133: Move StandbyTaskTest to Mockito (#14679)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1699274497,
    "epoch_utc": 1699263697
  },
  {
    "commit": "1e7e9ce91897e03f5611cd74f6e34f723a586ab6",
    "author": "Ritika Reddy",
    "author_email": "98577846+rreddy-22@users.noreply.github.com",
    "date": "Sun Nov 5 22:33:48 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Nov 5 22:33:48 2023 -0800",
    "stats": {
      "files_changed": 9,
      "insertions": 2042,
      "deletions": 18,
      "files": [
        ".../src/main/java/org/apache/kafka/coordinator/group/assignor/AbstractUniformAssignmentBuilder.java",
        ".../src/main/java/org/apache/kafka/coordinator/group/assignor/GeneralUniformAssignmentBuilder.java",
        ".../src/main/java/org/apache/kafka/coordinator/group/assignor/OptimizedUniformAssignmentBuilder.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/assignor/PartitionAssignor.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/assignor/UniformAssignor.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/SubscribedTopicMetadata.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/AssignmentTestUtil.java",
        ".../src/test/java/org/apache/kafka/coordinator/group/assignor/OptimizedUniformAssignmentBuilderTest.java",
        ".../src/test/java/org/apache/kafka/coordinator/group/consumer/SubscribedTopicMetadataTest.java"
      ]
    },
    "message": "KAFKA 14515: Optimized Uniform Rack Aware Assignor (#14416)\n\nThis patch adds the Optimized Uniform Rack Aware Assignor.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, David Jacot <djacot@confluent.io>",
    "epoch": 1699234428,
    "epoch_utc": null
  },
  {
    "commit": "a53147e7d904de4efffca6c3db0f2137d522a2ec",
    "author": "Apoorv Mittal",
    "author_email": "amittal@confluent.io",
    "date": "Fri Nov 3 21:51:50 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Nov 3 14:51:50 2023 -0700",
    "stats": {
      "files_changed": 24,
      "insertions": 630,
      "deletions": 24,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/admin/ConfigEntry.java",
        "clients/src/main/java/org/apache/kafka/common/config/ConfigResource.java",
        "clients/src/main/java/org/apache/kafka/common/requests/DescribeConfigsResponse.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java",
        "clients/src/test/java/org/apache/kafka/common/config/ConfigResourceTest.java",
        "core/src/main/java/kafka/metrics/ClientMetricsConfigs.java",
        "core/src/main/java/kafka/server/ClientMetricsManager.java",
        "core/src/main/java/kafka/server/builders/KafkaApisBuilder.java",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/ConfigAdminManager.scala",
        "core/src/main/scala/kafka/server/ConfigHandler.scala",
        "core/src/main/scala/kafka/server/ConfigHelper.scala",
        "core/src/main/scala/kafka/server/ControllerApis.scala",
        "core/src/main/scala/kafka/server/ControllerConfigurationValidator.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/server/ZkConfigManager.scala",
        "core/src/main/scala/kafka/server/metadata/DynamicConfigPublisher.scala",
        "core/src/test/java/kafka/metrics/ClientMetricsTestUtils.java",
        "core/src/test/scala/unit/kafka/server/ControllerApisTest.scala",
        "core/src/test/scala/unit/kafka/server/ControllerConfigurationValidatorTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "metadata/src/test/java/org/apache/kafka/metadata/KafkaConfigSchemaTest.java"
      ]
    },
    "message": "KAFKA-15673: Adding client metrics resource types (KIP-714) (#14621)\n\nThis PR adds resources to store and handle client metrics needed for KIP-714.\n\nChanges include:\n\nAdding CLIENT_METRICS to resource type\nCorresponding DYNAMIC client configurations in resources.\nChanges to support dynamic loading of configuration on changes.\nChanges to support API calls to fetch data stored against the new resource.\nTest cases for the changes.\n\nReviewers: Andrew Schofield <andrew_schofield@uk.ibm.com>, Philip Nee <pnee@confluent.io>, Jun Rao <junrao@gmail.com>",
    "epoch": 1699059110,
    "epoch_utc": 1699048310
  },
  {
    "commit": "e3dd60ef3cd22d4547b967309d988ab5801e27e7",
    "author": "Colin P. McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Thu Nov 2 11:35:44 2023 -0700",
    "commit_by": "Colin P. McCabe",
    "commit_by_email": "cmccabe@apache.org",
    "commit_by_date": "Thu Nov 2 11:35:44 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 2,
      "deletions": 4,
      "files": [
        "server-common/src/main/java/org/apache/kafka/common/DirectoryId.java",
        "server-common/src/test/java/org/apache/kafka/common/DirectoryIdTest.java"
      ]
    },
    "message": "HOTFIX: fix checkstyle",
    "epoch": 1698935744,
    "epoch_utc": null
  },
  {
    "commit": "a672a19e8093ee45dc37e6f4a86e32dbd0ad6e15",
    "author": "Colin P. McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Mon Oct 30 16:36:31 2023 -0700",
    "commit_by": "Colin P. McCabe",
    "commit_by_email": "cmccabe@apache.org",
    "commit_by_date": "Thu Nov 2 11:29:11 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 29,
      "deletions": 29,
      "files": [
        "server-common/src/main/java/org/apache/kafka/common/DirectoryId.java",
        "server-common/src/test/java/org/apache/kafka/common/DirectoryIdTest.java"
      ]
    },
    "message": "MINOR: small optimization for DirectoryId.random\n\nDirectoryId.random doesn't need to instantiate the first 100 IDs to check if an ID is one of them.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>, Justine Olshan <jolshan@confluent.io>, Proven Provenzano <93720617+pprovenzano@users.noreply.github.com>",
    "epoch": 1698694591,
    "epoch_utc": null
  },
  {
    "commit": "4d8efa94cbe6fd74d23dae2608058db52521bb2c",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Thu Nov 2 10:26:52 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 2 10:26:52 2023 -0700",
    "stats": {
      "files_changed": 12,
      "insertions": 90,
      "deletions": 92,
      "files": [
        "core/src/main/scala/kafka/raft/RaftManager.scala",
        "core/src/main/scala/kafka/server/ControllerApis.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/server/SharedServer.scala",
        "core/src/main/scala/kafka/tools/TestRaftServer.scala",
        "core/src/test/java/kafka/testkit/BrokerNode.java",
        "core/src/test/java/kafka/testkit/ControllerNode.java",
        "core/src/test/java/kafka/testkit/KafkaClusterTestKit.java",
        "core/src/test/java/kafka/testkit/TestKitNodes.java",
        "core/src/test/scala/unit/kafka/raft/RaftManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/ControllerApisTest.scala"
      ]
    },
    "message": "MINOR: MetaProperties refactor, part 1 (#14678)\n\nSince we have added directory.id to MetaProperties, it is no longer safe\nto assume that all directories on a node contain the same MetaProperties.\nTherefore, we should get rid of places where we are using a single\nMetaProperties object to represent the settings of an entire cluster.\nThis PR removes a few such cases. In each case, it is sufficient just to\npass cluster ID.\n\nThe second part of this change refactors KafkaClusterTestKit so that we\nconvert paths to absolute before creating BrokerNode and ControllerNode\nobjects, rather than after. This prepares the way for storing an\nensemble of MetaProperties objects in BrokerNode and ControllerNode,\nwhich we will do in a follow-up change.\n\nReviewers: Ron Dagostino <rndgstn@gmail.com>",
    "epoch": 1698931612,
    "epoch_utc": null
  },
  {
    "commit": "57662efec9207446ffb32db179e4adf6bff76e18",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Thu Nov 2 09:35:53 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 2 09:35:53 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 6,
      "deletions": 0,
      "files": [
        "docs/upgrade.html"
      ]
    },
    "message": "Add note about KAFKA-15653 (#14689)\n\nAdding the note from the kafka-site repo to the main repo. I also included the fixed link.\napache/kafka-site@9fa596c\napache/kafka-site@4eb2409\n\nReviewers:  Divij Vaidya <diviv@amazon.com>, Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1698928553,
    "epoch_utc": null
  },
  {
    "commit": "0390d5b1a24f6f4d0f431928dd009aeb76b3895d",
    "author": "Igor Soarez",
    "author_email": "i@soarez.me",
    "date": "Thu Nov 2 13:46:05 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 2 09:46:05 2023 -0400",
    "stats": {
      "files_changed": 40,
      "insertions": 971,
      "deletions": 68,
      "files": [
        "build.gradle",
        "checkstyle/checkstyle.xml",
        "checkstyle/import-control-metadata.xml",
        "clients/src/main/java/org/apache/kafka/common/Uuid.java",
        "clients/src/main/java/org/apache/kafka/common/errors/InvalidMetadataException.java",
        "clients/src/main/java/org/apache/kafka/common/protocol/ApiKeys.java",
        "clients/src/main/java/org/apache/kafka/common/requests/AbstractRequest.java",
        "clients/src/main/java/org/apache/kafka/common/requests/AbstractResponse.java",
        "clients/src/main/java/org/apache/kafka/common/requests/AssignReplicasToDirsRequest.java",
        "clients/src/main/java/org/apache/kafka/common/requests/AssignReplicasToDirsResponse.java",
        "clients/src/main/resources/common/message/AssignReplicasToDirsRequest.json",
        "clients/src/main/resources/common/message/AssignReplicasToDirsResponse.json",
        "clients/src/main/resources/common/message/BrokerHeartbeatRequest.json",
        "clients/src/main/resources/common/message/BrokerHeartbeatResponse.json",
        "clients/src/main/resources/common/message/BrokerRegistrationRequest.json",
        "clients/src/main/resources/common/message/BrokerRegistrationResponse.json",
        "clients/src/test/java/org/apache/kafka/common/UuidTest.java",
        "clients/src/test/java/org/apache/kafka/common/message/ApiMessageTypeTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/RequestResponseTest.java",
        "core/src/main/scala/kafka/network/RequestConvertToJson.scala",
        "core/src/main/scala/kafka/server/ControllerApis.scala",
        "core/src/test/scala/unit/kafka/server/AlterUserScramCredentialsRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/ControllerApisTest.scala",
        "core/src/test/scala/unit/kafka/server/RequestQuotaTest.scala",
        "metadata/src/main/java/org/apache/kafka/common/errors/InvalidReplicaDirectoriesException.java",
        "metadata/src/main/java/org/apache/kafka/controller/PartitionChangeBuilder.java",
        "metadata/src/main/java/org/apache/kafka/controller/ReplicationControlManager.java",
        "metadata/src/main/java/org/apache/kafka/image/TopicImage.java",
        "metadata/src/main/java/org/apache/kafka/metadata/PartitionRegistration.java",
        "metadata/src/main/resources/common/metadata/BrokerRegistrationChangeRecord.json",
        "metadata/src/main/resources/common/metadata/PartitionChangeRecord.json",
        "metadata/src/main/resources/common/metadata/PartitionRecord.json",
        "metadata/src/main/resources/common/metadata/RegisterBrokerRecord.json",
        "metadata/src/test/java/org/apache/kafka/controller/PartitionChangeBuilderTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/metrics/ControllerMetricsChangesTest.java",
        "metadata/src/test/java/org/apache/kafka/image/ImageDowngradeTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/PartitionRegistrationTest.java",
        "server-common/src/main/java/org/apache/kafka/common/DirectoryId.java",
        "server-common/src/main/java/org/apache/kafka/server/common/MetadataVersion.java",
        "server-common/src/test/java/org/apache/kafka/common/DirectoryIdTest.java"
      ]
    },
    "message": "KAFKA-15355: Message schema changes (#14290)\n\nReviewers: Christo Lolov <lolovc@amazon.com>, Colin P. McCabe <cmccabe@apache.org>, Proven Provenzano <pprovenzano@confluent.io>, Ron Dagostino <rdagostino@confluent.io>",
    "epoch": 1698943565,
    "epoch_utc": 1698932765
  },
  {
    "commit": "6e44a3f12d753d10881ba9dc5e93205486e3981c",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Thu Nov 2 05:26:20 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 2 05:26:20 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 115,
      "deletions": 1,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/GroupProtocol.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/ConsumerConfigTest.java"
      ]
    },
    "message": "KAFKA-15679: Consumer configurations for group protocol (#14642)\n\nThis patch adds the `group.protocol` and `group.remote.assignor` configurations as described in KIP-848.\n\nReviewers: Kirk True <ktrue@confluent.io>, Lucas Brutschy <lbrutschy@confluent.io>, Andrew Schofield <aschofield@confluent.io>, David Jacot <djacot@confluent.io>",
    "epoch": 1698913580,
    "epoch_utc": null
  },
  {
    "commit": "244abc11afce37e8b11c29b5427ab5042920cd55",
    "author": "Laglangyue",
    "author_email": "35491928+laglangyue@users.noreply.github.com",
    "date": "Thu Nov 2 17:23:41 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 2 10:23:41 2023 +0100",
    "stats": {
      "files_changed": 5,
      "insertions": 30,
      "deletions": 27,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/FetchMetricsRegistry.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/SensorBuilder.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Utils.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/WakeupTrigger.java"
      ]
    },
    "message": "MINOR: Consumer-Internals clean up (#14614)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, hudeqi <1217150961@qq.com>\n\n---------\n\nCo-authored-by: laglangyue <jiafu.tang@qq.com>",
    "epoch": 1698956621,
    "epoch_utc": null
  },
  {
    "commit": "9911fab1a1a95b7783c21fef75f043ea42fea790",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Thu Nov 2 17:00:15 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 2 10:00:15 2023 +0100",
    "stats": {
      "files_changed": 5,
      "insertions": 55,
      "deletions": 10,
      "files": [
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/server/CheckpointBench.java"
      ]
    },
    "message": "KAFKA-15432: RLM Stop partitions should not be invoked for non-tiered storage topics (#14667)\n\nReviewers: Christo Lolov <lolovc@amazon.com>, Divij Vaidya <diviv@amazon.com>, Kamal Chandraprakash <kamal.chandraprakash@gmail.com>",
    "epoch": 1698955215,
    "epoch_utc": null
  },
  {
    "commit": "7b0c07640c22cd3ecbc689832e7948ee96640a7f",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Thu Nov 2 01:58:31 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 2 09:58:31 2023 +0100",
    "stats": {
      "files_changed": 2,
      "insertions": 448,
      "deletions": 68,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CommitRequestManager.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CommitRequestManagerTest.java"
      ]
    },
    "message": "KAFKA-15562: ensure commit request manager handles errors correctly (#14639)\n\nThe current commitRequestManager lacks logic handling various failures. In the patch I addressed the following gap:\n\n* Network disconnection should disconnect the coordinator node\n* Handling and testing various of fatal and retriable errors scenarios\n* Ensure the time returned in the poll results is Long.MAX or the minimum of all the inflight request's remainingBackoffMs. Because we need to respect the backoff.\n\nReviewer: Lucas Brutschy <lbrutschy@confluent.io>",
    "epoch": 1698901111,
    "epoch_utc": null
  },
  {
    "commit": "5b37ec5e57923c3f4a6102d8dac49c2b3e4e4fc9",
    "author": "Dongnuo Lyu",
    "author_email": "139248811+dongnuo123@users.noreply.github.com",
    "date": "Thu Nov 2 04:47:43 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Nov 2 01:47:43 2023 -0700",
    "stats": {
      "files_changed": 6,
      "insertions": 946,
      "deletions": 34,
      "files": [
        "core/src/test/scala/unit/kafka/server/DeleteGroupsRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/DescribeGroupsRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/GroupCoordinatorBaseRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/ListGroupsRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/OffsetDeleteRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/OffsetFetchRequestTest.scala"
      ]
    },
    "message": "KAFKA-15598 & KAFKA-15461: Add integration tests for DescribeGroups API, DeleteGroups API, OffsetDelete API and ListGroups API (#14537)\n\nThis patch adds integration tests for four group coordinator APIs with new group coordinator and new protocol, new group coordinator and old protocol, and old group coordinator and old protocols for the following APIs:\n- DescribeGroups\n- DeleteGroups\n- OffsetDelete\n- ListGroups\n\nReviewers: Ritika Reddy <rreddy@confluent.io>, David Jacot <djacot@confluent.io>",
    "epoch": 1698911263,
    "epoch_utc": null
  },
  {
    "commit": "b850b46cf9963d1d5c707a397bf2171c648ecab8",
    "author": "Apoorv Mittal",
    "author_email": "amittal@confluent.io",
    "date": "Thu Nov 2 04:53:24 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Nov 1 21:53:24 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 47,
      "deletions": 3,
      "files": [
        "build.gradle",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "KAFKA-15668: Adding Opentelmetry shadowed library (KIP-714) (#14618)\n\nPart of KIP-714.\n\nThe PR comprises of changes to include opentlemetry library as defined in KIP-714. The libraries are shadowed to prevent conflicts.\n\nCo-authored-by: Xavier L\u00e9aut\u00e9 <xl+github@xvrl.net>\n\nReviewers: Andrew Schofield <aschofield@confluent.io>, Xavier L\u00e9aut\u00e9 <xavier@confluent.io>, Walker Carlson <wcarlson@confluent.io>, Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1698911604,
    "epoch_utc": 1698900804
  },
  {
    "commit": "d33a4a880fca916c04c0b051cbfc46cda652876b",
    "author": "Apoorv Mittal",
    "author_email": "amittal@confluent.io",
    "date": "Thu Nov 2 04:45:31 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Nov 1 21:45:31 2023 -0700",
    "stats": {
      "files_changed": 6,
      "insertions": 54,
      "deletions": 50,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/telemetry/internals/MetricKey.java",
        "clients/src/main/java/org/apache/kafka/common/telemetry/internals/TelemetryMetricNamingConvention.java",
        "clients/src/main/java/org/apache/kafka/server/telemetry/ClientTelemetry.java",
        "clients/src/main/java/org/apache/kafka/server/telemetry/ClientTelemetryPayload.java",
        "clients/src/main/java/org/apache/kafka/server/telemetry/ClientTelemetryReceiver.java",
        ".../src/test/java/org/apache/kafka/common/telemetry/internals/TelemetryMetricNamingConventionTest.java"
      ]
    },
    "message": "KAFKA-15614: [Minor] Renaming getter and correcting code comments (#14684)\n\nReviewers:  Andrew Schofield <aschofield@confluent.io>, Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1698911131,
    "epoch_utc": 1698900331
  },
  {
    "commit": "a9565a799f3f87eb1d932b114dde7373748551ac",
    "author": "Mayank Shekhar Narula",
    "author_email": "42991652+msn-tldr@users.noreply.github.com",
    "date": "Wed Nov 1 19:53:55 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Nov 1 14:53:55 2023 -0500",
    "stats": {
      "files_changed": 19,
      "insertions": 915,
      "deletions": 54,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/Metadata.java",
        "clients/src/main/java/org/apache/kafka/clients/MetadataCache.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractFetch.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/FetchRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/RequestManagers.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/RecordAccumulator.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/Sender.java",
        "clients/src/main/java/org/apache/kafka/common/requests/FetchResponse.java",
        "clients/src/main/java/org/apache/kafka/common/requests/ProduceResponse.java",
        "clients/src/test/java/org/apache/kafka/clients/MetadataCacheTest.java",
        "clients/src/test/java/org/apache/kafka/clients/MetadataTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerTestBuilder.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetchRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetcherTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/OffsetFetcherTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/SenderTest.java"
      ]
    },
    "message": "KAFKA-15627: KIP-951's Leader discovery optimisations on the client (#14685)\n\nThis implements the leader discovery optimisations for the client on [KIP-951](https://cwiki.apache.org/confluence/display/KAFKA/KIP-951%3A+Leader+discovery+optimisations+for+the+client).\n\nOptimisation1: On discovering a new leader, produce-batch should skip any retry-backoff. This was implemented in [KAFKA-15415](https://issues.apache.org/jira/browse/KAFKA-15415)\nOptimisation2: FetchResponse/ProduceResponse would return new leader info. This information is then used to update the Metadata cached.\nThis PR focuses on optimisation2 from above. Additionally it fixes a bug that got introduced to MetadataCache.java, details inline in a comment.\n\nReviewers: Walker Carlson <wcarlson@apache.org>, Andrew Schofield <andrew_schofield@uk.ibm.com>, Kirk True <ktrue@confluent.io>",
    "epoch": 1698879235,
    "epoch_utc": 1698868435
  },
  {
    "commit": "eca85029904612d35da00ff34e9118d96968bd4e",
    "author": "Alok Thatikunta",
    "author_email": "athatikunta@confluent.io",
    "date": "Wed Nov 1 22:10:45 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Nov 1 09:40:45 2023 -0700",
    "stats": {
      "files_changed": 7,
      "insertions": 274,
      "deletions": 171,
      "files": [
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/server/PartitionMetadataFile.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/checkpoint/PartitionMetadata.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/checkpoint/PartitionMetadataFile.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/checkpoint/PartitionMetadataReadBuffer.java"
      ]
    },
    "message": "KAFKA-14484: [1/N] Move PartitionMetadataFile to storage module (#14607)\n\nThis PR moves PartitionMetadataFile to the storage module.\n\nExisting unit tests in UnifiedLogTest like testLogFlushesPartitionMetadataOnAppend should suffice.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>, Jun Rao <junrao@gmail.com>",
    "epoch": 1698887445,
    "epoch_utc": null
  },
  {
    "commit": "760abfbdabfdfbd8f5c2004db46c41e80a11d703",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Wed Nov 1 11:13:06 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Nov 1 12:13:06 2023 +0100",
    "stats": {
      "files_changed": 1,
      "insertions": 122,
      "deletions": 194,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImplTest.java"
      ]
    },
    "message": "KAFKA-14133: Move StreamsMetricsImplTest to Mockito  (#14623)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1698847986,
    "epoch_utc": 1698837186
  },
  {
    "commit": "7ef5e8b022ce27dd30012a3fdd4a12a076facade",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Tue Oct 31 19:34:30 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Nov 1 10:34:30 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 10,
      "deletions": 9,
      "files": [
        "core/src/main/scala/kafka/server/MetadataCache.scala",
        "core/src/main/scala/kafka/server/metadata/KRaftMetadataCache.scala"
      ]
    },
    "message": "MINOR: Avoid a couple of map copies in `KRaftMetadataCache.getPartitionReplicaEndpoints` (#14660)\n\nNeither the `toMap` or `filter` seem to be necessary.\n\nReviewers: Ziming Deng<dengziming1993@gmail.com>.",
    "epoch": 1698791670,
    "epoch_utc": null
  },
  {
    "commit": "76b1b50b644149e77ee1ec42d882e2cb80742bdf",
    "author": "Nikolay",
    "author_email": "nizhikov@apache.org",
    "date": "Wed Nov 1 03:29:05 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 31 17:29:05 2023 -0700",
    "stats": {
      "files_changed": 10,
      "insertions": 1863,
      "deletions": 2300,
      "files": [
        "bin/kafka-reassign-partitions.sh",
        "bin/windows/kafka-reassign-partitions.bat",
        "core/src/main/scala/kafka/admin/ReassignPartitionsCommand.scala",
        "core/src/test/scala/other/kafka/ReplicationQuotasTestRig.scala",
        "tools/src/main/java/org/apache/kafka/tools/reassign/ReassignPartitionsCommand.java",
        "tools/src/main/java/org/apache/kafka/tools/reassign/ReassignPartitionsCommandOptions.java",
        "tools/src/main/java/org/apache/kafka/tools/reassign/Tuple2.java",
        "tools/src/test/java/org/apache/kafka/tools/reassign/ReassignPartitionsCommandArgsTest.java",
        "tools/src/test/java/org/apache/kafka/tools/reassign/ReassignPartitionsIntegrationTest.java",
        "tools/src/test/java/org/apache/kafka/tools/reassign/ReassignPartitionsUnitTest.java"
      ]
    },
    "message": "KAFKA-14595 Move ReassignPartitionsCommand to java (#13247)\n\nThis PR contains changes required to move PartitionReassignmentState class to java code.\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Justine Olshan <jolshan@confluent.io>, Federico Valeri <fedevaleri@gmail.com>, Taras Ledkov Taras Ledkov <tledkov@apache.org>, Kamal Chandraprakash<kamal.chandraprakash@gmail.com>,",
    "epoch": 1698820145,
    "epoch_utc": null
  },
  {
    "commit": "c8f687ac1505456cb568de2b60df235eb1ceb5f0",
    "author": "Crispin Bernier",
    "author_email": "chb2ab@virginia.edu",
    "date": "Tue Oct 31 20:16:11 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 31 17:16:11 2023 -0700",
    "stats": {
      "files_changed": 5,
      "insertions": 42,
      "deletions": 7,
      "files": [
        "clients/src/main/resources/common/message/FetchRequest.json",
        "clients/src/main/resources/common/message/FetchResponse.json",
        "clients/src/main/resources/common/message/ProduceRequest.json",
        "clients/src/main/resources/common/message/ProduceResponse.json",
        "server-common/src/main/java/org/apache/kafka/server/common/MetadataVersion.java"
      ]
    },
    "message": "KAFKA-15661: KIP-951: protocol changes (#14627)\n\nSeparating out the protocol changes from #14444 in an effort to more quickly unblock the client side PR.\n\nThis is the protocol changes to populate the fields in KIP-951. On NOT_LEADER_OR_FOLLOWER errors in both FETCH and PRODUCE the new leader ID and epoch are included in the response. The endpoint for the new leader is retrieved from the metadata cache. The new fields are all optional (tagged) and an IBP bump is required.\n\nhttps://cwiki.apache.org/confluence/display/KAFKA/KIP-951%3A+Leader+discovery+optimisations+for+the+client\n\nReviewers: Justine Olshan <jolshan@confluent.io>, Mayank Shekhar Narula <mayanks.narula@gmail.com>",
    "epoch": 1698794171,
    "epoch_utc": null
  },
  {
    "commit": "ed3fa83d385bbe2fa6dc4943660f56fec708bbc8",
    "author": "Apoorv Mittal",
    "author_email": "amittal@confluent.io",
    "date": "Tue Oct 31 20:35:02 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 31 15:35:02 2023 -0500",
    "stats": {
      "files_changed": 3,
      "insertions": 510,
      "deletions": 0,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/telemetry/internals/MetricNamingStrategy.java",
        "clients/src/main/java/org/apache/kafka/common/telemetry/internals/TelemetryMetricNamingConvention.java",
        ".../src/test/java/org/apache/kafka/common/telemetry/internals/TelemetryMetricNamingConventionTest.java"
      ]
    },
    "message": "KAFKA-15669: Implement telemetry metric naming strategy (KIP-714) (#14619)\n\nThe PR defines the naming convention for telemetry metric names for KIP-714 - jira. Telemetry metric name should be dot separated and tags should be snake case.\n\nPR adds the interface which will be used in MetricsReporter implementation to construct metric names.\n\nReviewers: Xavier L\u00e9aut\u00e9 <xvrl@apache.org>, Walker Carlson <wcarlson@apache.org>, Matthias J. Sax <mjsax@apache.org>, Andrew Schofield <andrew_schofield@uk.ibm.com>",
    "epoch": 1698795302,
    "epoch_utc": 1698784502
  },
  {
    "commit": "b5c24974ae2967824d1ec34b5b02121399a5e2f9",
    "author": "Florin Akermann",
    "author_email": "florin.akermann@gmail.com",
    "date": "Tue Oct 31 17:09:42 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 31 11:09:42 2023 -0500",
    "stats": {
      "files_changed": 18,
      "insertions": 426,
      "deletions": 67,
      "files": [
        "docs/streams/developer-guide/dsl-api.html",
        "docs/streams/upgrade-guide.html",
        "streams/src/main/java/org/apache/kafka/streams/kstream/KStream.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/InternalStreamsBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamImplJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamJoinWindow.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamKTableJoinProcessor.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/BaseRepartitionNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/GraphNode.java",
        ".../main/java/org/apache/kafka/streams/kstream/internals/graph/NodesWithRelaxedNullKeyJoinDownstream.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/AbstractJoinIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/KStreamKStreamIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/KStreamRepartitionIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/RelaxedNullKeyRequirementJoinTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/StreamStreamJoinIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/TableTableJoinIntegrationTest.java"
      ]
    },
    "message": "Kafka 12317:  Relax non-null key requirement in Kafka Streams (#14174)\n\n[KIP-962](https://cwiki.apache.org/confluence/display/KAFKA/KIP-962%3A+Relax+non-null+key+requirement+in+Kafka+Streams)\n\nThe key requirments got relaxed for the followinger streams dsl operator:\n\nleft join Kstream-Kstream: no longer drop left records with null-key and call ValueJoiner with 'null' for right value.\nouter join Kstream-Kstream: no longer drop left/right records with null-key and call ValueJoiner with 'null' for right/left value.\nleft-foreign-key join Ktable-Ktable: no longer drop left records with null-foreign-key returned by the ForeignKeyExtractor and call ValueJoiner with 'null' for right value.\nleft join KStream-Ktable: no longer drop left records with null-key and call ValueJoiner with 'null' for right value.\nleft join KStream-GlobalTable: no longer drop records when KeyValueMapper returns 'null' and call ValueJoiner with 'null' for right value.\n\nReviewers: Walker Carlson <wcarlson@apache.org>",
    "epoch": 1698782982,
    "epoch_utc": null
  },
  {
    "commit": "47b468bb8ce893e7b5d867adf0da1470fae7d638",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Tue Oct 31 08:05:43 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 31 16:05:43 2023 +0100",
    "stats": {
      "files_changed": 10,
      "insertions": 27,
      "deletions": 43,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CommitRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CoordinatorRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/FetchRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/HeartbeatRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/NetworkClientDelegate.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetsRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/TopicMetadataRequestManager.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CommitRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CoordinatorRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/HeartbeatRequestManagerTest.java"
      ]
    },
    "message": "MINOR: Remove ambiguous constructor (#14598)\n\nOne of the comments in https://issues.apache.org/jira/browse/KAFKA-15534 : #14532\n\nthat the constructor taking a BiConsumer is rather confusing. Removing this constructor and allow the request to take a callback using whenComplete method.\n\nReviewers: Kirk True <ktrue@confluent.io>, Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1698750343,
    "epoch_utc": null
  },
  {
    "commit": "7bdd1a015e2a91192c0ea07b39bd4d9195472763",
    "author": "Dongnuo Lyu",
    "author_email": "139248811+dongnuo123@users.noreply.github.com",
    "date": "Tue Oct 31 06:11:52 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 31 03:11:52 2023 -0700",
    "stats": {
      "files_changed": 8,
      "insertions": 547,
      "deletions": 49,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/OffsetDeleteResponse.java",
        "clients/src/main/java/org/apache/kafka/common/requests/TxnOffsetCommitRequest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/TxnOffsetCommitRequestTest.java",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinator.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorServiceTest.java"
      ]
    },
    "message": "KAFKA-15647: Fix the different behavior in error handling between the old and new group coordinator (#14589)\n\nIn `KafkaApis.scala`, we build the API response differently if exceptions are thrown during the API execution. Since the new group coordinator only populates the response with error code instead of throwing an exception when an error occurs, there may be different behavior between the existing group coordinator and the new one.\n\nThis patch:\n- Fixes the response building in `KafkaApis.scala` for the two APIs affected by such difference -- OffsetFetch and OffsetDelete.\n- In `GroupCoordinatorService.java`, returns a response with error code instead of a failed future when the coordinator is not active.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1698743512,
    "epoch_utc": null
  },
  {
    "commit": "a48ca490e45b4af06c7cc60233f95702e347d248",
    "author": "Ritika Reddy",
    "author_email": "98577846+rreddy-22@users.noreply.github.com",
    "date": "Tue Oct 31 03:09:32 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 31 03:09:32 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 60,
      "deletions": 11,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntimeTest.java"
      ]
    },
    "message": "KAFKA-15643: Fix error logged when unload is called on a broker that was never a coordinator. (#14657)\n\nWhen a new leader is elected for a __consumer_offset partition, the followers are notified to unload the state. However, only the former leader is aware of it. The remaining follower prints out the following error:\n`ERROR [GroupCoordinator id=1] Execution of UnloadCoordinator(tp=__consumer_offsets-1, epoch=0) failed due to This is not the correct coordinator.. (org.apache.kafka.coordinator.group.runtime.CoordinatorRuntime)`\nThe error is actually correct and expected when in the remaining follower case, however this could be misleading. This patch handles the case gracefully.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1698732572,
    "epoch_utc": null
  },
  {
    "commit": "57fd8f4c36af05156168056d3e181072804d104d",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Tue Oct 31 15:21:33 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 31 15:21:33 2023 +0530",
    "stats": {
      "files_changed": 4,
      "insertions": 146,
      "deletions": 96,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/config/TopicConfig.java",
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/RemoteLogMetadataCache.java",
        ".../org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManagerConfig.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/metadata/storage/RemoteLogMetadataCacheTest.java"
      ]
    },
    "message": "KAFKA-15632: Drop the invalid remote log metadata events (#14576)\n\nReviewers: Christo Lolov <lolovc@amazon.com>, Luke Chen <showuon@gmail.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1698776493,
    "epoch_utc": null
  },
  {
    "commit": "8f8ad6db384ce30e8a5d848d3ed826a3f7a54dfe",
    "author": "Calvin Liu",
    "author_email": "83986057+CalvinConfluent@users.noreply.github.com",
    "date": "Mon Oct 30 16:27:40 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 30 16:27:40 2023 -0700",
    "stats": {
      "files_changed": 11,
      "insertions": 89,
      "deletions": 61,
      "files": [
        "checkstyle/import-control-core.xml",
        "checkstyle/import-control-storage.xml",
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/main/scala/kafka/server/BrokerLifecycleManager.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/test/scala/unit/kafka/log/LogLoaderTest.scala",
        "core/src/test/scala/unit/kafka/log/LogManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/BrokerLifecycleManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/epoch/EpochDrivenReplicationProtocolAcceptanceTest.scala",
        ".../log => storage/src/main/java/org/apache/kafka/storage/internals/checkpoint}/CleanShutdownFileHandler.java",
        ".../log => storage/src/test/java/org/apache/kafka/storage/internals/checkpoint}/CleanShutdownFileHandlerTest.java"
      ]
    },
    "message": "KAFKA-15582: Move the clean shutdown file to the storage package (#14603)\n\nA follow-up change to move the clean shutdown file to the storage package.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>, Jun Rao <junrao@gmail.com>",
    "epoch": 1698694060,
    "epoch_utc": null
  },
  {
    "commit": "85737fe88aeca12a0070cd946016b6e384e78e36",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Mon Oct 30 13:22:03 2023 -0700",
    "commit_by": "Matthias J. Sax",
    "commit_by_email": "matthias@confluent.io",
    "commit_by_date": "Mon Oct 30 13:22:03 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 0,
      "deletions": 1,
      "files": [
        "clients/src/test/java/org/apache/kafka/common/serialization/SerializationTest.java"
      ]
    },
    "message": "HOTFIX: remove unused import to fix checkstyle error",
    "epoch": 1698682923,
    "epoch_utc": null
  },
  {
    "commit": "4d047114518ea30519a31b6297f2bf906e59841e",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Mon Oct 30 13:14:15 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 30 13:14:15 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 15,
      "deletions": 36,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/serialization/ByteBufferSerializer.java",
        "clients/src/test/java/org/apache/kafka/common/serialization/SerializationTest.java"
      ]
    },
    "message": "KAFKA-15602: revert KAFKA-4852 (#14617)\n\nThis PR reverts\n- https://github.com/apache/kafka/commit/51dbd175b08e78aeca03d6752847aa5f23c98659\n- https://github.com/apache/kafka/commit/496ae054c2d43c0905167745bfb2f4a0725e9fc2\n\nReviewers:  Philip Nee <pnee@confluent.io>, Guozhang Wang <guozhang@confluent.io>",
    "epoch": 1698682455,
    "epoch_utc": null
  },
  {
    "commit": "2e2f32c05008cdd7009e5f76fdd92f98996aab84",
    "author": "Kirk True",
    "author_email": "kirk@kirktrue.pro",
    "date": "Mon Oct 30 11:51:30 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 30 11:51:30 2023 -0700",
    "stats": {
      "files_changed": 15,
      "insertions": 509,
      "deletions": 368,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/MockConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinatorMetrics.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerRebalanceListenerInvoker.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/NoOpConsumerRebalanceListener.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/SubscriptionState.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinatorTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerMetadataTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetchRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetcherTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/HeartbeatRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/SubscriptionStateTest.java",
        "core/src/test/scala/integration/kafka/api/AuthorizerIntegrationTest.scala"
      ]
    },
    "message": "KAFKA-15628: Refactor ConsumerRebalanceListener invocation for reuse (#14638)\n\nStraightforward refactoring to extract an inner class and methods related to `ConsumerRebalanceListener` for reuse in the KIP-848 implementation of the consumer group protocol. Also using `Optional` to explicitly mark when a `ConsumerRebalanceListener` is in use or not, allowing us to make some (forthcoming) optimizations when there is no listener to invoke.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1698677490,
    "epoch_utc": null
  },
  {
    "commit": "9dbee599f13997effd8f7e278fd7256b850c8813",
    "author": "Igor Soarez",
    "author_email": "i@soarez.me",
    "date": "Mon Oct 30 11:10:57 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 30 19:10:57 2023 +0800",
    "stats": {
      "files_changed": 4,
      "insertions": 79,
      "deletions": 40,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/Uuid.java",
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/main/scala/kafka/tools/StorageTool.scala",
        "server-common/src/main/java/org/apache/kafka/common/DirectoryId.java"
      ]
    },
    "message": "MINOR: Rename log dir UUIDs (#14517)\n\nAfter a late discussion in the voting thread for KIP-858 we\ndecided to improve the names for the designated reserved\nlog directory UUID values.\n\nReviewers: Christo Lolov <lolovc@amazon.com>, Ismael Juma <ismael@juma.me.uk>,  Ziming Deng <dengziming1993@gmail.com>.",
    "epoch": 1698675057,
    "epoch_utc": 1698664257
  },
  {
    "commit": "2736a2e50adb87ef94c977acfeeef1cf5294183f",
    "author": "Paolo Patierno",
    "author_email": "ppatierno@live.com",
    "date": "Mon Oct 30 10:59:11 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 30 17:59:11 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 8,
      "deletions": 8,
      "files": [
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java"
      ]
    },
    "message": "KAFKA-15689: Logging skipped event when expected migration state is wrong (#14646)\n\nAs described in ticket KAFKA-15689, this PR fixes the logging of a migration event when the expected migration state is wrong.\n\nSigned-off-by: Paolo Patierno <ppatierno@live.com>\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1698674351,
    "epoch_utc": null
  },
  {
    "commit": "0c7d1fca925943eea49d14ec0ea60917d4ae426b",
    "author": "Paolo Patierno",
    "author_email": "ppatierno@live.com",
    "date": "Mon Oct 30 10:57:26 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 30 17:57:26 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java"
      ]
    },
    "message": "Using INFO level for migration transition state logging (#14651)\n\nTrivial PR to use the INFO level (instead of DEBUG) for logging the state transition during the ZooKeeper to KRaft migration.\nI think it's a useful information to be logged without the need for the user to increase the logging level itself.\n\nSigned-off-by: Paolo Patierno <ppatierno@live.com>\n\nReviewers: Luke Chen <showuon@gmail.com>, hudeqi <1217150961@qq.com>",
    "epoch": 1698674246,
    "epoch_utc": null
  },
  {
    "commit": "b9f2874c44d7c923f66d23d72499d01ac85bc2a0",
    "author": "James Cheng",
    "author_email": "jylcheng@yahoo.com",
    "date": "Mon Oct 30 02:16:12 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 30 10:16:12 2023 +0100",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableFilter.java"
      ]
    },
    "message": "MINOR: Fix typo in a comment at KTableFilter (#14665)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1698642972,
    "epoch_utc": null
  },
  {
    "commit": "fa36a7f2d664bac8524f830663023b83f5ee090b",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Sat Oct 28 07:27:20 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Oct 28 07:27:20 2023 -0700",
    "stats": {
      "files_changed": 8,
      "insertions": 305,
      "deletions": 224,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/ProducerBatch.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/RecordAccumulator.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/TransactionManager.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/TxnPartitionEntry.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/TxnPartitionMap.java",
        "clients/src/main/java/org/apache/kafka/common/utils/ProducerIdAndEpoch.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/SenderTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java"
      ]
    },
    "message": "MINOR: Push down logic from TransactionManager to TxnPartitionEntry (#14591)\n\nAnd encapsulate TxnPartitionEntry state.\n\nThis makes it easier to understand the behavior and the paths through\nwhich the state is updated.\n\nReviewers: Justine Olshan <jolshan@confluent.io>",
    "epoch": 1698488840,
    "epoch_utc": null
  },
  {
    "commit": "abde0e0878557aa62c14c4532187e13496687957",
    "author": "Gyeongwon, Do",
    "author_email": "dct012@gmail.com",
    "date": "Sat Oct 28 13:10:53 2023 +0900",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Oct 28 12:10:53 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "raft/src/main/java/org/apache/kafka/raft/QuorumState.java"
      ]
    },
    "message": "MINOR: fix typo and comment (#14650)\n\nReviewers: hudeqi <1217150961@qq.com>, Ziming Deng <dengziming1993@gmail.com>.",
    "epoch": 1698509453,
    "epoch_utc": null
  },
  {
    "commit": "37715862d701d9b1e340b8dd96d29b5591187d64",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Fri Oct 27 12:30:16 2023 -0400",
    "commit_by": "Colin P. McCabe",
    "commit_by_email": "cmccabe@apache.org",
    "commit_by_date": "Fri Oct 27 14:16:24 2023 -0700",
    "stats": {
      "files_changed": 7,
      "insertions": 38,
      "deletions": 12,
      "files": [
        "core/src/main/scala/kafka/server/ControllerRegistrationManager.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/server/ControllerRegistrationManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/ActivationRecordsGenerator.java",
        "tests/kafkatest/tests/core/zookeeper_migration_test.py"
      ]
    },
    "message": "KAFKA-15704: Set missing ZkMigrationReady field on ControllerRegistrationRequest\n\nThis field was missed by the initial KIP-919 PR(s). The result is that migrations can't begin since\nthe controllers will never become ready. This patch fixes that as well as pulls over some fixes\nfrom the 3.6 branch.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1698420616,
    "epoch_utc": null
  },
  {
    "commit": "68a5072f54aa73460743b36c06f52b6263549a17",
    "author": "Ritika Reddy",
    "author_email": "98577846+rreddy-22@users.noreply.github.com",
    "date": "Fri Oct 27 10:33:40 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Oct 27 10:33:40 2023 -0700",
    "stats": {
      "files_changed": 5,
      "insertions": 91,
      "deletions": 15,
      "files": [
        "tests/kafkatest/services/kafka/config.py",
        "tests/kafkatest/services/kafka/config_property.py",
        "tests/kafkatest/services/kafka/kafka.py",
        "tests/kafkatest/services/kafka/templates/log4j.properties",
        "tests/kafkatest/tests/core/consume_bench_test.py"
      ]
    },
    "message": "KAFKA-15578: System Tests for running old protocol with new coordinator (#14524)\n\nThis patch adds configs to facilitate the testing with the new group coordinator (KIP-848) in kraft mode. Only one test files is converted at the moment. The others will follow.\n\nReviewers: Ian McDonald <imcdonald@confluent.io>, David Jacot <djacot@confluent.io>",
    "epoch": 1698413620,
    "epoch_utc": null
  },
  {
    "commit": "f0e97397c01241be9d8d05b1642352b58d1ed196",
    "author": "bachmanity1",
    "author_email": "81428651+bachmanity1@users.noreply.github.com",
    "date": "Fri Oct 27 17:45:25 2023 +0900",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Oct 27 10:45:25 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 75,
      "deletions": 130,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsProducerTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TopologyMetadataTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/GlobalStateStoreProviderTest.java"
      ]
    },
    "message": "KAFKA-14133: Replace Easymock with Mockito in StreamsProducerTest, TopologyMetadataTest & GlobalStateStoreProviderTest  (#14410)\n\nReviewers: Ismael Juma <ismael@juma.me.uk>, Divij Vaidya <diviv@amazon.com>, Christo Lolov <lolovc@amazon.com>",
    "epoch": 1698439525,
    "epoch_utc": null
  },
  {
    "commit": "834f72b03de40fb47caaad1397ed061de57c2509",
    "author": "Hanyu Zheng",
    "author_email": "135176127+hanyuzheng7@users.noreply.github.com",
    "date": "Thu Oct 26 17:48:28 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 26 17:48:28 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 17,
      "deletions": 7,
      "files": [
        "docs/streams/upgrade-guide.html",
        "streams/src/main/java/org/apache/kafka/streams/query/RangeQuery.java",
        "streams/src/main/java/org/apache/kafka/streams/state/ReadOnlyKeyValueStore.java"
      ]
    },
    "message": "KAFKA-15527: Update docs and JavaDocs  (#14600)\n\nPart of KIP-985.\n\nUpdates JavaDocs for `RangeQuery` and `ReadOnlyKeyValueStore` with regard to ordering guarantees.\nUpdates Kafka Streams upgrade guide with KIP information.\n\nReviewer: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1698353308,
    "epoch_utc": null
  },
  {
    "commit": "339d2556c64e9ec379eb94db547d56878e68f438",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Thu Oct 26 18:13:52 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 26 18:13:52 2023 -0400",
    "stats": {
      "files_changed": 15,
      "insertions": 567,
      "deletions": 30,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/LeaderAndIsrRequest.java",
        "core/src/main/scala/kafka/controller/ControllerChannelManager.scala",
        "core/src/main/scala/kafka/log/LocalLog.scala",
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/migration/MigrationPropagator.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/main/scala/kafka/zk/migration/ZkTopicMigrationClient.scala",
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationZkWriter.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/TopicMigrationClient.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/CapturingTopicMigrationClient.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationDriverTest.java"
      ]
    },
    "message": "KAFKA-15605: Fix topic deletion handling during ZK migration (#14545)\n\nThis patch adds reconciliation logic to migrating ZK brokers to deal with pending topic deletions as well as missed StopReplicas.\n\nDuring the hybrid mode of the ZK migration, the KRaft controller is asynchronously sending UMR and LISR to the ZK brokers to propagate metadata. Since this process is essentially \"best effort\" it is possible for a broker to miss a StopReplicas. The new logic lets the ZK broker examine its local logs compared with the full set of replicas in a \"Full\" LISR. Any local logs which are not present in the set of replicas in the request are removed from ReplicaManager and marked as \"stray\".\n\nTo avoid inadvertent data loss with this new behavior, the brokers do not delete the \"stray\" partitions. They will rename the directories and log warning messages during log recovery. It will be up to the operator to manually delete the stray partitions. We can possibly enhance this in the future to clean up old stray logs.\n\nThis patch makes use of the previously unused Type field on LeaderAndIsrRequest. This was added as part of KIP-516 but never implemented. Since its introduction, an implicit 0 was sent in all LISR. The KRaft controller will now send a value of 2 to indicate a full LISR (as specified by the KIP). The presence of this value acts as a trigger for the ZK broker to perform the log reconciliation.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1698354832,
    "epoch_utc": null
  },
  {
    "commit": "986c1b1f31551412bcd24e72dda223bca1c84d3c",
    "author": "Levani Kokhreidze",
    "author_email": "levani.kokhreidze@transferwise.com",
    "date": "Fri Oct 27 00:56:33 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 26 14:56:33 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 34,
      "deletions": 16,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/integration/RestoreIntegrationTest.java"
      ]
    },
    "message": "KAFKA-15659: Fix shouldInvokeUserDefinedGlobalStateRestoreListener flaky test (#14608)\n\nTrying to fix flakiness for the shouldInvokeUserDefinedGlobalStateRestoreListener test introduced in #14519.\n\nFixes are:\n\n-Do not use static membership.\n-Always close the 2nd KafkaStreams instance.\n-Await for the Kafka Streams instance to transition to a RUNNING state before proceeding.\n-Added logging for the StateRestoreListener implementation.\n-Reduce restore consumer MAX_POLL_RECORDS.\n\nReviewers: Anna Sophie Blee-Goldman <sophie@responsive.dev>",
    "epoch": 1698378993,
    "epoch_utc": null
  },
  {
    "commit": "ad2677bb7bd3da797de83516b348ca9565c8a0cc",
    "author": "Apoorv Mittal",
    "author_email": "amittal@confluent.io",
    "date": "Thu Oct 26 21:06:38 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 26 15:06:38 2023 -0500",
    "stats": {
      "files_changed": 12,
      "insertions": 595,
      "deletions": 0,
      "files": [
        "build.gradle",
        "checkstyle/import-control.xml",
        "clients/src/main/java/org/apache/kafka/common/telemetry/internals/ClientTelemetrySender.java",
        "clients/src/main/java/org/apache/kafka/common/telemetry/internals/MetricKey.java",
        "clients/src/main/java/org/apache/kafka/common/telemetry/internals/MetricKeyable.java",
        "clients/src/main/java/org/apache/kafka/common/telemetry/internals/MetricsCollector.java",
        "clients/src/main/java/org/apache/kafka/common/telemetry/internals/MetricsEmitter.java",
        "clients/src/main/java/org/apache/kafka/common/telemetry/internals/SinglePointMetric.java",
        "clients/src/main/java/org/apache/kafka/server/telemetry/ClientTelemetry.java",
        "clients/src/main/java/org/apache/kafka/server/telemetry/ClientTelemetryPayload.java",
        "clients/src/main/java/org/apache/kafka/server/telemetry/ClientTelemetryReceiver.java",
        "clients/src/main/java/org/apache/kafka/server/telemetry/package-info.java"
      ]
    },
    "message": "KAFKA-15614: Define interfaces and classes for client telemetry (#14575)\n\nThis PR for KIP-714 - KAFKA-1564 lays out interfaces and classes for capturing client telemetry metrics.\n\nBelow image defines interaction of different classes among them interfaces have been included in the PR.\n\nReviewers: Walker Carlson <wcarlson@apache.org>, Matthias J. Sax <matthias@confluent.io>, Andrew Schofield <andrew_schofield@uk.ibm.com>, Kirk True <ktrue@confluent.io>, Philip Nee <pnee@confluent.io>, Jun Rao <junrao@gmail.com>,",
    "epoch": 1698365198,
    "epoch_utc": null
  },
  {
    "commit": "a6c14003a9dcecc2e50634e201bf184379616636",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Thu Oct 26 10:30:39 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 26 10:30:39 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 16,
      "deletions": 14,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamSessionWindowAggregate.java"
      ]
    },
    "message": "HOTFIX: close iterator to avoid resource leak (#14624)\n\nReviewers: Hao Li <hli@confluent.io>, Bill Bejeck <bill@confluent.io>",
    "epoch": 1698327039,
    "epoch_utc": null
  },
  {
    "commit": "a7aaa9c44f3caad255cbf1d1e164b646a6dcb610",
    "author": "atu-sharm",
    "author_email": "131497429+atu-sharm@users.noreply.github.com",
    "date": "Thu Oct 26 22:06:59 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 26 18:36:59 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 10,
      "deletions": 10,
      "files": [
        "LICENSE-binary",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "KAFKA-15644: Fix CVE-2023-4586 in netty:handler (#14584)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Luke Chen <showuon@gmail.com>",
    "epoch": 1698368819,
    "epoch_utc": null
  },
  {
    "commit": "b061ab7701b552c68ca40df8874034fb3e8fce8a",
    "author": "Lucas Brutschy",
    "author_email": "lbrutschy@confluent.io",
    "date": "Thu Oct 26 17:31:46 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 26 08:31:46 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java"
      ]
    },
    "message": "MINOR: Fix misleading log-line (#14643)\n\nAfter finishing restoration, we should only log the active tasks. Standby tasks are not part of restoration and it can be confusing to see them show up on this log message.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1698352306,
    "epoch_utc": null
  },
  {
    "commit": "987609404c1d3f65f4d0cc642982b898c28121ac",
    "author": "maniekes",
    "author_email": "92219550+maniekes@users.noreply.github.com",
    "date": "Thu Oct 26 11:29:39 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 26 11:29:39 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 11,
      "deletions": 10,
      "files": [
        "bin/kafka-run-class.sh"
      ]
    },
    "message": "KAFKA-15685: Add support for MinGW and MSYS2 (windows OS) (#13321)\n\nKafka class runner does not work with MINGW/Git Bash on Windows. This commit adds support for MinGW and MSYS2 development environments.\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1698330579,
    "epoch_utc": null
  },
  {
    "commit": "9989b68d0d38c8f1357f78bf9d53a58c1476188d",
    "author": "Owen Leung",
    "author_email": "owen.leung2@gmail.com",
    "date": "Thu Oct 26 16:40:01 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 26 10:40:01 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 29,
      "deletions": 0,
      "files": [
        "release.py"
      ]
    },
    "message": "KAFKA-15200: Add pre-requisite check in release.py (#14636)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1698349201,
    "epoch_utc": null
  },
  {
    "commit": "abd104a60603d2103c3ce81ebb2d540e6bce17b0",
    "author": "Gaurav Narula",
    "author_email": "gaurav_narula2@apple.com",
    "date": "Thu Oct 26 08:42:04 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 26 09:42:04 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 6,
      "deletions": 14,
      "files": [
        "clients/src/test/java/org/apache/kafka/common/record/DefaultRecordBatchTest.java"
      ]
    },
    "message": "MINOR: avoid blocking for randomness in DefaultRecordBatchTest (#14625)\n\nUsing `SecureRandom.getInstanceStrong()` results in using `/dev/random` which is known to block in Linux when the OS runs low on entropy. This was noticable when running tests in containerised CI environments.\n\nThis commit avoids using a CSPRNG altogether since the tests do not need cryptographically secure random numbers.\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Igor Soarez <soarez@apple.com>\n\n---------\n\nCo-authored-by: Igor Soarez <soarez@apple.com>",
    "epoch": 1698320524,
    "epoch_utc": null
  },
  {
    "commit": "b559942c172558efaf07427c80b1f3276b60a469",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Wed Oct 25 17:18:55 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 25 11:18:55 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 17,
      "deletions": 31,
      "files": [
        "core/src/test/scala/unit/kafka/log/remote/RemoteIndexCacheTest.scala"
      ]
    },
    "message": "KAFKA-15671: Fix flaky test RemoteIndexCacheTest.testClearCacheAndIndexFilesWhenResizeCache (#14622)\n\nReviewers: Divij Vaidya <diviv@amazon.com>\n\n---------\n\nCo-authored-by: Deqi Hu <deqi.hu@shopee.com>",
    "epoch": 1698265135,
    "epoch_utc": null
  },
  {
    "commit": "03ea24aa1daa2d372b9e6f158cc354525329ad18",
    "author": "dengziming",
    "author_email": "dengziming1993@gmail.com",
    "date": "Wed Oct 25 09:39:29 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 25 09:39:29 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 0,
      "files": [
        "core/src/test/scala/integration/kafka/server/FetchFromFollowerIntegrationTest.scala"
      ]
    },
    "message": "MINOR: Fix flaky testFollowerCompleteDelayedFetchesOnReplication (#14616)\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1698237569,
    "epoch_utc": null
  },
  {
    "commit": "2b233bfa5f35bf237effe8c5202fd2b80c601943",
    "author": "Kirk True",
    "author_email": "kirk@kirktrue.pro",
    "date": "Tue Oct 24 13:03:05 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 24 13:03:05 2023 -0700",
    "stats": {
      "files_changed": 59,
      "insertions": 7023,
      "deletions": 2452,
      "files": [
        "checkstyle/import-control.xml",
        "checkstyle/suppressions.xml",
        "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/MockConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractFetch.java",
        ".../main/java/org/apache/kafka/clients/consumer/internals/{ErrorEventHandler.java => CachedSupplier.java}",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CommitRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CompletedFetch.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerNetworkThread.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerUtils.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CoordinatorRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThread.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultEventHandler.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Deserializers.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/FetchBuffer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/FetchCollector.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/FetchConfig.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/FetchRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/HeartbeatRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/NetworkClientDelegate.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetFetcherUtils.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetsRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/RequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/RequestManagers.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/TopicMetadataRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEventHandler.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEventProcessor.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/BackgroundEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/BackgroundEventHandler.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/BackgroundEventProcessor.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/CompletableApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/CompletableEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ErrorBackgroundEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/EventHandler.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/EventProcessor.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/NoopApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/NoopBackgroundEvent.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CommitRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CompletedFetchTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinatorTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerNetworkThreadTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerTestBuilder.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CoordinatorRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThreadTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/DefaultEventHandlerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetchCollectorTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetchConfigTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetchRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetcherTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/HeartbeatRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/OffsetFetcherTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/OffsetsRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/events/BackgroundEventHandlerTest.java"
      ]
    },
    "message": "KAFKA-14274 [6, 7]: Introduction of fetch request manager (#14406)\n\nChanges:\n\n1. Introduces FetchRequestManager that implements the RequestManager\nAPI for fetching messages from brokers. Unlike Fetcher, record\ndecompression and deserialization is performed on the application\nthread inside CompletedFetch.\n2. Restructured the code so that objects owned by the background thread\nare not instantiated until the background thread runs (via Supplier)\nto ensure that there are no references available to the\napplication thread.\n3. Ensuring resources are properly using Closeable and using\nIdempotentCloser to ensure they're only closed once.\n4. Introduces ConsumerTestBuilder to reduce a lot of inconsistency in\nthe way the objects were built up for tests.\n\nReviewers: Philip Nee <pnee@confluent.io>, Lianet Magrans <lianetmr@gmail.com>, Jun Rao<junrao@gmail.com>",
    "epoch": 1698163385,
    "epoch_utc": null
  },
  {
    "commit": "d144b7ee387308a59e52cbdabc7b66dd3b2926cc",
    "author": "Lucas Brutschy",
    "author_email": "lbrutschy@confluent.io",
    "date": "Tue Oct 24 10:17:55 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 24 10:17:55 2023 +0200",
    "stats": {
      "files_changed": 26,
      "insertions": 1425,
      "deletions": 449,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/producer/MockProducer.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/MockProducerTest.java",
        "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractPartitionGroup.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/ActiveTaskCreator.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/PartitionGroup.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/SynchronizedPartitionGroup.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/Tasks.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TasksRegistry.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskExecutor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskManager.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/tasks/TaskManager.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/AdjustStreamThreadCountTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/EosIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/SmokeTestDriverIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/ActiveTaskCreatorTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/PartitionGroupTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/SynchronizedPartitionGroupTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/StreamThreadStateStoreProviderTest.java",
        "streams/test-utils/src/main/java/org/apache/kafka/streams/TopologyTestDriver.java"
      ]
    },
    "message": "KAFKA-15326: [10/N] Integrate processing thread (#14193)\n\n- Introduce a new internal config flag to enable processing threads\n- If enabled, create a scheduling task manager inside the normal task manager (renamings will be added on top of this), and use it from the stream thread\n- All operations inside the task manager that change task state, lock the corresponding tasks if processing threads are enabled.\n- Adds a new abstract class AbstractPartitionGroup. We can modify the underlying implementation depending on the synchronization requirements. PartitionGroup is the unsynchronized subclass that is going to be used by the original code path. The processing thread code path uses a trivially synchronized SynchronizedPartitionGroup that uses object monitors. Further down the road, there is the opportunity to implement a weakly synchronized alternative. The details are complex, but since the implementation is essentially a queue + some other things, it should be feasible to implement this lock-free.\n- Refactorings in StreamThreadTest: Make all tests use the thread member variable and add tearDown in order avoid thread leaks and simplify debugging. Make the test parameterized on two internal flags: state updater enabled and processing threads enabled. Use JUnit's assume to disable all tests that do not apply.\nEnable some integration tests with processing threads enabled.\n\nReviewer: Bruno Cadonna <bruno@confluent.io>",
    "epoch": 1698153475,
    "epoch_utc": null
  },
  {
    "commit": "e0121a38b192ceee9cfefc9a192f2ae267c4c262",
    "author": "Nikolay",
    "author_email": "nizhikov@apache.org",
    "date": "Tue Oct 24 10:16:32 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 24 15:16:32 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 22,
      "deletions": 14,
      "files": [
        "core/src/main/scala/kafka/admin/ConsumerGroupCommand.scala"
      ]
    },
    "message": "MINOR: Deduplicating ConsumerGroupCommand print formating (#14610)\n\nConsumerGroupCommand contains code duplications for table row format.\nThis PR reduces code duplication and make it more clear and easy to understand.\n\nReviewers: Luke Chen <showuon@gmail.com>, hudeqi <1217150961@qq.com>",
    "epoch": 1698153392,
    "epoch_utc": null
  },
  {
    "commit": "4612fe42af0df0a4c1affaf66c55d01eb6267ce3",
    "author": "Jotaniya Jeel",
    "author_email": "31836443+jeel2420@users.noreply.github.com",
    "date": "Mon Oct 23 13:50:46 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 23 14:50:46 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 138,
      "deletions": 43,
      "files": [
        "core/src/test/scala/unit/kafka/log/remote/RemoteIndexCacheTest.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/RemoteIndexCache.java"
      ]
    },
    "message": "KAFKA-15481: Fix concurrency bug in RemoteIndexCache (#14483)\n\nRemoteIndexCache has a concurrency bug which leads to IOException while fetching data from remote tier.\n\nThe bug could be reproduced as per the following order of events:-\n\nThread 1 (cache thread): invalidates the entry, removalListener is invoked async, so the files have not been renamed to \"deleted\" suffix yet.\nThread 2: (fetch thread): tries to find entry in cache, doesn't find it because it has been removed by 1, fetches the entry from S3, writes it to existing file (using replace existing)\nThread 1: async removalListener is invoked, acquires a lock on old entry (which has been removed from cache), it renames the file to \"deleted\" and starts deleting it\nThread 2: Tries to create in-memory/mmapped index, but doesn't find the file and hence, creates a new file of size 2GB in AbstractIndex constructor. JVM returns an error as it won't allow creation of 2GB random access file.\n\nThis commit fixes the bug by using EvictionListener instead of RemovalListener to perform the eviction atomically with the file rename. It handles the manual removal (not handled by EvictionListener) by using computeIfAbsent() and enforcing atomic cache removal & file rename.\n\nReviewers: Luke Chen <showuon@gmail.com>, Divij Vaidya <diviv@amazon.com>, Arpit Goyal\n<goyal.arpit.91@gmail.com>, Kamal Chandraprakash <kamal.chandraprakash@gmail.com>",
    "epoch": 1698079846,
    "epoch_utc": null
  },
  {
    "commit": "8b9f6d17f2a62f7dbb1810de8aaac248a84556cc",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Mon Oct 23 13:26:50 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 23 13:26:50 2023 +0200",
    "stats": {
      "files_changed": 10,
      "insertions": 1345,
      "deletions": 6,
      "files": [
        "build.gradle",
        "settings.gradle",
        "streams/upgrade-system-tests-35/src/test/java/org/apache/kafka/streams/tests/SmokeTestClient.java",
        "streams/upgrade-system-tests-35/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java",
        "streams/upgrade-system-tests-35/src/test/java/org/apache/kafka/streams/tests/SmokeTestUtil.java",
        "streams/upgrade-system-tests-35/src/test/java/org/apache/kafka/streams/tests/StreamsSmokeTest.java",
        "streams/upgrade-system-tests-35/src/test/java/org/apache/kafka/streams/tests/StreamsUpgradeTest.java",
        "tests/kafkatest/tests/streams/streams_application_upgrade_test.py",
        "tests/kafkatest/tests/streams/streams_broker_compatibility_test.py",
        "tests/kafkatest/tests/streams/streams_upgrade_test.py"
      ]
    },
    "message": "KAFKA-15093: Add 3.5 Streams upgrade system tests (#14602)\n\n\nReviewers: Matthias J. Sax <mjsax@apache.org>",
    "epoch": 1698078410,
    "epoch_utc": null
  },
  {
    "commit": "27a155c80a5cab62e625d9f49a313a8227f599ab",
    "author": "shuoer86",
    "author_email": "129674997+shuoer86@users.noreply.github.com",
    "date": "Mon Oct 23 18:30:57 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 23 12:30:57 2023 +0200",
    "stats": {
      "files_changed": 5,
      "insertions": 8,
      "deletions": 8,
      "files": [
        "build.gradle",
        "tests/kafkatest/services/verifiable_client.py",
        "tests/kafkatest/tests/client/quota_test.py",
        "tests/kafkatest/tests/streams/streams_broker_compatibility_test.py",
        "trogdor/src/test/java/org/apache/kafka/trogdor/rest/RestExceptionMapperTest.java"
      ]
    },
    "message": "MINOR: Fix typos in build.gradle, tests and trogdor (#14574)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, hudeqi <1217150961@qq.com>",
    "epoch": 1698096657,
    "epoch_utc": null
  },
  {
    "commit": "1a3aca305e7f51dc491723b80c3d60b4ba4b6f1d",
    "author": "vamossagar12",
    "author_email": "sagarmeansocean@gmail.com",
    "date": "Mon Oct 23 15:12:21 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 23 02:42:21 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 6,
      "deletions": 1,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/admin/internals/ListConsumerGroupOffsetsHandler.java",
        "clients/src/main/java/org/apache/kafka/common/requests/OffsetFetchResponse.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java"
      ]
    },
    "message": "KAFKA-15457: Add support for OffsetFetch version 9 in admin client (#14611)\n\nThis patch adds support for OffsetFetch version 9 in the admin client. It mainly allows handling two new error codes `STALE_MEMBER_EPOCH` and `UNKNOWN_MEMBER_ID`  introduced as part of KIP-848.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1698084741,
    "epoch_utc": null
  },
  {
    "commit": "9c77c17c4eae19af743e551e8e7d8b49b07c4e99",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Mon Oct 23 10:33:59 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 23 10:33:59 2023 +0200",
    "stats": {
      "files_changed": 10,
      "insertions": 1345,
      "deletions": 8,
      "files": [
        "build.gradle",
        "settings.gradle",
        "streams/upgrade-system-tests-34/src/test/java/org/apache/kafka/streams/tests/SmokeTestClient.java",
        "streams/upgrade-system-tests-34/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java",
        "streams/upgrade-system-tests-34/src/test/java/org/apache/kafka/streams/tests/SmokeTestUtil.java",
        "streams/upgrade-system-tests-34/src/test/java/org/apache/kafka/streams/tests/StreamsSmokeTest.java",
        "streams/upgrade-system-tests-34/src/test/java/org/apache/kafka/streams/tests/StreamsUpgradeTest.java",
        "tests/kafkatest/tests/streams/streams_application_upgrade_test.py",
        "tests/kafkatest/tests/streams/streams_broker_compatibility_test.py",
        "tests/kafkatest/tests/streams/streams_upgrade_test.py"
      ]
    },
    "message": "KAFKA-15664: Add 3.4 Streams upgrade system tests (#14601)\n\n\nReviewers: Luke Chen <showuon@gmail.com>,  Matthias J. Sax <mjsax@apache.org>",
    "epoch": 1698068039,
    "epoch_utc": null
  },
  {
    "commit": "84a58d75bbf9a06777528a8d786e0572fe743873",
    "author": "Gantigmaa Selenge",
    "author_email": "39860586+tinaselenge@users.noreply.github.com",
    "date": "Mon Oct 23 04:05:57 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 23 11:05:57 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 2,
      "files": [
        "core/src/test/scala/unit/kafka/server/FetchRequestTest.scala"
      ]
    },
    "message": "KAFKA-15566: Fix test FetchRequestTest.testLastFetchedEpochValidation for KRaft mode (#14563)\n\nFix test FetchRequestTest.testLastFetchedEpochValidation for KRaft mode\nThe test fails due to unexpected error (OFFSET_OUT_OF_RANGE) when enabled with KRaft mode.\nThe reason it takes longer to set the leader epoch in KRaft mode is because of the way the topic partitions are created differently than Zookeeper. In Zookeeper mode, we create the topic partitions directly with Zookeeper therefore seem to take less time to create the logs and set leader epoch on broker. In KRaft mode, we use Admin client to create topic partitions. Even though the test waits for topic partitions to get created and appear in metadata cache, it doesn\u2019t seem to be sufficient time for leader epoch to get set on the brokers.\n\nReviewers: Luke Chen <showuon@gmail.com>, dengziming <dengziming1993@gmail.com>",
    "epoch": 1698044757,
    "epoch_utc": null
  },
  {
    "commit": "ffcb6d4a1a733c7a7f8b2a5692ad0621c442e12c",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Sun Oct 22 11:08:01 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Oct 22 11:08:01 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 4,
      "deletions": 12,
      "files": [
        "build.gradle"
      ]
    },
    "message": "KAFKA-14767: Fix missing commitId build error after git gc (#13315)\n\ngit gc moves commit hashes from individual .git/refs/heads/ to .git/packed-refs which is not read\nby the determineCommitId function.\n\nReplace the existing lookup within the .git directory with a GrGit lookup that handles packed and\nunpacked refs transparently.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1697983681,
    "epoch_utc": null
  },
  {
    "commit": "4371214fbef1e6c1719ce740f408d962d4b25007",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Fri Oct 20 16:20:00 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Oct 20 16:20:00 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 13,
      "deletions": 9,
      "files": [
        "tests/kafkatest/tests/streams/streams_broker_down_resilience_test.py",
        "tests/kafkatest/tests/streams/streams_upgrade_test.py",
        "tests/kafkatest/version.py"
      ]
    },
    "message": "KAFKA-15378: fix streams upgrade system test (#14539)\n\nFixing bad test setup. We tried to fix an upgrade bug for FK-joins in 3.1 release, but it later turned out that the PR was not sufficient to fix it. We finally fixed in 3.4 release.\n\nThis PR updates the system test matrix to only test working versions with FK-joins, limited to available test versions.\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>, Hao Li <hli@confluent.io>, Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1697829600,
    "epoch_utc": null
  },
  {
    "commit": "e8c89693300660240cd85fb79344d01316fe1267",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Fri Oct 20 14:26:20 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Oct 20 14:26:20 2023 -0700",
    "stats": {
      "files_changed": 10,
      "insertions": 196,
      "deletions": 75,
      "files": [
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionLockTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/log/VerificationGuardTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/VerificationGuard.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/VerificationStateEntry.java"
      ]
    },
    "message": "KAFKA-15626: Replace verification guard object with an specific type (#14568)\n\nI've added a new class with an incrementing atomic long to represent the verification guard. Upon creation of verification guard, we will increment this value and assign it to the guard.\n\nThe expected behavior is the same as the object guard, but with better debuggability with the string value and type safety (I found a type safety issue in the current code when implementing this)\n\nReviewers: Ismael Juma <ismael@juma.me.uk>, Artem Livshits <alivshits@confluent.io>",
    "epoch": 1697822780,
    "epoch_utc": null
  },
  {
    "commit": "eed5e68880c0d4fe088fcb9493baecc3db667176",
    "author": "Josep Prat",
    "author_email": "josep.prat@aiven.io",
    "date": "Fri Oct 20 21:04:04 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Oct 20 21:04:04 2023 +0200",
    "stats": {
      "files_changed": 33,
      "insertions": 116,
      "deletions": 130,
      "files": [
        "server-common/src/main/java/org/apache/kafka/admin/AdminUtils.java",
        "server-common/src/main/java/org/apache/kafka/queue/EventQueue.java",
        "server-common/src/main/java/org/apache/kafka/queue/KafkaEventQueue.java",
        "server-common/src/main/java/org/apache/kafka/server/common/CheckpointFile.java",
        "server-common/src/main/java/org/apache/kafka/server/common/MetadataVersion.java",
        "server-common/src/main/java/org/apache/kafka/server/common/ProducerIdsBlock.java",
        "server-common/src/main/java/org/apache/kafka/server/common/serialization/AbstractApiMessageSerde.java",
        "server-common/src/main/java/org/apache/kafka/server/common/serialization/BytesApiMessageSerde.java",
        "server-common/src/main/java/org/apache/kafka/server/config/ServerTopicConfigSynonyms.java",
        "server-common/src/main/java/org/apache/kafka/server/fault/ProcessTerminatingFaultHandler.java",
        "server-common/src/main/java/org/apache/kafka/server/metrics/KafkaYammerMetrics.java",
        "server-common/src/main/java/org/apache/kafka/server/mutable/BoundedList.java",
        "server-common/src/main/java/org/apache/kafka/server/network/EndpointReadyFutures.java",
        "server-common/src/main/java/org/apache/kafka/server/util/CommandLineUtils.java",
        "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
        "server-common/src/main/java/org/apache/kafka/server/util/Json.java",
        "server-common/src/main/java/org/apache/kafka/server/util/KafkaScheduler.java",
        "server-common/src/main/java/org/apache/kafka/server/util/Scheduler.java",
        "server-common/src/main/java/org/apache/kafka/server/util/ThroughputThrottler.java",
        "server-common/src/main/java/org/apache/kafka/server/util/TranslatedValueMapView.java",
        "server-common/src/main/java/org/apache/kafka/server/util/json/JsonArray.java",
        "server-common/src/main/java/org/apache/kafka/server/util/json/JsonValue.java",
        "server-common/src/main/java/org/apache/kafka/server/util/timer/Timer.java",
        "server-common/src/main/java/org/apache/kafka/server/util/timer/TimingWheel.java",
        "server-common/src/main/java/org/apache/kafka/timeline/BaseHashTable.java",
        "server-common/src/main/java/org/apache/kafka/timeline/Snapshot.java",
        "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
        "server-common/src/main/java/org/apache/kafka/timeline/SnapshottableHashTable.java",
        "server-common/src/main/java/org/apache/kafka/timeline/TimelineHashMap.java",
        "server-common/src/main/java/org/apache/kafka/timeline/TimelineHashSet.java",
        "server-common/src/main/java/org/apache/kafka/timeline/TimelineInteger.java",
        "server-common/src/main/java/org/apache/kafka/timeline/TimelineLong.java",
        "server-common/src/main/java/org/apache/kafka/timeline/TimelineObject.java"
      ]
    },
    "message": "MINOR: Server-Commons cleanup (#14572)\n\nMINOR: Server-Commons cleanup\n\nFixes Javadoc and minor issues in the Java files of Server-Commons modules.\n\nJavadoc is now formatted as intended by the author of the doc itself.\n\nSigned-off-by: Josep Prat <josep.prat@aiven.io>\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1697846644,
    "epoch_utc": null
  },
  {
    "commit": "4083cd627e9b62a979d1f3b312b6bacbbbee822c",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Sat Oct 21 00:17:51 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Oct 20 12:17:51 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 41,
      "deletions": 5,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointTask.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorCheckpointTaskTest.java"
      ]
    },
    "message": "KAFKA-15607: Fix NPE in MirrorCheckpointTask::syncGroupOffset (#14587)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1697858271,
    "epoch_utc": null
  },
  {
    "commit": "b5ec6e8a0dc5d642f0751899852602502b7acba9",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Fri Oct 20 15:09:36 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Oct 20 16:09:36 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 13,
      "deletions": 18,
      "files": [
        ".../src/test/java/org/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapterTest.java"
      ]
    },
    "message": "KAFKA-14133: Move RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapterTest to Mockito (#14586)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1697825376,
    "epoch_utc": null
  },
  {
    "commit": "091eb9b349ea2a383affd3089500ed855c5e4e17",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Fri Oct 20 09:52:37 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Oct 20 09:52:37 2023 -0400",
    "stats": {
      "files_changed": 34,
      "insertions": 3254,
      "deletions": 1827,
      "files": [
        "checkstyle/import-control.xml",
        "checkstyle/suppressions.xml",
        ".../src/test/java/org/apache/kafka/connect/mirror/integration/MirrorConnectorsIntegrationBaseTest.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/cli/ConnectStandalone.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Herder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Loggers.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/ConnectRestServer.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/entities/LoggerLevel.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/resources/LoggingResource.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/ConfigBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaConfigBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/MemoryConfigBackingStore.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/ConnectWorkerIntegrationTest.java",
        ".../runtime/src/test/java/org/apache/kafka/connect/integration/ConnectorRestartApiIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/ExactlyOnceSourceIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/StandaloneWorkerIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/AbstractHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/LoggersTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/ConnectRestServerTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/LoggingResourceTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaConfigBackingStoreTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/ConnectAssertions.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnect.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectBuilder.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectCluster.java",
        ".../runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectClusterAssertions.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectStandalone.java",
        "gradle/spotbugs-exclude.xml",
        "tests/kafkatest/services/connect.py",
        "tests/kafkatest/tests/connect/connect_distributed_test.py"
      ]
    },
    "message": "KAFKA-15428: Cluster-wide dynamic log adjustments for Connect (#14538)\n\nReviewers: Greg Harris <greg.harris@aiven.io>, Yang Yang <yayang@uber.com>, Yash Mayya <yash.mayya@gmail.com>",
    "epoch": 1697806357,
    "epoch_utc": null
  },
  {
    "commit": "c81a7252195261f649faba166ee723552bed4d81",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Fri Oct 20 00:47:25 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Oct 20 09:47:25 2023 +0200",
    "stats": {
      "files_changed": 11,
      "insertions": 169,
      "deletions": 84,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CommitRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CoordinatorRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/HeartbeatRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/NetworkClientDelegate.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/TopicMetadataRequestManager.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CommitRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CoordinatorRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/HeartbeatRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/NetworkClientDelegateTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/OffsetsRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/TopicMetadataRequestManagerTest.java"
      ]
    },
    "message": "KAFKA-15534: Inject request completion time when the request failed (#14532)\n\nCurrently, we aren't able to access the request completion time if the request is completed exceptionally, which results in many system calls. This is not ideal because these system calls can add up. Instead, time is already retrieved on the top of the background thread event loop, which is then propagated into the NetworkClientDelegate.poll.\n\nIn this PR - I store the completion time in the handler, so that it becomes accessible in the callbacks.\n\nReviewer: Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1697773645,
    "epoch_utc": null
  },
  {
    "commit": "21ebbe6b28b96055f7f65a7e384f624368998a6f",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Fri Oct 20 10:05:47 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Oct 20 10:05:47 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 16,
      "deletions": 16,
      "files": [
        "core/src/main/scala/kafka/admin/ConsumerGroupCommand.scala"
      ]
    },
    "message": "MINOR:Remove unused method parameter in ConsumerGroupCommand (#14585)\n\nIn ConsumerGroupCommand, there are two methods: getLogEndOffsets and getLogStartOffsets, the first parameter groupId is not used, so remove it.\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1697807147,
    "epoch_utc": null
  },
  {
    "commit": "486d5f6c641885f8fb8babca795b55f5ca0c973e",
    "author": "Gantigmaa Selenge",
    "author_email": "39860586+tinaselenge@users.noreply.github.com",
    "date": "Fri Oct 20 02:59:21 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Oct 20 09:59:21 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 18,
      "deletions": 13,
      "files": [
        "core/src/test/scala/unit/kafka/server/FetchRequestTest.scala"
      ]
    },
    "message": "KAFKA-15566: Fix flaky tests in FetchRequestTest.scala in KRaft mode (#14573)\n\nFixed some of the failing tests in FetchRequestTest.\n\ntestFetchWithPartitionsWithIdError and testCreateIncrementalFetchWithPartitionsInErrorV12 fail with the following error when enabled with KRaft mode. These tests only fail sometimes when running locally but consistently failed when running in the Jenkins Pipeline.\n\nTests will call the utility function TestUtils.waitUntilLeaderIsKnown after creating the topic partitions so that they wait for the logs to be created on the leader before sending fetch requests.\n\nEnabled all tests except checkLastFetchedEpochValidation with KRaft mode.\nLooking at the build history in Jenkins, all the other tests except these 2 tests and checkLastFetchedEpochValidation were passing when they were enabled with KRaft mode. Therefore enabled them with KRaft mode again but left checkLastFetchedEpochValidation to be investigated further.\n\nReviewers: Luke Chen <showuon@gmail.com>, dengziming <dengziming1993@gmail.com>",
    "epoch": 1697781561,
    "epoch_utc": null
  },
  {
    "commit": "af747fbfed7e81617c3b3ad0e4dc8c857aa9502b",
    "author": "Calvin Liu",
    "author_email": "83986057+CalvinConfluent@users.noreply.github.com",
    "date": "Thu Oct 19 11:05:15 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 19 14:05:15 2023 -0400",
    "stats": {
      "files_changed": 22,
      "insertions": 825,
      "deletions": 164,
      "files": [
        "checkstyle/suppressions.xml",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/test/java/kafka/test/ClusterTestExtensionsTest.java",
        "core/src/test/java/kafka/test/annotation/ClusterTest.java",
        "metadata/src/main/java/org/apache/kafka/controller/ConfigurationControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/PartitionChangeBuilder.java",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/controller/ReplicationControlManager.java",
        "metadata/src/main/java/org/apache/kafka/image/TopicImage.java",
        "metadata/src/main/java/org/apache/kafka/metadata/PartitionRegistration.java",
        "metadata/src/main/resources/common/metadata/PartitionChangeRecord.json",
        "metadata/src/main/resources/common/metadata/PartitionRecord.json",
        "metadata/src/test/java/org/apache/kafka/controller/ConfigurationControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/PartitionChangeBuilderTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/ReplicationControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/metrics/ControllerMetricsChangesTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/PartitionRegistrationTest.java",
        "server-common/src/main/java/org/apache/kafka/server/common/MetadataVersion.java",
        "server-common/src/test/java/org/apache/kafka/server/common/MetadataVersionTest.java",
        "tools/src/test/java/org/apache/kafka/tools/FeatureCommandTest.java"
      ]
    },
    "message": "KAFKA-15581: Introduce ELR (#14312)\n\nThis patch introduces preliminary changes for Eligible Leader Replicas (KIP-966)\n\n* New MetadataVersion 16 (3.7-IV1)\n* New record versions for PartitionRecord and PartitionChangeRecord\n* New tagged fields on PartitionRecord and PartitionChangeRecord\n* New static config \"eligible.leader.replicas.enable\" to gate the whole feature\n\nReviewers: Artem Livshits <alivshits@confluent.io>, David Arthur <mumrah@gmail.com>, Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1697724315,
    "epoch_utc": null
  },
  {
    "commit": "14029e2ddd1f5084d426ea8280abfad249988c0a",
    "author": "Calvin Liu",
    "author_email": "83986057+CalvinConfluent@users.noreply.github.com",
    "date": "Thu Oct 19 10:25:23 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 19 10:25:23 2023 -0700",
    "stats": {
      "files_changed": 22,
      "insertions": 315,
      "deletions": 71,
      "files": [
        "checkstyle/import-control-core.xml",
        "clients/src/main/resources/common/message/BrokerRegistrationRequest.json",
        "clients/src/main/resources/common/message/BrokerRegistrationResponse.json",
        "core/src/main/java/kafka/log/CleanShutdownFileHandler.java",
        "core/src/main/scala/kafka/log/LogLoader.scala",
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/main/scala/kafka/server/BrokerLifecycleManager.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/test/java/kafka/log/CleanShutdownFileHandlerTest.java",
        "core/src/test/scala/unit/kafka/log/LogLoaderTest.scala",
        "core/src/test/scala/unit/kafka/log/LogManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/BrokerLifecycleManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/MockNodeToControllerChannelManager.scala",
        "core/src/test/scala/unit/kafka/server/epoch/EpochDrivenReplicationProtocolAcceptanceTest.scala",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/fetcher/ReplicaFetcherThreadBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/partition/PartitionMakeFollowerBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/partition/UpdateFollowerFetchStateBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/server/PartitionCreationBench.java",
        "metadata/src/main/java/org/apache/kafka/controller/ClusterControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/test/java/org/apache/kafka/controller/ClusterControlManagerTest.java"
      ]
    },
    "message": "KAFKA-15582: Identify clean shutdown broker (#14465)\n\nThe PR includes:\n\n* Added a new class of CleanShutdownFile which helps write and read from a clean shutdown file.\n* Updated the BrokerRegistration API.\n* Client side handling for the broker epoch.\n* Minimum work on the controller side.\n\nReviewers: Jun Rao <junrao@gmail.com>",
    "epoch": 1697721923,
    "epoch_utc": null
  },
  {
    "commit": "bbdf6de88a00a8836f6b278a8affd7bc53d2a748",
    "author": "Hanyu Zheng",
    "author_email": "135176127+hanyuzheng7@users.noreply.github.com",
    "date": "Thu Oct 19 10:16:19 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 19 10:16:19 2023 -0700",
    "stats": {
      "files_changed": 4,
      "insertions": 92,
      "deletions": 55,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/query/RangeQuery.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredKeyValueStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/StoreQueryUtils.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/IQv2StoreIntegrationTest.java"
      ]
    },
    "message": "KAFKA-15527: Add reverseRange and reverseAll query over kv-store in IQv2 (#14477)\n\nImplements KIP-985.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1697721379,
    "epoch_utc": null
  },
  {
    "commit": "36abc8dcea1a418550875e2a8684b9c9d400464d",
    "author": "Apoorv Mittal",
    "author_email": "apoorvmittal10@gmail.com",
    "date": "Thu Oct 19 16:55:21 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 19 10:55:21 2023 -0500",
    "stats": {
      "files_changed": 22,
      "insertions": 778,
      "deletions": 2,
      "files": [
        "checkstyle/suppressions.xml",
        "clients/src/main/java/org/apache/kafka/common/protocol/ApiKeys.java",
        "clients/src/main/java/org/apache/kafka/common/requests/AbstractRequest.java",
        "clients/src/main/java/org/apache/kafka/common/requests/AbstractResponse.java",
        "clients/src/main/java/org/apache/kafka/common/requests/GetTelemetrySubscriptionsRequest.java",
        "clients/src/main/java/org/apache/kafka/common/requests/GetTelemetrySubscriptionsResponse.java",
        "clients/src/main/java/org/apache/kafka/common/requests/PushTelemetryRequest.java",
        "clients/src/main/java/org/apache/kafka/common/requests/PushTelemetryResponse.java",
        "clients/src/main/resources/common/message/GetTelemetrySubscriptionsRequest.json",
        "clients/src/main/resources/common/message/GetTelemetrySubscriptionsResponse.json",
        "clients/src/main/resources/common/message/PushTelemetryRequest.json",
        "clients/src/main/resources/common/message/PushTelemetryResponse.json",
        "clients/src/test/java/org/apache/kafka/common/protocol/ProtoUtilsTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/GetTelemetrySubscriptionsRequestTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/GetTelemetrySubscriptionsResponseTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/PushTelemetryRequestTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/PushTelemetryResponseTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/RequestResponseTest.java",
        "core/src/main/scala/kafka/network/RequestConvertToJson.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "core/src/test/scala/unit/kafka/server/RequestQuotaTest.scala"
      ]
    },
    "message": "KAFKA-15604: Telemetry API request and response schemas and classes (KIP-714) (#14554)\n\nInitial PR for [KIP-714](https://cwiki.apache.org/confluence/display/KAFKA/KIP-714%3A+Client+metrics+and+observability) - [KAFKA-15601](https://issues.apache.org/jira/browse/KAFKA-15601).\n\nThis PR defines json request and response schemas for the new Telemetry APIs and implements the corresponding java classes.\n\nReviewers:\nAndrew Schofield <andrew_schofield@uk.ibm.com>, Kirk True <ktrue@confluent.io>, Matthias J. Sax <matthias@confluent.io>, Walker Carlson <wcarlson@apache.org>",
    "epoch": 1697745321,
    "epoch_utc": null
  },
  {
    "commit": "8f3731e2bd14485ab6a5e29afe9bfbfdc1aee432",
    "author": "vamossagar12",
    "author_email": "sagarmeansocean@gmail.com",
    "date": "Thu Oct 19 20:18:12 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 19 07:48:12 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 5,
      "deletions": 1,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/admin/internals/AlterConsumerGroupOffsetsHandler.java",
        "clients/src/main/java/org/apache/kafka/common/requests/OffsetCommitResponse.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java"
      ]
    },
    "message": "KAFKA-15454: Add support for OffsetCommit version 9 in admin client (#14571)\n\nThis patch adds support for OffsetCommit version 9 in the admin client. It mainly allows handling two new error codes `STALE_MEMBER_EPOCH` and `GROUP_ID_NOT_FOUND ` introduced as part of KIP-848.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1697757492,
    "epoch_utc": null
  },
  {
    "commit": "26aa353dc1c34f932e6d05d5b270a7f3690c36cf",
    "author": "Apoorv Mittal",
    "author_email": "apoorvmittal10@gmail.com",
    "date": "Thu Oct 19 05:43:05 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 18 21:43:05 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 277,
      "deletions": 0,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/telemetry/ClientTelemetryState.java",
        "clients/src/test/java/org/apache/kafka/common/telemetry/ClientTelemetryStateTest.java"
      ]
    },
    "message": "KAFKA-15616: Client telemetry states and transition (KIP-714) (#14566)\n\nPart of KIP-714.\n\nReviewers: Andrew Schofield <aschofield@confluent.io>, Philip Nee <pnee@confluent.io>, Kirk True <ktrue@confluent.io>, Walker Carlson <wcarlson@confluent.io>, Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1697704985,
    "epoch_utc": null
  },
  {
    "commit": "78166101eb90291b8554d6d15e761d59675974b7",
    "author": "Apoorv Mittal",
    "author_email": "apoorvmittal10@gmail.com",
    "date": "Thu Oct 19 04:47:51 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 18 20:47:51 2023 -0700",
    "stats": {
      "files_changed": 15,
      "insertions": 174,
      "deletions": 0,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/CommonClientConfigs.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/Admin.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/AdminClientConfig.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/ForwardingAdmin.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/Consumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/MockConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/MockProducer.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/Producer.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/MockAdminClient.java"
      ]
    },
    "message": "KAFKA-15613: Client API definition and configurations (KIP-714) (#14560)\n\nPart of KIP-714.\n\nReviewers: Andrew Schofield <aschofield@confluent.io>, Walker Carlson <wcarlson@confluent.io>, Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1697701671,
    "epoch_utc": null
  },
  {
    "commit": "72fdd9f62a6f97068da41222bf5c5a58307a6918",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Wed Oct 18 17:20:09 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 18 17:20:09 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 7,
      "deletions": 0,
      "files": [
        "docs/streams/upgrade-guide.html"
      ]
    },
    "message": "MINOR: add KIP-941 to Kafka Streams upgrade docs (#14577)\n\nReviewers: Hao Li <hli@confluent.io>, Walker Carlson <wcarlson@confluent.io>, Bill Bejeck <bill@confluent.io>",
    "epoch": 1697660409,
    "epoch_utc": null
  },
  {
    "commit": "48449b68fd70c96451e03afe7d3cd5b2800240fa",
    "author": "Lianet Magrans",
    "author_email": "98415067+lianetm@users.noreply.github.com",
    "date": "Wed Oct 18 11:10:18 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 18 08:10:18 2023 -0700",
    "stats": {
      "files_changed": 9,
      "insertions": 296,
      "deletions": 297,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AssignorSelection.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThread.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/HeartbeatRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/MemberState.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/MembershipManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/MembershipManagerImpl.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/AssignorSelectionTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/HeartbeatRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/MembershipManagerImplTest.java"
      ]
    },
    "message": "KAFKA-15554: Client state changes for handling one assignment at a time & minor improvements (#14413)\n\nThis patch includes:\n- target assignment changes : accepting only one at a time according to the updated protocol.\n- changes for error handling, leaving responsibility in the heartbeatManager and exposing only the functionality for when the state needs to be updated (on successful HB, on fencing, on fatal failure)\n- allow transitions for failures when joining\n- tests & minor improvements/fixes addressing initial version review\n\nReviewers: Kirk True <ktrue@confluent.io>, Philip Nee <pnee@confluent.io>, David Jacot <djacot@confluent.io>",
    "epoch": 1697638218,
    "epoch_utc": null
  },
  {
    "commit": "dc6a53e19606674bd1276bf05d3ae7a3a2115523",
    "author": "Arpit Goyal",
    "author_email": "59436466+iit2009060@users.noreply.github.com",
    "date": "Wed Oct 18 15:50:55 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 18 18:20:55 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 13,
      "deletions": 13,
      "files": [
        "storage/src/main/java/org/apache/kafka/storage/internals/log/RemoteIndexCache.java"
      ]
    },
    "message": "MINOR: Rename lock variable of the entry class (#14569)\n\nThe RemoteIndexCache has a variable lock and the child class also have a variable lock in the same class file. Renaming lock of the entry(child class) to avoid confusion.\n\nReviewers: Luke Chen <showuon@gmail.com>, hudeqi <1217150961@qq.com>",
    "epoch": 1697655055,
    "epoch_utc": null
  },
  {
    "commit": "8aee2976699072c8f2af1dfccdc8f7a133b6113d",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Wed Oct 18 11:49:25 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 18 11:49:25 2023 +0200",
    "stats": {
      "files_changed": 5,
      "insertions": 18,
      "deletions": 21,
      "files": [
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/main/java/kafka/server/ReplicaFetcherTierStateMachine.java",
        "core/src/main/java/kafka/server/logger/RuntimeLoggerManager.java",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java",
        "core/src/test/java/kafka/test/server/BootstrapControllersIntegrationTest.java"
      ]
    },
    "message": "MINOR: Various Java cleanups in core (#14561)\n\n\nReviewers: Josep Prat <josep.prat@aiven.io>",
    "epoch": 1697640565,
    "epoch_utc": null
  },
  {
    "commit": "9b468fb278701be836a2641650356907bf84860a",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Tue Oct 17 21:11:04 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 17 21:11:04 2023 -0700",
    "stats": {
      "files_changed": 17,
      "insertions": 31,
      "deletions": 33,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CommitRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/FetchMetricsRegistry.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetsRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/SenderMetricsRegistry.java",
        "clients/src/main/java/org/apache/kafka/common/protocol/ApiKeys.java",
        "connect/api/src/main/java/org/apache/kafka/connect/health/ConnectClusterDetails.java",
        "connect/api/src/main/java/org/apache/kafka/connect/health/ConnectClusterState.java",
        "connect/api/src/main/java/org/apache/kafka/connect/transforms/Transformation.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectMetricsRegistry.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSinkTask.java",
        "core/src/test/java/kafka/test/junit/ClusterTestExtensions.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/util/ByteUtilsBenchmark.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StateDirectoryTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsAssignmentScaleTest.java",
        "tools/src/main/java/org/apache/kafka/tools/VerifiableProducer.java"
      ]
    },
    "message": "MINOR: Do not end Javadoc comments with `**/` (#14540)\n\nReviewers: Bruno Cadonna <bruno@confluent.io>, Bill Bejeck <bill@confluent.io>, Hao Li <hli@confluent.io>, Josep Prat <josep.prat@aiven.io>",
    "epoch": 1697587864,
    "epoch_utc": null
  },
  {
    "commit": "abee8f711c5c9ab6cae80406ce8ccd65f62841ce",
    "author": "Jeff Kim",
    "author_email": "kimkb2011@gmail.com",
    "date": "Wed Oct 18 08:06:23 2023 +0900",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 17 16:06:23 2023 -0700",
    "stats": {
      "files_changed": 16,
      "insertions": 1124,
      "deletions": 51,
      "files": [
        "build.gradle",
        "checkstyle/import-control.xml",
        "checkstyle/suppressions.xml",
        "core/src/main/scala/kafka/coordinator/group/CoordinatorLoaderImpl.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/CoordinatorLoaderImplTest.scala",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/metrics/CoordinatorRuntimeMetrics.java",
        ".../src/main/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorRuntimeMetrics.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorEvent.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorLoader.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
        ".../src/main/java/org/apache/kafka/coordinator/group/runtime/MultiThreadedEventProcessor.java",
        ".../src/test/java/org/apache/kafka/coordinator/group/metrics/GroupCoordinatorRuntimeMetricsTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntimeTest.java",
        ".../src/test/java/org/apache/kafka/coordinator/group/runtime/MultiThreadedEventProcessorTest.java"
      ]
    },
    "message": "KAFKA-14519; [1/N] Implement coordinator runtime metrics (#14417)\n\nImplements the following metrics:\n\nkafka.server:type=group-coordinator-metrics,name=num-partitions,state=loading\nkafka.server:type=group-coordinator-metrics,name=num-partitions,state=active\nkafka.server:type=group-coordinator-metrics,name=num-partitions,state=failed\nkafka.server:type=group-coordinator-metrics,name=event-queue-size\nkafka.server:type=group-coordinator-metrics,name=partition-load-time-max\nkafka.server:type=group-coordinator-metrics,name=partition-load-time-avg\nkafka.server:type=group-coordinator-metrics,name=thread-idle-ratio-min\nkafka.server:type=group-coordinator-metrics,name=thread-idle-ratio-avg\nThe PR makes these metrics generic so that in the future the transaction coordinator runtime can implement the same metrics in a similar fashion.\n\nAlso, CoordinatorLoaderImpl#load will now return LoadSummary which encapsulates the start time, end time, number of records/bytes.\n\nCo-authored-by: David Jacot <djacot@confluent.io>\n\nReviewers:  Ritika Reddy <rreddy@confluent.io>, Calvin Liu <caliu@confluent.io>, David Jacot <djacot@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1697627183,
    "epoch_utc": null
  },
  {
    "commit": "e7e399b9409b42f82d7ce57b99a461c465e5849d",
    "author": "Lucas Brutschy",
    "author_email": "lbrutschy@confluent.io",
    "date": "Tue Oct 17 14:32:41 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 17 14:32:41 2023 +0200",
    "stats": {
      "files_changed": 4,
      "insertions": 54,
      "deletions": 20,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/Tasks.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TasksTest.java"
      ]
    },
    "message": "MINOR: allow removing a suspended task from task registry. (#14555)\n\nWhen we get a suspended task re-assigned in the eager rebalance protocol, we have to add the task back to the state updater so that it has a chance to catch up with its change log.\n\nThis was prevented by a check in Tasks, which disallows removing SUSPENDED tasks from the task registry. I couldn't find a reason why this must be an invariant of the task registry, so this weakens the check.\n\nThe error happens in the integration between TaskRegistry and TaskManager. However, this change anyway adds unit tests to more closely specify the intended behavior of the two modules.\n\nReviewers: Bruno Cadonna <bruno@confluent.io>",
    "epoch": 1697563961,
    "epoch_utc": null
  },
  {
    "commit": "9d04c7a0459ff4e13d9385427eb244a47a1071da",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Tue Oct 17 12:04:14 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 17 12:04:14 2023 +0200",
    "stats": {
      "files_changed": 25,
      "insertions": 70,
      "deletions": 95,
      "files": [
        "core/src/main/scala/kafka/common/UnknownCodecException.scala",
        "core/src/main/scala/kafka/server/AbstractFetcherThread.scala",
        "core/src/main/scala/kafka/server/BrokerLifecycleManager.scala",
        "core/src/main/scala/kafka/server/ClientRequestQuotaManager.scala",
        "core/src/main/scala/kafka/server/ControllerConfigurationValidator.scala",
        "core/src/main/scala/kafka/server/ControllerMutationQuotaManager.scala",
        "core/src/main/scala/kafka/server/ControllerRegistrationManager.scala",
        "core/src/main/scala/kafka/server/DelayedFetch.scala",
        "core/src/main/scala/kafka/server/DelayedOperation.scala",
        "core/src/main/scala/kafka/server/DelayedProduce.scala",
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/main/scala/kafka/server/KafkaRaftServer.scala",
        "core/src/main/scala/kafka/server/PartitionMetadataFile.scala",
        "core/src/main/scala/kafka/server/metadata/AclPublisher.scala",
        "core/src/main/scala/kafka/server/metadata/BrokerServerMetrics.scala",
        "core/src/main/scala/kafka/server/metadata/DelegationTokenPublisher.scala",
        "core/src/main/scala/kafka/server/metadata/DynamicClientQuotaPublisher.scala",
        "core/src/main/scala/kafka/server/metadata/DynamicConfigPublisher.scala",
        "core/src/main/scala/kafka/server/metadata/ScramPublisher.scala",
        "core/src/main/scala/kafka/utils/CoreUtils.scala",
        "core/src/main/scala/kafka/utils/Mx4jLoader.scala",
        "core/src/main/scala/kafka/utils/PasswordEncoder.scala",
        "core/src/main/scala/kafka/utils/Throttler.scala",
        "core/src/main/scala/kafka/utils/ToolsUtils.scala",
        "core/src/main/scala/kafka/utils/VerifiableProperties.scala"
      ]
    },
    "message": "MINOR: Various Scala cleanups in core (#14558)\n\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1697555054,
    "epoch_utc": null
  },
  {
    "commit": "9af1e74b5e94536ebf2526af82d9d585a0e1e820",
    "author": "Omnia G.H Ibrahim",
    "author_email": "o.g.h.ibrahim@gmail.com",
    "date": "Tue Oct 17 10:40:15 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 17 11:40:15 2023 +0200",
    "stats": {
      "files_changed": 12,
      "insertions": 2517,
      "deletions": 1732,
      "files": [
        "bin/kafka-topics.sh",
        "bin/windows/kafka-topics.bat",
        "build.gradle",
        "checkstyle/import-control.xml",
        "core/src/main/scala/kafka/admin/TopicCommand.scala",
        "core/src/test/scala/integration/kafka/admin/TopicCommandIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/admin/TopicCommandTest.scala",
        "tools/src/main/java/org/apache/kafka/tools/ToolsUtils.java",
        "tools/src/main/java/org/apache/kafka/tools/TopicCommand.java",
        "tools/src/test/java/org/apache/kafka/tools/ToolsTestUtils.java",
        "tools/src/test/java/org/apache/kafka/tools/TopicCommandIntegrationTest.java",
        "tools/src/test/java/org/apache/kafka/tools/TopicCommandTest.java"
      ]
    },
    "message": "KAFKA-14596: Move TopicCommand to tools (#13201)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Federico Valeri <fedevaleri@gmail.com>",
    "epoch": 1697550015,
    "epoch_utc": null
  },
  {
    "commit": "69e591db3a7329a8bb984f068596d8658a8618b3",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Mon Oct 16 20:10:31 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 16 20:10:31 2023 -0700",
    "stats": {
      "files_changed": 7,
      "insertions": 510,
      "deletions": 512,
      "files": [
        "checkstyle/import-control.xml",
        "core/src/main/scala/kafka/raft/KafkaNetworkChannel.scala",
        "core/src/main/scala/kafka/raft/RaftManager.scala",
        "core/src/test/scala/unit/kafka/raft/KafkaNetworkChannelTest.scala",
        "raft/src/main/java/org/apache/kafka/raft/KafkaNetworkChannel.java",
        "raft/src/main/java/org/apache/kafka/raft/NetworkChannel.java",
        "raft/src/test/java/org/apache/kafka/raft/KafkaNetworkChannelTest.java"
      ]
    },
    "message": "MINOR: Rewrite/Move KafkaNetworkChannel to the `raft` module (#14559)\n\nThis is now possible since `InterBrokerSend` was moved from `core` to `server-common`.\nAlso rewrite/move `KafkaNetworkChannelTest`.\n\nThe scala version of `KafkaNetworkChannelTest` passed with the changes here (before I\ndeleted it).\n\nReviewers: Justine Olshan <jolshan@confluent.io>, Jos\u00e9 Armando Garc\u00eda Sancio <jsancio@users.noreply.github.com>",
    "epoch": 1697497831,
    "epoch_utc": null
  },
  {
    "commit": "7376d2c5b1ed455eaf39dfd8443d3a67c9189a36",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Tue Oct 17 10:30:11 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 17 10:30:11 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 76,
      "deletions": 8,
      "files": [
        "docs/ops.html",
        "docs/toc.html"
      ]
    },
    "message": "MINOR: add quick start for tiered storage feature (#14528)\n\nSome users complained they don't have a way to determine if there is something wrong in the RSM plug-in they implemented, or there's something wrong in Kafka itself. Also, if there are users who just want to try the tiered storage feature out before implementing anything, it would be good we have an RSM implementation by default.\n\nPer the discussion in the KIP, there will be no default RSM implementation in Kafka, but we can use the LocalTieredStorage implemented for integration test, to resolve the issues above.\n\nReviewers: Christo Lolov <lolovc@amazon.com>, Divij Vaidya <diviv@amazon.com>, Kamal Chandraprakash <kamal.chandraprakash@gmail.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1697549411,
    "epoch_utc": null
  },
  {
    "commit": "732bffcae6ad049d894e4dffe1907e8ceeb74a60",
    "author": "Hanyu Zheng",
    "author_email": "135176127+hanyuzheng7@users.noreply.github.com",
    "date": "Mon Oct 16 17:30:05 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 16 17:30:05 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 576,
      "deletions": 75,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/integration/IQv2StoreIntegrationTest.java"
      ]
    },
    "message": "KAFKA-15569: test and add test cases in IQv2StoreIntegrationTest (#14523)\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1697488205,
    "epoch_utc": null
  },
  {
    "commit": "da314ee48c31f85e99301c37f26710f67383e8de",
    "author": "mannoopj",
    "author_email": "139923522+mannoopj@users.noreply.github.com",
    "date": "Mon Oct 16 18:22:50 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 16 15:22:50 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 18,
      "deletions": 2,
      "files": [
        "metadata/src/main/java/org/apache/kafka/controller/metrics/QuorumControllerMetrics.java",
        "metadata/src/test/java/org/apache/kafka/controller/metrics/QuorumControllerMetricsTest.java"
      ]
    },
    "message": "KAFKA-15532: non active controllers return 0 for ZkWriteBeforelag (#14478)\n\nSince only the active controller is performing the dual-write to ZK during a migration, it should be the only controller\nto report the ZkWriteBehindLag metric.\n\nCurrently, if the controller fails over during a migration, the previous active controller will incorrectly report its last\nvalue for ZkWriteBehindLag forever. Instead, it should report zero.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>, David Arthur <mumrah@gmail.com>",
    "epoch": 1697491370,
    "epoch_utc": null
  },
  {
    "commit": "5c9db5e7353372234c967e27fc6467fb49a48bab",
    "author": "dengziming",
    "author_email": "dengziming1993@gmail.com",
    "date": "Tue Oct 17 06:08:40 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 16 15:08:40 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 25,
      "deletions": 16,
      "files": [
        "core/src/main/scala/kafka/server/metadata/KRaftMetadataCache.scala",
        "core/src/test/scala/integration/kafka/server/FetchFromFollowerIntegrationTest.scala"
      ]
    },
    "message": "KAFKA-15390: Do not return fenced broker in FetchResponse.preferredReplica (#14272)\n\nDo not return fenced brokers from metadataCache.getPartitionReplicaEndpoints, since that could lead to\nthem getting used as preferred read replicas.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1697533720,
    "epoch_utc": null
  },
  {
    "commit": "1073d434ec98e64afca1979cd18d3244b133e688",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Mon Oct 16 06:37:30 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 16 06:37:30 2023 -0700",
    "stats": {
      "files_changed": 45,
      "insertions": 1857,
      "deletions": 1494,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/record/AbstractRecords.java",
        "clients/src/main/java/org/apache/kafka/common/record/Records.java",
        "clients/src/main/java/org/apache/kafka/common/utils/Utils.java",
        "clients/src/test/java/org/apache/kafka/common/utils/UtilsTest.java",
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/main/scala/kafka/log/LocalLog.scala",
        "core/src/main/scala/kafka/log/LogCleaner.scala",
        "core/src/main/scala/kafka/log/LogCleanerManager.scala",
        "core/src/main/scala/kafka/log/LogLoader.scala",
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/main/scala/kafka/log/LogSegment.scala",
        "core/src/main/scala/kafka/log/LogSegments.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/utils/CoreUtils.scala",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java",
        "core/src/test/scala/integration/kafka/api/GroupCoordinatorIntegrationTest.scala",
        "core/src/test/scala/integration/kafka/server/DynamicBrokerReconfigurationTest.scala",
        "core/src/test/scala/kafka/raft/KafkaMetadataLogTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionLockTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/log/AbstractLogCleanerIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/LocalLogTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerLagIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerParameterizedIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/log/LogLoaderTest.scala",
        "core/src/test/scala/unit/kafka/log/LogManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogSegmentTest.scala",
        "core/src/test/scala/unit/kafka/log/LogSegmentsTest.scala",
        "core/src/test/scala/unit/kafka/log/LogTestUtils.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/server/DynamicConfigChangeTest.scala",
        "core/src/test/scala/unit/kafka/server/LogOffsetTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/epoch/LeaderEpochIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/utils/CoreUtilsTest.scala",
        "core/src/test/scala/unit/kafka/utils/SchedulerTest.scala",
        "gradle/spotbugs-exclude.xml",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LazyIndex.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogSegment.java",
        ".../src/main/java/org/apache/kafka/storage/internals/log/LogSegmentOffsetOverflowException.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogSegments.java"
      ]
    },
    "message": "KAFKA-14481: Move LogSegment/LogSegments to storage module (#14529)\n\nA few notes:\n* Delete a few methods from `UnifiedLog` that were simply invoking the related method in `LogFileUtils`\n* Fix `CoreUtils.swallow` to use the passed in `logging`\n* Fix `LogCleanerParameterizedIntegrationTest` to close `log` before reopening\n* Minor tweaks in `LogSegment` for readability\n\nFor broader context on this change, please check:\n\n* KAFKA-14470: Move log layer to storage module\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1697449050,
    "epoch_utc": null
  },
  {
    "commit": "eb187745cd99e4baf2d677a9fd45bd108ef9044c",
    "author": "bachmanity1",
    "author_email": "81428651+bachmanity1@users.noreply.github.com",
    "date": "Mon Oct 16 22:12:38 2023 +0900",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 16 15:12:38 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 4,
      "deletions": 4,
      "files": [
        "docs/ops.html"
      ]
    },
    "message": "MINOR: Fix docs for ReplicationBytes(Out|In)PerSec metrics (#14228)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Taras Ledkov",
    "epoch": 1697505158,
    "epoch_utc": null
  },
  {
    "commit": "4150595b0a2e0f45f2827cebc60bcb6f6558745d",
    "author": "Hector Geraldino",
    "author_email": "hgeraldino@gmail.com",
    "date": "Mon Oct 16 05:24:52 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 16 11:24:52 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 346,
      "deletions": 353,
      "files": [
        "build.gradle",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerSinkTaskThreadedTest.java"
      ]
    },
    "message": "KAFKA-14684: Replace EasyMock/PowerMock with Mockito in WorkerSinkTaskThreadedTest (#14505)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Christo Lolov <christololov@gmail.com>",
    "epoch": 1697444692,
    "epoch_utc": null
  },
  {
    "commit": "b0b8693c725c1edd6256f707d6bee903d5d5fa19",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Mon Oct 16 15:24:36 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 16 15:24:36 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 120,
      "deletions": 30,
      "files": [
        "core/src/test/scala/unit/kafka/log/remote/RemoteIndexCacheTest.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/RemoteIndexCache.java"
      ]
    },
    "message": "KAFKA-15536: Dynamically resize remoteIndexCache (#14511)\n\nDynamically resize remoteIndexCache\n\nReviewers: Christo Lolov <lolovc@amazon.com>, Luke Chen <showuon@gmail.com>, Divij Vaidya <diviv@amazon.com>, Kamal Chandraprakash <kamal.chandraprakash@gmail.com>",
    "epoch": 1697480676,
    "epoch_utc": null
  },
  {
    "commit": "d4c661c01745e5b98027cbcc51b5a06e8b41f405",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Sun Oct 15 19:32:32 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Oct 15 19:32:32 2023 -0700",
    "stats": {
      "files_changed": 13,
      "insertions": 81,
      "deletions": 59,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java",
        "streams/src/main/java/org/apache/kafka/streams/KeyQueryMetadata.java",
        "streams/src/main/java/org/apache/kafka/streams/KeyValue.java",
        "streams/src/main/java/org/apache/kafka/streams/StoreQueryParameters.java",
        "streams/src/main/java/org/apache/kafka/streams/StreamsBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java",
        "streams/src/main/java/org/apache/kafka/streams/StreamsMetadata.java",
        "streams/src/main/java/org/apache/kafka/streams/StreamsMetrics.java",
        "streams/src/main/java/org/apache/kafka/streams/Topology.java",
        "streams/src/main/java/org/apache/kafka/streams/TopologyConfig.java",
        "streams/src/main/java/org/apache/kafka/streams/TopologyDescription.java",
        "streams/src/main/java/org/apache/kafka/streams/errors/TaskCorruptedException.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/namedtopology/NamedTopologyBuilder.java"
      ]
    },
    "message": "MINOR: cleanup warnings in Kafka Streams code base (#14549)\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>, A. Sophie Blee-Goldman <sophie@responsive.dev>",
    "epoch": 1697409152,
    "epoch_utc": null
  },
  {
    "commit": "649e2cbc8f3b13c39b2ed559f3f9e4a15013b64e",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Sun Oct 15 19:28:54 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Oct 15 19:28:54 2023 -0700",
    "stats": {
      "files_changed": 10,
      "insertions": 275,
      "deletions": 164,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/Aggregator.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/Branched.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/BranchedKStream.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/CogroupedKStream.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/Consumed.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/EmitStrategy.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/ForeachAction.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/GlobalKTable.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/Grouped.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/Initializer.java"
      ]
    },
    "message": "MINOR: Fix `Consumed` to return new object instead of `this` (#14550)\n\nWe embrace immutability and thus should return a new object instead of\n`this`, similar to other config classed we use in the DSL.\n\nSide JavaDocs cleanup for a bunch of classes.\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1697408934,
    "epoch_utc": null
  },
  {
    "commit": "1c8bb61a43d3ad1fd7a10eb3947342ceba783c4e",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Sat Oct 14 10:16:50 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Oct 14 14:46:50 2023 +0530",
    "stats": {
      "files_changed": 5,
      "insertions": 55,
      "deletions": 12,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/entities/TaskInfo.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResource.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/ConnectWorkerIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectCluster.java",
        "docs/connect.html"
      ]
    },
    "message": "KAFKA-15387: Deprecate Connect's redundant task configurations endpoint (#14361)\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Sagar Rao <sagarmeansocean@gmail.com>",
    "epoch": 1697289410,
    "epoch_utc": null
  },
  {
    "commit": "cd1b7639cbeaf615bf370ec8f52ba746b03a39a9",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Fri Oct 13 19:00:22 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Oct 13 19:00:22 2023 -0700",
    "stats": {
      "files_changed": 8,
      "insertions": 32,
      "deletions": 37,
      "files": [
        "streams/examples/src/main/java/org/apache/kafka/streams/examples/pageview/PageViewTypedDemo.java",
        "streams/examples/src/main/java/org/apache/kafka/streams/examples/pageview/PageViewUntypedDemo.java",
        "streams/examples/src/main/java/org/apache/kafka/streams/examples/pipe/PipeDemo.java",
        "streams/examples/src/main/java/org/apache/kafka/streams/examples/temperature/TemperatureDemo.java",
        "streams/examples/src/main/java/org/apache/kafka/streams/examples/wordcount/WordCountDemo.java",
        "streams/examples/src/main/java/org/apache/kafka/streams/examples/wordcount/WordCountProcessorDemo.java",
        "streams/examples/src/main/java/org/apache/kafka/streams/examples/wordcount/WordCountTransformerDemo.java",
        "streams/examples/src/test/java/org/apache/kafka/streams/examples/docs/DeveloperGuideTesting.java"
      ]
    },
    "message": "MINOR: cleanup some warning in Kafka Streams examples (#14547)\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1697234422,
    "epoch_utc": null
  },
  {
    "commit": "364bc3c5c42b7854265d6f3a051217643a5e67a3",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Fri Oct 13 09:28:39 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Oct 13 09:28:39 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "docs/streams/tutorial.html"
      ]
    },
    "message": "MINOR: Fix directory name inconsistency in the Kafka Streams tutorial (#14541)\n\nReviewers: Bruno Cadonna <bruno@confluent.io>",
    "epoch": 1697200119,
    "epoch_utc": null
  },
  {
    "commit": "dc0f0db86428ef59ac72a232b6b390aa000097c4",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Fri Oct 13 09:28:00 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Oct 13 09:28:00 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "storage/src/main/java/org/apache/kafka/storage/internals/log/AbstractIndex.java"
      ]
    },
    "message": "MINOR: fix typo (#14542)\n\nReviewers: Bruno Cadonna <bruno@confluent.io>",
    "epoch": 1697200080,
    "epoch_utc": null
  },
  {
    "commit": "cc951e3f8175b9ad2c785e4058d4a9765aceb682",
    "author": "Satish Duggana",
    "author_email": "satishd@apache.org",
    "date": "Fri Oct 13 08:21:34 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Oct 13 20:51:34 2023 +0530",
    "stats": {
      "files_changed": 5,
      "insertions": 18,
      "deletions": 6,
      "files": [
        "tests/kafkatest/tests/client/client_compatibility_features_test.py",
        "tests/kafkatest/tests/client/client_compatibility_produce_consume_test.py",
        "tests/kafkatest/tests/core/compatibility_test_new_broker_test.py",
        "tests/kafkatest/tests/core/downgrade_test.py",
        "tests/kafkatest/tests/core/upgrade_test.py"
      ]
    },
    "message": "KAFKA-15593: Add 3.6 to core upgrade and compatibility tests (#14527)\n\nReviewers:  Christo Lolov <lolovc@amazon.com>, Josep Prat <josep.prat@aiven.io>",
    "epoch": 1697196094,
    "epoch_utc": null
  },
  {
    "commit": "a86681b6f9539f8c92253bf4e6722d448412d176",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Fri Oct 13 13:50:03 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Oct 13 17:20:03 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 91,
      "deletions": 30,
      "files": [
        "docs/upgrade.html"
      ]
    },
    "message": "MINOR: Add upgrade documentation for 3.6.0 (#14534)\n\nThis change adds the upgrade documentation for 3.6.0 and fixes the position of the notable changes in 3.5.0.\nIn previous releases, notable changes always come after the upgrade instructions.\n\nReviewers:  Luke Chen <showuon@gmail.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1697215803,
    "epoch_utc": null
  },
  {
    "commit": "4bad90835b1bb7a4fe63410e3ddbb11d0eec4a4d",
    "author": "Omnia G.H Ibrahim",
    "author_email": "o.g.h.ibrahim@gmail.com",
    "date": "Fri Oct 13 11:53:09 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Oct 13 12:53:09 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 69,
      "deletions": 4,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorUtils.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorUtilsTest.java"
      ]
    },
    "message": "KAFKA-15465: Don't throw if MirrorMaker not authorized to create internal topics. (#14388)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Ahmed Hibot",
    "epoch": 1697208789,
    "epoch_utc": null
  },
  {
    "commit": "58dfa1cc815e3bd36e67407b190c60025338f355",
    "author": "Lianet Magrans",
    "author_email": "98415067+lianetm@users.noreply.github.com",
    "date": "Fri Oct 13 03:59:57 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Oct 13 09:59:57 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 41,
      "deletions": 9,
      "files": [
        "checkstyle/suppressions.xml",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumerTest.java"
      ]
    },
    "message": "MINOR - KAFKA-15550: Validation for negative target times in offsetsForTimes (#14503)\n\nThe current KafkaConsumer offsetsForTimes fails with IllegalArgumentException if negative target timestamps are provided as arguments. This change includes the same validation and tests for the new consumer implementation (and some improved comments for the updateFetchPositions)\n\nReviewer: Lucas Brutschy <lbrutschy@confluent.io>",
    "epoch": 1697180397,
    "epoch_utc": null
  },
  {
    "commit": "13b2edd9af802d7db99815e834b062aafc3e2313",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Thu Oct 12 17:30:23 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 12 17:30:23 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 3,
      "deletions": 3,
      "files": [
        "LICENSE-binary",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "KAFKA-15596: Upgrade ZooKeeper to 3.8.3 (#14535)\n\n\nReviewers: Luke Chen <showuon@gmail.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1697142623,
    "epoch_utc": null
  },
  {
    "commit": "4cf86c5d2f6355c5684ecedeb1bf96e90877244d",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Thu Oct 12 05:09:10 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 12 14:09:10 2023 +0200",
    "stats": {
      "files_changed": 12,
      "insertions": 67,
      "deletions": 26,
      "files": [
        "build.gradle",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java",
        "clients/src/main/java/org/apache/kafka/common/config/provider/FileConfigProvider.java",
        "core/src/main/scala/kafka/metrics/LinuxIoMetricsCollector.scala",
        "core/src/main/scala/kafka/server/PartitionMetadataFile.scala",
        "generator/src/main/java/org/apache/kafka/message/MessageGenerator.java",
        "gradle/dependencies.gradle",
        "gradle/spotbugs-exclude.xml",
        "raft/src/main/java/org/apache/kafka/raft/FileBasedStateStore.java",
        "raft/src/main/java/org/apache/kafka/raft/ReplicatedCounter.java",
        "server-common/src/main/java/org/apache/kafka/server/common/CheckpointFile.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/OffsetCheckpoint.java"
      ]
    },
    "message": "KAFKA-15492: Upgrade and enable spotbugs when building with Java 21 (#14533)\n\nSpotbugs was temporarily disabled as part of KAFKA-15485 to support Kafka build with JDK 21. This PR upgrades the spotbugs version to 4.8.0 which adds support for JDK 21 and enables it's usage on build again.\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1697098150,
    "epoch_utc": null
  },
  {
    "commit": "c7f730d9d9a95ce43b19a8af06e9f5be5e25609b",
    "author": "Bruno Cadonna",
    "author_email": "cadonna@apache.org",
    "date": "Thu Oct 12 13:24:54 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 12 13:24:54 2023 +0200",
    "stats": {
      "files_changed": 4,
      "insertions": 57,
      "deletions": 5,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/ReadOnlyTask.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/ReadOnlyTaskTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java"
      ]
    },
    "message": "MINOR: Only commit running active and standby tasks when tasks corrupted (#14508)\n\nWhen tasks are found corrupted, Kafka Streams tries to commit\nthe non-corrupted tasks before closing and reviving the corrupted\nactive tasks. Besides active running tasks, Kafka Streams tries\nto commit restoring active tasks and standby tasks. However,\nrestoring active tasks do not need to be committed since they\ndo not have offsets to commit and the current code does not\nwrite a checkpoint. Furthermore, trying to commit restoring\nactive tasks with the state updater enabled results in the\nfollowing error:\n\njava.lang.UnsupportedOperationException: This task is read-only\nat org.apache.kafka.streams.processor.internals.ReadOnlyTask.commitNeeded(ReadOnlyTask.java:209)\n...\n\nsince commitNeeded() is not a read-only method for active tasks.\n\nIn future, we can consider writing a checkpoint for active\nrestoring tasks in this situation. Additionally, we should\nfix commitNeeded() in active tasks to be read-only.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>, Lucas Brutschy <lbrutschy@confluent.io>",
    "epoch": 1697127894,
    "epoch_utc": null
  },
  {
    "commit": "41c0d44402bc7d0ff872de9a43f2669da4414d2b",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Thu Oct 12 09:55:40 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 12 14:25:40 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 185,
      "deletions": 0,
      "files": [
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/MemoryConfigBackingStoreTest.java"
      ]
    },
    "message": "KAFKA-15570: Add unit tests for MemoryConfigBackingStore (#14518)\n\nReviewers: Chris Egerton <chrise@aiven.io>, Kalpesh Patel <kpatel@confluent.io>",
    "epoch": 1697115340,
    "epoch_utc": null
  },
  {
    "commit": "7b5d640cc656443a078bda096d01910b3edfdb37",
    "author": "Jeff Kim",
    "author_email": "kimkb2011@gmail.com",
    "date": "Thu Oct 12 02:45:13 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 11 23:45:13 2023 -0700",
    "stats": {
      "files_changed": 19,
      "insertions": 1063,
      "deletions": 64,
      "files": [
        "checkstyle/suppressions.xml",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/Group.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorConfig.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorShard.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/OffsetExpirationCondition.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/OffsetExpirationConditionImpl.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/OffsetMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroup.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/generic/GenericGroup.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorConfigTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorServiceTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorShardTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetExpirationConditionImplTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroupTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/generic/GenericGroupTest.java"
      ]
    },
    "message": "KAFKA-14987; Implement Group/Offset expiration in the new coordinator (#14467)\n\nThis patch implements the groups and offsets expiration in the new group coordinator.\n\nReviewers: Ritika Reddy <rreddy@confluent.io>, David Jacot <djacot@confluent.io>",
    "epoch": 1697089513,
    "epoch_utc": null
  },
  {
    "commit": "4302653d9efa0906f4b9a2f59798dd55b8510ef9",
    "author": "Satish Duggana",
    "author_email": "satishd@apache.org",
    "date": "Wed Oct 11 22:37:10 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 12 11:07:10 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 1,
      "files": [
        "docs/documentation.html"
      ]
    },
    "message": "MINOR Updated documentation.html to have 3.5 and 3.6 previous release doc links (#14510)\n\nReviewers: Luke Chen <showuon@gmail.com>, kpatelatwork <kpatel@confluent.io>",
    "epoch": 1697074630,
    "epoch_utc": null
  },
  {
    "commit": "aec07f76d763068feb6c1d19e4fc326cffd9c620",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Thu Oct 12 05:12:44 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 12 11:12:44 2023 +0800",
    "stats": {
      "files_changed": 4,
      "insertions": 17,
      "deletions": 11,
      "files": [
        "docs/upgrade.html",
        "metadata/src/main/java/org/apache/kafka/controller/FeatureControlManager.java",
        "metadata/src/test/java/org/apache/kafka/controller/FeatureControlManagerTest.java",
        "tools/src/test/java/org/apache/kafka/tools/FeatureCommandTest.java"
      ]
    },
    "message": "KAFKA-15537: Fix metadata downgrade documentation (#14484)\n\nIn KIP-778 we introduced the \"unsafe\" (lossy) downgrade in case metadata has changes in one of the versions between target and current, as defined in MetadataVersion.\n\nThe documentation says it is possible:\n\n\"Note that the cluster metadata version cannot be downgraded to a pre-production 3.0.x, 3.1.x, or 3.2.x version once it has been upgraded. However, it is possible to downgrade to production versions such as 3.3-IV0, 3.3-IV1, etc.\"\n\nThe command line tool shows that this doesn't work:\n\nbin/kafka-features.sh --bootstrap-server :9092 downgrade --metadata 3.4 --unsafe\nCould not downgrade metadata.version to 8. Invalid metadata.version 8. Unsafe metadata downgrade is not supported in this version.\n1 out of 1 operation(s) failed.\n\nIn addition to unsafe, also safe metadata downgrades are not supported in practice. For example, when you upgrade to 3.5, you land on 3.5-IV2 as metadata version, which has metadata changes and won't let you to downgrade. This is true for every other release at the moment.\n\nThis change fixes the documentation to reflect that, and improves the error messages.\n\nSigned-off-by: Federico Valeri <fedevaleri@gmail.com>\n\nReviewers: Luke Chen <showuon@gmail.com>, Jakub Scholz <github@scholzj.com>",
    "epoch": 1697098364,
    "epoch_utc": null
  },
  {
    "commit": "7d1847c4c34abc5dc5657ab8524a5f9d99077e41",
    "author": "Levani Kokhreidze",
    "author_email": "levani.kokhreidze@transferwise.com",
    "date": "Thu Oct 12 02:14:25 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 11 16:14:25 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 3,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java"
      ]
    },
    "message": "MINOR: Fix KafkaStreams#streamThreadLeaveConsumerGroup logging (#14526)\n\nFixes logging for KafkaStreams#streamThreadLeaveConsumerGroup.\n\nIn order not to lose the trace of the whole exception, passing Exception e as a second argument, while message is pre-formatted and passed as string as a first argument. With this, we won't loose the stack trace of the exception.\n\nReviewers: Anna Sophie Blee-Goldman <sophie@responsive.dev>",
    "epoch": 1697087665,
    "epoch_utc": null
  },
  {
    "commit": "5dd155f350e6f9092bd7734dbf0600dc4af80bfe",
    "author": "Levani Kokhreidze",
    "author_email": "levani.kokhreidze@transferwise.com",
    "date": "Thu Oct 12 02:04:34 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 11 16:04:34 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 214,
      "deletions": 4,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/RestoreIntegrationTest.java"
      ]
    },
    "message": "KAFKA-15571: `StateRestoreListener#onRestoreSuspended` is never called because `DelegatingStateRestoreListener` doesn't implement `onRestoreSuspended` (#14519)\n\nWith https://issues.apache.org/jira/browse/KAFKA-10575 StateRestoreListener#onRestoreSuspended was added. But local tests show that it is never called because DelegatingStateRestoreListener was not updated to call a new method\n\nReviewers: Anna Sophie Blee-Goldman <sophie@responsive.dev>, Bruno Cadonna <cadonna@confluent.io>",
    "epoch": 1697087074,
    "epoch_utc": null
  },
  {
    "commit": "674285b86be395c75aa9e946a79c85b751f6d046",
    "author": "dengziming",
    "author_email": "dengziming1993@gmail.com",
    "date": "Thu Oct 12 06:22:10 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 11 15:22:10 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 15,
      "deletions": 15,
      "files": [
        "core/src/test/scala/unit/kafka/server/FetchRequestTest.scala"
      ]
    },
    "message": "MINOR: Disable flaky kraft-test in FetchRequestTest (#14525)\n\nWe introduced a bunch of flaky tests in #14295 , which are normal when running locally but will always fail in CI, lets rollback them unless we find the cause before the end of today.\n\nReviewers: Luke Chen <showuon@gmail.com>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1697102530,
    "epoch_utc": null
  },
  {
    "commit": "d46781d4db3f9330c64a01078b96637f75a02419",
    "author": "Calvin Liu",
    "author_email": "83986057+CalvinConfluent@users.noreply.github.com",
    "date": "Wed Oct 11 09:44:36 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 11 09:44:36 2023 -0700",
    "stats": {
      "files_changed": 5,
      "insertions": 175,
      "deletions": 31,
      "files": [
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/main/scala/kafka/cluster/Replica.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/cluster/ReplicaTest.scala",
        "core/src/test/scala/unit/kafka/server/IsrExpirationTest.scala"
      ]
    },
    "message": "KAFKA-15221; Fix the race between fetch requests from a rebooted follower. (#14053)\n\nA race can happen in the following sequence.\n1. Stale Fetch triggers the ISR expansion.\n2. The first time we check whether the replica is eligible. Catch up? Yes. broker epoch match? Yes (the metadata cache update has not happened)\n3. Metadata cache update happens.\n4. During the second time check the eligibility\na. Catch up? Yes\nb. A new fetch request comes in. It cancels the replica caught-up and updates the broker epoch\nc. broker epoch match? Yes. New fetch epoch = new metadata cache epoch\n5. Send an AlterPartition request with the new broker epoch.\n----------------\nThe solution is to make sure that the 4.a) ,4.c) and 5) use the same replica state.\n\nReviewers: David Mao <47232755+splett2@users.noreply.github.com>, David Jacot <djacot@confluent.io>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1697028276,
    "epoch_utc": null
  },
  {
    "commit": "cc66d1feee6fa4889a7ffb37209e5f1d5c0c8ca2",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Wed Oct 11 18:13:00 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 11 18:13:00 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 55,
      "deletions": 3,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/config/ConfigDef.java"
      ]
    },
    "message": "MINOR: Add javadoc to all ConfigDef.Types values (#14515)\n\n\nReviewers: Josep Prat <josep.prat@aiven.io>",
    "epoch": 1697058780,
    "epoch_utc": null
  },
  {
    "commit": "1983ebebc708a5fdd81671646e1ee8b51f0cd571",
    "author": "Arnout Engelen",
    "author_email": "arnout@bzzt.net",
    "date": "Wed Oct 11 11:18:19 2023 -0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 11 16:18:19 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 34,
      "deletions": 0,
      "files": [
        "build.gradle",
        "gradle/dependencies.gradle",
        "gradle/resources/dependencycheck-suppressions.xml"
      ]
    },
    "message": "MINOR: fix dependencycheck warnings (#14476)\n\nAdd suppressions and skip benchmarking/testing projects\n\nReviewers: Josep Prat <josep.prat@aiven.io>",
    "epoch": 1697033899,
    "epoch_utc": null
  },
  {
    "commit": "a0e3d01fefc172dfc4717502b008536156480e7b",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Wed Oct 11 10:12:31 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 11 11:12:31 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 103,
      "deletions": 200,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredTimestampedKeyValueStoreTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/ReadOnlyWindowStoreFacadeTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/TimestampedWindowStoreBuilderTest.java"
      ]
    },
    "message": "KAFKA-14133: Move MeteredTimestampedKeyValueStoreTest, ReadOnlyWindowStoreFacadeTest and TimestampedWindowStoreBuilderTest to Mockito (#14412)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Yash Mayya <yash.mayya@gmail.com>",
    "epoch": 1697029951,
    "epoch_utc": null
  },
  {
    "commit": "3c9031c62455e4eaa3f5d16a3bba94d7e3159fb6",
    "author": "Gantigmaa Selenge",
    "author_email": "39860586+tinaselenge@users.noreply.github.com",
    "date": "Wed Oct 11 04:41:46 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 11 11:41:46 2023 +0800",
    "stats": {
      "files_changed": 3,
      "insertions": 16,
      "deletions": 5,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java",
        "core/src/test/scala/integration/kafka/api/PlaintextAdminIntegrationTest.scala"
      ]
    },
    "message": "KAFKA-15507: Make AdminClient throw non-retriable exception for a new call while closing (#14455)\n\nAdminClient will throw IllegalStateException instead of TimeoutException if it receives new calls while closing down. This is more consistent with how Consumer and Producer clients handle new calls after closed down.\n\nReviewers: Luke Chen <showuon@gmail.com>, Kirk True <kirk@kirktrue.pro>, Kamal Chandraprakash <kamal.chandraprakash@gmail.com>, vamossagar12 <sagarmeansocean@gmail.com>",
    "epoch": 1697010106,
    "epoch_utc": null
  },
  {
    "commit": "99ce2e081c575eeb6f02a046e3b6530ca6402ad2",
    "author": "Arpit Goyal",
    "author_email": "59436466+iit2009060@users.noreply.github.com",
    "date": "Wed Oct 11 08:28:17 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 11 10:58:17 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 260,
      "deletions": 19,
      "files": [
        "core/src/test/scala/unit/kafka/log/remote/RemoteIndexCacheTest.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/RemoteIndexCache.java"
      ]
    },
    "message": "KAFKA-15169: Added TestCase in RemoteIndexCache (#14482)\n\nest Cases Covered\n\n1. Index Files already exist on disk but not in Cache i.e. RemoteIndexCache should not call remoteStorageManager to fetch it instead cache it from the local index file present.\n2. RSM returns CorruptedIndex File i.e. RemoteIndexCache should throw CorruptedIndexException instead of successfull execution.\n3. Deleted Suffix Indexes file already present on disk i.e. If cleaner thread is slow , then there is a chance of deleted index files present on the disk while in parallel same index Entry is invalidated. To understand more refer https://issues.apache.org/jira/browse/KAFKA-15169\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Luke Chen <showuon@gmail.com>, Kamal Chandraprakash<kamal.chandraprakash@gmail.com>",
    "epoch": 1697023697,
    "epoch_utc": null
  },
  {
    "commit": "6e164bb9ace3ea7a1a9542904d1a01c9fd3a1b48",
    "author": "Aman Singh",
    "author_email": "103091061+singhnama@users.noreply.github.com",
    "date": "Tue Oct 10 13:19:13 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 10 13:19:13 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 29,
      "deletions": 4,
      "files": [
        "core/src/main/scala/kafka/admin/ConfigCommand.scala",
        "core/src/test/scala/unit/kafka/admin/ConfigCommandTest.scala"
      ]
    },
    "message": "KAFKA-14927: Add validation to be config keys in ConfigCommand tool (#14514)\n\nAdded validation in ConfigCommand tool, only allow characters\n'([a-z][A-Z][0-9][._-])*' for config keys.\n\nReviewers: Manikumar Reddy <manikumar.reddy@gmail.com>",
    "epoch": 1696954753,
    "epoch_utc": null
  },
  {
    "commit": "6c23a900fcbb2b8c2c092a355921b3424041ab4f",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Mon Oct 9 08:35:42 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 9 08:35:42 2023 -0700",
    "stats": {
      "files_changed": 12,
      "insertions": 985,
      "deletions": 129,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AssignorSelection.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThread.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/HeartbeatRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/MembershipManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/MembershipManagerImpl.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/RequestManagers.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ErrorBackgroundEvent.java",
        "clients/src/main/resources/common/message/ConsumerGroupHeartbeatRequest.json",
        "clients/src/test/java/org/apache/kafka/clients/consumer/AssignorSelectionTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThreadTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/HeartbeatRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/MembershipManagerImplTest.java"
      ]
    },
    "message": "KAFKA-15278: Implement HeartbeatRequestManager to handle heartbeat requests (#14364)\n\nHeartbeatRequestManager is responsible for handling the ConsumerGroupHeartbeat request and response.  The manager has the following responsibilities:\n1. Sending the request to the GroupCoordinator when it is possible and necessary\n2. Handling the response and update the `MembershipManagerImpl` based on the error/response it receives.\n3. Handles request retries and fatal failures\n\nFor Successful heartbeat response:\n- Updates the MembershipManager\n\nFor Failures handling:\n- Retriables Errors: backoff and retries\n- Fenced: Transition to a fenced state and reset the epoch, and retry in the next poll\n- Fatal: Propagate the error to the user and fail the state machine\n\nReviewers: Kirk True <ktrue@confluent.io>, Lianet Magrans <lianetmr@gmail.com>, David Jacot <djacot@confluent.io>",
    "epoch": 1696851342,
    "epoch_utc": null
  },
  {
    "commit": "c223a9c3761f796468ccfdae9e177e764ab6a965",
    "author": "atu-sharm",
    "author_email": "131497429+atu-sharm@users.noreply.github.com",
    "date": "Mon Oct 9 16:00:46 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 9 12:30:46 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 6,
      "deletions": 6,
      "files": [
        "build.gradle",
        "gradle.properties",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "KAFKA-15521: Refactor build.gradle to align gradle swagger plugin with swagger dependencies (#14473)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1696878046,
    "epoch_utc": null
  },
  {
    "commit": "bf51a50a564ee43d3515c82fc706f17325c4602f",
    "author": "mannoopj",
    "author_email": "139923522+mannoopj@users.noreply.github.com",
    "date": "Mon Oct 9 04:07:22 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 9 16:07:22 2023 +0800",
    "stats": {
      "files_changed": 8,
      "insertions": 166,
      "deletions": 115,
      "files": [
        "core/src/test/scala/integration/kafka/admin/ListOffsetsIntegrationTest.scala",
        "core/src/test/scala/integration/kafka/api/LogAppendTimeTest.scala",
        "core/src/test/scala/integration/kafka/api/ProducerFailureHandlingTest.scala",
        "core/src/test/scala/unit/kafka/integration/MetricsDuringTopicCreationDeletionTest.scala",
        "core/src/test/scala/unit/kafka/server/FetchRequestMaxBytesTest.scala",
        "core/src/test/scala/unit/kafka/server/FetchRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/OffsetFetchRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/ProduceRequestTest.scala"
      ]
    },
    "message": "MINOR: KRaft support for Integration Tests (#14295)\n\nEnable kraft mode for some producer/fetcher tests.",
    "epoch": 1696835242,
    "epoch_utc": null
  },
  {
    "commit": "1c3eb4395a15cf4f45b6dc0d39effb3dc087f5a4",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Sun Oct 8 15:54:09 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Oct 8 13:24:09 2023 +0530",
    "stats": {
      "files_changed": 6,
      "insertions": 228,
      "deletions": 43,
      "files": [
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/main/scala/kafka/server/DynamicBrokerConfig.scala",
        "core/src/test/scala/unit/kafka/log/remote/RemoteIndexCacheTest.scala",
        "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala",
        "storage/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteLogManagerConfig.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/RemoteIndexCache.java"
      ]
    },
    "message": "KAFKA-14912:Add a dynamic config for remote index cache size (#14381)\n\nReviewers: Luke Chen <showuon@gmail.com>, Satish Duggana <satishd@apache.org>, Kamal Chandraprakash<kamal.chandraprakash@gmail.com>, Divij Vaidya <diviv@amazon.com>, Subhrodip Mohanta <hello@subho.xyz>",
    "epoch": 1696791249,
    "epoch_utc": null
  },
  {
    "commit": "354c9ca0ce676a7c638da36e5174cf96a2b19533",
    "author": "Satish Duggana",
    "author_email": "satishd@apache.org",
    "date": "Sat Oct 7 16:59:06 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Oct 8 05:29:06 2023 +0530",
    "stats": {
      "files_changed": 3,
      "insertions": 6,
      "deletions": 1,
      "files": [
        "gradle/dependencies.gradle",
        "tests/docker/Dockerfile",
        "vagrant/base.sh"
      ]
    },
    "message": "MINOR Added 3.6.0 to system tests (#14488)\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1696708746,
    "epoch_utc": null
  },
  {
    "commit": "7e1c453af9533aba8c19da2d08ce6595c1441fc0",
    "author": "Igor Soarez",
    "author_email": "i@soarez.me",
    "date": "Fri Oct 6 10:03:40 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Oct 6 13:03:40 2023 -0400",
    "stats": {
      "files_changed": 11,
      "insertions": 178,
      "deletions": 36,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/Uuid.java",
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/main/scala/kafka/server/BrokerMetadataCheckpoint.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/tools/StorageTool.scala",
        "core/src/test/scala/kafka/server/BrokerMetadataCheckpointTest.scala",
        "core/src/test/scala/unit/kafka/log/LogManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaRaftServerTest.scala",
        "core/src/test/scala/unit/kafka/server/ServerGenerateBrokerIdTest.scala",
        "core/src/test/scala/unit/kafka/server/ServerGenerateClusterIdTest.scala",
        "core/src/test/scala/unit/kafka/tools/StorageToolTest.scala"
      ]
    },
    "message": "KAFKA-15356: Generate and persist directory IDs (#14291)\n\nReviewers: Proven Provenzano <pprovenzano@confluent.io>, Ron Dagostino <rdagostino@confluent.io>",
    "epoch": 1696597420,
    "epoch_utc": null
  },
  {
    "commit": "4a6e6c7d8c2d2226046ca88027f2cc44bbea3bf6",
    "author": "Dongnuo Lyu",
    "author_email": "139248811+dongnuo123@users.noreply.github.com",
    "date": "Fri Oct 6 05:25:17 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Oct 6 02:25:17 2023 -0700",
    "stats": {
      "files_changed": 9,
      "insertions": 524,
      "deletions": 4,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/DescribeGroupsRequest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/DescribeGroupsRequestTest.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorShard.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/generic/GenericGroupMember.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorServiceTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/generic/GenericGroupMemberTest.java"
      ]
    },
    "message": "KAFKA-14504: Implement DescribeGroups API (#14462)\n\nThis patch implements DescribeGroups API in the new group coordinator.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1696580717,
    "epoch_utc": null
  },
  {
    "commit": "3c054833acd90a0df647a1f9a1407c2219983369",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Fri Oct 6 00:49:31 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 5 21:49:31 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 56,
      "deletions": 49,
      "files": [
        "core/src/main/scala/kafka/zk/ZkMigrationClient.scala",
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/zk/migration/ZkMigrationClientTest.scala"
      ]
    },
    "message": "KAFKA-15552 Fix Producer ID ZK migration (#14506)\n\nThis patch fixes a problem where we migrate the current producer ID batch to KRaft instead of the next producer ID batch. Since KRaft stores the next batch in the log, we end up serving up a duplicate batch to the first caller of AllocateProducerIds once the KRaft controller has taken over.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1696564171,
    "epoch_utc": null
  },
  {
    "commit": "cdf726fd358f9be3438ceefb01073ab40a31a8b4",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Thu Oct 5 10:23:23 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 5 10:23:23 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 14,
      "deletions": 13,
      "files": [
        "tests/docker/Dockerfile",
        "tests/kafkatest/version.py"
      ]
    },
    "message": "HOTIFX: fix Kafka versions for system tests (#14490)\n\nReviewers: Luke Chen <showuon@gmail.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1696512203,
    "epoch_utc": null
  },
  {
    "commit": "d817b1b5900e16d76ceae570d6e93d4d57783b73",
    "author": "Mayank Shekhar Narula",
    "author_email": "42991652+msn-tldr@users.noreply.github.com",
    "date": "Thu Oct 5 15:11:47 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 5 09:11:47 2023 -0500",
    "stats": {
      "files_changed": 8,
      "insertions": 603,
      "deletions": 107,
      "files": [
        "checkstyle/suppressions.xml",
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/ProducerBatch.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/RecordAccumulator.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/Sender.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/ProducerBatchTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/RecordAccumulatorTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/SenderTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java"
      ]
    },
    "message": "KAFKA-15415: On producer-batch retry, skip-backoff on a new leader (#14384)\n\nWhen producer-batch is being retried, new-leader is known for the partition Vs the leader used in last attempt, then it is worthwhile to retry immediately to this new leader. A partition-leader is considered to be newer, if the epoch has advanced.\n\nReviewers: Walker Carlson <wcarlson@apache.org>, Kirk True <kirk@kirktrue.pro>, Andrew Schofield <andrew_schofield@uk.ibm.com",
    "epoch": 1696529507,
    "epoch_utc": null
  },
  {
    "commit": "fbc39bcdbe5ebcb07435f467b77f4b7df2e910f4",
    "author": "kpatelatwork",
    "author_email": "kpatel@confluent.io",
    "date": "Wed Oct 4 23:49:15 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Oct 5 10:19:15 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 8,
      "deletions": 4,
      "files": [
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorMakerConfigTest.java"
      ]
    },
    "message": "KAFKA-15547: Fix thread leak in MirrorMakerConfigTest (#14487)\n\nReviewers: Akhilesh Chaganti <akhileshchg@users.noreply.github.com>, Rajini Sivaram <rajinisivaram@googlemail.com>, Yash Mayya <yash.mayya@gmail.com>",
    "epoch": 1696474155,
    "epoch_utc": null
  },
  {
    "commit": "b5d880a707e38dac47d69ccaa26e491592b2a82a",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Wed Oct 4 13:28:30 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 4 13:28:30 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 10,
      "deletions": 0,
      "files": [
        "docs/ops.html"
      ]
    },
    "message": "KAFKA-15330: Add missing documentation of metrics introduced as part of KAFKA-15028 (#14480)\n\nI've added details for VerificationFailureRate and VerificationTimeMs.\n\nI considered adding the documentation for the AddPartitionsToTxnVerification metrics, but I noticed that all the request metrics simply listed Produce|FetchConsumer|FetchFollower. If we don't already report the AddPartitionsToTxn request metrics in this file, it doesn't make sense to add the verification variant. (As well as all the other APIs we report)\n\nFiled a followup jira if we want to redo that whole section.\n\nReviewers: Reviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1696436910,
    "epoch_utc": null
  },
  {
    "commit": "3e36671fd9501e23971f11a15e00e053e75afc12",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Wed Oct 4 17:50:40 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 4 22:20:40 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 14,
      "deletions": 14,
      "files": [
        ".asf.yaml"
      ]
    },
    "message": "MINOR: Update the list of collaborators (#14486)\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Josep Prat <josep.prat@aiven.io>",
    "epoch": 1696452640,
    "epoch_utc": null
  },
  {
    "commit": "c32d2338a7e0079e539b74eb16f0095380a1ce85",
    "author": "Bruno Cadonna",
    "author_email": "cadonna@apache.org",
    "date": "Wed Oct 4 13:58:44 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 4 13:58:44 2023 +0200",
    "stats": {
      "files_changed": 18,
      "insertions": 356,
      "deletions": 157,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/ReadOnlyTask.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskExecutor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/EosV2UpgradeIntegrationTest.java",
        ".../apache/kafka/streams/integration/KTableKTableForeignKeyInnerJoinCustomPartitionerIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/LagFetchIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/NamedTopologyIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/PurgeRepartitionTopicIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/utils/IntegrationTestUtils.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/DefaultStateUpdaterTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/ReadOnlyTaskTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StoreChangelogReaderTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskExecutorTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java"
      ]
    },
    "message": "KAFKA-10199: Enable state updater by default (#13927)\n\nNow that the implementation for the state updater is done, we can enable it by default.\n\nThis PR enables the state updater by default and fixes code that made assumptions that are not true when the state updater is enabled (mainly tests).\n\nReviewers: Lucas Brutschy <lbrutschy@confluent.io>, Matthias J. Sax <matthias@confluent.io>, Walker Carlson <wcarlson@confluent.io>",
    "epoch": 1696438724,
    "epoch_utc": null
  },
  {
    "commit": "59e59fc545b17c2893120d616ea4ed170af730b8",
    "author": "Kirk True",
    "author_email": "kirk@kirktrue.pro",
    "date": "Wed Oct 4 03:09:16 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 4 03:09:16 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 18,
      "deletions": 12,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/ConsumerGroupHeartbeatRequest.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java"
      ]
    },
    "message": "MINOR: Add LEAVE_GROUP_EPOCH to GroupMetadataManager (#14463)\n\nReplacing the use a hardcoded -1 with a constant (`LEAVE_GROUP_EPOCH`) that provides more clarity. Since static members also have a magic number (-2), this will motivate future commits to use constants instead of hardcoded values.\n\nReviewers: Sagar Rao <sagarmeansocean@gmail.com>, David Jacot <djacot@confluent.io>",
    "epoch": 1696399756,
    "epoch_utc": null
  },
  {
    "commit": "a12f9f97c98f31d8d957ff9b816c4f73b84e0d9d",
    "author": "Dongnuo Lyu",
    "author_email": "139248811+dongnuo123@users.noreply.github.com",
    "date": "Wed Oct 4 05:30:45 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Oct 4 02:30:45 2023 -0700",
    "stats": {
      "files_changed": 16,
      "insertions": 1201,
      "deletions": 61,
      "files": [
        "checkstyle/suppressions.xml",
        "clients/src/main/java/org/apache/kafka/common/requests/DeleteGroupsRequest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/DeleteGroupsRequestTest.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/Group.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorShard.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/OffsetMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroup.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/generic/GenericGroup.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorServiceTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorShardTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroupTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/generic/GenericGroupTest.java"
      ]
    },
    "message": "KAFKA-14506: Implement DeleteGroups API and OffsetDelete API (#14408)\n\nThis patch implements DeleteGroups and OffsetDelete API in the new group coordinator.\n\nReviewers: yangy0000, Ritika Reddy <rreddy@confluent.io>, Jeff Kim <jeff.kim@confluent.io>, David Jacot <djacot@confluent.io>",
    "epoch": 1696408245,
    "epoch_utc": null
  },
  {
    "commit": "2c925e9f334b0aa6c52df343c2394f00f86ac2ff",
    "author": "David Mao",
    "author_email": "47232755+splett2@users.noreply.github.com",
    "date": "Tue Oct 3 17:32:44 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 3 17:32:44 2023 -0700",
    "stats": {
      "files_changed": 12,
      "insertions": 127,
      "deletions": 190,
      "files": [
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/raft/KafkaMetadataLog.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/other/kafka/StressTestLog.scala",
        "core/src/test/scala/unit/kafka/log/AbstractLogCleanerIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerParameterizedIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/server/MockFetcherThread.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaFetcherThreadTest.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogAppendInfo.java"
      ]
    },
    "message": "KAFKA-15526: Simplify the LogAppendInfo class (#14470)\n\nThe LogAppendInfo class is a bit bloated in terms of class fields. That's because it is used as an umbrella class for both leader log appends and follower log appends and needs to carry fields for both. This makes the constructor for the class a bit cludgy to use. It also ends up being a bit confusing when fields are important and when they aren't. I noticed there were a few fields that didn't seem necessary.\n\nBelow is a description of changes:\n\nfirstOffset is a LogOffsetMetadata but there are no readers of the field that use anything but the messageOffset field - simplified to a long.\nLogAppendInfo.errorMessage is only set in one context - when calling LogAppendInfo.unknownLogAppendInfoWithAdditionalInfo. When we use this constructor, we pass up the original exception in LogAppendResult anyway, so the field is redundant with the LogAppendResult.exception field. This allows us to simplify the handling in KAFKA-15459: Convert coordinator retriable errors to a known producer response error #14378 since there are no custom error messages we just return whatever is in the exception message.\nWe only use targetCompressionType when constructing the LogValidator - just inline the call instead of including it in the LogAppendInfo.\noffsetsMonotonic is only used when not assigning offsets to throw an exception - just throw the exception instead of setting a field to throw later.\nshallowCount is only there to determine whether there are any messages in the append. Instead, we can just check validBytes which is incremented with a non-zero value every time we increment shallowCount.\n\nReviewers: Justine Olshan <jolshan@confluent.io>",
    "epoch": 1696365164,
    "epoch_utc": null
  },
  {
    "commit": "e90f82b62a94dc556e231f033e22030c06d60232",
    "author": "Nikolay",
    "author_email": "nizhikov@apache.org",
    "date": "Tue Oct 3 19:03:38 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 3 18:03:38 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "build.gradle"
      ]
    },
    "message": "MINOR: Fix dependency issue in tools module (#14475)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1696370618,
    "epoch_utc": null
  },
  {
    "commit": "5f676cce7a6b695e07a7cd1d0ac2ca41960780ae",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Tue Oct 3 07:41:41 2023 -0400",
    "commit_by": "Divij Vaidya",
    "commit_by_email": "diviv@amazon.com",
    "commit_by_date": "Tue Oct 3 13:51:30 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 60,
      "deletions": 0,
      "files": [
        "docs/ops.html"
      ]
    },
    "message": "KAFKA-15483: Add KIP-938 and KIP-866 metrics to bundled docs (#14421)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Ron Dagostino <rdagostino@confluent.io>",
    "epoch": 1696329701,
    "epoch_utc": null
  },
  {
    "commit": "951a9fef9d44fe74c613cef369589ec214f70e33",
    "author": "Said Boudjelda",
    "author_email": "bmscomp@gmail.com",
    "date": "Tue Oct 3 13:31:20 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 3 13:31:20 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "LICENSE-binary",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "MINOR: Upgrade zstd-jni to 1.5.5-6 (#14449)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1696350680,
    "epoch_utc": null
  },
  {
    "commit": "7553d3f562f3af6c7f9b062b9220bcad80b00478",
    "author": "Omnia G.H Ibrahim",
    "author_email": "o.g.h.ibrahim@gmail.com",
    "date": "Tue Oct 3 10:59:56 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Oct 3 11:59:56 2023 +0200",
    "stats": {
      "files_changed": 10,
      "insertions": 770,
      "deletions": 662,
      "files": [
        "bin/kafka-leader-election.sh",
        "bin/windows/kafka-leader-election.bat",
        "build.gradle",
        "core/src/main/scala/kafka/admin/LeaderElectionCommand.scala",
        "core/src/test/scala/unit/kafka/admin/LeaderElectionCommandErrorTest.scala",
        "core/src/test/scala/unit/kafka/admin/LeaderElectionCommandTest.scala",
        "settings.gradle",
        "tools/src/main/java/org/apache/kafka/tools/LeaderElectionCommand.java",
        "tools/src/test/java/org/apache/kafka/tools/LeaderElectionCommandErrorTest.java",
        "tools/src/test/java/org/apache/kafka/tools/LeaderElectionCommandTest.java"
      ]
    },
    "message": "KAFKA-14593: Move LeaderElectionCommand to tools (#13204)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Federico Valeri <fedevaleri@gmail.com>",
    "epoch": 1696341596,
    "epoch_utc": null
  },
  {
    "commit": "8f8dbad564ffd9be409bb85edadbc40659cd0a56",
    "author": "Nikolay",
    "author_email": "nizhikov@apache.org",
    "date": "Mon Oct 2 23:22:17 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 2 13:22:17 2023 -0700",
    "stats": {
      "files_changed": 7,
      "insertions": 939,
      "deletions": 741,
      "files": [
        "build.gradle",
        "checkstyle/import-control.xml",
        "core/src/test/java/kafka/test/ClusterConfig.java",
        "core/src/test/scala/integration/kafka/admin/ReassignPartitionsIntegrationTest.scala",
        "tools/src/main/java/org/apache/kafka/tools/reassign/VerifyAssignmentResult.java",
        "tools/src/test/java/org/apache/kafka/tools/ToolsTestUtils.java",
        "tools/src/test/java/org/apache/kafka/tools/reassign/ReassignPartitionsIntegrationTest.java"
      ]
    },
    "message": "KAFKA-14595 ReassignPartitionsIntegrationTest rewritten in java (#14456)\n\nThis PR is part of #13247\nIt contains ReassignPartitionsIntegrationTest rewritten in java.\nGoal of PR is reduce changes size in main PR.\n\nReviewers: Taras Ledkov  <tledkov@apache.org>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1696299737,
    "epoch_utc": null
  },
  {
    "commit": "b6c7855475397166c4fbc79071b4aa93696519e5",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Mon Oct 2 10:40:06 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 2 10:40:06 2023 -0700",
    "stats": {
      "files_changed": 13,
      "insertions": 120,
      "deletions": 30,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/OffsetCommitResponse.java",
        "clients/src/main/java/org/apache/kafka/common/requests/ProduceResponse.java",
        "core/src/main/scala/kafka/coordinator/group/GroupCoordinator.scala",
        "core/src/main/scala/kafka/coordinator/group/GroupCoordinatorAdapter.scala",
        "core/src/main/scala/kafka/coordinator/group/GroupMetadataManager.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorAdapterTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupMetadataManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala"
      ]
    },
    "message": "KAFKA-15449: Verify transactional offset commits (KIP-890 part 1) (#14370)\n\nPrevious commits left out TxnOffsetCommits which go through the group coordinator (not directly from the producer).\n\nI've wired up the methods to include the transactional id and state partition to do the verification.\n\nI've also updated UnifiedLog to verify on client and coordinator requests that are transactional.\nI've not updated any sequence check logic since the sequence is always 0 on group coordinator initiated writes.\n\nAdded returned errors to Response files. Both InvalidPidMapping and InvalidTxnState will be returned and be fatal for the transactional OffsetCommit requests.\n\nReviewers:  David Jacot <david.jacot@gmail.com>,  Artem Livshits <alivshits@confluent.io>",
    "epoch": 1696254006,
    "epoch_utc": null
  },
  {
    "commit": "dcd8c7d05f2f22f2d815405e7ab3ad7439669239",
    "author": "Arnout Engelen",
    "author_email": "arnout@engelen.eu",
    "date": "Mon Oct 2 18:38:29 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 2 18:38:29 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 29,
      "deletions": 0,
      "files": [
        "build.gradle",
        "gradle/resources/dependencycheck-suppressions.xml"
      ]
    },
    "message": "MINOR: suppress dependencycheck warning for CVE-2023-35116 (#14460)\n\nLike in most projects, this attack cannot be achieved by an external\nattacker in Kafka.\n\nReviewers: Josep Prat <josep.prat@aiven.io>",
    "epoch": 1696282709,
    "epoch_utc": null
  },
  {
    "commit": "6263197a62389c9dce0210cd9d65a6e601345edc",
    "author": "Lucas Brutschy",
    "author_email": "lbrutschy@confluent.io",
    "date": "Mon Oct 2 15:41:21 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 2 15:41:21 2023 +0200",
    "stats": {
      "files_changed": 9,
      "insertions": 313,
      "deletions": 66,
      "files": [
        "checkstyle/suppressions.xml",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskExecutor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskManager.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/tasks/TaskExecutor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/tasks/TaskManager.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskExecutorTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskManagerTest.java"
      ]
    },
    "message": "KAFKA-15326: [9/N] Start and stop executors and cornercases (#14281)\n\n* Implements start and stop of task executors\n* Introduce flush operation to keep consumer operations out of the processing threads\n* Fixes corner case: handle requested unassignment during shutdown\n* Fixes corner case: handle race between voluntary unassignment and requested unassigment\n* Fixes corner case: task locking future completes for the empty set\n* Fixes corner case: we should not reassign a task with an uncaught exception to a task executor\n* Improved logging\n* Number of threads controlled from outside, of the TaskManager\n\nReviewers: Bruno Cadonna <bruno@confluent.io>",
    "epoch": 1696272081,
    "epoch_utc": null
  },
  {
    "commit": "f5a7491da607644590f4421ef37d4a7bf2d3ea10",
    "author": "vamossagar12",
    "author_email": "sagarmeansocean@gmail.com",
    "date": "Mon Oct 2 17:31:01 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 2 05:01:01 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 5,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java"
      ]
    },
    "message": "MINOR: Correcting Javadocs for throwIfMemberEpochIsInvalid (#14468)\n\nThe Javadoc for `GroupMetadataManager#throwIfMemberEpochIsInvalid` suggests that it throws a `NotCoordinatorException` exception when the member epoch in the consumer heartbeat request is greater than the one known by this coordinator for the given member. This could happen if the heartbeat-ing member got a higher epoch from another coordinator. However the method throws `FencedMemberEpochException` even in this case. This PR corrects the Javadocs to reflect the same.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1696278661,
    "epoch_utc": null
  },
  {
    "commit": "6acf69d7a257b83fbf3103772ca8d68093718274",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Mon Oct 2 04:59:20 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 2 04:59:20 2023 -0700",
    "stats": {
      "files_changed": 8,
      "insertions": 35,
      "deletions": 119,
      "files": [
        "clients/src/main/resources/common/message/ConsumerGroupHeartbeatRequest.json",
        "clients/src/main/resources/common/message/ConsumerGroupHeartbeatResponse.json",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/MembershipManagerImplTest.java",
        "clients/src/test/java/org/apache/kafka/common/protocol/ProtoUtilsTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/RequestResponseTest.java",
        "core/src/test/scala/unit/kafka/server/ConsumerGroupHeartbeatRequestTest.scala",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java"
      ]
    },
    "message": "MINOR: Remove the client side assignor from the ConsumerGroupHeartbeat API (#14469)\n\nAs a first step, we plan to release a preview of the new consumer group rebalance protocol without the client side assignor. This patch removes all the related fields from the ConsumerGroupHeartbeat API for now. Removing fields is fine here because this API is not released yet and not exposed by default. We will add them back while bumping the version of the request when we release this part in the future.\n\nReviewers: Justine Olshan <jolshan@confluent.io>",
    "epoch": 1696233560,
    "epoch_utc": null
  },
  {
    "commit": "e85b17ec5ec86951adb6024561d73d516865016e",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Mon Oct 2 19:39:41 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 2 19:39:41 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "LICENSE-binary",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "KAFKA-15498: upgrade to snappy 1.1.10.5 (#14458)\n\nRelease notes - https://github.com/xerial/snappy-java/releases/tag/v1.1.10.5\n\nThis release contains adds support for Windows ARM and fixes some dependencies associated with Linux ppc64.\n\nReviewers: Josep Prat <josep.prat@aiven.io>",
    "epoch": 1696286381,
    "epoch_utc": null
  },
  {
    "commit": "b58864e47697907d00b5dbda7b24c3a0e54b7272",
    "author": "Lucas Brutschy",
    "author_email": "lbrutschy@confluent.io",
    "date": "Mon Oct 2 12:30:49 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Oct 2 12:30:49 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java"
      ]
    },
    "message": "MINOR: Logging fix in StreamsPartitionAssignor (#14435)\n\nFix broken log message\n\nReviewer: A. Sophie Blee-Goldman <ableegoldman@apache.org>",
    "epoch": 1696260649,
    "epoch_utc": null
  },
  {
    "commit": "e71f6ebc81d24d5f6aad4ebc96d42e56c5eae3c6",
    "author": "Hao Li",
    "author_email": "1127478+lihaosky@users.noreply.github.com",
    "date": "Fri Sep 29 10:16:29 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Sep 29 10:16:29 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 8,
      "deletions": 3,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/RackAwareTaskAssignor.java"
      ]
    },
    "message": "MINOR: only log error when rack aware assignment is enabled (#14415)\n\nReviewers:  Lucas Brutschy <lbrutschy@confluent.io>, Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1695993389,
    "epoch_utc": null
  },
  {
    "commit": "03259f6f414425c1c0b396eb31f0f4b17f93b424",
    "author": "rykovsi",
    "author_email": "45871243+rykovsi@users.noreply.github.com",
    "date": "Fri Sep 29 15:00:06 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Sep 29 14:00:06 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/security/ssl/SslPrincipalMapper.java"
      ]
    },
    "message": "KAFKA-15500: Fix condition in SslPrincipalMapper.java (#14441)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1696010406,
    "epoch_utc": null
  },
  {
    "commit": "4ba9cfd9d96ca7c25baed5890eb8bdf5130d0bc5",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Fri Sep 29 13:51:39 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Sep 29 13:51:39 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "build.gradle"
      ]
    },
    "message": "MINOR: Fix build failure in genConnectOpenAPIDocs (#14464)\n\n\nReviewers: Yash Mayya <yash.mayya@gmail.com>",
    "epoch": 1696006299,
    "epoch_utc": null
  },
  {
    "commit": "13b119aa62bb654eed9e6ac3235dd4f242d11636",
    "author": "iit2009060",
    "author_email": "59436466+iit2009060@users.noreply.github.com",
    "date": "Fri Sep 29 15:56:46 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Sep 29 12:26:46 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 28,
      "deletions": 3,
      "files": [
        "core/src/test/scala/unit/kafka/log/remote/RemoteIndexCacheTest.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/RemoteIndexCache.java"
      ]
    },
    "message": "KAFKA-15511: Handle CorruptIndexException in RemoteIndexCache (#14459)\n\nA bug in the RemoteIndexCache leads to a situation where the cache does not replace the corrupted index with a new index instance fetched from remote storage. This commit fixes the bug by adding correct handling for `CorruptIndexException`.\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Satish Duggana <satishd@apache.org>, Kamal Chandraprakash <kamal.chandraprakash@gmail.com>, Alexandre Dupriez <duprie@amazon.com>",
    "epoch": 1696013806,
    "epoch_utc": null
  },
  {
    "commit": "b0fd99106d3f814026f0c6ab7a58c54d65b96a3b",
    "author": "Gantigmaa Selenge",
    "author_email": "39860586+tinaselenge@users.noreply.github.com",
    "date": "Fri Sep 29 11:00:01 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Sep 29 12:00:01 2023 +0200",
    "stats": {
      "files_changed": 4,
      "insertions": 17,
      "deletions": 7,
      "files": [
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/test/scala/unit/kafka/log/LogLoaderTest.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/tools/DumpLogSegmentsTest.scala"
      ]
    },
    "message": "MINOR: Close UnifiedLog created in tests to avoid resource leak (#14453)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Luke Chen <showuon@gmail.com>",
    "epoch": 1695996001,
    "epoch_utc": null
  },
  {
    "commit": "bbcf40ad0dc7739d803244bbbfbaa4598850344b",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Fri Sep 29 14:47:19 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Sep 29 14:47:19 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 4,
      "deletions": 1,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java"
      ]
    },
    "message": "MINOR: improve info log for memberIDRequired exception (#14192)\n\nCurrently, when consumer startup, there will be a log message said:\n\n[2023-08-11 15:47:17,713] INFO [Consumer clientId=console-consumer, groupId=console-consumer-28605] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException) (org.apache.kafka.clients.consumer.internals.ConsumerCoordinator)\n\nIt confused users and make them think there's something wrong in the consumer application. Since we already log need to re-join with the given member-id logs in the joinGroupResponseHandler and already requestRejoined. So, we can skip this confusion logs.\n\nReviewers: Lucas Brutschy <lbrutschy@confluent.io>, Paolo Patierno <ppatiern@redhat.com>, vamossagar12 <sagarmeansocean@gmail.com>, David Jacot <djacot@confluent.io>",
    "epoch": 1696009639,
    "epoch_utc": null
  },
  {
    "commit": "bcfc9543d141db9cf5b40f54dc971d7812f94319",
    "author": "Ritika Reddy",
    "author_email": "98577846+rreddy-22@users.noreply.github.com",
    "date": "Thu Sep 28 13:55:44 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 28 13:55:44 2023 -0700",
    "stats": {
      "files_changed": 6,
      "insertions": 18,
      "deletions": 4,
      "files": [
        "metadata/src/main/java/org/apache/kafka/controller/BrokersToIsrs.java",
        "metadata/src/main/java/org/apache/kafka/controller/ReplicationControlManager.java",
        "metadata/src/test/java/org/apache/kafka/controller/BrokersToIsrsTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/ReplicationControlManagerTest.java",
        "{metadata/src/main/java/org/apache/kafka/controller => server-common/src/main/java/org/apache/kafka/server/common}/TopicIdPartition.java"
      ]
    },
    "message": "MINOR: Move TopicIdPartition class to server-common (#14418)\n\nThis patch moves the TopicIdPartition from the metadata module to the server-common module so it can be used by the group-coordinator module as well.\n\nReviewers: Sagar Rao <sagarmeansocean@gmail.com>, David Jacot <djacot@confluent.io>",
    "epoch": 1695920144,
    "epoch_utc": null
  },
  {
    "commit": "7b0352f1bd9b923b79e60b18b40f570d4bfafcc0",
    "author": "Anton Agestam",
    "author_email": "git@antonagestam.se",
    "date": "Thu Sep 28 18:22:05 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 28 09:22:05 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "clients/src/main/resources/common/message/ConsumerGroupDescribeResponse.json"
      ]
    },
    "message": "MINOR: Fix incorrect versions in ConsumerGroupDescribeResponse schema (#14447)\n\nThis patch fixes the version of the `AuthorizedOperations` field. The schema is not used yet so the bug had no impact.\n\nReviewers: Kirk True <ktrue@confluent.io>, David Jacot <djacot@confluent.io>",
    "epoch": 1695936125,
    "epoch_utc": null
  },
  {
    "commit": "62afd3baca1c88f30874120ffd10f41ebd3333c7",
    "author": "vamossagar12",
    "author_email": "sagarmeansocean@gmail.com",
    "date": "Thu Sep 28 21:46:34 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 28 09:16:34 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java"
      ]
    },
    "message": "MINOR: Fixing typo with CoordinatorRuntime Javadoc (#14461)\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1695948394,
    "epoch_utc": null
  },
  {
    "commit": "dedfed06f7a472424080456c997f5200c6bef196",
    "author": "chern",
    "author_email": "chernyih@gmail.com",
    "date": "Thu Sep 28 06:14:42 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 28 14:14:42 2023 +0100",
    "stats": {
      "files_changed": 2,
      "insertions": 6,
      "deletions": 3,
      "files": [
        "core/src/main/scala/kafka/server/AbstractFetcherThread.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaFetcherThreadTest.scala"
      ]
    },
    "message": "KAFKA-15510: Fix follower's lastFetchedEpoch when fetch response has \u2026 (#14457)\n\nWhen a fetch response has no record for a partition, validBytes is 0. We shouldn't set the last fetched epoch to logAppendInfo.lastLeaderEpoch.asScala since there is no record and it is Optional.empty. We should use currentFetchState.lastFetchedEpoch instead.\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Viktor Somogyi-Vass <viktorsomogyi@gmail.com>, Kamal Chandraprakash<kamal.chandraprakash@gmail.com>, Rajini Sivaram <rajinisivaram@googlemail.com>",
    "epoch": 1695892482,
    "epoch_utc": null
  },
  {
    "commit": "aa399a335f75122d258c5cef1ffc3604b42f4052",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Thu Sep 28 18:34:37 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 28 15:04:37 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 45,
      "deletions": 17,
      "files": [
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/LocalTieredStorageTest.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/utils/BrokerLocalStorage.java"
      ]
    },
    "message": "KAFKA-15499: Fix the flaky DeleteSegmentsDueToLogStartOffsetBreach test (#14439)\n\nDeleteSegmentsDueToLogStartOffsetBreach configures the segment such that it can hold at-most 2 record-batches. And, it asserts that the local-log-start-offset based on the assumption that each segment will contain exactly two messages.\n\nDuring leader switch, the segment can get rotated and may not always contain two records. Previously, we were checking whether the expected local-log-start-offset is equal to the base-offset-of-the-first-local-log-segment. With this patch, we will scan the first local-log-segment for the expected offset.\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1695936877,
    "epoch_utc": null
  },
  {
    "commit": "673a25acc3ac231c5fc1bfe0fcdd3c7e57f2de91",
    "author": "Bruno Cadonna",
    "author_email": "cadonna@apache.org",
    "date": "Wed Sep 27 17:51:30 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Sep 27 17:51:30 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 44,
      "deletions": 1,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java"
      ]
    },
    "message": "KAFKA-10199: Do not unlock state directories of tasks in state updater (#14442)\n\nWhen Streams completes a rebalance, it unlocks state directories\nall unassigned tasks. Unfortunately, when the state updater is enabled,\nStreams does not look into the state updater to determine the\nunassigned tasks.\nThis commit corrects this by adding the check.\n\nReviewer: Lucas Brutschy <lbrutschy@confluent.io>",
    "epoch": 1695847890,
    "epoch_utc": null
  },
  {
    "commit": "86450bf9aca481113fadbb0ecf0eb4b180762a30",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Wed Sep 27 19:00:50 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Sep 27 19:00:50 2023 +0800",
    "stats": {
      "files_changed": 4,
      "insertions": 58,
      "deletions": 13,
      "files": [
        "LICENSE-binary",
        "core/src/test/scala/integration/kafka/api/ProducerCompressionTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerParameterizedIntegrationTest.scala",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "KAFKA-15498: bump snappy-java version to 1.1.10.4 (#14434)\n\nbump snappy-java version to 1.1.10.4, and add more tests to verify the compressed data can be correctly decompressed and read.\n\nFor LogCleanerParameterizedIntegrationTest, we increased the message size for snappy decompression since in the new version of snappy, the decompressed size is increasing compared with the previous version. But since the compression algorithm is not kafka's scope, all we need to do is to make sure the compressed data can be successfully decompressed and parsed/read.\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Ismael Juma <ismael@juma.me.uk>, Josep Prat <josep.prat@aiven.io>, Kamal Chandraprakash <kamal.chandraprakash@gmail.com>",
    "epoch": 1695852050,
    "epoch_utc": null
  },
  {
    "commit": "fcac880fd54efbec3fe385000cf990a19972dafa",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Tue Sep 26 14:43:42 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 26 14:43:42 2023 -0700",
    "stats": {
      "files_changed": 44,
      "insertions": 1604,
      "deletions": 365,
      "files": [
        "checkstyle/import-control-core.xml",
        "checkstyle/import-control-server-common.xml",
        "clients/src/main/java/org/apache/kafka/clients/NetworkClient.java",
        "clients/src/main/java/org/apache/kafka/clients/NodeApiVersions.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/AdminClientConfig.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/FinalizedVersionRange.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/internals/AdminBootstrapAddresses.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/internals/AdminMetadataManager.java",
        "clients/src/main/resources/common/message/DescribeConfigsRequest.json",
        "clients/src/test/java/org/apache/kafka/clients/admin/AdminClientUnitTestEnv.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/internals/AdminBootstrapAddressesTest.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/internals/AdminMetadataManagerTest.java",
        "core/src/main/java/kafka/server/logger/RuntimeLoggerManager.java",
        "core/src/main/scala/kafka/admin/ConfigCommand.scala",
        "core/src/main/scala/kafka/server/AuthHelper.scala",
        "core/src/main/scala/kafka/server/ConfigAdminManager.scala",
        "core/src/main/scala/kafka/server/ConfigHelper.scala",
        "core/src/main/scala/kafka/server/ControllerApis.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/main/scala/kafka/server/KafkaRequestHandler.scala",
        "core/src/main/scala/kafka/server/metadata/KRaftMetadataCachePublisher.scala",
        "core/src/test/java/kafka/server/logger/RuntimeLoggerManagerTest.java",
        "core/src/test/java/kafka/test/ClusterInstance.java",
        "core/src/test/java/kafka/test/junit/RaftClusterInvocationContext.java",
        "core/src/test/java/kafka/test/junit/ZkClusterInvocationContext.java",
        "core/src/test/java/kafka/test/server/BootstrapControllersIntegrationTest.java",
        "core/src/test/java/kafka/testkit/KafkaClusterTestKit.java",
        "core/src/test/java/kafka/testkit/TestKitNodes.java",
        "core/src/test/scala/integration/kafka/server/KRaftClusterTest.scala",
        "core/src/test/scala/integration/kafka/server/KafkaServerKRaftRegistrationTest.scala",
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/admin/ConfigCommandTest.scala",
        "core/src/test/scala/unit/kafka/server/AuthHelperTest.scala",
        "core/src/test/scala/unit/kafka/server/ConfigAdminManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/ControllerApisTest.scala",
        "server-common/src/main/java/org/apache/kafka/server/util/CommandLineUtils.java",
        "server-common/src/test/java/org/apache/kafka/server/util/CommandLineUtilsTest.java",
        "tools/src/main/java/org/apache/kafka/tools/ClusterTool.java",
        "tools/src/main/java/org/apache/kafka/tools/FeatureCommand.java",
        "tools/src/main/java/org/apache/kafka/tools/MetadataQuorumCommand.java",
        "tools/src/test/java/org/apache/kafka/tools/FeatureCommandTest.java"
      ]
    },
    "message": "KAFKA-15466: Add KIP-919 support for some admin APIs (#14399)\n\nAdd support for --bootstrap-controller in the following command-line tools:\n- kafka-cluster.sh\n- kafka-configs.sh\n- kafka-features.sh\n- kafka-metadata-quorum.sh\n\nTo implement this, the following AdminClient APIs now support the new bootstrap.controllers\nconfiguration:\n- Admin.alterConfigs\n- Admin.describeCluster\n- Admin.describeConfigs\n- Admin.describeFeatures\n- Admin.describeMetadataQuorum\n- Admin.incrementalAlterConfigs\n- Admin.updateFeatures\n\nCommand-line tool changes:\n- Add CommandLineUtils.initializeBootstrapProperties to handle parsing --bootstrap-controller\nin addition to --bootstrap-server.\n- Add --bootstrap-controller to ConfigCommand.scala, ClusterTool.java, FeatureCommand.java, and\nMetadataQuorumCommand.java.\n\nKafkaAdminClient changes:\n- Add the AdminBootstrapAddresses class to handle extracting bootstrap.servers or\nbootstrap.controllers from the config map for KafkaAdminClient.\n- In AdminMetadataManager, store the new usingBootstrapControllers boolean. Generalize\nauthException to encompass the concept of fatal exceptions in general. (For example, the\nfatal exception where we talked to the wrong node type.) Treat\nMismatchedEndpointTypeException and UnsupportedEndpointTypeException as fatal exceptions.\n- Extend NodeProvider to include information about whether bootstrap.controllers is supported.\n- Modify the APIs described above to support bootstrap.controllers.\n\nServer-side changes:\n- Support DescribeConfigsRequest on kcontrollers.\n- Add KRaftMetadataCache to the kcontroller to simplify implemeting describeConfigs (and\nprobably more APIs in the future). It's mainly a wrapper around MetadataImage, so there is\nessentially no extra resource consumption.\n- Split RuntimeLoggerManager out of ConfigAdminManager to handle the incrementalAlterConfigs\nsupport for BROKER_LOGGER. This is now supported on kcontrollers as well as brokers.\n- Fix bug in AuthHelper.computeDescribeClusterResponse that resulted in us always sending back\nBROKER as the endpoint type, even on the kcontroller.\n\nMiscellaneous:\n- Fix a few places in exceptions and log messages where we wrote \"broker\" instead of \"node\".\nFor example, an exception in NodeApiVersions.java, and a log message in NetworkClient.java.\n- Fix the slf4j log prefix used by KafkaRequestHandler logging so that request handlers on a\ncontroller don't look like they're on a broker.\n- Make the FinalizedVersionRange constructor public for the sake of a junit test.\n- Add unit and integration tests for the above.\n\nReviewers: David Arthur <mumrah@gmail.com>, Doguscan Namal <namal.doguscan@gmail.com>",
    "epoch": 1695750222,
    "epoch_utc": null
  },
  {
    "commit": "079e5d647ce39cf2ab5b5f37c5ce28b59fb6db13",
    "author": "Lucas Brutschy",
    "author_email": "lbrutschy@confluent.io",
    "date": "Tue Sep 26 18:17:23 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 26 18:17:23 2023 +0200",
    "stats": {
      "files_changed": 14,
      "insertions": 306,
      "deletions": 14,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/PartitionGroup.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/ReadOnlyTask.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StandbyTask.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/Task.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/PauseResumeIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/utils/IntegrationTestUtils.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/PartitionGroupTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java",
        "streams/test-utils/src/main/java/org/apache/kafka/streams/TopologyTestDriver.java"
      ]
    },
    "message": "KAFKA-15326: [8/N] Move consumer interaction out of processing methods (#14226)\n\nThe process method inside the tasks needs to be called from within\nthe processing threads. However, it currently interacts with the\nconsumer in two ways:\n\n* It resumes processing when the PartitionGroup buffers are empty\n* It fetches the lag from the consumer\n\nWe introduce updateLags() and\nresumePollingForPartitionsWithAvailableSpace() methods that call into\nthe task from the polling thread, in order to set up the consumer\ncorrectly for the next poll, and extract metadata from the consumer\nafter the poll.\n\nReviewer: Bruno Cadonna <bruno@confluent.io>",
    "epoch": 1695763043,
    "epoch_utc": null
  },
  {
    "commit": "65efb981347d6f81fb2713cd27cdfdfa9d8781b9",
    "author": "Bruno Cadonna",
    "author_email": "cadonna@apache.org",
    "date": "Tue Sep 26 15:25:30 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 26 15:25:30 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 96,
      "deletions": 1,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java"
      ]
    },
    "message": "KAFKA-10199: Do not process when in PARTITIONS_REVOKED (#14265)\n\nWhen a Streams application is subscribed with a pattern to\ninput topics and an input topic is deleted, the stream thread\ntransists to PARTITIONS_REVOKED and a rebalance is triggered.\nThis happens inside the poll call. Sometimes, the poll call\nreturns before a new assignment is received. That means, Streams\nexecutes the poll loop in state PARTITIONS_REVOKED.\n\nWith the state updater enabled processing is also executed in states\nother than RUNNING and so processing is also executed when the\nstream thread is in state PARTITION_REVOKED. However, that triggers\nan IllegalStateException with error message:\nNo current assignment for partition TEST-TOPIC-A-0\nwhich is a fatal error.\n\nThis commit prevents processing when the stream thread is in state\nPARTITIONS_REVOKED.\n\nReviewer: Lucas Brutschy <lbrutschy@confluent.io>",
    "epoch": 1695752730,
    "epoch_utc": null
  },
  {
    "commit": "2d04370bca7ab5995371ce5501b2248c279e1d6f",
    "author": "Lucas Brutschy",
    "author_email": "lbrutschy@confluent.io",
    "date": "Tue Sep 26 14:05:55 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 26 14:05:55 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 42,
      "deletions": 6,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/DefaultStateUpdaterTest.java"
      ]
    },
    "message": "KAFKA-10199: Fix restoration behavior for paused tasks (#14437)\n\nState updater can get into a busy loop when all tasks are paused, because changelogReader will never return that all changelogs have been read completely. Fix this, by awaiting if updatingTasks is empty.\n\nRelated and included: if we are restoring and all tasks are paused, we should return immediately from StoreChangelogReader.\n\nReviewer: Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1695747955,
    "epoch_utc": null
  },
  {
    "commit": "a46da90b8f6cca04dd0f89fa774267898c039e47",
    "author": "Bruno Cadonna",
    "author_email": "cadonna@apache.org",
    "date": "Tue Sep 26 10:58:37 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 26 10:58:37 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 56,
      "deletions": 12,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java"
      ]
    },
    "message": "KAFKA-10199: Add missing catch for lock exception (#14403)\n\nThe state directory throws a lock exception during initialization if a task state directory is still locked by the stream thread that previously owned the task. When this happens, Streams catches the lock exception, ignores the exception, and tries to initialize the task in the next exception.\n\nIn the state updater code path, we missed catching the lock exception when Streams recycles a task. That leads to the lock exception thrown to the exception handler, which is unexpected and leads to test failures.\n\nReviewer: Lucas Brutschy <lbrutschy@confluent.io>",
    "epoch": 1695736717,
    "epoch_utc": null
  },
  {
    "commit": "9c2e5daf606aebb343224f943b8e6bac4351c193",
    "author": "Lucas Brutschy",
    "author_email": "lucasbru@users.noreply.github.com",
    "date": "Tue Sep 26 10:49:41 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 26 10:49:41 2023 +0200",
    "stats": {
      "files_changed": 9,
      "insertions": 39,
      "deletions": 19,
      "files": [
        "clients/src/test/java/org/apache/kafka/common/utils/LogCaptureAppender.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorSourceConnectorTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/SourceTaskOffsetCommitterTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerSourceTaskTest.java",
        "streams/src/test/java/org/apache/kafka/streams/StreamsConfigTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopicManagerTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/PartitionGroupTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StoreChangelogReaderTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java"
      ]
    },
    "message": "MINOR: Revert log level changes in LogCaptureAppender (#14436)\n\nLogCaptureAppender sets the log level in various tests to check if a certain log message is produced. The log level is however never reverted, changing the log level across the board and introducing flakiness due to non-determinism since the log level depends on execution order. Some log messages change the timing inside tests significantly.\n\nReviewer: Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1695736181,
    "epoch_utc": null
  },
  {
    "commit": "a72056e20da29a16cdde41ea5430b075d4a14f0d",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Tue Sep 26 01:29:30 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 26 10:29:30 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "README.md"
      ]
    },
    "message": "MINOR: Replace Java 20 with Java 21 in `README.md` (#14451)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Yash Mayya <yash.mayya@gmail.com>",
    "epoch": 1695702570,
    "epoch_utc": null
  },
  {
    "commit": "7107a750ba17c50c3b0a1e74e644c378f3bc59f5",
    "author": "Hector Geraldino",
    "author_email": "hgeraldino@gmail.com",
    "date": "Tue Sep 26 03:12:16 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 26 12:42:16 2023 +0530",
    "stats": {
      "files_changed": 5,
      "insertions": 265,
      "deletions": 0,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/converters/BooleanConverter.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/converters/BooleanConverterConfig.java",
        "connect/runtime/src/main/resources/META-INF/services/org.apache.kafka.connect.storage.Converter",
        "connect/runtime/src/main/resources/META-INF/services/org.apache.kafka.connect.storage.HeaderConverter",
        "connect/runtime/src/test/java/org/apache/kafka/connect/converters/BooleanConverterTest.java"
      ]
    },
    "message": "KAFKA-15248 (KIP-959): Add BooleanConverter to Kafka Connect (#14093)\n\nReviewers: Yash Mayya <yash.mayya@gmail.com>, Sagar Rao <sagarmeansocean@gmail.com>, Qichao Chu <5326144+ex172000@users.noreply.github.com>",
    "epoch": 1695708736,
    "epoch_utc": null
  },
  {
    "commit": "170550af40d80eb3585b4115b8dff125337952c2",
    "author": "Manikumar Reddy",
    "author_email": "manikumar.reddy@gmail.com",
    "date": "Mon Sep 25 22:46:30 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 26 11:16:30 2023 +0530",
    "stats": {
      "files_changed": 3,
      "insertions": 141,
      "deletions": 29,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/security/ssl/SslFactory.java",
        "clients/src/test/java/org/apache/kafka/common/security/ssl/SslFactoryTest.java",
        "clients/src/test/java/org/apache/kafka/test/TestSslUtils.java"
      ]
    },
    "message": "KAFKA-15502: Update SslEngineValidator to handle large stores (#14445)\n\nWe have observed an issue where inter broker SSL listener is not coming up when running with TLSv3/JDK 17 .\nSSL debug logs shows that TLSv3 post handshake messages >16K are not getting read and causing SslEngineValidator process to stuck while validating the provided trust/key store.\n\n- Right now, WRAP returns if there is already data in the buffer. But if we need more data to be wrapped for UNWRAP to succeed, we end up looping forever. To fix this, now we always attempt WRAP and only return early on BUFFER_OVERFLOW.\n- Update SslEngineValidator to unwrap post-handshake messages from peer when local handshake status is FINISHED.\n\nReviewers: Rajini Sivaram <rajinisivaram@googlemail.com>",
    "epoch": 1695692790,
    "epoch_utc": null
  },
  {
    "commit": "943d05df68dd6957dd2a53f552a62a0380d50904",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Mon Sep 25 19:05:06 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Sep 25 22:35:06 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 11,
      "deletions": 11,
      "files": [
        "LICENSE-binary",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "Upgrade Jetty to 9.4.52.v20230823 (#14438)\n\nReviewers: Viktor Somogyi-Vass <viktorsomogyi@gmail.com>, Luke Chen <showuon@gmail.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1695679506,
    "epoch_utc": null
  },
  {
    "commit": "d8f358facc2a5405d08977f922bc0b1dae8f114e",
    "author": "Purshotam Chauhan",
    "author_email": "pchauhan@confluent.io",
    "date": "Mon Sep 25 22:13:01 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Sep 25 17:43:01 2023 +0100",
    "stats": {
      "files_changed": 2,
      "insertions": 8,
      "deletions": 7,
      "files": [
        "clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java",
        "clients/src/test/java/org/apache/kafka/test/TestSslUtils.java"
      ]
    },
    "message": "[KAFKA-15117] In TestSslUtils set SubjectAlternativeNames to null if there are no hostnames (#14440)\n\nWe are currently encoding an empty hostNames array to subjectAltName in the keystore. While parsing the certificates in the test this causes the issue - Unparseable SubjectAlternativeName extension due to java.io.IOException: No data available in passed DER encoded value. Up to Java 17, this parsing error was ignored. This PR assigns subjectAltName to null if hostnames are empty.\n\nCo-authored-by: Ismael Juma <ismael@juma.me.uk>\nReviewers: Rajini Sivaram <rajinisivaram@googlemail.com>",
    "epoch": 1695690781,
    "epoch_utc": null
  },
  {
    "commit": "08aa33127a4254497456aa7a0c1646c7c38adf81",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Mon Sep 25 09:05:30 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Sep 25 09:05:30 2023 -0700",
    "stats": {
      "files_changed": 15,
      "insertions": 465,
      "deletions": 394,
      "files": [
        "core/src/main/scala/kafka/server/AddPartitionsToTxnManager.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/main/scala/kafka/server/KafkaRequestHandler.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/kafka/server/KafkaRequestHandlerTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/AbstractCoordinatorConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/CoordinatorPartitionWriterTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupMetadataManagerTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionStateManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/AddPartitionsToTxnManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala"
      ]
    },
    "message": "MINOR: Push logic to resolve the transaction coordinator into the AddPartitionsToTxnManager (#14402)\n\nThis patch refactors the ReplicaManager.appendRecords method and the AddPartitionsToTxnManager class in order to move the logic to identify the transaction coordinator based on the transaction id from the former to the latter. While working on KAFKA-14505, I found pretty annoying that we require to pass the transaction state partition to appendRecords because we have to do the same from the group coordinator. It seems preferable to delegate that job to the AddPartitionsToTxnManager.\n\nReviewers: Justine Olshan <jolshan@confluent.io>",
    "epoch": 1695643530,
    "epoch_utc": null
  },
  {
    "commit": "99e6f12dd09952fccde8f4826b65cadab332c2dc",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Mon Sep 25 05:17:08 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Sep 25 05:17:08 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 16,
      "deletions": 10,
      "files": [
        "Jenkinsfile",
        "build.gradle",
        "clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java"
      ]
    },
    "message": "KAFKA-15485: Support Java 21 (3/3) (#14433)\n\n* Update CI to build with Java 21 instead of Java 20\n* Disable spotbugs when building with Java 21 as it doesn't support it yet (filed KAFKA-15492 for\naddressing this)\n* Disable SslTransportLayerTest.testValidEndpointIdentificationCN with Java 21 (same as Java 20)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1695629828,
    "epoch_utc": null
  },
  {
    "commit": "a15012078b9fa7a31ede40121bbb509cb17af793",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Mon Sep 25 17:41:53 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Sep 25 17:41:53 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 250,
      "deletions": 207,
      "files": [
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java"
      ]
    },
    "message": "KAFKA-15479: Remote log segments should be considered once for retention breach (#14407)\n\nWhen a remote log segment contains multiple epoch, then it gets considered for multiple times during breach by retention size/time/start-offset. This will affect the deletion by remote log retention size as it deletes the number of segments less than expected. This is a follow-up of KAFKA-15352\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Christo Lolov <lolovc@amazon.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1695674513,
    "epoch_utc": null
  },
  {
    "commit": "7ba6d7a0b439cd7be7918b77c6b08425d6b37526",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Sun Sep 24 06:05:12 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Sep 24 06:05:12 2023 -0700",
    "stats": {
      "files_changed": 12,
      "insertions": 25,
      "deletions": 26,
      "files": [
        "LICENSE-binary",
        "bin/kafka-run-class.sh",
        "bin/windows/kafka-run-class.bat",
        "checkstyle/.scalafmt.conf",
        "core/src/main/scala/kafka/log/LogCleaner.scala",
        "core/src/test/scala/other/kafka/ReplicationQuotasTestRig.scala",
        "core/src/test/scala/unit/kafka/log/LogLoaderTest.scala",
        "core/src/test/scala/unit/kafka/log/TimeIndexTest.scala",
        "core/src/test/scala/unit/kafka/network/SocketServerTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "gradle.properties",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "MINOR: Update to Scala 2.13.12 (#14430)\n\nIt offers a quickfix action for certain errors, includes a number of bug fixes and it\nintroduces a new warning by default (https://github.com/scala/scala/pull/10462).\n\nIn addition to the scala version bump, we also fix the new compiler warnings and\nbump the scalafmt version (the previous version failed with the new scala version).\n\nRelease notes: https://github.com/scala/scala/releases/tag/v2.13.12\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1695546312,
    "epoch_utc": null
  },
  {
    "commit": "d1ad1d7b7013ea2c24a3f71c485a2a914adf1348",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Sun Sep 24 06:01:28 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Sep 24 06:01:28 2023 -0700",
    "stats": {
      "files_changed": 4,
      "insertions": 41,
      "deletions": 27,
      "files": [
        "build.gradle",
        "gradle/dependencies.gradle",
        "gradle/wrapper/gradle-wrapper.properties",
        "gradlew"
      ]
    },
    "message": "MINOR: Upgrade gradle, plugins and test libraries (#14431)\n\nTo prepare Java 21 support, upgrade gradle, its plugins and test libraries.\nRelease notes for major and minor updates included below.\n\nThe highlight is faster Java compilation by not shutting down the daemon at the end of the build.\nGradle's internal performance tests show up to a 30% build time improvement for builds that are\ndominated by compiling Java sources.\n\nMockito turns out to be a complex case where we use one of 3 different versions depending on\nthe Scala and Java versions used. In addition, the default mocking strategy changed from `subclass`\nto `inline` in Mockito 5.0. We now use `inline` across the board (we previously used both `subclass`\nand `inline`). See comments in the relevant parts of the code for more details.\n\n* Gradle 8.3 release notes: https://docs.gradle.org/8.3/release-notes.html\n* jmh 1.37: virtual thread support and various bug fixes\n* JUnit 5.10.0 release notes: https://junit.org/junit5/docs/5.10.0/release-notes/index.html\n* Mockito 5.x release notes:\n* https://github.com/mockito/mockito/releases/tag/v5.0.0\n* https://github.com/mockito/mockito/releases/tag/v5.1.0\n* https://github.com/mockito/mockito/releases/tag/v5.2.0\n* https://github.com/mockito/mockito/releases/tag/v5.3.0\n* https://github.com/mockito/mockito/releases/tag/v5.4.0\n* https://github.com/mockito/mockito/releases/tag/v5.5.0\n* EasyMock 5.2.0 release notes: https://github.com/easymock/easymock/releases/tag/easymock-5.2.0\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1695546088,
    "epoch_utc": null
  },
  {
    "commit": "98febb989abd1bdb624420f21122c477f2614a08",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Sun Sep 24 05:59:29 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Sep 24 05:59:29 2023 -0700",
    "stats": {
      "files_changed": 83,
      "insertions": 110,
      "deletions": 49,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThread.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/MembershipManagerImpl.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetsRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java",
        "clients/src/main/java/org/apache/kafka/common/config/AbstractConfig.java",
        "clients/src/main/java/org/apache/kafka/common/config/ConfigDef.java",
        "clients/src/main/java/org/apache/kafka/common/metrics/Metrics.java",
        "clients/src/main/java/org/apache/kafka/common/protocol/types/Schema.java",
        "clients/src/main/java/org/apache/kafka/common/record/LazyDownConversionRecords.java",
        "clients/src/main/java/org/apache/kafka/common/record/MemoryRecordsBuilder.java",
        "clients/src/main/java/org/apache/kafka/common/requests/DeleteAclsResponse.java",
        "clients/src/main/java/org/apache/kafka/common/requests/DescribeAclsResponse.java",
        "clients/src/main/java/org/apache/kafka/common/security/authenticator/SaslClientAuthenticator.java",
        "clients/src/main/java/org/apache/kafka/common/security/oauthbearer/internals/OAuthBearerSaslClientProvider.java",
        "clients/src/main/java/org/apache/kafka/common/security/oauthbearer/internals/OAuthBearerSaslServerProvider.java",
        "clients/src/main/java/org/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerUnsecuredJws.java",
        "clients/src/main/java/org/apache/kafka/common/security/plain/internals/PlainSaslServerProvider.java",
        "clients/src/main/java/org/apache/kafka/common/security/scram/internals/ScramSaslClientProvider.java",
        "clients/src/main/java/org/apache/kafka/common/security/scram/internals/ScramSaslServerProvider.java",
        "clients/src/main/java/org/apache/kafka/common/utils/ImplicitLinkedHashCollection.java",
        "clients/src/main/java/org/apache/kafka/common/utils/KafkaThread.java",
        "clients/src/main/java/org/apache/kafka/common/utils/PureJavaCrc32C.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/MockAdminClient.java",
        "clients/src/test/java/org/apache/kafka/common/network/NioEchoServer.java",
        "clients/src/test/java/org/apache/kafka/common/network/PlaintextSender.java",
        "clients/src/test/java/org/apache/kafka/common/network/SslSender.java",
        "clients/src/test/java/org/apache/kafka/common/security/ssl/DefaultSslEngineFactoryTest.java",
        "clients/src/test/java/org/apache/kafka/common/security/ssl/mock/TestProvider.java",
        "clients/src/test/java/org/apache/kafka/common/utils/MockScheduler.java",
        "connect/json/src/main/java/org/apache/kafka/connect/json/JsonConverterConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorMakerConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/SourceConnectorConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Worker.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerConnector.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerInfo.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/Plugins.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/RestServer.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaConfigBackingStore.java",
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "generator/src/main/java/org/apache/kafka/message/MessageDataGenerator.java",
        "metadata/src/main/java/org/apache/kafka/image/loader/MetadataBatchLoader.java",
        "raft/src/test/java/org/apache/kafka/raft/MockExpirationService.java",
        "server-common/src/main/java/org/apache/kafka/server/fault/FaultHandlerException.java",
        "server-common/src/main/java/org/apache/kafka/server/util/ShutdownableThread.java",
        "server-common/src/main/java/org/apache/kafka/server/util/timer/TimerTask.java",
        "server-common/src/main/java/org/apache/kafka/server/util/timer/TimerTaskEntry.java",
        "server-common/src/main/java/org/apache/kafka/timeline/TimelineInteger.java",
        "server-common/src/main/java/org/apache/kafka/timeline/TimelineLong.java",
        "server-common/src/main/java/org/apache/kafka/timeline/TimelineObject.java",
        "server-common/src/test/java/org/apache/kafka/server/util/MockTime.java",
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/FileBasedRemoteLogMetadataCache.java",
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/serialization/RemoteLogMetadataSerde.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/epoch/LeaderEpochFileCache.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/AbstractIndex.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogConfig.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/OffsetIndex.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/TimeIndex.java",
        "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java",
        "streams/src/main/java/org/apache/kafka/streams/StreamsBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java",
        "streams/src/main/java/org/apache/kafka/streams/TopologyConfig.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/MaterializedInternal.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateManagerImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorContextImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskManager.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/utils/KafkaEmbedded.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StoreChangelogReaderTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredTimestampedKeyValueStoreTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/TimestampedWindowStoreBuilderTest.java",
        "streams/src/test/java/org/apache/kafka/test/InternalMockProcessorContext.java",
        "streams/src/test/java/org/apache/kafka/test/MockRestoreConsumer.java",
        "trogdor/src/main/java/org/apache/kafka/trogdor/workload/ConfigurableProducerSpec.java",
        "trogdor/src/main/java/org/apache/kafka/trogdor/workload/ConnectionStressSpec.java",
        "trogdor/src/main/java/org/apache/kafka/trogdor/workload/ConsumeBenchSpec.java",
        "trogdor/src/main/java/org/apache/kafka/trogdor/workload/ProduceBenchSpec.java",
        "trogdor/src/main/java/org/apache/kafka/trogdor/workload/RoundTripWorkloadSpec.java",
        "trogdor/src/main/java/org/apache/kafka/trogdor/workload/SustainedConnectionSpec.java"
      ]
    },
    "message": "KAFKA-15485: Fix \"this-escape\" compiler warnings introduced by JDK 21 (1/N) (#14427)\n\nThis is one of the steps required for kafka to compile with Java 21.\n\nFor each case, one of the following fixes were applied:\n1. Suppress warning if fixing would potentially result in an incompatible change (for public classes)\n2. Add final to one or more methods so that the escape is not possible\n3. Replace method calls with direct field access.\n\nIn addition, we also fix a couple of compiler warnings related to deprecated references in the `core` module.\n\nSee the following for more details regarding the new lint warning:\nhttps://www.oracle.com/java/technologies/javase/21-relnote-issues.html#JDK-8015831\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Satish Duggana <satishd@apache.org>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1695545969,
    "epoch_utc": null
  },
  {
    "commit": "6f9681e10f4a94574e7b8e143baea92525d55293",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Sat Sep 23 11:20:22 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Sep 23 11:20:22 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 3,
      "files": [
        "tests/kafkatest/tests/core/kraft_upgrade_test.py"
      ]
    },
    "message": "MINOR: fix kraft upgrade system test (#14424)\n\nWe should use DEV_BRANCH instead of DEV_VERSION in this case, otherwise, error will be thrown:\n\nRunnerClient: kafkatest.tests.core.kraft_upgrade_test.TestKRaftUpgrade.test_isolated_mode_upgrade.from_kafka_version=3.6.0-SNAPSHOT.metadata_quorum=ISOLATED_KRAFT: FAIL: RemoteCommandError({'ssh_config': {'host': 'ducker10', 'hostname': 'ducker10', 'user': 'ducker', 'port': 22, 'password': '', 'identityfile': '/home/ducker/.ssh/id_rsa', 'connecttimeout': None}, 'hostname': 'ducker10', 'ssh_hostname': 'ducker10', 'user': 'ducker', 'externally_routable_ip': 'ducker10', '_logger': <Logger kafkatest.tests.core.kraft_upgrade_test.TestKRaftUpgrade.test_isolated_mode_upgrade.from_kafka_version=3.6.0-SNAPSHOT.metadata_quorum=ISOLATED_KRAFT-2 (DEBUG)>, 'os': 'linux', '_ssh_client': <paramiko.client.SSHClient object at 0xffffb35d5820>, '_sftp_client': <paramiko.sftp_client.SFTPClient object at 0xffffb35f8ca0>, '_custom_ssh_exception_checks': None}, '/opt/kafka-3.6.0-SNAPSHOT/bin/kafka-storage.sh format --ignore-formatted --config /mnt/kafka/kafka.properties --cluster-id I2eXt9rvSnyhct8BYmW6-w', 127, b'bash: line 1: /opt/kafka-3.6.0-SNAPSHOT/bin/kafka-storage.sh: No such file or directory\\n')\n\nReviewers: Satish Duggana <satishd@apache.org>",
    "epoch": 1695478822,
    "epoch_utc": null
  },
  {
    "commit": "daf8a0dedacceb46d6ec2bcc16181abf5963377b",
    "author": "Nikolay",
    "author_email": "nizhikov@apache.org",
    "date": "Sat Sep 23 04:45:14 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Sep 23 09:45:14 2023 +0800",
    "stats": {
      "files_changed": 4,
      "insertions": 799,
      "deletions": 678,
      "files": [
        "checkstyle/import-control.xml",
        "core/src/main/scala/kafka/admin/ReassignPartitionsCommand.scala",
        "core/src/test/scala/unit/kafka/admin/ReassignPartitionsUnitTest.scala",
        "tools/src/test/java/org/apache/kafka/tools/reassign/ReassignPartitionsUnitTest.java"
      ]
    },
    "message": "KAFKA-14595 ReassignPartitionsUnitTest rewritten in java (#14355)\n\nThis PR is part of #13247\nIt contains changes to rewrite single test in java.\nIntention is reduce changes in parent PR.\n\nReviewers: Luke Chen <showuon@gmail.com>, Taras Ledkov <tledkov@apache.org>",
    "epoch": 1695455114,
    "epoch_utc": null
  },
  {
    "commit": "2d262efb00521f824e28cbeb1a1c9d9aeecde123",
    "author": "Alyssa Huang",
    "author_email": "ahuang@confluent.io",
    "date": "Fri Sep 22 11:50:20 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Sep 22 14:50:20 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 108,
      "deletions": 4,
      "files": [
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/RecordTestUtils.java"
      ]
    },
    "message": "[MINOR] QuorumController tests use testToImage (#14405)",
    "epoch": 1695394220,
    "epoch_utc": null
  },
  {
    "commit": "5bdea94c0582104fd1d471918dc143aa9bee67d3",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Fri Sep 22 10:27:11 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Sep 22 11:27:11 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 146,
      "deletions": 240,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredSessionStoreTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredWindowStoreTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/ReadOnlyKeyValueStoreFacadeTest.java"
      ]
    },
    "message": "KAFKA-14133: Move MeteredSessionStoreTest, MeteredWindowStoreTest and ReadOnlyKeyValueStoreFacadeTest to Mockito (#14404)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1695389231,
    "epoch_utc": null
  },
  {
    "commit": "7d89bdc3f0d1b7c477f728449841c45fcfbb5724",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Thu Sep 21 08:07:21 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 21 08:07:21 2023 -0700",
    "stats": {
      "files_changed": 15,
      "insertions": 636,
      "deletions": 93,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CommitRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CoordinatorRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThread.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/NetworkClientDelegate.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetsRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/RequestManagers.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/TopicMetadataRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEventProcessor.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/CommitApplicationEvent.java",
        ".../src/main/java/org/apache/kafka/clients/consumer/internals/events/TopicMetadataApplicationEvent.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CommitRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThreadTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/TopicMetadataRequestManagerTest.java"
      ]
    },
    "message": "KAFKA-14960: TopicMetadata request manager (#14386)\n\nTopicMetadataRequestManager is responsible for sending topic metadata requests. The manager manages API requests and build the request accordingly. All topic metadata requests are chained, if requesting the same topic, to avoid sending requests repeatedly.\n\nCo-authored-by: Lianet Magrans <lmagrans@confluent.io>\nCo-authored-by: Kirk True <kirk@kirktrue.pro>\n\nReviewers: Kirk True <kirk@kirktrue.pro>, Lianet Magrans <lianetmr@gmail.com>, Jun Rao <junrao@gmail.com>",
    "epoch": 1695294441,
    "epoch_utc": null
  },
  {
    "commit": "9e5ca8416de6011fa8c0d63430e9b89fe751ee2b",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Thu Sep 21 11:28:31 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 21 11:28:31 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java"
      ]
    },
    "message": "MINOR: Fix kafka-site formatting (#14419)\n\nReviewers: Satish Duggana <satishd@apache.org>, Josep Prat <jlprat@apache.org>",
    "epoch": 1695306511,
    "epoch_utc": null
  },
  {
    "commit": "47a1a7c70ed3f53583c33b8a00348e6e5a800d28",
    "author": "Nikhil Ramakrishnan",
    "author_email": "nikrmk@amazon.com",
    "date": "Thu Sep 21 14:06:22 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 21 10:36:22 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 156,
      "deletions": 2,
      "files": [
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java"
      ]
    },
    "message": "MINOR: Add additional tests for RemoteLogManager (#14311)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1695315982,
    "epoch_utc": null
  },
  {
    "commit": "fcd382138e7c9db4fceb90424aef7ee1db695240",
    "author": "Wuzhengyu97",
    "author_email": "49513890+Wuzhengyu97@users.noreply.github.com",
    "date": "Thu Sep 21 11:01:08 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 21 11:01:08 2023 +0800",
    "stats": {
      "files_changed": 3,
      "insertions": 10,
      "deletions": 11,
      "files": [
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManager.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/KStreamRepartitionIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/StreamTableJoinTopologyOptimizationIntegrationTest.java"
      ]
    },
    "message": "MINOR: Used Admin instead of AdminClient to create Admin (#14411)\n\nUsed Admin instead of AdminClient to create Admin\n\nReviewers: Ziming Deng <dengziming1993@gmail.com>",
    "epoch": 1695304868,
    "epoch_utc": null
  },
  {
    "commit": "294791e692e7292866e9b1510504050a00ea3704",
    "author": "Colin P. McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Wed Sep 20 11:57:59 2023 -0700",
    "commit_by": "Colin P. McCabe",
    "commit_by_email": "cmccabe@apache.org",
    "commit_by_date": "Wed Sep 20 11:57:59 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "core/src/test/scala/unit/kafka/server/ControllerRegistrationManagerTest.scala"
      ]
    },
    "message": "HOTFIX: fix ControllerRegistrationManagerTest",
    "epoch": 1695221879,
    "epoch_utc": null
  },
  {
    "commit": "7d45d849f8e4592a135c7f75f15e710bfab0a651",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Wed Sep 20 11:44:00 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Sep 20 11:44:00 2023 -0700",
    "stats": {
      "files_changed": 7,
      "insertions": 654,
      "deletions": 121,
      "files": [
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/ControllerRegistrationManager.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/test/scala/unit/kafka/server/ControllerRegistrationManagerTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/ClusterControlManager.java",
        "metadata/src/main/java/org/apache/kafka/metadata/ListenerInfo.java",
        "metadata/src/test/java/org/apache/kafka/metadata/ListenerInfoTest.java"
      ]
    },
    "message": "KAFKA-15458: Fully resolve endpoint information before registering controllers (#14376)\n\nEndpoint information provided by KafkaConfig can be incomplete in two ways. One is that endpoints\nusing ephemeral ports will show up as using port 0. Another is that endpoints binding to 0.0.0.0\nwill show up with a null or blank hostname. Because we were not accounting for this in controller\nregistration, it was leading to a null pointer dereference when we tried to register a controller\nusing an endpoint defined as PLAINTEXT://:9092.\n\nThis PR adds a ListenerInfo class which can fix both of the causes of incomplete endpoint\ninformation. It also handles serialization to and from various RPC and record formats.\nThis allows us to remove a lot of boilerplate code and standardize the handling of listeners\nbetween BrokerServer and ControllerServer.\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1695221040,
    "epoch_utc": null
  },
  {
    "commit": "b088307612b59d9864fb7e3096dc9a0b47d7273d",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Tue Sep 19 09:37:21 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 19 12:37:21 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 23,
      "deletions": 6,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorPluginsResource.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorPluginsResourceTest.java"
      ]
    },
    "message": "KAFKA-15473: Hide duplicate plugins in /connector-plugins (#14398)\n\nReviewers: Yash Mayya <yash.mayya@gmail.com>, Sagar Rao <sagarmeansocean@gmail.com>, Hector Geraldino <hgeraldino@gmail.com>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1695127041,
    "epoch_utc": null
  },
  {
    "commit": "7872a1ff5b2e9a0fbbe3d71180a97e29f1549d4f",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Tue Sep 19 16:39:39 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 19 11:39:39 2023 -0400",
    "stats": {
      "files_changed": 5,
      "insertions": 24,
      "deletions": 30,
      "files": [
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/ConnectWorkerIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/ConnectorTopicsIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/ErrorHandlingIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/RebalanceSourceConnectorsIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectClusterAssertions.java"
      ]
    },
    "message": "KAFKA-14855: Harden integration testing logic for asserting that a connector is deleted (#14371)\n\nReviewers: Sagar Rao <sagarmeansocean@gmail.com>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1695152379,
    "epoch_utc": null
  },
  {
    "commit": "c00c5b1b66704691c09f5b50fa8372cd91626f9b",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Tue Sep 19 20:46:09 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 19 20:46:09 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 76,
      "deletions": 6,
      "files": [
        "core/src/test/scala/integration/kafka/api/TransactionsTest.scala",
        "storage/src/test/java/org/apache/kafka/tiered/storage/integration/TransactionsWithTieredStoreTest.java"
      ]
    },
    "message": "MINOR: Add verification for (local) log start offset in txn tests (#14401)\n\nIn this PR, we noticed failed tests caused by the verification of log start offset and local log start offset. After investigation: #14347 (comment)\n\nhttps://ci-builds.apache.org/job/Kafka/job/kafka-pr/job/PR-14347/13/#showFailuresLink\n\nAfter investigation, I found it's because the scala 2.12 cannot recognize the override method of maybeWaitForAtLeastOneSegmentUpload since it's using varargs in scala. I think there must be some bugs/gaps between java/scala that causes these issue. We can fix it by not using varargs, instead, using the Seq.\n\nThis PR adds back the log start offset and local log start offset verification, and make sure all tests passed.\n\nReviewers: Satish Duggana <satishd@apache.org>, Divij Vaidya <diviv@amazon.com>, Kamal Chandraprakash <kamal.chandraprakash@gmail.com>",
    "epoch": 1695167169,
    "epoch_utc": null
  },
  {
    "commit": "073b9a2a1ec650c3f4af17310608c23d82a7e243",
    "author": "Jouni Tenhunen",
    "author_email": "42916201+tjouni@users.noreply.github.com",
    "date": "Tue Sep 19 13:00:59 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 19 18:00:59 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "core/src/main/scala/kafka/admin/AclCommand.scala"
      ]
    },
    "message": "MINOR: Fix format of allowed operations in kafka-acls error message (#14395)\n\nkafka-acls cli prints the following error message on invalid operation:\n\n$ kafka-acls --bootstrap-server xxx:9095 --remove --allow-principal \"User:abc\" --allow-host * --operation DESCRIBE_CONFIGS --topic xyz\nResourceType TOPIC only supports operations WRITE,DESCRIBE,ALL,READ,CREATE,ALTER,DELETE,DESCRIBE_CONFIGS,ALTER_CONFIGS\n\nThe following command actually works:\n\n$ kafka-acls --bootstrap-server xxx:9095 --remove --allow-principal \"User:abc\" --allow-host * --operation DescribeConfigs --topic xyz\n\nThis PR fixes the invalid formating of operations in the error message and adds a space after the comma.",
    "epoch": 1695139259,
    "epoch_utc": null
  },
  {
    "commit": "58da419035a22fe9c9f5cf2be2f1a13b380355ba",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Tue Sep 19 10:24:04 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 19 11:24:04 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 63,
      "deletions": 112,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/state/internals/KeyValueIteratorFacadeTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/KeyValueSegmentTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredKeyValueStoreTest.java"
      ]
    },
    "message": "KAFKA-14133: Move KeyValueIteratorFacadeTest, KeyValueSegmentTest and MeteredKeyValueStoreTest to Mockito (#14396)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1695129844,
    "epoch_utc": null
  },
  {
    "commit": "eea185447943ade809ffe4cf864832aaa9122c53",
    "author": "Tyler Bertrand",
    "author_email": "121591679+tylerbertrand@users.noreply.github.com",
    "date": "Tue Sep 19 03:51:57 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 19 10:51:57 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 5,
      "deletions": 7,
      "files": [
        "build.gradle",
        "checkstyle/checkstyle.xml"
      ]
    },
    "message": "KAFKA-15476: Resolves cache misses in checkstyle (#14344)\n\nResolves cache misses in checkstyle tasks due to absolute paths in configProperties.\n\nSets configDirectory extension property, which is made available by the checkstyle plugin as ${config_loc} in the checkstyle xml files, as shown in the Checkstyle Gradle docs. The absolute paths set in configProperties are then replaced by relative paths from configDirectory. Because the header and suppression config file names are static and only referenced once, these were removed from configProperties and the file names are given directly in checkstyle.xml\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1695106317,
    "epoch_utc": null
  },
  {
    "commit": "1c402297d60152722cf5544a14ca5271d576d55e",
    "author": "Lianet Magrans",
    "author_email": "98415067+lianetm@users.noreply.github.com",
    "date": "Mon Sep 18 15:21:19 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Sep 18 12:21:19 2023 -0700",
    "stats": {
      "files_changed": 4,
      "insertions": 195,
      "deletions": 39,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerUtils.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumerTest.java"
      ]
    },
    "message": "KAFKA-15306 - Integrating committed offsets for updating fetch positions (#14385)\n\nSupport for using committed offsets to update fetch positions.\n\nThis PR includes:\n* movingrefreshCommittedOffsets function out of the existing ConsumerCoordinator so it can be reused (no code changes)\n* using the above refreshCommittedOffsets for updating fetch positions if the consumer has enabled the Kafka-based offsets management by defining a groupId\n\nReviewers: Jun Rao <junrao@gmail.com>",
    "epoch": 1695061279,
    "epoch_utc": null
  },
  {
    "commit": "f041efa5fd82d6a435be80481e40a7bfcd56ed19",
    "author": "Nick Telford",
    "author_email": "nick.telford@gmail.com",
    "date": "Mon Sep 18 10:09:10 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Sep 18 11:09:10 2023 +0200",
    "stats": {
      "files_changed": 4,
      "insertions": 155,
      "deletions": 6,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBTimestampedStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorder.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/metrics/RocksDBBlockCacheMetricsTest.java",
        ".../src/test/java/org/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorderGaugesTest.java"
      ]
    },
    "message": "KAFKA-13973: Fix inflated block cache metrics (#14317)\n\nAll block cache metrics are being multiplied by the total number of\ncolumn families. In a `RocksDBTimestampedStore`, we have 2 column\nfamilies (the default, and the timestamped values), which causes all\nblock cache metrics in these stores to become doubled.\n\nThe cause is that our metrics recorder uses `getAggregatedLongProperty`\nto fetch block cache metrics. `getAggregatedLongProperty` queries the\nproperty on each column family in the database, and sums the results.\n\nSince we always configure all column families to share the same block\ncache, that causes the same block cache to be queried multiple times for\nits metrics, with the results added togehter, effectively multiplying\nthe real value by the total number of column families.\n\nTo fix this, we should simply use `getLongProperty`, which queries a\nsingle column family (the default one). Since all column families share\nthe same block cache, querying just one of them will give us the correct\nmetrics for that shared block cache.\n\nNote: the same block cache is shared among all column families of a store\nirrespective of whether the user has configured a shared block cache\nacross multiple stores.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>, Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1695042550,
    "epoch_utc": null
  },
  {
    "commit": "e1dc6d9f3493eb35e3d3eef1d70c2d1fc94d74c2",
    "author": "Kirk True",
    "author_email": "kirk@kirktrue.pro",
    "date": "Sat Sep 16 09:15:37 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Sep 16 09:15:37 2023 -0700",
    "stats": {
      "files_changed": 36,
      "insertions": 2387,
      "deletions": 692,
      "files": [
        "checkstyle/suppressions.xml",
        "clients/src/main/java/org/apache/kafka/clients/NetworkClientUtils.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractFetch.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CompletedFetch.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerUtils.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThread.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultEventHandler.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/FetchBuffer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/FetchCollector.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/FetchUtils.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/NetworkClientDelegate.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetsRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEventProcessor.java",
        ".../main/java/org/apache/kafka/clients/consumer/internals/events/AssignmentChangeApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/BackgroundEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/CommitApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/CompletableApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ErrorBackgroundEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ListOffsetsApplicationEvent.java",
        ".../main/java/org/apache/kafka/clients/consumer/internals/events/NewTopicsMetadataUpdateRequestEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/NoopApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/{ => events}/NoopBackgroundEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/OffsetFetchApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/PollApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/common/internals/IdempotentCloser.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CompletedFetchTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetchBufferTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetchCollectorTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/OffsetsRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumerTest.java",
        "clients/src/test/java/org/apache/kafka/common/internals/IdempotentCloserTest.java"
      ]
    },
    "message": "KAFKA-14274 [2-5/7]: Introduction of more infrastructure for forthcoming fetch request manager (#14359)\n\nThis continues the work of providing the groundwork for the fetch\nrefactoring work by introducing some new classes and refactoring the\nexisting code to use the new classes where applicable.\n\nChanges:\n\n* Minor clean up of the events classes to make data immutable,\nprivate, and implement toString().\n* Added IdempotentCloser which prevents a resource from being closed\nmore than once. It's general enough that it could be used elsewhere\nin the project, but it's limited to the consumer internals for now.\n* Split core Fetcher code into classes to buffer raw results\n(FetchBuffer) and to collect raw results into ConsumerRecords\n(FetchCollector). These can be tested and changed in isolation from\nthe core fetcher logic.\n* Added NodeStatusDetector which abstracts methods from\nConsumerNetworkClient so that it and NetworkClientDelegate can be\nused in AbstractFetch via the interface instead of using\nConsumerNetworkClient directly.\n\nReviewers: Jun Rao <junrao@gmail.com>",
    "epoch": 1694866537,
    "epoch_utc": null
  },
  {
    "commit": "f46db86d34f9e5fe1b0d7604306a5108a89c113e",
    "author": "Eike Thaden",
    "author_email": "eike.thaden@gmail.com",
    "date": "Fri Sep 15 17:36:37 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Sep 15 21:06:37 2023 +0530",
    "stats": {
      "files_changed": 9,
      "insertions": 1229,
      "deletions": 11,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/config/SslConfigs.java",
        "clients/src/main/java/org/apache/kafka/common/security/ssl/CommonNameLoggingSslEngineFactory.java",
        ".../src/main/java/org/apache/kafka/common/security/ssl/CommonNameLoggingTrustManagerFactoryWrapper.java",
        "clients/src/main/java/org/apache/kafka/common/security/ssl/DefaultSslEngineFactory.java",
        "clients/src/test/java/org/apache/kafka/common/security/ssl/CommonNameLoggingSslEngineFactoryTest.java",
        ".../test/java/org/apache/kafka/common/security/ssl/CommonNameLoggingTrustManagerFactoryWrapperTest.java",
        "clients/src/test/java/org/apache/kafka/common/security/ssl/DefaultSslEngineFactoryTest.java",
        "clients/src/test/java/org/apache/kafka/test/TestSslUtils.java",
        "clients/src/test/resources/log4j.properties"
      ]
    },
    "message": "KAFKA-15273: Log common name of expired client certificates (#14130)\n\nThis contribution extends the TrustManager created by the DefaultSSLEngineFactory class with code that checks for any invalid certificate whether it is just expired but valid otherwise. If this is the case, it extracts the common name and logs it. Apart from that, the trust manager will behave exactly as the default one.\n\nExtensive unit tests are included in this pull request for ensuring that the modified trust manager will behave exactly as the default one, except for logging expired certificates common name. The test code generates several certificate chains with valid, invalid and expired end certificates, root CAs and even intermediate CAs.\n\nThis contribution is my original work and I license the work to the project under the project's open source license.\n\n\nReviewers: Manikumar Reddy <manikumar.reddy@gmail.com>, Rajini Sivaram <rajinisivaram@googlemail.com>",
    "epoch": 1694810197,
    "epoch_utc": null
  },
  {
    "commit": "f309299f3cf92c3ed6fe545c628117b9028c2917",
    "author": "zhaohaidao",
    "author_email": "76048421@qq.com",
    "date": "Fri Sep 15 14:45:03 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 14 23:45:03 2023 -0700",
    "stats": {
      "files_changed": 10,
      "insertions": 365,
      "deletions": 8,
      "files": [
        "checkstyle/suppressions.xml",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/Group.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorShard.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroup.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/generic/GenericGroup.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorServiceTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroupTest.java"
      ]
    },
    "message": "KAFKA-14503: Implement ListGroups (#14271)\n\nThis patch implements the ListGroups API in the new group coordinator.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1694799903,
    "epoch_utc": null
  },
  {
    "commit": "ac39342d47062c1a9aec9b744b40ad7fd2de27b2",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Thu Sep 14 20:21:00 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 14 20:21:00 2023 +0800",
    "stats": {
      "files_changed": 3,
      "insertions": 105,
      "deletions": 0,
      "files": [
        "docs/ops.html",
        "docs/toc.html",
        "docs/upgrade.html"
      ]
    },
    "message": "KAFKA-15442: add a section in doc for tiered storage  (#14382)\n\nAdded 6.11: Tiered Storage section and notable changes ini v3.6.0\n\nReviewers: Satish Duggana <satishd@apache.org>, Gantigmaa Selenge <gselenge@redhat.com>",
    "epoch": 1694733660,
    "epoch_utc": null
  },
  {
    "commit": "2a41beb0f49f947cfa7dfd99101c8b1ba89842cb",
    "author": "Eaugene Thomas",
    "author_email": "eaugene9207@gmail.com",
    "date": "Thu Sep 14 12:23:57 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 14 14:53:57 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 20,
      "deletions": 1,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/utils/AppInfoParser.java",
        "clients/src/test/java/org/apache/kafka/common/utils/AppInfoParserTest.java"
      ]
    },
    "message": "MINOR: Check the existence of AppInfo for the given ID before creating a new mbean of the same name (#14287)\n\nWhen using kafka consumer in apache pinot , we did see couple of WARN as we are trying to create kafka consumer class with the same name . We currently have to use a added suffix to create a new mBean as each new kafka consumer in same process creates a mBean . Adding support here to skip creation of mBean if its already existing\n\nReviewers: Satish Duggana <satishd@apache.org>, Luke Chen <showuon@gmail.com>",
    "epoch": 1694705037,
    "epoch_utc": null
  },
  {
    "commit": "dacb3b31d989f4ead56a56e47f27e37ac85d7b33",
    "author": "Kamal Chandraprakash",
    "author_email": "kamal.chandraprakash@gmail.com",
    "date": "Thu Sep 14 07:22:13 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 14 09:52:13 2023 +0800",
    "stats": {
      "files_changed": 14,
      "insertions": 377,
      "deletions": 204,
      "files": [
        "core/src/test/scala/integration/kafka/api/TransactionsTest.scala",
        "storage/src/test/java/org/apache/kafka/tiered/storage/TieredStorageTestHarness.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/ConsumeAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/CreateTopicAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/ExpectBrokerInISRAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/ExpectLeaderAction.java",
        ".../src/test/java/org/apache/kafka/tiered/storage/actions/ExpectTopicIdToMatchInRemoteStorageAction.java",
        ".../java/org/apache/kafka/tiered/storage/actions/ExpectUserTopicMappedToMetadataPartitionsAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/ProduceAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/ReassignReplicaAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/ShrinkReplicaAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/integration/TransactionsWithTieredStoreTest.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/utils/ActionUtils.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/utils/TieredStorageTestUtils.java"
      ]
    },
    "message": "KAFKA-15439: Transactions test with tiered storage (#14347)\n\nThis test extends the existing TransactionsTest. It configures the broker and topic with tiered storage and expects at-least one log segment to be uploaded to the remote storage.\n\nReviewers: Luke Chen <showuon@gmail.com>, Satish Duggana <satishd@apache.org>,  Divij Vaidya <diviv@amazon.com>",
    "epoch": 1694686933,
    "epoch_utc": null
  },
  {
    "commit": "5aecd2825644728f68a26558c957f5dfd4643423",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Wed Sep 13 14:21:58 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Sep 13 14:21:58 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 130,
      "deletions": 50,
      "files": [
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala"
      ]
    },
    "message": "KAFKA-15459: Convert coordinator retriable errors to a known producer response error (#14378)\n\nKIP-890 Part 1 tries to address hanging transactions on old clients. Thus, the produce version can not be bumped and no new errors can be added. Before we used the java client's notion of retriable and abortable errors -- retriable errors are defined as such by extending the retriable error class, fatal errors are defined explicitly, and abortable errors are the remaining. However, many other clients treat non specified errors as fatal and that means many retriable errors kill the application.\n\nStuck between having specific errors for Java clients that are handled correctly (ie we retry) or specific fatal errors for cases that should not be fatal, we opted for a middle ground of non-specific error, but a message in the response to specify.\n\nConverting some of the coordinator error codes to NOT_ENOUGH_REPLICAS which is a known produce response.\nAlso correctly add the old errors to the produce response. (We were not doing this correctly before)\n\nAdded tests for the new errors and messages.\n\nReviewers: Jason Gustafson <jason@confluent.io>, David Jacot <djacot@confluent.io>",
    "epoch": 1694625718,
    "epoch_utc": null
  },
  {
    "commit": "a7e865c0a756504cc7ae6f4eb0772cadd3333c53",
    "author": "Lianet Magrans",
    "author_email": "98415067+lianetm@users.noreply.github.com",
    "date": "Wed Sep 13 10:49:41 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Sep 13 07:49:41 2023 -0700",
    "stats": {
      "files_changed": 18,
      "insertions": 960,
      "deletions": 209,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/LogTruncationException.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThread.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetFetcher.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetFetcherUtils.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetsForLeaderEpochClient.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetsForLeaderEpochUtils.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetsRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEventProcessor.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/CompletableApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ListOffsetsApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/OffsetFetchApplicationEvent.java",
        ".../src/main/java/org/apache/kafka/clients/consumer/internals/events/ResetPositionsApplicationEvent.java",
        ".../main/java/org/apache/kafka/clients/consumer/internals/events/ValidatePositionsApplicationEvent.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThreadTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/OffsetForLeaderEpochClientTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/OffsetsRequestManagerTest.java"
      ]
    },
    "message": "KAFKA-15115 - KAFKA-15163; Reset/Validate positions implementation & API integration (#14346)\n\nImplementation of the required functionality for resetting and validating positions in the new async consumer.\n\nThis PR includes:\n1. New async application events ResetPositionsApplicationEvent and ValidatePositionsApplicationEvent, both handled by the same OfffsetsRequestManager.\n2. Integration of the reset/validate functionality in the new async consumer, to update fetch positions using the partitions offsets.\n3. Minor refactoring to extract functionality that is reused from both consumer implementations (moving logic without changes from OffsetFetcher into OffsetFetchUtils, and from OffsetsForLeaderEpochClient into OffsetsForLeaderEpochUtils)\n\nReviewers: Philip Nee <pnee@confluent.io>, Kirk True <kirk@mustardgrain.com>, Jun Rao<junrao@gmail.com>",
    "epoch": 1694612981,
    "epoch_utc": null
  },
  {
    "commit": "0e47fa75371dda275de73610b414c16a639895f3",
    "author": "Lianet Magrans",
    "author_email": "98415067+lianetm@users.noreply.github.com",
    "date": "Wed Sep 13 08:07:56 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Sep 13 05:07:56 2023 -0700",
    "stats": {
      "files_changed": 6,
      "insertions": 726,
      "deletions": 0,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AssignorSelection.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/MemberState.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/MembershipManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/MembershipManagerImpl.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/AssignorSelectionTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/MembershipManagerImplTest.java"
      ]
    },
    "message": "KAFKA-15275 - Client state machine basic components, states and initial transitions (#14323)\n\nInitial definition of the core components for maintaining group membership on the client following the new consumer group protocol.\n\nThis PR includes:\n- Membership management for keeping member state and assignment, based on the heartbeat responses received.\n- Assignor selection logic to support server side assignors.\nThis only includes the basic initial states and transitions, to be extended as we implement the protocol.\n\nThis is intended to be used from the heartbeat and assignment requests manager that actually build and process the heartbeat and assignment related requests.\n\nReviewers: Philip Nee <pnee@confluent.io>, Kirk True <ktrue@confluent.io>, David Jacot <djacot@confluent.io>",
    "epoch": 1694603276,
    "epoch_utc": null
  },
  {
    "commit": "e9057aab37a1aedc2917f82922aff11661d9a001",
    "author": "Jeff Kim",
    "author_email": "kimkb2011@gmail.com",
    "date": "Wed Sep 13 04:43:37 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Sep 13 01:43:37 2023 -0700",
    "stats": {
      "files_changed": 9,
      "insertions": 893,
      "deletions": 18,
      "files": [
        "checkstyle/suppressions.xml",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorShard.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/generic/GenericGroup.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorResult.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorServiceTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java"
      ]
    },
    "message": "KAFKA-14502; Implement LeaveGroup protocol in new GroupCoordinator (#14147)\n\nThis patch implements the LeaveGroup API in the new group coordinator.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1694591017,
    "epoch_utc": null
  },
  {
    "commit": "8a7e5e8ea0fe7793514b083d970fb5b1e87ba08d",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Wed Sep 13 15:15:36 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Sep 13 12:45:36 2023 +0530",
    "stats": {
      "files_changed": 4,
      "insertions": 13,
      "deletions": 10,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/config/TopicConfig.java",
        "storage/api/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteLogMetadataManager.java",
        "storage/api/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteStorageManager.java",
        "storage/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteLogManagerConfig.java"
      ]
    },
    "message": "MINOR: Fix errors in javadoc and docs in tiered storage (#14379)\n\nReviewers: Satish Duggana <satishd@apache.org>",
    "epoch": 1694628936,
    "epoch_utc": null
  },
  {
    "commit": "4be174f5c1eed700411f0806a2eb391cee3f1177",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Wed Sep 13 00:36:31 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 12 22:06:31 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManagerConfig.java"
      ]
    },
    "message": "MINOR: reduce default RLMM retry interval (#14374)\n\nReduce default remote.log.metadata.initialization.retry.interval.ms value to 100ms.\n\nReviewers: Satish Duggana <satishd@apache.org>, Kamal Chandraprakash<kamal.chandraprakash@gmail.com>",
    "epoch": 1694576191,
    "epoch_utc": null
  },
  {
    "commit": "50693198e3b41160cab592fc48d603879e6b0cce",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Tue Sep 12 10:27:50 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 12 10:27:50 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 13,
      "deletions": 0,
      "files": [
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/test/scala/unit/kafka/server/KafkaConfigTest.scala"
      ]
    },
    "message": "KAFKA-15450 Don't allow ZK migration with JBOD (#14367)\n\nReviewers: Ron Dagostino <rndgstn@gmail.com>",
    "epoch": 1694525270,
    "epoch_utc": null
  },
  {
    "commit": "4405f8f956869acd98d02c502353193f8a69cfbd",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Tue Sep 12 14:44:04 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 12 20:44:04 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 1,
      "files": [
        "docs/ops.html"
      ]
    },
    "message": "MINOR: Fix metadata.version reference in \"ZooKeeper to KRaft Migration\" documentation (#14366)\n\nIn \"ZooKeeper to KRaft Migration\" documentation, we are still reporting 3.4 as metadata version. Reworking that phrase to make it more clear and avoid the need to update it in the future.\n\nSigned-off-by: Federico Valeri <fedevaleri@gmail.com>\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1694540644,
    "epoch_utc": null
  },
  {
    "commit": "a63bf93dcea092642314765fbcf09b3cf2c6798e",
    "author": "Abhijeet Kumar",
    "author_email": "abhijeet.cse.kgp@gmail.com",
    "date": "Tue Sep 12 17:54:20 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 12 17:54:20 2023 +0530",
    "stats": {
      "files_changed": 5,
      "insertions": 42,
      "deletions": 12,
      "files": [
        "core/src/test/scala/unit/kafka/log/remote/RemoteIndexCacheTest.scala",
        "storage/api/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteStorageManager.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/RemoteIndexCache.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/LocalTieredStorage.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/LocalTieredStorageTest.java"
      ]
    },
    "message": "KAFKA-14993: Improve TransactionIndex instance handling while copying to and fetching from RSM (#14363)\n\n- Updated the contract for RSM's fetchIndex to throw a ResourceNotFoundException instead of returning an empty InputStream when it does not have a TransactionIndex.\n- Updated the LocalTieredStorage implementation to adhere to the new contract.\n- Added Unit Tests for the change.\n\nReviewers: Satish Duggana <satishd@apache.org>, Luke Chen <showuon@gmail.com>, Divij Vaidya <diviv@amazon.com>, Christo Lolov <lolovc@amazon.com>, Kamal Chandraprakash<kamal.chandraprakash@gmail.com>",
    "epoch": 1694552060,
    "epoch_utc": null
  },
  {
    "commit": "7483991a0122c1c9493464efbcda1c8a93c74fd6",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Tue Sep 12 05:42:30 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 12 10:12:30 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 251,
      "deletions": 40,
      "files": [
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java"
      ]
    },
    "message": "KAFKA-15352: Update log-start-offset before initiating deletion of remote segments (#14349)\n\nThis change is about the current leader updating the log-start-offset before the segments are deleted from remote storage. This will do a best-effort mechanism for followers to receive log-start-offset from the leader and they can update their log-start-offset before it becomes a leader.\n\nReviewers: Kamal Chandraprakash<kamal.chandraprakash@gmail.com>, Divij Vaidya <diviv@amazon.com>, Luke Chen <showuon@gmail.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1694508150,
    "epoch_utc": null
  },
  {
    "commit": "39cc19c9924cd5589dc5b98b75ec8d380c159205",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Mon Sep 11 11:04:38 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Sep 11 11:04:38 2023 -0700",
    "stats": {
      "files_changed": 22,
      "insertions": 85,
      "deletions": 85,
      "files": [
        "core/src/main/scala/kafka/coordinator/transaction/ProducerIdManager.scala",
        "core/src/main/scala/kafka/network/RequestChannel.scala",
        "core/src/main/scala/kafka/raft/KafkaNetworkChannel.scala",
        "core/src/main/scala/kafka/server/AlterPartitionManager.scala",
        "core/src/main/scala/kafka/server/AutoTopicCreationManager.scala",
        "core/src/main/scala/kafka/server/BrokerLifecycleManager.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/ControllerRegistrationManager.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/ForwardingManager.scala",
        "core/src/main/scala/kafka/server/KafkaBroker.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/server/{BrokerToControllerChannelManager.scala => NodeToControllerChannelManager.scala}",
        "core/src/test/scala/kafka/server/{BrokerToControllerRequestThreadTest.scala => NodeToControllerRequestThreadTest.scala}",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/ProducerIdManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/AlterPartitionManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/AutoTopicCreationManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/BrokerRegistrationRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/ForwardingManagerTest.scala",
        ".../scala/unit/kafka/server/{MockBrokerToControllerChannelManager.scala => MockNodeToControllerChannelManager.scala}",
        "core/src/test/scala/unit/kafka/server/RegistrationTestContext.scala"
      ]
    },
    "message": "MINOR: rename BrokerToControllerChannelManager to NodeToControllerChannelManager (#14356)\n\nReviewers: David Jacot <david.jacot@gmail.com>",
    "epoch": 1694441078,
    "epoch_utc": null
  },
  {
    "commit": "6123071fc05f714f8781edac6686c9c4e98fdd35",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Mon Sep 11 10:48:02 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Sep 11 10:48:02 2023 -0700",
    "stats": {
      "files_changed": 10,
      "insertions": 968,
      "deletions": 256,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/OffsetCommitRequest.java",
        "clients/src/main/java/org/apache/kafka/common/requests/OffsetFetchRequest.java",
        "clients/src/main/resources/common/message/OffsetFetchRequest.json",
        "clients/src/test/java/org/apache/kafka/common/requests/OffsetFetchRequestTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/RequestResponseTest.java",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/test/java/kafka/test/junit/ZkClusterInvocationContext.java",
        "core/src/test/scala/unit/kafka/server/GroupCoordinatorBaseRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/OffsetCommitRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/OffsetFetchRequestTest.scala"
      ]
    },
    "message": "KAFKA-14499: [7/7] Add integration tests for OffsetCommit API and OffsetFetch API (#14353)\n\nThis patch adds integration tests for the OffsetCommit API and the OffsetFetch API. The tests runs against the old and the new group coordinator and with the new and the old consumer rebalance protocol.\n\nReviewers: Ritika Reddy <rreddy@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1694440082,
    "epoch_utc": null
  },
  {
    "commit": "37c01e9992c86139f1ec2b1d5cdeab2dbb2c684c",
    "author": "tkuramoto33",
    "author_email": "70622977+tkuramoto33@users.noreply.github.com",
    "date": "Mon Sep 11 20:35:26 2023 +0900",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Sep 11 19:35:26 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "shell/src/main/java/org/apache/kafka/shell/MetadataShell.java"
      ]
    },
    "message": "MINOR: Fix help message for kafka-metadata-shell (#13867)\n\nReviewers: Ziming Deng dengziming1993@gmail.com",
    "epoch": 1694475326,
    "epoch_utc": null
  },
  {
    "commit": "7fc65003fce1108222421b77fc527a3d3a99b46a",
    "author": "Roon",
    "author_email": "100839953+roon-replica@users.noreply.github.com",
    "date": "Mon Sep 11 20:30:57 2023 +0900",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Sep 11 19:30:57 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 2,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/admin/TransactionState.java"
      ]
    },
    "message": "KAFKA-15315: Use getOrDefault rather than get in TransactionState (#14167)\n\nReviewers: Ziming Deng dengziming1993@gmail.com.",
    "epoch": 1694475057,
    "epoch_utc": null
  },
  {
    "commit": "07a18478be51ae32e9a9a1954f5ecb9eea792443",
    "author": "Lucas Brutschy",
    "author_email": "lucasbru@users.noreply.github.com",
    "date": "Mon Sep 11 09:58:20 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Sep 11 09:58:20 2023 +0200",
    "stats": {
      "files_changed": 6,
      "insertions": 201,
      "deletions": 11,
      "files": [
        "gradle/spotbugs-exclude.xml",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskExecutor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskManager.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/tasks/TaskManager.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskExecutorTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskManagerTest.java"
      ]
    },
    "message": "KAFKA-15326: [7/N] Processing thread non-busy waiting (#14180)\n\nAvoid busy waiting for processable tasks. We need to be a bit careful here to not have the task executors to sleep when work is available. We have to make sure to signal on the condition variable any time a task becomes \"processable\". Here are some situations where a task becomes processable:\n\n- Task is unassigned from another TaskExecutor.\n- Task state is changed (should only happen inside when a task is locked inside the polling phase).\n- When tasks are unlocked.\n- When tasks are added.\n- New records available.\n- A task is resumed.\n\nSo in summary, we\n\n- We should probably lock tasks when they are paused and unlock them when they are resumed. We should also wake the task executors after every polling phase. This belongs to the StreamThread integration work (separate PR). We add DefaultTaskManager.signalProcessableTasks for this.\n- We need to awake the task executors in DefaultTaskManager.unassignTask, DefaultTaskManager.unlockTasks and DefaultTaskManager.add.\n\n\nReviewers: Walker Carlson <wcarlson@confluent.io>, Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1694437100,
    "epoch_utc": null
  },
  {
    "commit": "b72d92919f71f7360cd712741c0470759fc10239",
    "author": "Ruslan Krivoshein",
    "author_email": "krivosheinruslan@hotmail.com",
    "date": "Mon Sep 11 05:30:22 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Sep 11 10:30:22 2023 +0800",
    "stats": {
      "files_changed": 11,
      "insertions": 1053,
      "deletions": 851,
      "files": [
        "bin/kafka-get-offsets.sh",
        "bin/windows/kafka-get-offsets.bat",
        "core/src/main/scala/kafka/tools/GetOffsetShell.scala",
        "core/src/test/scala/kafka/tools/GetOffsetShellParsingTest.scala",
        "core/src/test/scala/kafka/tools/GetOffsetShellTest.scala",
        "tests/kafkatest/services/kafka/kafka.py",
        "tools/src/main/java/org/apache/kafka/tools/GetOffsetShell.java",
        "tools/src/main/java/org/apache/kafka/tools/ReplicaVerificationTool.java",
        "tools/src/main/java/org/apache/kafka/tools/ToolsUtils.java",
        "tools/src/test/java/org/apache/kafka/tools/GetOffsetShellParsingTest.java",
        "tools/src/test/java/org/apache/kafka/tools/GetOffsetShellTest.java"
      ]
    },
    "message": "KAFKA-14581: Moving GetOffsetShell to tools (#13562)\n\nThis PR moves GetOffsetShell from core module to tools module with rewriting from Scala to Java.\n\nReviewers: Federico Valeri fedevaleri@gmail.com, Ziming Deng dengziming1993@gmail.com, Mickael Maison mimaison@apache.org.",
    "epoch": 1694421022,
    "epoch_utc": null
  },
  {
    "commit": "672ea644f002e9d5a858a8c19b95de1199bcca5c",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Sat Sep 9 19:02:42 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Sep 9 19:02:42 2023 +0530",
    "stats": {
      "files_changed": 3,
      "insertions": 15,
      "deletions": 4,
      "files": [
        "storage/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteLogManagerConfig.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/LocalTieredStorage.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/TieredStorageTestContext.java"
      ]
    },
    "message": "MINOR: Removed the RSM and RLMM classpath config validator (#14358)\n\n- RSM and RLMM classpath can be empty since it's optional so removed the non-empty string validator\n- Fix getting the `localTieredStorage` by brokerId after stopping a broker.\n\nReviewers: Christo Lolov <lolovc@amazon.com>, Luke Chen <showuon@gmail.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1694296962,
    "epoch_utc": null
  },
  {
    "commit": "b24ccd65b7ae9585de19a9cc1b2bf6a10a542cd8",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Fri Sep 8 16:36:13 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Sep 8 16:36:13 2023 -0400",
    "stats": {
      "files_changed": 4,
      "insertions": 105,
      "deletions": 31,
      "files": [
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java"
      ]
    },
    "message": "KAFKA-15441 Allow broker heartbeats to complete in metadata transaction (#14351)\n\nThis patch allows broker heartbeat events to be completed while a metadata transaction is in-flight.\n\nMore generally, this patch allows any RUNS_IN_PREMIGRATION event to complete while the controller\nis in pre-migration mode even if the migration transaction is in-flight.\n\nWe had a problem with broker heartbeats timing out because they could not be completed while a large\nZK migration transaction was in-flight. This resulted in the controller fencing all the ZK brokers which\nhas many undesirable downstream effects.\n\nReviewers: Akhilesh Chaganti <akhileshchg@users.noreply.github.com>, Colin Patrick McCabe <cmccabe@apache.org>",
    "epoch": 1694201773,
    "epoch_utc": null
  },
  {
    "commit": "84c49c6a098986f7da9f08dc53e6a31c13484c5b",
    "author": "Nikhil Ramakrishnan",
    "author_email": "nikrmk@amazon.com",
    "date": "Fri Sep 8 12:51:12 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Sep 8 19:51:12 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 0,
      "files": [
        "core/src/main/scala/kafka/server/ReplicaManager.scala"
      ]
    },
    "message": "MINOR: Log when remote fetch execution is rejected (#14350)\n\nLog at warning level when remote fetch execution is rejected. This can be potentially useful to troubleshoot UNKNOWN_SERVER_ERROR responses for remote fetch requests.\n\nReviewers: Luke Chen <showuon@gmail.com>, Christo Lolov <lolovc@amazon.com>",
    "epoch": 1694188272,
    "epoch_utc": null
  },
  {
    "commit": "17862ffaf2ec4efe7e3eeebf70ab9f1e1e1c70c7",
    "author": "Lucia Cerchie",
    "author_email": "luciacerchie@gmail.com",
    "date": "Fri Sep 8 02:58:32 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Sep 8 11:58:32 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 2,
      "files": [
        "docs/design.html"
      ]
    },
    "message": "KAFKA-15418: update Kafka design docs with decompression information (#14322)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Matthias J. Sax <mjsax@apache.org>\n\n---------\n\nCo-authored-by: Cerchie <lcerchie@confluent.io>",
    "epoch": 1694152712,
    "epoch_utc": null
  },
  {
    "commit": "01b91af59cb08b843470742a7a25d1f4239ebf45",
    "author": "Lucas Brutschy",
    "author_email": "lucasbru@users.noreply.github.com",
    "date": "Fri Sep 8 04:25:31 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 7 19:25:31 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 1,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java"
      ]
    },
    "message": "MINOR: fix currentLag javadoc (#14224)\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1694157931,
    "epoch_utc": null
  },
  {
    "commit": "9ecf6f7f1c6d47198c449c8d4d0ba060996334ea",
    "author": "atu-sharm",
    "author_email": "131497429+atu-sharm@users.noreply.github.com",
    "date": "Fri Sep 8 07:35:14 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 7 19:05:14 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 4,
      "deletions": 4,
      "files": [
        "docs/ops.html"
      ]
    },
    "message": "KAFKA-15338: The metric group documentation for metrics added in KAFKA-13945 is incorrect (#14221)\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1694169314,
    "epoch_utc": null
  },
  {
    "commit": "54ab5b29e47fd3f399e0575df2f490a33f12804b",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Thu Sep 7 19:24:17 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 7 19:24:17 2023 -0400",
    "stats": {
      "files_changed": 3,
      "insertions": 79,
      "deletions": 63,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/OffsetSyncStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/TopicAdmin.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/TopicAdminTest.java"
      ]
    },
    "message": "KAFKA-15416: Fix flaky TopicAdminTest::retryEndOffsetsShouldRetryWhenTopicNotFound test case (#14313)\n\nReviewers: Philip Nee <pnee@confluent.io>, Greg Harris <greg.harris@aiven.io>",
    "epoch": 1694125457,
    "epoch_utc": null
  },
  {
    "commit": "7b669e8806ce9d122233afeec03eb4e15bde808a",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Thu Sep 7 16:17:03 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 7 16:17:03 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 35,
      "deletions": 12,
      "files": [
        "raft/src/main/java/org/apache/kafka/raft/FileBasedStateStore.java",
        "raft/src/test/java/org/apache/kafka/raft/FileBasedStateStoreTest.java"
      ]
    },
    "message": "KAFKA-14273; Close file before atomic move (#14354)\n\nIn the Windows OS atomic move are not allowed if the file has another open handle. E.g\n\n__cluster_metadata-0\\quorum-state: The process cannot access the file because it is being used by another process\nat java.base/sun.nio.fs.WindowsException.translateToIOException(WindowsException.java:92)\nat java.base/sun.nio.fs.WindowsException.rethrowAsIOException(WindowsException.java:103)\nat java.base/sun.nio.fs.WindowsFileCopy.move(WindowsFileCopy.java:403)\nat java.base/sun.nio.fs.WindowsFileSystemProvider.move(WindowsFileSystemProvider.java:293)\nat java.base/java.nio.file.Files.move(Files.java:1430)\nat org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:949)\nat org.apache.kafka.common.utils.Utils.atomicMoveWithFallback(Utils.java:932)\nat org.apache.kafka.raft.FileBasedStateStore.writeElectionStateToFile(FileBasedStateStore.java:152)\n\nThis is fixed by first closing the temporary quorum-state file before attempting to move it.\n\nReviewers: Colin Patrick McCabe <cmccabe@apache.org>\nCo-Authored-By: Renaldo Baur Filho <renaldobf@gmail.com>",
    "epoch": 1694114223,
    "epoch_utc": null
  },
  {
    "commit": "a2de7d32c89a7d9e68a0568adf7489165485862b",
    "author": "Kirk True",
    "author_email": "kirk@kirktrue.pro",
    "date": "Thu Sep 7 15:23:44 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 7 15:23:44 2023 -0700",
    "stats": {
      "files_changed": 10,
      "insertions": 153,
      "deletions": 51,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/NetworkClientUtils.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractFetch.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CommitRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CompletedFetch.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CoordinatorRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/RequestState.java",
        "clients/src/main/java/org/apache/kafka/common/utils/ExponentialBackoff.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/RequestStateTest.java"
      ]
    },
    "message": "KAFKA-14274 #1: basic refactoring (#14305)\n\nThis change introduces some basic clean up and refactoring for forthcoming commits related to the revised fetch code for the consumer threading refactor project.\n\nReviewers: Christo Lolov <lolovc@amazon.com>, Jun Rao <junrao@gmail.com>",
    "epoch": 1694111024,
    "epoch_utc": null
  },
  {
    "commit": "41b695b6e30baa4243d9ca4f359b833e17ed0e77",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Thu Sep 7 15:21:52 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 7 15:21:52 2023 -0700",
    "stats": {
      "files_changed": 68,
      "insertions": 3183,
      "deletions": 463,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/admin/EndpointType.java",
        "clients/src/main/java/org/apache/kafka/common/errors/MismatchedEndpointTypeException.java",
        "clients/src/main/java/org/apache/kafka/common/errors/UnknownControllerIdException.java",
        "clients/src/main/java/org/apache/kafka/common/errors/UnsupportedEndpointTypeException.java",
        "clients/src/main/java/org/apache/kafka/common/protocol/ApiKeys.java",
        "clients/src/main/java/org/apache/kafka/common/protocol/Errors.java",
        "clients/src/main/java/org/apache/kafka/common/requests/AbstractRequest.java",
        "clients/src/main/java/org/apache/kafka/common/requests/AbstractResponse.java",
        "clients/src/main/java/org/apache/kafka/common/requests/ControllerRegistrationRequest.java",
        "clients/src/main/java/org/apache/kafka/common/requests/ControllerRegistrationResponse.java",
        "clients/src/main/resources/common/message/ControllerRegistrationRequest.json",
        "clients/src/main/resources/common/message/ControllerRegistrationResponse.json",
        "clients/src/main/resources/common/message/DescribeClusterRequest.json",
        "clients/src/main/resources/common/message/DescribeClusterResponse.json",
        "clients/src/test/java/org/apache/kafka/clients/admin/EndpointTypeTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/RequestResponseTest.java",
        "core/src/main/scala/kafka/network/RequestConvertToJson.scala",
        "core/src/main/scala/kafka/server/AuthHelper.scala",
        "core/src/main/scala/kafka/server/ControllerApis.scala",
        "core/src/main/scala/kafka/server/ControllerRegistrationManager.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/main/scala/kafka/server/SharedServer.scala",
        "core/src/test/java/kafka/test/ClusterTestExtensionsTest.java",
        "core/src/test/java/kafka/test/MockController.java",
        "core/src/test/java/kafka/test/annotation/ClusterTest.java",
        "core/src/test/java/kafka/testkit/KafkaClusterTestKit.java",
        "core/src/test/scala/integration/kafka/server/KRaftClusterTest.scala",
        "core/src/test/scala/unit/kafka/migration/MigrationPropagatorTest.scala",
        "core/src/test/scala/unit/kafka/server/AuthHelperTest.scala",
        "core/src/test/scala/unit/kafka/server/BrokerLifecycleManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/ControllerApisTest.scala",
        "core/src/test/scala/unit/kafka/server/ControllerRegistrationManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/RegistrationTestContext.scala",
        "metadata/src/main/java/org/apache/kafka/controller/ClusterControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/ClusterFeatureSupportDescriber.java",
        "metadata/src/main/java/org/apache/kafka/controller/Controller.java",
        "metadata/src/main/java/org/apache/kafka/controller/FeatureControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumFeatures.java",
        "metadata/src/main/java/org/apache/kafka/image/ClusterDelta.java",
        "metadata/src/main/java/org/apache/kafka/image/ClusterImage.java",
        "metadata/src/main/java/org/apache/kafka/image/MetadataDelta.java",
        "metadata/src/main/java/org/apache/kafka/image/node/ClusterImageBrokersNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/ClusterImageControllersNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/ClusterImageNode.java",
        "metadata/src/main/java/org/apache/kafka/image/publisher/ControllerRegistrationsPublisher.java",
        "metadata/src/main/java/org/apache/kafka/metadata/ControllerRegistration.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/main/java/org/apache/kafka/metadata/publisher/FeaturesPublisher.java",
        "metadata/src/main/resources/common/metadata/RegisterControllerRecord.json",
        "metadata/src/test/java/org/apache/kafka/controller/ClusterControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/FeatureControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/ProducerIdControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTestEnv.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumFeaturesTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/ReplicationControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/image/ClusterImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/node/ClusterImageBrokersNodeTest.java",
        "metadata/src/test/java/org/apache/kafka/image/node/ClusterImageControllersNodeTest.java",
        "metadata/src/test/java/org/apache/kafka/image/node/ClusterImageNodeTest.java",
        "metadata/src/test/java/org/apache/kafka/image/publisher/ControllerRegistrationsPublisherTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/ControllerRegistrationTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/RecordTestUtils.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationDriverTest.java",
        "server-common/src/main/java/org/apache/kafka/server/common/MetadataVersion.java",
        "tools/src/test/java/org/apache/kafka/tools/FeatureCommandTest.java"
      ]
    },
    "message": "KAFKA-15369: Implement KIP-919: Allow AC to Talk Directly with Controllers (#14306)\n\nImplement KIP-919: Allow AdminClient to Talk Directly with the KRaft Controller Quorum and add\nController Registration. This KIP adds a new version of DescribeClusterRequest which is supported\nby KRaft controllers. It also teaches AdminClient how to use this new DESCRIBE_CLUSTER request to\ntalk directly with the controller quorum. This is all gated behind a new MetadataVersion,\nIBP_3_7_IV0.\n\nIn order to share the DESCRIBE_CLUSTER logic between broker and controller, this PR factors it out\ninto AuthHelper.computeDescribeClusterResponse.\n\nThe KIP adds three new errors codes: MISMATCHED_ENDPOINT_TYPE, UNSUPPORTED_ENDPOINT_TYPE, and\nUNKNOWN_CONTROLLER_ID. The endpoint type errors can be returned from DescribeClusterRequest\n\nOn the controller side, the controllers now try to register themselves with the current active\ncontroller, by sending a CONTROLLER_REGISTRATION request. This, in turn, is converted into a\nRegisterControllerRecord by the active controller. ClusterImage, ClusterDelta, and all other\nassociated classes have been upgraded to propagate the new metadata. In the metadata shell, the\ncluster directory now contains both broker and controller subdirectories.\n\nQuorumFeatures previously had a reference to the ApiVersions structure used by the controller's\nNetworkClient. Because this PR removes that reference, QuorumFeatures now contains only immutable\ndata. Specifically, it contains the current node ID, the locally supported features, and the list\nof quorum node IDs in the cluster.\n\nReviewers: David Arthur <mumrah@gmail.com>, Ziming Deng <dengziming1993@gmail.com>, Luke Chen <showuon@gmail.com>",
    "epoch": 1694110912,
    "epoch_utc": null
  },
  {
    "commit": "77a91be22ed90920460580ee7d14aed016c8044e",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Thu Sep 7 17:02:57 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 7 14:02:57 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 66,
      "deletions": 11,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/admin/internals/ListOffsetsHandler.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/internals/PartitionLeaderStrategy.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java"
      ]
    },
    "message": "KAFKA-15425: Fail fast in Admin::listOffsets when topic (but not partition) metadata is not found (#14314)\n\nThis restores previous behavior for Admin::listOffsets, which was to fail immediately if topic metadata could not be found, and only retry if metadata for one or more specific partitions could not be found.\n\nThere is a subtle difference here: prior to https://github.com/apache/kafka/pull/13432, the operation would be retried if any metadata error was reported for any individual topic partition, even if an error was also reported for the entire topic. With this change, the operation always fails if an error is reported for the entire topic, even if an error is also reported for one or more individual topic partitions.\n\nI am not aware of any cases where brokers might return both topic- and topic partition-level errors for a metadata request, and if there are none, then this change should be safe. However, if there are such cases, we may need to refine this PR to remove the discrepancy in behavior.\n\nReviewers: Justine Olshan <jolshan@confluent.io>",
    "epoch": 1694116977,
    "epoch_utc": null
  },
  {
    "commit": "01c7c7a3999c140c8d0f14afef42af87f6779637",
    "author": "Lucia Cerchie",
    "author_email": "luciacerchie@gmail.com",
    "date": "Thu Sep 7 12:58:13 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 7 12:58:13 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 0,
      "deletions": 17,
      "files": [
        "docs/streams/developer-guide/config-streams.html"
      ]
    },
    "message": "KAFKA-15307: Removes non-existent configs (#14341)\n\n`partition.grouper` was removed in 3.0 release.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1694102293,
    "epoch_utc": null
  },
  {
    "commit": "0029bc4897e603614a49e0b0f1e623abbe650c61",
    "author": "Nikolay",
    "author_email": "nizhikov@apache.org",
    "date": "Thu Sep 7 20:12:07 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 7 10:12:07 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 296,
      "deletions": 284,
      "files": [
        "checkstyle/import-control.xml",
        "core/src/test/scala/unit/kafka/admin/ReassignPartitionsCommandArgsTest.scala",
        "tools/src/test/java/org/apache/kafka/tools/reassign/ReassignPartitionsCommandArgsTest.java"
      ]
    },
    "message": "KAFKA-14595: ReassignPartitionsCommandArgsTest rewritten in java (#14217)\n\nReviewers: Taras Ledkov <tledkov@apache.org>, Greg Harris <greg.harris@aiven.io>",
    "epoch": 1694128327,
    "epoch_utc": null
  },
  {
    "commit": "88b554fdbd47d4820059bc3633f5b2e3d2adb12d",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Thu Sep 7 17:24:13 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 7 12:24:13 2023 -0400",
    "stats": {
      "files_changed": 7,
      "insertions": 492,
      "deletions": 7,
      "files": [
        "build.gradle",
        ".../src/test/java/org/apache/kafka/connect/file/integration/FileStreamSinkConnectorIntegrationTest.java",
        ".../src/test/java/org/apache/kafka/connect/file/integration/FileStreamSourceConnectorIntegrationTest.java",
        "connect/file/src/test/resources/log4j.properties",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/ExactlyOnceSourceIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectCluster.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedKafkaCluster.java"
      ]
    },
    "message": "KAFKA-15179: Add integration tests for the file sink and source connectors (#14279)\n\nReviewers: Ashwin Pankaj <apankaj@confluent.io>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1694118253,
    "epoch_utc": null
  },
  {
    "commit": "6e818c6b021499976a8aed316bbde6b464439b20",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Thu Sep 7 21:02:39 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 7 21:02:39 2023 +0530",
    "stats": {
      "files_changed": 4,
      "insertions": 202,
      "deletions": 45,
      "files": [
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/TieredStorageTestBuilder.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/DeleteRecordsAction.java",
        ".../java/org/apache/kafka/tiered/storage/integration/DeleteSegmentsDueToLogStartOffsetBreachTest.java"
      ]
    },
    "message": "KAFKA-15410: Delete records with tiered storage integration test (4/4) (#14330)\n\n* Added the integration test for DELETE_RECORDS API for tiered storage enabled topic\n* Added validation checks before removing remote log segments for log-start-offset breach\n\nReviewers: Satish Duggana <satishd@apache.org>, Luke Chen <showuon@gmail.com>, Christo Lolov <lolovc@amazon.com>",
    "epoch": 1694131359,
    "epoch_utc": null
  },
  {
    "commit": "cd897e6c766abde8b6fbd7d72d9f202c990131f1",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Thu Sep 7 23:25:11 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 7 20:55:11 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 3,
      "files": [
        "storage/api/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteStorageManager.java"
      ]
    },
    "message": "MINOR: Update the javadoc in RSM (#14352)\n\nReviewers: Satish Duggana <satishd@apache.org>, Kamal Chandraprakash<kamal.chandraprakash@gmail.com>",
    "epoch": 1694139911,
    "epoch_utc": null
  },
  {
    "commit": "90e646052a17e3f6ec1a013d76c1e6af2fbb756e",
    "author": "Max Riedel",
    "author_email": "29626305+riedelmax@users.noreply.github.com",
    "date": "Thu Sep 7 17:05:04 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 7 08:05:04 2023 -0700",
    "stats": {
      "files_changed": 14,
      "insertions": 456,
      "deletions": 1,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/protocol/ApiKeys.java",
        "clients/src/main/java/org/apache/kafka/common/requests/AbstractRequest.java",
        "clients/src/main/java/org/apache/kafka/common/requests/AbstractResponse.java",
        "clients/src/main/java/org/apache/kafka/common/requests/ConsumerGroupDescribeRequest.java",
        "clients/src/main/java/org/apache/kafka/common/requests/ConsumerGroupDescribeResponse.java",
        "clients/src/main/resources/common/message/ConsumerGroupDescribeRequest.json",
        "clients/src/main/resources/common/message/ConsumerGroupDescribeResponse.json",
        "clients/src/test/java/org/apache/kafka/common/requests/ConsumerGroupDescribeRequestTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/ConsumerGroupDescribeResponseTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/RequestResponseTest.java",
        "core/src/main/scala/kafka/network/RequestConvertToJson.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "core/src/test/scala/unit/kafka/server/RequestQuotaTest.scala"
      ]
    },
    "message": "KAFKA-14509; [1/2] Define ConsumerGroupDescribe API request and response schemas and classes. (#14124)\n\nThis patch adds the schemas of the new ConsumerGroupDescribe API (KIP-848) and adds an handler to the KafkaApis.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, David Jacot <djacot@confluent.io>",
    "epoch": 1694117104,
    "epoch_utc": null
  },
  {
    "commit": "6d762480c94d826a434eaa7b7688e22d92b28072",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Thu Sep 7 20:02:16 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Sep 7 16:32:16 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 158,
      "deletions": 13,
      "files": [
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/integration/BaseReassignReplicaTest.java"
      ]
    },
    "message": "KAFKA-15351: Update log-start-offset after leader election for topics enabled with remote storage (#14340)\n\nOn leadership failover, the new leader's start offset may be older than the start offset of old leader. This works fine for local storage scenario because the new leader still contains data associated with stale start offset. But in case of remote storage, although new leader has a stale offset, the data associated with it has been deleted from remote by the old leader. Hence, we end up in a situation where leader has a start offset but no data associated with it.\n\nThis commit fixes the situation by ensuring that on every leadership failover, for topics with remote storage, the leader will update it's start offset from the base of first segment in current leader chain present in the remote storage (if any).\n\nReviewers: Satish Duggana <satishd@apache.org>, Luke Chen <showuon@gmail.com>, Christo Lolov <lolovc@amazon.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1694127736,
    "epoch_utc": null
  },
  {
    "commit": "65e2ecffabad8ade39f201766702162874e9d561",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Wed Sep 6 13:02:13 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Sep 6 13:02:13 2023 -0400",
    "stats": {
      "files_changed": 3,
      "insertions": 110,
      "deletions": 5,
      "files": [
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/MigrationManifest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/MigrationManifestTest.java"
      ]
    },
    "message": "KAFKA-15435 Fix counts in MigrationManifest (#14342)\n\nReviewers: Liu Zeyu <zeyu.luke@gmail.com>, Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1694016133,
    "epoch_utc": null
  },
  {
    "commit": "eb39c95080b994398c40bcf5d54181e713ed6faa",
    "author": "Lucas Brutschy",
    "author_email": "lucasbru@users.noreply.github.com",
    "date": "Wed Sep 6 14:49:48 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Sep 6 14:49:48 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 5,
      "deletions": 1,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StoreChangelogReaderTest.java"
      ]
    },
    "message": "MINOR: StoreChangelogReaderTest fails with log-level DEBUG (#14300)\n\nA mocked method is executed unexpectedly when we enable DEBUG\nlog level, leading to confusing test failures during debugging.\nSince the log message itself seems useful, we adapt the test\nto take the additional mocked method call into account).\n\nReviewer: Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1694022588,
    "epoch_utc": null
  },
  {
    "commit": "cc289d04c701a59f571683b908f778e0b236d72f",
    "author": "Ritika Reddy",
    "author_email": "98577846+rreddy-22@users.noreply.github.com",
    "date": "Wed Sep 6 00:28:23 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Sep 6 00:28:23 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 5,
      "deletions": 6,
      "files": [
        "reviewers.py"
      ]
    },
    "message": "MINOR: Fix trailing white spaces on reviewers.py (#14343)\n\nFixing trailing white spaces on reviewers.py.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, David Jacot <djacot@confluent.io>",
    "epoch": 1693970903,
    "epoch_utc": null
  },
  {
    "commit": "7054625c45dc6edb3c07271fe4a6c24b4638424f",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Tue Sep 5 23:36:38 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 5 23:36:38 2023 -0700",
    "stats": {
      "files_changed": 10,
      "insertions": 299,
      "deletions": 45,
      "files": [
        "clients/src/main/resources/common/message/OffsetFetchRequest.json",
        "clients/src/main/resources/common/message/OffsetFetchResponse.json",
        "clients/src/test/java/org/apache/kafka/common/requests/RequestResponseTest.java",
        "core/src/test/scala/unit/kafka/server/OffsetFetchRequestTest.scala",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/Group.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/OffsetMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroup.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/generic/GenericGroup.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroupTest.java"
      ]
    },
    "message": "KAFKA-14499: [6/N] Add MemberId and MemberEpoch to OffsetFetchRequest (#14321)\n\nThis patch adds the MemberId and the MemberEpoch fields to the OffsetFetchRequest. Those fields will be populated when the new consumer group protocol is used to ensure that the member fetching the offset has the correct member id and epoch. If it does not, UNKNOWN_MEMBER_ID or STALE_MEMBER_EPOCH are returned to the client.\n\nOur initial idea was to implement the same for the old protocol. The field is called GenerationIdOrMemberEpoch in KIP-848 to materialize this. As a second though, I think that we should only do it for the new protocol. The effort to implement it in the old protocol is not worth it in my opinion.\n\nReviewers: Ritika Reddy <rreddy@confluent.io>, Calvin Liu <caliu@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1693967798,
    "epoch_utc": null
  },
  {
    "commit": "80982c4ae3fe6be127b48ec09caff11ab5f87c69",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Wed Sep 6 05:50:12 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Sep 6 05:50:12 2023 +0530",
    "stats": {
      "files_changed": 9,
      "insertions": 197,
      "deletions": 95,
      "files": [
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/ConsumerManager.java",
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/ConsumerTask.java",
        ".../main/java/org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManager.java",
        ".../server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManagerMultipleSubscriptionsTest.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/integration/DeleteTopicTest.java"
      ]
    },
    "message": "KAFKA-15410: Delete topic integration test with LocalTieredStorage and TBRLMM (3/4) (#14329)\n\nAdded delete topic integration tests for tiered storage enabled topics with LocalTieredStorage and TBRLMM\n\nReviewers: Satish Duggana <satishd@apache.org>, Divij Vaidya <diviv@amazon.com>, Luke Chen <showuon@gmail.com>",
    "epoch": 1693990212,
    "epoch_utc": null
  },
  {
    "commit": "b49013b73efa25466652d8d8122974e60c927ec4",
    "author": "Andrew Schofield",
    "author_email": "aschofield@confluent.io",
    "date": "Tue Sep 5 19:57:51 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 5 11:57:51 2023 -0700",
    "stats": {
      "files_changed": 60,
      "insertions": 740,
      "deletions": 241,
      "files": [
        "checkstyle/suppressions.xml",
        "clients/src/main/java/org/apache/kafka/clients/ClusterConnectionStates.java",
        "clients/src/main/java/org/apache/kafka/clients/CommonClientConfigs.java",
        "clients/src/main/java/org/apache/kafka/clients/GroupRebalanceConfig.java",
        "clients/src/main/java/org/apache/kafka/clients/Metadata.java",
        "clients/src/main/java/org/apache/kafka/clients/NetworkClient.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/AdminClientConfig.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/internals/AdminApiDriver.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractFetch.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CommitRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerMetadata.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerNetworkClient.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CoordinatorRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThread.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Heartbeat.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetFetcher.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetFetcherUtils.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetsRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/RequestState.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/TopicMetadataFetcher.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/ProducerMetadata.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/RecordAccumulator.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/Sender.java",
        "clients/src/main/java/org/apache/kafka/common/utils/ExponentialBackoff.java",
        "clients/src/test/java/org/apache/kafka/clients/MetadataTest.java",
        "clients/src/test/java/org/apache/kafka/clients/NetworkClientTest.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/internals/AdminApiDriverTest.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/internals/AllBrokersStrategyIntegrationTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinatorTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinatorTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerMetadataTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerNetworkClientTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CoordinatorRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThreadTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/DefaultEventHandlerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetcherTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/HeartbeatTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/OffsetFetcherTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/OffsetForLeaderEpochClientTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/TopicMetadataFetcherTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/ProducerMetadataTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/RecordAccumulatorTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/SenderTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/WorkerGroupMember.java",
        ".../src/test/java/org/apache/kafka/connect/runtime/distributed/WorkerCoordinatorIncrementalTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/WorkerCoordinatorTest.java",
        "core/src/main/scala/kafka/admin/BrokerApiVersionsCommand.scala",
        "core/src/test/scala/unit/kafka/server/BrokerLifecycleManagerTest.scala"
      ]
    },
    "message": "KAFKA-9800: Exponential backoff for Kafka clients - KIP-580 (#14111)\n\nImplementation of KIP-580 to add exponential back-off to situations in which retry.backoff.ms\nis used to delay backoff attempts. This KIP adds exponential backoff behavior with a maximum\ncontrolled by a new config retry.backoff.max.ms, together with a +/- 20% of jitter to spread the\nretry attempts of the client fleet.\n\nReviewers: Mayank Shekhar Narula <mayanks.narula@gmail.com>, Milind Luthra <i.milind.luthra@gmail.com>, Kirk True <kirk@mustardgrain.com>, Jun Rao<junrao@gmail.com>",
    "epoch": 1693954671,
    "epoch_utc": null
  },
  {
    "commit": "1f473ebb5ea9ad4ebdfdc99051864cce6d80db87",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Tue Sep 5 19:39:49 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 5 14:39:49 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 5,
      "deletions": 0,
      "files": [
        "docs/connect.html"
      ]
    },
    "message": "KAFKA-14876: Add stopped state to Kafka Connect Administration docs section (#14336)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1693953589,
    "epoch_utc": null
  },
  {
    "commit": "79598b49d6fff9bef686500f46a288b61a9013fd",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Tue Sep 5 18:58:44 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 5 13:58:44 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 10,
      "deletions": 2,
      "files": [
        "docs/connect.html",
        "docs/toc.html"
      ]
    },
    "message": "MINOR: Update the documentation's table of contents to add missing headings for Kafka Connect (#14337)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1693951124,
    "epoch_utc": null
  },
  {
    "commit": "37a51e286d5aaa890439e074e9f781ec26aaef2e",
    "author": "Abhijeet Kumar",
    "author_email": "abhijeet.cse.kgp@gmail.com",
    "date": "Tue Sep 5 22:19:10 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 5 22:19:10 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 58,
      "deletions": 0,
      "files": [
        "docs/ops.html",
        "docs/toc.html"
      ]
    },
    "message": "KAFKA-15293 Added documentation for tiered storage metrics (#14331)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1693963150,
    "epoch_utc": null
  },
  {
    "commit": "be0de2124a1bb6363355aa792be618ddbb87e460",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Wed Sep 6 00:06:28 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 5 21:36:28 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 3,
      "files": [
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/ConsumeAction.java"
      ]
    },
    "message": "MINOR: Update comment in consumeAction (#14335)\n\nReviewers: Satish Duggana <satishd@apache.org>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1693969588,
    "epoch_utc": null
  },
  {
    "commit": "9f2ac375c282e1471a2d385704e1f7c128f34bb6",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Tue Sep 5 19:28:17 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 5 19:28:17 2023 +0530",
    "stats": {
      "files_changed": 10,
      "insertions": 333,
      "deletions": 13,
      "files": [
        "core/src/main/java/kafka/server/ReplicaFetcherTierStateMachine.java",
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "storage/src/test/java/org/apache/kafka/tiered/storage/integration/BaseReassignReplicaTest.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/integration/PartitionsExpandTest.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/integration/ReassignReplicaExpandTest.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/integration/ReassignReplicaMoveTest.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/integration/ReassignReplicaShrinkTest.java"
      ]
    },
    "message": "KAFKA-15410: Reassign replica expand, move and shrink integration tests (2/4) (#14328)\n\n- Updated the log-start-offset to the correct value while building the replica state in ReplicaFetcherTierStateMachine#buildRemoteLogAuxState\n\nIntegration tests added:\n1. ReassignReplicaExpandTest\n2. ReassignReplicaMoveTest and\n3. ReassignReplicaShrinkTest\n\nReviewers: Satish Duggana <satishd@apache.org>, Luke Chen <showuon@gmail.com>",
    "epoch": 1693952897,
    "epoch_utc": null
  },
  {
    "commit": "b892acae5e026e1affd51ef9756772807674b964",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Mon Sep 4 20:40:50 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Sep 4 20:40:50 2023 -0700",
    "stats": {
      "files_changed": 7,
      "insertions": 191,
      "deletions": 8,
      "files": [
        "core/src/main/scala/kafka/server/DynamicBrokerConfig.scala",
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/test/scala/integration/kafka/server/DynamicBrokerReconfigurationTest.scala",
        "core/src/test/scala/unit/kafka/log/ProducerStateManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/ProducerStateManagerConfig.java"
      ]
    },
    "message": "KAFKA-15424: Make the transaction verification a dynamic configuration (#14324)\n\nThis will allow enabling and disabling transaction verification (KIP-890 part 1) without having to roll the cluster.\n\nTested that restarting the cluster persists the configuration.\n\nIf a verification is disabled/enabled while we have an inflight request, depending on the step of the process, the change may or may not be seen in the inflight request (enabling will typically fail unverified requests, but we may still verify and reject when we first disable) Subsequent requests/retries will behave as expected for verification.\n\nSequence checks will continue to take place after disabling until the first message is written to the partition (thus clearing the verification entry with the tentative sequence) or the broker restarts/partition is reassigned which will clear the memory. On enabling, we will only track sequences that for requests received after the verification is enabled.\n\nReviewers: Jason Gustafson <jason@confluent.io>, Satish Duggana <satishd@apache.org>",
    "epoch": 1693870850,
    "epoch_utc": null
  },
  {
    "commit": "caaa4c55fee68c5893d54ffe84287f3b5205fff1",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Tue Sep 5 05:13:16 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Sep 5 05:13:16 2023 +0530",
    "stats": {
      "files_changed": 12,
      "insertions": 372,
      "deletions": 21,
      "files": [
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "storage/src/test/java/org/apache/kafka/tiered/storage/TieredStorageTestContext.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/TieredStorageTestHarness.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/ExpectEmptyRemoteStorageAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/integration/BaseDeleteSegmentsTest.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/integration/DeleteSegmentsByRetentionSizeTest.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/integration/DeleteSegmentsByRetentionTimeTest.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/integration/EnableRemoteLogOnTopicTest.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/integration/PartitionsExpandTest.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/utils/BrokerLocalStorage.java"
      ]
    },
    "message": "KAFKA-15410: Expand partitions, segment deletion by retention and enable remote log on topic integration tests (1/4) (#14307)\n\nAdded the below integration tests with tiered storage\n- PartitionsExpandTest\n- DeleteSegmentsByRetentionSizeTest\n- DeleteSegmentsByRetentionTimeTest and\n- EnableRemoteLogOnTopicTest\n- Enabled the test for both ZK and Kraft modes.\n\nThese are enabled for both ZK and Kraft modes.\n\nReviewers: Satish Duggana <satishd@apache.org>, Luke Chen <showuon@gmail.com>, Christo Lolov <lolovc@amazon.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1693901596,
    "epoch_utc": null
  },
  {
    "commit": "d34d84dbef20559e68c899315a0915e9dd740cb0",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Mon Sep 4 12:54:18 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Sep 4 13:54:18 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 11,
      "deletions": 37,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/state/internals/WindowStoreBuilderTest.java"
      ]
    },
    "message": "KAFKA-7438: Migrate WindowStoreBuilderTest from EasyMock to Mockito (#14152)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1693842858,
    "epoch_utc": null
  },
  {
    "commit": "7a516b03863a00aa0cebfb376171a31a92d26f8c",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Mon Sep 4 11:58:50 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Sep 4 12:58:50 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 28,
      "deletions": 34,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/AbstractStreamTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecordingTriggerTest.java"
      ]
    },
    "message": "KAFKA-14133: Move AbstractStreamTest and RocksDBMetricsRecordingTriggerTest to Mockito (#14223)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1693839530,
    "epoch_utc": null
  },
  {
    "commit": "78c59cd2b0b5f21c2028021d9dfb72d21065bb00",
    "author": "Dimitar Dimitrov",
    "author_email": "30328539+dimitarndimitrov@users.noreply.github.com",
    "date": "Mon Sep 4 11:02:32 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Sep 4 17:02:32 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java"
      ]
    },
    "message": "KAFKA-15052 Fix the flaky testBalancePartitionLeaders - part II (#13908)\n\nA follow-up to https://github.com/apache/kafka/pull/13804.\nThis follow-up adds the alternative fix approach mentioned in\nthe PR above - bumping the session timeout used in the test\nwith 1 second.\n\nReproducing the flake-out locally has been much harder than\non the CI runs, as neither Gradle with Java 11 or Java 14 nor\nIntelliJ with Java 14 could show it, but IntelliJ with Java 11\ncould occasionally reproduce the failure the first time\nimmediately after a rebuild. While I was unable to see the\nfailure with the bumped session timeout, the testing procedure\ndefinitely didn't provide sufficient reassurance for the\nfix as even without it often I'd see hundreds of consecutive\nsuccessful test runs when the first run didn't fail.\n\nReviewers: Luke Chen <showuon@gmail.com>, Christo Lolov <lolovc@amazon.com>",
    "epoch": 1693836152,
    "epoch_utc": null
  },
  {
    "commit": "a6409e8e61fec1be74a9b404d2750db15d1de40a",
    "author": "Proven Provenzano",
    "author_email": "93720617+pprovenzano@users.noreply.github.com",
    "date": "Mon Sep 4 04:46:12 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Sep 4 14:16:12 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 10,
      "deletions": 5,
      "files": [
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "docs/security.html"
      ]
    },
    "message": "KAFKA-15422: Update documenttion for delegation tokens when working with Kafka with KRaft (#14318)\n\nReviewers: Manikumar Reddy <manikumar.reddy@gmail.com>",
    "epoch": 1693813572,
    "epoch_utc": null
  },
  {
    "commit": "5074c8038e44620b48d7700226810b983febd864",
    "author": "Abhijeet Kumar",
    "author_email": "abhijeet.cse.kgp@gmail.com",
    "date": "Mon Sep 4 09:13:04 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Sep 4 09:13:04 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 58,
      "deletions": 1,
      "files": [
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java"
      ]
    },
    "message": "KAFKA-15260: RLM Task should handle uninitialized RLMM for the associated topic-parititon (#14113)\n\nThis change is about RLM task handling retriable exception when it tries to copy segments to remote but the RLMM is not yet initialized. On encountering the exception, we log the error and throw the exception back to the caller. We also make sure that the failure metrics are updated since this is a temporary error because RLMM is not yet initialized.\n\nAdded unit tests to verify RLM task does not attempt to copy segments to remote on encountering the retriable exception and that failure metrics remain unchanged.\n\nReviewers: Satish Duggana <satishd@apache.org>, Luke Chen <showuon@gmail.com>, Kamal Chandraprakash<kamal.chandraprakash@gmail.com>",
    "epoch": 1693829584,
    "epoch_utc": null
  },
  {
    "commit": "da99879df7bd96675e4abbd50d4e504dc07df574",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Sun Sep 3 16:16:54 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Sep 3 16:16:54 2023 +0800",
    "stats": {
      "files_changed": 3,
      "insertions": 1,
      "deletions": 4,
      "files": [
        "core/src/test/scala/integration/kafka/server/DynamicBrokerReconfigurationTest.scala",
        "core/src/test/scala/unit/kafka/network/SocketServerTest.scala",
        "storage/src/test/java/org/apache/kafka/tiered/storage/TieredStorageTestHarness.java"
      ]
    },
    "message": "KAFKA-15421: fix network thread leak in testThreadPoolResize (#14320)\n\nIn SocketServerTest, we create SocketServer and enableRequestProcessing on each test class initialization. That's fine since we shutdown it in @AfterEach. The issue we have is we disabled 2 tests in this test suite. And when running these disabled tests, we will go through class initialization, but without @AfterEach. That causes 2 network thread leaked.\n\nCompared the error message in DynamicBrokerReconfigurationTest#testThreadPoolResize test here:\n\norg.opentest4j.AssertionFailedError: Invalid threads: expected 6, got 8: List(data-plane-kafka-socket-acceptor-ListenerName(INTERNAL)-SSL-0, data-plane-kafka-socket-acceptor-ListenerName(PLAINTEXT)-PLAINTEXT-0, data-plane-kafka-socket-acceptor-ListenerName(INTERNAL)-SSL-0, data-plane-kafka-socket-acceptor-ListenerName(EXTERNAL)-SASL_SSL-0, data-plane-kafka-socket-acceptor-ListenerName(INTERNAL)-SSL-0, data-plane-kafka-socket-acceptor-ListenerName(EXTERNAL)-SASL_SSL-0, data-plane-kafka-socket-acceptor-ListenerName(PLAINTEXT)-PLAINTEXT-0, data-plane-kafka-socket-acceptor-ListenerName(EXTERNAL)-SASL_SSL-0) ==> expected: <true> but was: <false>\n\nThe 2 unexpected network threads are leaked from SocketServerTest.\n\nReviewers: Satish Duggana <satishd@apache.org>, Christo Lolov <lolovc@amazon.com>, Divij Vaidya <diviv@amazon.com>, Kamal Chandraprakash <kchandraprakash@uber.com>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1693768614,
    "epoch_utc": null
  },
  {
    "commit": "cc53889aaae8371964f9734a30da570afd0b7916",
    "author": "Rohan",
    "author_email": "desai.p.rohan@gmail.com",
    "date": "Sat Sep 2 18:14:14 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Sep 2 18:14:14 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 31,
      "deletions": 2,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsProducer.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsProducerTest.java"
      ]
    },
    "message": "KAFKA-15429: reset transactionInFlight on StreamsProducer close (#14326)\n\nResets the value of transactionInFlight to false when closing the\nStreamsProducer. This ensures we don't try to commit against a\nclosed producer\n\nReviewers: Anna Sophie Blee-Goldman <ableegoldman@apache.org>",
    "epoch": 1693689254,
    "epoch_utc": null
  },
  {
    "commit": "d293cd0735e050325eb7d2eafec435ec8aec92eb",
    "author": "Rohan",
    "author_email": "desai.p.rohan@gmail.com",
    "date": "Sat Sep 2 18:13:16 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Sep 2 18:13:16 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 6,
      "deletions": 2,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java"
      ]
    },
    "message": "KAFKA-15429: catch+log errors from unsubscribe in streamthread shutdown (#14325)\n\nPreliminary fix for KAFKA-15429 which updates StreamThread.completeShutdown to\ncatch-and-log errors from consumer.unsubscribe. Though this does not prevent\nthe exception, it does preserve the original exception that caused the stream\nthread to exit.\n\nReviewers: Anna Sophie Blee-Goldman <ableegoldman@apache.org>",
    "epoch": 1693689196,
    "epoch_utc": null
  },
  {
    "commit": "1bb8c11f5aa07709ce1b1b6ef684a6750242d4b0",
    "author": "Lianet Magrans",
    "author_email": "98415067+lianetm@users.noreply.github.com",
    "date": "Fri Sep 1 16:57:17 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Sep 1 13:57:17 2023 -0700",
    "stats": {
      "files_changed": 15,
      "insertions": 1573,
      "deletions": 59,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/Metadata.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThread.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultEventHandler.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetsRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/RequestManagers.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEventProcessor.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/CompletableApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/EventHandler.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ListOffsetsApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/OffsetFetchApplicationEvent.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThreadTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/OffsetsRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumerTest.java"
      ]
    },
    "message": "KAFKA-14965 - OffsetsRequestsManager implementation & API integration (#14308)\n\nImplementation of the OffsetRequestsManager, responsible for building requests and processing responses for requests related to partition offsets.\n\nIn this PR, the manager includes support for ListOffset requests, generated when the user makes any of the following consumer API calls:\n\nbeginningOffsets\nendOffsets\noffsetsForTimes\nAll previous consumer API calls interact with the OffsetsRequestsManager by generating a ListOffsetsApplicationEvent.\n\nIncludes tests to cover the new functionality and to ensure no API level changes are introduced.\n\nThis covers KAFKA-14965 and KAFKA-15081.\n\nReviewers: Philip Nee <pnee@confluent.io>, Kirk True <kirk@mustardgrain.com>, Jun Rao<junrao@gmail.com>",
    "epoch": 1693598237,
    "epoch_utc": null
  },
  {
    "commit": "134f6c07a48219d2b54a6fed38ecb576af2f7cf3",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Fri Sep 1 18:42:57 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Sep 1 23:12:57 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "storage/src/test/java/org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManagerWrapperWithHarness.java"
      ]
    },
    "message": "KAFKA-15427: Fix resource leak in integration tests for tiered storage (#14319)\n\nCo-authored-by: Nikhil Ramakrishnan <nikrmk@amazon.com>\n\nReviewers: Satish Duggana <satishd@apache.org>, Luke Chen <showuon@gmail.com>",
    "epoch": 1693604577,
    "epoch_utc": null
  },
  {
    "commit": "6391c6603582a4e4b5bb670233c345e53f82a77b",
    "author": "Jeff Kim",
    "author_email": "kimkb2011@gmail.com",
    "date": "Fri Sep 1 09:36:33 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Sep 1 06:36:33 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 1474,
      "deletions": 1594,
      "files": [
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java"
      ]
    },
    "message": "KAFKA-14500; [7/7] Refactor GroupMetadataManagerTest (#14122)\n\nThis patch makes the styling consistent inside GroupMetadataManagerTest. Also, it adds JoinResult to simplify the JoinGroup API responses in the tests.\n\nReviewers: David Arthur <mumrah@gmail.com>, David Jacot <djacot@confluent.io>",
    "epoch": 1693571793,
    "epoch_utc": null
  },
  {
    "commit": "dcff0878c48803e2d68f7e43c1e73735b643ace0",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Fri Sep 1 03:45:24 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Sep 1 03:45:24 2023 -0700",
    "stats": {
      "files_changed": 10,
      "insertions": 189,
      "deletions": 167,
      "files": [
        "core/src/main/scala/kafka/coordinator/group/GroupCoordinatorAdapter.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorAdapterTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinator.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorShard.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/OffsetMetadataManager.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorServiceTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java"
      ]
    },
    "message": "KAFKA-14499: [5/N] Refactor GroupCoordinator.fetchOffsets and GroupCoordinator.fetchAllOffsets (#14310)\n\nThis patch refactors the GroupCoordinator.fetchOffsets and GroupCoordinator.fetchAllOffsets methods to take an OffsetFetchRequestGroup and to return an OffsetFetchResponseGroup. It prepares the ground for adding the member id and the member epoch to the OffsetFetchRequest. This change also makes those two methods more aligned with the others in the interface.\n\nReviewers: Calvin Liu <caliu@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1693550724,
    "epoch_utc": null
  },
  {
    "commit": "d0f3cf1f9fa53b7d8663ca23bf42b5c6847e07ab",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Fri Sep 1 06:33:33 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Sep 1 06:33:33 2023 +0530",
    "stats": {
      "files_changed": 5,
      "insertions": 124,
      "deletions": 37,
      "files": [
        "core/src/main/scala/kafka/log/LogLoader.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/test/scala/unit/kafka/log/LogLoaderTest.scala",
        "storage/src/test/java/org/apache/kafka/tiered/storage/TieredStorageTestContext.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/integration/OffloadAndConsumeFromLeaderTest.java"
      ]
    },
    "message": "KAFKA-15351: Ensure log-start-offset not updated to local-log-start-offset when remote storage enabled (#14301)\n\nWhen tiered storage is enabled on the topic, and the last-standing-replica is restarted, then the log-start-offset should not reset its offset to first-local-log-segment-base-offset.\n\nReviewers: Satish Duggana <satishd@apache.org>, Luke Chen <showuon@gmail.com>, Divij Vaidya <diviv@amazon.com>, Christo Lolov <lolovc@amazon.com>",
    "epoch": 1693560813,
    "epoch_utc": null
  },
  {
    "commit": "16dc983ad67767ee8debd125a3f8b150a91c7acf",
    "author": "Lucas Brutschy",
    "author_email": "lucasbru@users.noreply.github.com",
    "date": "Thu Aug 31 22:21:01 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 31 15:21:01 2023 -0500",
    "stats": {
      "files_changed": 3,
      "insertions": 74,
      "deletions": 5,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskExecutionMetadata.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskExecutor.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskExecutorTest.java"
      ]
    },
    "message": "Kafka Streams Threading: Timeout behavior (#14171)\n\nImplement setting and clearing task timeouts, as well as changing the output on exceptions to make\nit similar to the existing code path.\n\nReviewer: Walker Carlson <wcarlson@apache.org>",
    "epoch": 1693531261,
    "epoch_utc": null
  },
  {
    "commit": "43fe13350f7a4c74cd101cbb69a01d062f5c9329",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Fri Sep 1 00:09:26 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 31 11:39:26 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 3,
      "deletions": 0,
      "files": [
        "core/src/test/scala/integration/kafka/server/DynamicBrokerReconfigurationTest.scala",
        "storage/src/test/java/org/apache/kafka/tiered/storage/TieredStorageTestHarness.java"
      ]
    },
    "message": "KAFKA-15404: Disable the flaky integration tests. (#14296)\n\nDisabled the below tests to fix the thread leak:\n\n1. kafka.server.DynamicBrokerReconfigurationTest.testThreadPoolResize() and\n2. org.apache.kafka.tiered.storage.integration.OffloadAndConsumeFromLeaderTest\n\nReviewers: Luke Chen <showuon@gmail.com>, Divij Vaidya <diviv@amazon.com>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1693537766,
    "epoch_utc": null
  },
  {
    "commit": "c2bb8eb875d94568d1ad19bf207ec69c182405d4",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Thu Aug 31 16:44:32 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 31 10:44:32 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "storage/src/test/java/org/apache/kafka/server/log/remote/metadata/storage/RemoteLogSegmentLifecycleTest.java"
      ]
    },
    "message": "MINOR: Close topic based RLMM correctly in integration tests (#14315)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1693511072,
    "epoch_utc": null
  },
  {
    "commit": "95e1cdc4efbc720687cefad5bacd053565d03614",
    "author": "A. Sophie Blee-Goldman",
    "author_email": "ableegoldman@gmail.com",
    "date": "Wed Aug 30 13:29:38 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 30 13:29:38 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 97,
      "deletions": 21,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/ClientState.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java"
      ]
    },
    "message": "HOTFIX: avoid placement of unnecessary transient standby tasks & improve assignor logging (#14149)\n\nMinor fix to avoid creating unnecessary standby tasks, especially when these may be surprising or unexpected as in the case of an application with num.standby.replicas = 0 and warmup replicas disabled.\n\nThe \"bug\" here was introduced during the fix for an issue with cooperative rebalancing and in-memory stores. The fundamental problem is that in-memory stores cannot be unassigned from a consumer for any period, however temporary, without being closed and losing all the accumulated state. This caused some grief when the new HA task assignor would assign an active task to a node based on the readiness of the standby version of that task, but would have to remove the active task from the initial assignment so it could first be revoked from its previous owner, as per the cooperative rebalancing protocol. This temporary gap in any version of that task among the consumer's assignment for that one intermediate rebalance would end up causing the consumer to lose all state for it, in the case of in-memory stores.\n\nTo fix this, we simply began to place standby tasks on the intended recipient of an active task awaiting revocation by another consumer. However, the fix was a bit of an overreach, as we assigned these temporary standby tasks in all cases, regardless of whether there had previously been a standby version of that task. We can narrow this down without sacrificing any of the intended functionality by only assigning this kind of standby task where the consumer had previously owned some version of it that would otherwise potentially be lost.\n\nAlso breaks up some of the long log lines in the StreamsPartitionAssignor and expands the summary info while moving it all to the front of the line (following reports of missing info due to truncation of long log lines in larger applications)",
    "epoch": 1693412978,
    "epoch_utc": null
  },
  {
    "commit": "703e1d9faafbf07795261b3233ab985583f17fcb",
    "author": "Vincent Jiang",
    "author_email": "84371940+vincent81jiang@users.noreply.github.com",
    "date": "Wed Aug 30 09:19:24 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 30 09:19:24 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 77,
      "deletions": 5,
      "files": [
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/test/scala/unit/kafka/log/LogManagerTest.scala"
      ]
    },
    "message": "KAFKA-15375: fix broken clean shutdown detection logic in LogManager\n\nWhen running in kraft mode, LogManager.startup is called in a different thread than the main broker (#14239)\nstartup thread (by BrokerMetadataPublisher when the first metadata update is received.) If a fatal\nerror happens during broker startup, before LogManager.startup is completed, LogManager.shutdown may\nmark log dirs as clean shutdown improperly.\n\nThis PR includes following change:\n1. During LogManager startup time:\n- track hadCleanShutdwon info for each log dir\n- track loadLogsCompleted status for each log dir\n2. During LogManager shutdown time:\n- do not write clean shutdown marker file for log dirs which have hadCleanShutdown==false and loadLogsCompleted==false\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1693397964,
    "epoch_utc": null
  },
  {
    "commit": "dbda60c60da8f5a7eabe113615196b729b40a0e8",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Wed Aug 30 10:19:22 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 30 11:19:22 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 153,
      "deletions": 194,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBRangeIteratorTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/TimestampedKeyValueStoreBuilderTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/TimestampedSegmentTest.java"
      ]
    },
    "message": "KAFKA-14133: Move RocksDBRangeIteratorTest, TimestampedKeyValueStoreBuilderTest and TimestampedSegmentTest to Mockito (#14222)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1693401562,
    "epoch_utc": null
  },
  {
    "commit": "2e3ff21c2e3674ece50c2a8a4053b93024e12b4a",
    "author": "mannoopj",
    "author_email": "139923522+mannoopj@users.noreply.github.com",
    "date": "Wed Aug 30 03:03:41 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 30 15:03:41 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 62,
      "deletions": 0,
      "files": [
        "raft/src/main/java/org/apache/kafka/raft/FileBasedStateStore.java",
        "raft/src/test/java/org/apache/kafka/raft/FileBasedStateStoreTest.java"
      ]
    },
    "message": "KAFKA-15412: Reading an unknown version of quorum-state-file should trigger an error (#14302)\n\nReading an unknown version of quorum-state-file should trigger an error. Currently the only known version is 0. Reading any other version should cause an error.\n\nReviewers: Justine Olshan <jolshan@confluent.io>, Luke Chen <showuon@gmail.com>",
    "epoch": 1693375421,
    "epoch_utc": null
  },
  {
    "commit": "efec0f5756510bb02ee578b1a01dd8388237c14b",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Wed Aug 30 01:04:20 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 30 05:34:20 2023 +0530",
    "stats": {
      "files_changed": 5,
      "insertions": 62,
      "deletions": 14,
      "files": [
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/main/scala/kafka/server/ConfigHandler.scala",
        "core/src/test/scala/integration/kafka/admin/RemoteTopicCrudTest.scala",
        "core/src/test/scala/unit/kafka/log/LogManagerTest.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogConfig.java"
      ]
    },
    "message": "KAFKA-15267: Do not allow Tiered Storage to be disabled while topics have remote.storage.enable property (#14161)\n\nThe purpose of this change is to not allow a broker to start up with Tiered Storage disabled (remote.log.storage.system.enable=false) while there are still topics that have 'remote.storage.enable' set.\n\nReviewers: Kamal Chandraprakash<kamal.chandraprakash@gmail.com>, Divij Vaidya <diviv@amazon.com>, Satish Duggana <satishd@apache.org>, Luke Chen <showuon@gmail.com>",
    "epoch": 1693368260,
    "epoch_utc": null
  },
  {
    "commit": "1c5020e1429d1dadcb59955395afa87ada99f670",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Tue Aug 29 15:44:22 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 29 15:44:22 2023 -0400",
    "stats": {
      "files_changed": 8,
      "insertions": 488,
      "deletions": 37,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectorConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/SinkConnectorConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java",
        ".../runtime/src/test/java/org/apache/kafka/connect/integration/ConnectorValidationIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/AbstractHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedHerderTest.java",
        ".../runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectClusterAssertions.java"
      ]
    },
    "message": "KAFKA-13327: Gracefully report connector validation errors instead of returning 500 responses (#14303)\n\nReviewers: Yash Mayya <yash.mayya@gmail.com>, Greg Harris <greg.harris@aiven.io>",
    "epoch": 1693334662,
    "epoch_utc": null
  },
  {
    "commit": "8611d28b2e2050b913837ade4d01231413991dc3",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Tue Aug 29 12:25:30 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 29 12:25:30 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 13,
      "deletions": 1,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/RestServer.java"
      ]
    },
    "message": "KAFKA-15392: Prevent shadowing RestServer shutdown exceptions (#14277)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1693322730,
    "epoch_utc": null
  },
  {
    "commit": "945d21953e93409290a68dced0d366380866fb26",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Tue Aug 29 12:03:15 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 29 12:03:15 2023 -0700",
    "stats": {
      "files_changed": 4,
      "insertions": 250,
      "deletions": 14,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/WakeupTrigger.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/WakeupTriggerTest.java"
      ]
    },
    "message": "KAFKA-14875: Implement wakeup (#14118)\n\nSummary\nImplemented wakeup() mechanism using a WakeupTrigger class to store the pending wakeup item, and when wakeup() is invoked, it checks whether there's an active task or a wakeup task.\n\nIf there's an active task: the task will be completed exceptionally and the atomic reference will be freed up.\nIf there an wakedup task, which means wakeup() was invoked before a blocking call was issued. Therefore, the current task will be completed exceptionally immediately.\n\nThis PR also addressed minor issues such as:\n\nThrowing WakeupException at the right place: As wakeups are thrown by completing an active future exceptionally. The WakeupException is wrapped inside of the ExecutionException.\n\nmockConstruction is a thread-lock mock; therefore, we need to free up the reference before completing the test. Otherwise, other tests will continue using the thread-lock mock.\n\nReviewers: Lianet Magrans <lianetmr@gmail.com>, Jun Rao <junrao@gmail.com>",
    "epoch": 1693321395,
    "epoch_utc": null
  },
  {
    "commit": "3b02e97b65e7636fea84da834be235f93df41aea",
    "author": "Taher Ghaleb",
    "author_email": "taher.a.ghaleb@gmail.com",
    "date": "Tue Aug 29 12:27:20 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 29 09:27:20 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 27,
      "deletions": 26,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/GlobalProcessorContextImplTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StoreToProcessorContextAdapterTest.java"
      ]
    },
    "message": "KAFKA-15403: Refactor @Test(expected) annotation with assertThrows (#14264)\n\nassertThrows makes the verification of exceptions clearer and more intuitive, thus improving code readability compared to the annotation approach. It is considered a test smell in the research literature. One possible research is due to developers not keeping up to date with recent versions of testing frameworks.\n\nAll such patterns in streams have been refactored.\n\nReviewers: vamossagar12 <sagarmeansocean@gmail.com>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1693322840,
    "epoch_utc": null
  },
  {
    "commit": "0912ca27e2a229d2ebe02f4d1dabc40ed5fab0bb",
    "author": "Alyssa Huang",
    "author_email": "ahuang@confluent.io",
    "date": "Mon Aug 28 23:47:22 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 29 14:47:22 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 70,
      "deletions": 45,
      "files": [
        "core/src/test/scala/unit/kafka/admin/DeleteConsumerGroupsTest.scala",
        "core/src/test/scala/unit/kafka/server/DescribeClusterRequestTest.scala"
      ]
    },
    "message": "KRaft support for DescribeClusterRequestTest and DeleteConsumerGroupsTest (#14294)\n\nReviewers: dengziming <dengziming1993@gmail.com>, mannoopj <mannoopj@users.noreply.github.com>",
    "epoch": 1693277242,
    "epoch_utc": null
  },
  {
    "commit": "68b140cb56a208b951be84191d1e3f1eb0169882",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Mon Aug 28 20:23:17 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Aug 28 20:23:17 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 10,
      "deletions": 7,
      "files": [
        "storage/src/test/java/org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManagerRestartTest.java"
      ]
    },
    "message": "MINOR: Fix the TBRLMMRestart test. (#14297)\n\nReviewers: Luke Chen <showuon@gmail.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1693264997,
    "epoch_utc": null
  },
  {
    "commit": "68b7031dc443b6f6b5dfac81316ab22fe250ec54",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Mon Aug 28 07:02:56 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Aug 28 07:02:56 2023 -0700",
    "stats": {
      "files_changed": 9,
      "insertions": 817,
      "deletions": 34,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/Group.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorShard.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/OffsetMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroup.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/generic/GenericGroup.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorServiceTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java"
      ]
    },
    "message": "KAFKA-14499: [4/N] Implement OffsetFetch API (#14120)\n\nThis patch implements the OffsetFetch API in the new group coordinator.\n\nI found out that implementing the `RequireStable` flag is hard (to not say impossible) in the current model. For the context, the flag is here to ensure that an OffsetRequest request does not return stale offsets if there are pending offsets to be committed. In the scala code, we basically check the pending offsets data structure and if they are any pending offsets, we return the `UNSTABLE_OFFSET_COMMIT` error. This tells the consumer to retry.\n\nIn our new model, we don't have the pending offsets data structure. Instead, we use a timeline data structure to handle all the pending/uncommitted changes. Because of this we don't know whether offsets are pending for a particular group. Instead of doing this, I propose to not return the `UNSTABLE_OFFSET_COMMIT` error anymore. Instead, when `RequireStable` is set, we use a write operation to ensure that we read the latest offsets. If they are uncommitted offsets, the write operation ensures that the response is only return when they are committed. This gives a similar behaviour in the end.\n\nReviewers: Justine Olshan <jolshan@confluent.io>",
    "epoch": 1693216976,
    "epoch_utc": null
  },
  {
    "commit": "4590d565ef08e48411123aa1ecbb46bd8130a3de",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Mon Aug 28 15:59:50 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Aug 28 12:29:50 2023 +0200",
    "stats": {
      "files_changed": 11,
      "insertions": 50,
      "deletions": 44,
      "files": [
        "checkstyle/import-control-storage.xml",
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/test/scala/integration/kafka/admin/RemoteTopicCrudTest.scala",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/LocalTieredStorage.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/LocalTieredStorageCondition.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/LocalTieredStorageEvent.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/TieredStorageTestContext.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/TieredStorageTestHarness.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/ProduceAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/integration/OffloadAndConsumeFromLeaderTest.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/utils/RecordsKeyValueMatcher.java"
      ]
    },
    "message": "KAFKA-15399: Enable OffloadAndConsumeFromLeader test (#14285)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Christo Lolov <lolovc@amazon.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1693249190,
    "epoch_utc": null
  },
  {
    "commit": "664f71b20712f7e4d1768d993c2b1ab109b6061c",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Mon Aug 28 11:06:37 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Aug 28 12:06:37 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 23,
      "deletions": 37,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordCollectorTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StateRestoreCallbackAdapterTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StoreToProcessorContextAdapterTest.java"
      ]
    },
    "message": "KAFKA-14133: Move RecordCollectorTest, StateRestoreCallbackAdapterTest and StoreToProcessorContextAdapterTest to Mockito (#14210)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1693231597,
    "epoch_utc": null
  },
  {
    "commit": "b41b2dfcf2f0f9e458374fb9b0842bcc8739f130",
    "author": "Calvin Liu",
    "author_email": "83986057+CalvinConfluent@users.noreply.github.com",
    "date": "Mon Aug 28 02:59:48 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Aug 28 17:59:48 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 23,
      "deletions": 6,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/AlterPartitionRequest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/AlterPartitionRequestTest.java"
      ]
    },
    "message": "KAFKA-15353: make sure AlterPartitionRequest.build() is idempotent (#14236)\n\nAs described in https://issues.apache.org/jira/browse/KAFKA-15353\nWhen the AlterPartitionRequest version is < 3 and its builder.build is called multiple times, both newIsrWithEpochs and newIsr will all be empty. This can happen if the sender retires on errors.\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1693202388,
    "epoch_utc": null
  },
  {
    "commit": "d869bf5b221a50b16e1ca42f1043adc79c85eae8",
    "author": "iit2009060",
    "author_email": "59436466+iit2009060@users.noreply.github.com",
    "date": "Mon Aug 28 14:55:38 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Aug 28 11:25:38 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "release.py"
      ]
    },
    "message": "KAFKA-15256: Adding reviewer as part of release announcement email template (#14288)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Philip Nee <pnee@confluent.io>",
    "epoch": 1693245338,
    "epoch_utc": null
  },
  {
    "commit": "180dcd396932a4033df2104aaf0038b852c4fc1b",
    "author": "Gantigmaa Selenge",
    "author_email": "39860586+tinaselenge@users.noreply.github.com",
    "date": "Mon Aug 28 09:35:11 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Aug 28 10:35:11 2023 +0200",
    "stats": {
      "files_changed": 5,
      "insertions": 66,
      "deletions": 37,
      "files": [
        "build.gradle",
        "docs/configuration.html",
        "docs/toc.html",
        ".../java/org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManagerConfig.java",
        "storage/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteLogManagerConfig.java"
      ]
    },
    "message": "KAFKA-15294: Publish remote storage configs (#14266)\n\nThis change does the following:\n\n1. Make RemoteLogManagerConfigs that are implemented public\n\n2. Add tasks to generate html docs for the configs\n\n3. Include config docs in the main site\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Luke Chen <showuon@gmail.com>, Christo Lolov <lolovc@amazon.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1693226111,
    "epoch_utc": null
  },
  {
    "commit": "3643039a9a43cbd7c2dfc4927004be7b32264fb4",
    "author": "Tang Yunzi",
    "author_email": "34680857+shinyruoqaq@users.noreply.github.com",
    "date": "Mon Aug 28 11:13:47 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Aug 28 11:13:47 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "core/src/main/scala/kafka/controller/TopicDeletionManager.scala"
      ]
    },
    "message": "MINOR: Fix incorrect comment in TopicDeletionManager.scala. (#14292)\n\nFix incorrect comment in TopicDeletionManager.scala\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1693232027,
    "epoch_utc": null
  },
  {
    "commit": "ff3e6842ff99a600fc02e69ebefb09eef93decb3",
    "author": "Abhijeet Kumar",
    "author_email": "abhijeet.cse.kgp@gmail.com",
    "date": "Sat Aug 26 05:52:26 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Aug 26 05:52:26 2023 +0530",
    "stats": {
      "files_changed": 11,
      "insertions": 990,
      "deletions": 292,
      "files": [
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/ConsumerManager.java",
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/ConsumerTask.java",
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/RemoteLogMetadataCache.java",
        ".../java/org/apache/kafka/server/log/remote/metadata/storage/RemotePartitionMetadataEventHandler.java",
        ".../src/main/java/org/apache/kafka/server/log/remote/metadata/storage/RemotePartitionMetadataStore.java",
        ".../main/java/org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManager.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/metadata/storage/ConsumerTaskTest.java",
        ".../org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManagerHarness.java",
        ".../server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManagerMultipleSubscriptionsTest.java",
        ".../apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManagerRestartTest.java",
        ".../java/org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManagerTest.java"
      ]
    },
    "message": "KAFKA-15181: Wait for RemoteLogMetadataCache to initialize after assigning partitions (#14127)\n\nThis PR adds the following changes to the `TopicBasedRemoteLogMetadataManager`\n\n1. Added a guard in RemoteLogMetadataCache so that the incoming request can be served from the cache iff the corresponding user-topic-partition is initalized\n2. Improve error handling in ConsumerTask thread so that is not killed when there are errors in reading the internal topic\n3. ConsumerTask initialization should handle the case when there are no records to read\nand some other minor changes\n\nAdded Unit Tests for the changes\n\nCo-authored-by: Kamal Chandraprakash <kamal.chandraprakash@gmail.com>\n\nReviewers: Luke Chen <showuon@gmail.com>, Jorge Esteban Quilcate Otoya <quilcate.jorge@gmail.com>, Christo Lolov <lolovc@amazon.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1693039946,
    "epoch_utc": null
  },
  {
    "commit": "f2d499e25a1ab8674dda7c6e5a05a12fb8687dbd",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Fri Aug 25 13:41:43 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 25 10:41:43 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 72,
      "deletions": 4,
      "files": [
        "metadata/src/main/java/org/apache/kafka/image/loader/MetadataBatchLoader.java",
        "metadata/src/main/java/org/apache/kafka/image/loader/MetadataLoader.java",
        "metadata/src/test/java/org/apache/kafka/image/loader/MetadataLoaderTest.java"
      ]
    },
    "message": "KAFKA-15389: Don't publish until we have replayed at least one record (#14282)\n\nWhen starting up a controller for the first time (i.e., with an empty log), it is possible for\nMetadataLoader to publish an empty MetadataImage before the activation records of the controller\nhave been written. While this is not a bug, it could be confusing. This patch closes that gap by\nwaiting for at least one controller record to be committed before the MetadataLoader starts publishing\nimages.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1692981703,
    "epoch_utc": null
  },
  {
    "commit": "5785796f985aa294c12e670da221d086a7fa887c",
    "author": "Maros Orsak",
    "author_email": "maros.orsak159@gmail.com",
    "date": "Fri Aug 25 11:31:21 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 25 11:31:21 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 34,
      "deletions": 0,
      "files": [
        "clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/BuiltInPartitionerTest.java"
      ]
    },
    "message": "MINOR: Add a few test cases to clients (#14211)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1692973881,
    "epoch_utc": null
  },
  {
    "commit": "30de2bb5efe7d163115dd358067c98b17c3a6730",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Fri Aug 25 10:34:17 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 25 10:34:17 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "storage/src/main/java/org/apache/kafka/storage/internals/log/ProducerStateManager.java"
      ]
    },
    "message": "MINOR: Missing space in ProducerStateManager LogContext (#14275)\n\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1692970457,
    "epoch_utc": null
  },
  {
    "commit": "c9715a3485f2dbad1accbbf88c66af67febfe489",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Fri Aug 25 11:52:37 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 25 11:52:37 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 7,
      "deletions": 2,
      "files": [
        "tests/kafkatest/services/security/minikdc.py"
      ]
    },
    "message": "MINOR: Use \"add-exports\" only when jdk >= 16 in minikdc (#14232)\n\nUse \"add-exports\" only when jdk >= 16 in minikdc\n\nReviewers: Greg Harris <greg.harris@aiven.io>",
    "epoch": 1692975157,
    "epoch_utc": null
  },
  {
    "commit": "d4ab3ae85a35483c15f0ceb0002eb2d81ad79ad2",
    "author": "Satish Duggana",
    "author_email": "satishd@apache.org",
    "date": "Fri Aug 25 05:27:59 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 25 05:27:59 2023 +0530",
    "stats": {
      "files_changed": 11,
      "insertions": 935,
      "deletions": 141,
      "files": [
        "checkstyle/suppressions.xml",
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/epoch/LeaderEpochFileCache.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogConfig.java"
      ]
    },
    "message": "KAFKA-14888: Added remote log segments retention mechanism based on time and size. (#13561)\n\nThis change introduces a remote log segment segment retention cleanup mechanism.\n\nRemoteLogManager runs retention cleanup activity tasks on each leader replica. It assesses factors such as overall size and retention duration, subsequently removing qualified segments from remote storage. This process also involves adjusting the log-start-offset within the UnifiedLog accordingly. It also cleans up the segments which have epochs earlier than the earliest leader epoch in the current leader.\n\nCo-authored-by: Satish Duggana <satishd@apache.org>\nCo-authored-by: Kamal Chandraprakash <kamal.chandraprakash@gmail.com>\n\nReviewers: Jun Rao <junrao@gmail.com>, Divij Vaidya <diviv@amazon.com, Luke Chen <showuon@gmail.com>, Kamal Chandraprakash <kamal.chandraprakash@gmail.com>, Christo Lolov <lolovc@amazon.com>, Jorge Esteban Quilcate Otoya <quilcate.jorge@gmail.com>, Alexandre Dupriez <alexandre.dupriez@gmail.com>, Nikhil Ramakrishnan <ramakrishnan.nikhil@gmail.com>",
    "epoch": 1692952079,
    "epoch_utc": null
  },
  {
    "commit": "9e3b1f9b9bf48603acde7f71c704af812a6dab4b",
    "author": "Satish Duggana",
    "author_email": "satishd@apache.org",
    "date": "Fri Aug 25 05:03:38 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 25 05:03:38 2023 +0530",
    "stats": {
      "files_changed": 8,
      "insertions": 13,
      "deletions": 9,
      "files": [
        "docs/js/templateData.js",
        "gradle.properties",
        "kafka-merge-pr.py",
        "streams/quickstart/java/pom.xml",
        "streams/quickstart/java/src/main/resources/archetype-resources/pom.xml",
        "streams/quickstart/pom.xml",
        "tests/kafkatest/__init__.py",
        "tests/kafkatest/version.py"
      ]
    },
    "message": "MINOR Bump trunk to 3.7.0-SNAPSHOT (#14286)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1692950618,
    "epoch_utc": null
  },
  {
    "commit": "880288879e8200cd22951e67a50df166edcc1b33",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Thu Aug 24 23:44:53 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 24 15:44:53 2023 -0700",
    "stats": {
      "files_changed": 4,
      "insertions": 18,
      "deletions": 2,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerder.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerderTest.java"
      ]
    },
    "message": "KAFKA-15377: Don't expose externalized secret values in tasks-config API endpoint (#14244)\n\nReviewers: Greg Harris <greg.harris@aiven.io>",
    "epoch": 1692931493,
    "epoch_utc": null
  },
  {
    "commit": "a3303b6112f658fd4fcd3b8ae1cdfd7c1e43db5b",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Thu Aug 24 12:24:34 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 24 12:24:34 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 0,
      "deletions": 13,
      "files": [
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/integration/MirrorConnectorsIntegrationBaseTest.java"
      ]
    },
    "message": "KAFKA-15393: Improve shutdown behavior in MM2 integration tests (#14278)\n\nReviewers: Yash Mayya <yash.mayya@gmail.com>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1692890674,
    "epoch_utc": null
  },
  {
    "commit": "8d12c1175cca5af27f79aa746c24bd998ff62345",
    "author": "Phuc-Hong-Tran",
    "author_email": "44060007+Phuc-Hong-Tran@users.noreply.github.com",
    "date": "Fri Aug 25 03:38:45 2023 +1000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 24 19:38:45 2023 +0200",
    "stats": {
      "files_changed": 11,
      "insertions": 16,
      "deletions": 16,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java",
        "clients/src/main/java/org/apache/kafka/common/record/MemoryRecordsBuilder.java",
        "clients/src/main/java/org/apache/kafka/common/security/oauthbearer/internals/secured/HttpAccessTokenRetriever.java",
        "clients/src/main/java/org/apache/kafka/common/security/oauthbearer/internals/secured/RefreshingHttpsJwks.java",
        "clients/src/main/java/org/apache/kafka/common/security/oauthbearer/internals/secured/SerializedJwt.java",
        "metadata/src/main/java/org/apache/kafka/controller/ControllerResultAndOffset.java",
        "raft/src/main/java/org/apache/kafka/raft/Batch.java",
        "raft/src/main/java/org/apache/kafka/raft/FollowerState.java",
        "raft/src/main/java/org/apache/kafka/raft/ReplicatedLog.java",
        "raft/src/main/java/org/apache/kafka/raft/internals/BatchBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/CopartitionedTopicsEnforcer.java"
      ]
    },
    "message": "KAFKA-15152: Fix incorrect format specifiers when formatting string (#14026)\n\nReviewers: Divij Vaidya <diviv@amazon.com>\n\nCo-authored-by: phuchong.tran <phuchong.tran@servicenow.com>",
    "epoch": 1692945525,
    "epoch_utc": null
  },
  {
    "commit": "45aae641a5a6632f7d1261b1880dbb8e73be1ff6",
    "author": "Said Boudjelda",
    "author_email": "bmscomp@gmail.com",
    "date": "Thu Aug 24 19:29:33 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 24 19:29:33 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "settings.gradle"
      ]
    },
    "message": "MINOR: Upgrade version of Gradle entreprise to 3.14.1 & custom user data Gradle plugin to 1.11.1 (#14131)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1692916173,
    "epoch_utc": null
  },
  {
    "commit": "89aaecafae30fc2adc51d2fade89af4e9745598e",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Thu Aug 24 21:05:48 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 24 21:05:48 2023 +0530",
    "stats": {
      "files_changed": 4,
      "insertions": 97,
      "deletions": 10,
      "files": [
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/ConfigHandler.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/test/scala/unit/kafka/server/DynamicConfigChangeTest.scala"
      ]
    },
    "message": "KAFKA-15290: Handle topic-level dynamic remote storage enable configuration (#14238)\n\n* KAFKA-15290: Handle topic-level dynamic remote log storage enable configuration.\n\nTo onboard existing topics to tiered storage, bootstrap the remote-log-components when updating the dynamic `remote.storage.enable` config on the topic.\n\nReviewers: Christo Lolov <lolovc@amazon.com>, Divij Vaidya <diviv@amazon.com, Luke Chen <showuon@gmail.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1692921948,
    "epoch_utc": null
  },
  {
    "commit": "88d2c4460a1c8c8cf5dbcc9edb43f42fe898ca00",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Thu Aug 24 17:12:13 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 24 13:42:13 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 25,
      "deletions": 38,
      "files": [
        "core/src/test/scala/unit/kafka/log/remote/RemoteIndexCacheTest.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/RemoteIndexCache.java"
      ]
    },
    "message": "KAFKA-15400: Use readLock when removing an item from the RemoteIndexCache (#14283)\n\n- Caffeine cache is thread safe, we want to hold the writeLock only during the close.\n- Fix the flaky tests\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1692907933,
    "epoch_utc": null
  },
  {
    "commit": "25b128de81f826d0e0fe415acecf8b6d4cf837f4",
    "author": "Mehari Beyene",
    "author_email": "132488287+mehbey@users.noreply.github.com",
    "date": "Thu Aug 24 03:04:55 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 24 12:04:55 2023 +0200",
    "stats": {
      "files_changed": 19,
      "insertions": 397,
      "deletions": 40,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/config/TopicConfig.java",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/test/scala/integration/kafka/api/PlaintextProducerSendTest.scala",
        "core/src/test/scala/integration/kafka/server/DynamicBrokerReconfigurationTest.scala",
        "core/src/test/scala/unit/kafka/log/AbstractLogCleanerIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogConfigTest.scala",
        "core/src/test/scala/unit/kafka/log/LogManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogValidatorTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaConfigTest.scala",
        "core/src/test/scala/unit/kafka/server/ProduceRequestTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala",
        "docs/upgrade.html",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/record/CompressedRecordBatchValidationBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/record/UncompressedRecordBatchValidationBenchmark.java",
        "server-common/src/main/java/org/apache/kafka/server/config/ServerTopicConfigSynonyms.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogConfig.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogValidator.java"
      ]
    },
    "message": "KAFKA-14991: KIP-937-Improve message timestamp validation (#14135)\n\nThis implementation introduces two new configurations `log.message.timestamp.before.max.ms` and `log.message.timestamp.after.max.ms` and deprecates `log.message.timestamp.difference.max.ms`.\n\nThe default value for all these three configs is maintained to be Long.MAX_VALUE for backward compatibility but with the newly added configurations we can have a finer control when validating message timestamps that are in the past and the future compared to the broker's timestamp.\n\nTo maintain backward compatibility if the default value of `log.message.timestamp.before.max.ms` is not changed, we are assuming users are still using the deprecated config `log.message.timestamp.difference.max.ms` and validation is done using its value. This ensures that existing customers who have customized the value of `log.message.timestamp.difference.max.ms` will continue to see no change in behavior.\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Christo Lolov <lolovc@amazon.com>",
    "epoch": 1692857095,
    "epoch_utc": null
  },
  {
    "commit": "87a30b73b561b205eeabae66aeba529a9307dfa0",
    "author": "Okada Haruki",
    "author_email": "ocadaruma@gmail.com",
    "date": "Thu Aug 24 17:24:01 2023 +0900",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 24 10:24:01 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 34,
      "deletions": 2,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/utils/Utils.java",
        "core/src/main/scala/kafka/log/LocalLog.scala",
        "core/src/test/scala/unit/kafka/log/LocalLogTest.scala"
      ]
    },
    "message": "KAFKA-15391: Handle concurrent dir rename which makes log-dir to be offline unexpectedly (#14280)\n\nA race condition between async flush and segment rename (for deletion purpose) might cause the entire log directory to be marked offline when we delete a topic. This PR fixes the bug by ignoring NoSuchFileException when we flush a directory.\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1692908641,
    "epoch_utc": null
  },
  {
    "commit": "9972297e510d74bd5dedbffe5dfb7a9f1c0a123f",
    "author": "olalamichelle",
    "author_email": "32348847+olalamichelle@users.noreply.github.com",
    "date": "Wed Aug 23 21:59:16 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 24 10:59:16 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 162,
      "deletions": 33,
      "files": [
        ".../src/main/java/org/apache/kafka/common/security/oauthbearer/internals/secured/RefreshingHttpsJwks.java",
        ".../test/java/org/apache/kafka/common/security/oauthbearer/internals/secured/RefreshingHttpsJwksTest.java"
      ]
    },
    "message": "KAFKA-14780: Fix flaky test 'testSecondaryRefreshAfterElapsedDelay' (#14078)\n\n\"The test RefreshingHttpsJwksTest#testSecondaryRefreshAfterElapsedDelay relies on the actual system clock, which makes it frequently fail. The fix adds a second constructor that allows for passing a ScheduledExecutorService to manually execute the scheduled tasks before refreshing. The fixed task is much more robust and stable.\n\nCo-authored-by: Fei Xie <feixie@MacBook-Pro.attlocal.net>\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Luke Chen <showuon@gmail.com>",
    "epoch": 1692838756,
    "epoch_utc": null
  },
  {
    "commit": "0017bb3db5476479a9cfde2ec667949b6b001451",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Wed Aug 23 08:54:20 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 23 09:54:20 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        ".github/workflows/stale.yml"
      ]
    },
    "message": "MINOR: Fix typo in stale PR message (#14274)",
    "epoch": 1692791660,
    "epoch_utc": null
  },
  {
    "commit": "368bec85e874090b0032cb95f2f465309fbc60d5",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Wed Aug 23 09:31:58 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 23 09:31:58 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 18,
      "deletions": 18,
      "files": [
        "core/src/test/scala/integration/kafka/api/PlaintextAdminIntegrationTest.scala"
      ]
    },
    "message": "KAFKA-9926: Fix flaky PlaintextAdminIntegrationTest.testCreatePartitions (#14273)\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1692793918,
    "epoch_utc": null
  },
  {
    "commit": "e9f358eef6a5f48530ecfe0ca6fca689410b499c",
    "author": "Lianet Magrans",
    "author_email": "98415067+lianetm@users.noreply.github.com",
    "date": "Wed Aug 23 00:43:06 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 22 21:43:06 2023 -0700",
    "stats": {
      "files_changed": 21,
      "insertions": 338,
      "deletions": 305,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/ClientUtils.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CompletedFetch.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerUtils.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CoordinatorRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThread.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultEventHandler.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Deserializers.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/FetchConfig.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/NetworkClientDelegate.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/RequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/RequestManagers.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEventProcessor.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CompletedFetchTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThreadTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetchConfigTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetcherTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/OffsetFetcherTest.java"
      ]
    },
    "message": "KAFKA-14937; [2/N]: Refactoring for client code to reduce boilerplate (#14218)\n\nThis PR main refactoring relates to :\n\n1. serializers/deserializers used in clients - unified in a Deserializers class\n2. logic for configuring ClusterResourceListeners moved to ClientUtils\n3. misc refactoring of the new async consumer in preparation for upcoming Request Managers\n\nReviewers: Jun Rao <junrao@gmail.com>",
    "epoch": 1692762186,
    "epoch_utc": null
  },
  {
    "commit": "8394ddc0d26399dc20ddff802886fa0b1f41f420",
    "author": "Ron Dagostino",
    "author_email": "rndgstn@gmail.com",
    "date": "Tue Aug 22 19:04:53 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 22 16:04:53 2023 -0700",
    "stats": {
      "files_changed": 6,
      "insertions": 22,
      "deletions": 12,
      "files": [
        "core/src/test/java/kafka/test/ClusterTestExtensionsTest.java",
        "core/src/test/java/kafka/test/annotation/ClusterTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "server-common/src/main/java/org/apache/kafka/server/common/MetadataVersion.java",
        "server-common/src/test/java/org/apache/kafka/server/common/MetadataVersionTest.java",
        "tools/src/test/java/org/apache/kafka/tools/FeatureCommandTest.java"
      ]
    },
    "message": "MINOR: Move delegation token support to Metadata Version 3.6-IV2 (#14270)\n\n#14083 added support for delegation tokens in KRaft and attached that support to the existing\nMetadataVersion 3.6-IV1. This patch moves that support into a separate MetadataVersion 3.6-IV2.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1692741893,
    "epoch_utc": null
  },
  {
    "commit": "064a14795ccaa4d50798252e7d9ef081311b5e59",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Tue Aug 22 17:26:29 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 22 18:26:29 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResource.java"
      ]
    },
    "message": "MINOR: Update OpenAPI summary documentation for Connect's /tasks endpoint (#14267)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1692735989,
    "epoch_utc": null
  },
  {
    "commit": "86afa416d203637f148c4cfe2c5ec38ebc31247e",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Tue Aug 22 09:55:54 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 22 10:55:54 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 48,
      "deletions": 86,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamTransformValuesTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableImplTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableTransformValuesTest.java"
      ]
    },
    "message": "KAFKA-14133: Move mocks from KStreamTransformValuesTest, KTableImplTest and KTableTransformValuesTest to Mockito (#14204)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1692708954,
    "epoch_utc": null
  },
  {
    "commit": "418b8a6e5939903c4b9561a2be7dd2fa8e29c271",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Mon Aug 21 19:02:14 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Aug 21 16:02:14 2023 -0700",
    "stats": {
      "files_changed": 23,
      "insertions": 1944,
      "deletions": 300,
      "files": [
        "core/src/test/scala/unit/kafka/server/metadata/BrokerMetadataPublisherTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/ActivationRecordsGenerator.java",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/image/loader/LoaderManifestType.java",
        "metadata/src/main/java/org/apache/kafka/image/loader/LogDeltaManifest.java",
        "metadata/src/main/java/org/apache/kafka/image/loader/MetadataBatchLoader.java",
        "metadata/src/main/java/org/apache/kafka/image/loader/MetadataLoader.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/ZkRecordConsumer.java",
        "metadata/src/test/java/org/apache/kafka/controller/ActivationRecordsGeneratorTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/OffsetControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerIntegrationTestUtils.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTestEnv.java",
        "metadata/src/test/java/org/apache/kafka/controller/metrics/ControllerMetadataMetricsPublisherTest.java",
        "metadata/src/test/java/org/apache/kafka/image/loader/MetadataBatchLoaderTest.java",
        "metadata/src/test/java/org/apache/kafka/image/loader/MetadataLoaderTest.java",
        "metadata/src/test/java/org/apache/kafka/image/publisher/SnapshotGeneratorTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/RecordTestUtils.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationDriverTest.java",
        "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
        "server-common/src/test/java/org/apache/kafka/timeline/SnapshotRegistryTest.java",
        "tests/kafkatest/tests/core/zookeeper_migration_test.py"
      ]
    },
    "message": "KAFKA-14538 Metadata transactions in MetadataLoader (#14208)\n\nThis PR contains three main changes:\n\n- Support for transactions in MetadataLoader\n- Abort in-progress transaction during controller failover\n- Utilize transactions for ZK to KRaft migration\n\nA new MetadataBatchLoader class is added to decouple the loading of record batches from the\npublishing of metadata in MetadataLoader. Since a transaction can span across multiple batches (or\nmultiple transactions could exist within one batch), some buffering of metadata updates was needed\nbefore publishing out to the MetadataPublishers. MetadataBatchLoader accumulates changes into a\nMetadataDelta, and uses a callback to publish to the publishers when needed.\n\nOne small oddity with this approach is that since we can \"splitting\" batches in some cases, the\nnumber of bytes returned in the LogDeltaManifest has new semantics. The number of bytes included in\na batch is now only included in the last metadata update that is published as a result of a batch.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1692655334,
    "epoch_utc": null
  },
  {
    "commit": "ad76497b12b0d81a98dc6e230e5516adffbfa0ee",
    "author": "Walker Carlson",
    "author_email": "18128741+wcarlson5@users.noreply.github.com",
    "date": "Mon Aug 21 16:08:38 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Aug 21 16:08:38 2023 -0500",
    "stats": {
      "files_changed": 7,
      "insertions": 177,
      "deletions": 50,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamKTableJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamKTableJoinProcessor.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/StreamTableJoinNode.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBTimeOrderedKeyValueBuffer.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBTimeOrderedKeyValueBytesStore.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/JoinGracePeriodDurabilityIntegrationTest.java"
      ]
    },
    "message": "KAFKA-14936: fix grace period partition issue (#14269)\n\nMove the store creation to builder pattern and recover mintimestamp\n\nReviewers: John Roesler<vvcephei@apache.org>, Bill Bejeck <bbejeck@gmail.com>",
    "epoch": 1692644918,
    "epoch_utc": null
  },
  {
    "commit": "6008af7468108869f74c63e591c45d27c6dfd17e",
    "author": "Ron Dagostino",
    "author_email": "rndgstn@gmail.com",
    "date": "Mon Aug 21 13:02:32 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Aug 21 13:02:32 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 7,
      "deletions": 4,
      "files": [
        "tests/kafkatest/tests/core/delegation_token_test.py"
      ]
    },
    "message": "MINOR: Enable delegation token system test for KRaft (#14268)\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1692633752,
    "epoch_utc": null
  },
  {
    "commit": "4b383378a0fd19d6d3c9ae7c2175fa3459661a04",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Mon Aug 21 08:44:00 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Aug 21 08:44:00 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 68,
      "deletions": 22,
      "files": [
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/main/scala/kafka/server/KafkaRequestHandler.scala",
        "core/src/test/scala/kafka/server/KafkaRequestHandlerTest.scala"
      ]
    },
    "message": "KAFKA-15380: Execute action queue after callback request (#14197)\n\nKIP-890 part 1 introduced the callback request type. It is used to execute a callback after KafkaApis.handle has returned. We did not account for tryCompleteActions at the end of handle when making this change.\n\nIn tests, we saw produce p99 increase dramatically (likely because we have to wait for another request before we can complete DelayedProduce). As a result, we should add the tryCompleteActions after the callback as well. In testing, this improved the produce performance.\n\nReviewers: Artem Livshits <alivshits@confluent.io>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1692618240,
    "epoch_utc": null
  },
  {
    "commit": "eefa812453d5d5074506f5fc7642f585ac0c3545",
    "author": "David Mao",
    "author_email": "47232755+splett2@users.noreply.github.com",
    "date": "Sun Aug 20 15:16:27 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Aug 20 15:16:27 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 1,
      "deletions": 62,
      "files": [
        "core/src/main/scala/kafka/common/LongRef.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogOffsetMetadata.java"
      ]
    },
    "message": "MINOR: Delete unused class, LogOffsetMetadata toString formatting (#14246)\n\nNoticed that there was a dangling unused class (LongRef, replaced by PrimitiveRef.LongRef), and the LogOffsetMetadata toString was a little oddly formatted.\n\nReviewers: Justine Olshan <jolshan@confluent.io>",
    "epoch": 1692555387,
    "epoch_utc": null
  },
  {
    "commit": "6492164d9c099ae3091cd508df98453c954b7e13",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Sun Aug 20 17:15:52 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Aug 20 17:15:52 2023 +0530",
    "stats": {
      "files_changed": 51,
      "insertions": 4238,
      "deletions": 32,
      "files": [
        "build.gradle",
        "checkstyle/import-control-storage.xml",
        "checkstyle/import-control.xml",
        "core/src/main/scala/kafka/server/KafkaBroker.scala",
        "core/src/test/scala/unit/kafka/integration/KafkaServerTestHarness.scala",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/LocalTieredStorageTraverser.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/README.md",
        "storage/src/test/java/org/apache/kafka/tiered/storage/TieredStorageTestAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/TieredStorageTestBuilder.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/TieredStorageTestContext.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/TieredStorageTestHarness.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/TieredStorageTestReport.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/BounceBrokerAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/ConsumeAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/CreatePartitionsAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/CreateTopicAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/DeleteRecordsAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/DeleteTopicAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/EraseBrokerStorageAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/ExpectBrokerInISRAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/ExpectEmptyRemoteStorageAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/ExpectLeaderAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/ExpectLeaderEpochCheckpointAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/ExpectListOffsetsAction.java",
        ".../src/test/java/org/apache/kafka/tiered/storage/actions/ExpectTopicIdToMatchInRemoteStorageAction.java",
        ".../java/org/apache/kafka/tiered/storage/actions/ExpectUserTopicMappedToMetadataPartitionsAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/ProduceAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/ReassignReplicaAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/ShrinkReplicaAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/StartBrokerAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/StopBrokerAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/UpdateBrokerConfigAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/actions/UpdateTopicConfigAction.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/integration/OffloadAndConsumeFromLeaderTest.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/specs/ConsumableSpec.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/specs/DeletableSpec.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/specs/ExpandPartitionCountSpec.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/specs/FetchableSpec.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/specs/KeyValueSpec.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/specs/OffloadableSpec.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/specs/OffloadedSegmentSpec.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/specs/ProducableSpec.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/specs/RemoteDeleteSegmentSpec.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/specs/RemoteFetchSpec.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/specs/TopicSpec.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/utils/ActionUtils.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/utils/BrokerLocalStorage.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/utils/DumpLocalTieredStorage.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/utils/LocalTieredStorageOutput.java",
        "storage/src/test/java/org/apache/kafka/tiered/storage/utils/RecordsKeyValueMatcher.java",
        "storage/src/test/resources/log4j.properties"
      ]
    },
    "message": "KAFKA-15167: Tiered Storage Test Harness Framework (#14116)\n\n`TieredStorageTestHarness` is a base class for integration tests exercising the tiered storage functionality. This uses  `LocalTieredStorage` instance as the second-tier storage system and `TopicBasedRemoteLogMetadataManager` as the remote log metadata manager.\n\nCo-authored-by: Alexandre Dupriez <alexandre.dupriez@gmail.com>\nCo-authored-by: Kamal Chandraprakash <kamal.chandraprakash@gmail.com>",
    "epoch": 1692562552,
    "epoch_utc": null
  },
  {
    "commit": "c2759df0676cef252596239baf8f1f361e76c49f",
    "author": "Proven Provenzano",
    "author_email": "93720617+pprovenzano@users.noreply.github.com",
    "date": "Sat Aug 19 14:01:08 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Aug 19 14:01:08 2023 -0400",
    "stats": {
      "files_changed": 63,
      "insertions": 2665,
      "deletions": 440,
      "files": [
        "checkstyle/import-control-metadata.xml",
        "checkstyle/suppressions.xml",
        "clients/src/main/java/org/apache/kafka/common/security/token/delegation/TokenInformation.java",
        "clients/src/main/resources/common/message/CreateDelegationTokenRequest.json",
        "clients/src/main/resources/common/message/DescribeDelegationTokenRequest.json",
        "clients/src/main/resources/common/message/ExpireDelegationTokenRequest.json",
        "clients/src/main/resources/common/message/RenewDelegationTokenRequest.json",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/ControllerApis.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/DelegationTokenManager.scala",
        "core/src/main/scala/kafka/server/DelegationTokenManagerZk.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/main/scala/kafka/server/KafkaBroker.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/server/metadata/BrokerMetadataPublisher.scala",
        "core/src/main/scala/kafka/server/metadata/DelegationTokenPublisher.scala",
        "core/src/main/scala/kafka/server/metadata/KRaftMetadataCache.scala",
        "core/src/main/scala/kafka/zk/KafkaZkClient.scala",
        "core/src/main/scala/kafka/zk/ZkData.scala",
        "core/src/main/scala/kafka/zk/ZkMigrationClient.scala",
        "core/src/main/scala/kafka/zk/migration/ZkDelegationTokenMigrationClient.scala",
        "core/src/test/java/kafka/test/MockController.java",
        "core/src/test/scala/integration/kafka/api/DelegationTokenEndToEndAuthorizationTest.scala",
        "core/src/test/scala/integration/kafka/api/DelegationTokenEndToEndAuthorizationWithOwnerTest.scala",
        "core/src/test/scala/unit/kafka/security/token/delegation/DelegationTokenManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/DelegationTokenRequestsOnPlainTextTest.scala",
        "core/src/test/scala/unit/kafka/server/DelegationTokenRequestsTest.scala",
        "core/src/test/scala/unit/kafka/server/DelegationTokenRequestsWithDisableTokenFeatureTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "core/src/test/scala/unit/kafka/server/MetadataCacheTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/metadata/BrokerMetadataPublisherTest.scala",
        "core/src/test/scala/unit/kafka/zk/migration/ZkConfigMigrationClientTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/Controller.java",
        "metadata/src/main/java/org/apache/kafka/controller/DelegationTokenControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/image/DelegationTokenDelta.java",
        "metadata/src/main/java/org/apache/kafka/image/DelegationTokenImage.java",
        "metadata/src/main/java/org/apache/kafka/image/MetadataDelta.java",
        "metadata/src/main/java/org/apache/kafka/image/MetadataImage.java",
        "metadata/src/main/java/org/apache/kafka/image/node/DelegationTokenDataNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/DelegationTokenImageNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/MetadataImageNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/printer/MetadataNodeRedactionCriteria.java",
        "metadata/src/main/java/org/apache/kafka/metadata/DelegationTokenData.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/DelegationTokenMigrationClient.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationZkWriter.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/MigrationClient.java",
        "metadata/src/main/resources/common/metadata/DelegationTokenRecord.json",
        "metadata/src/main/resources/common/metadata/RemoveDelegationTokenRecord.json",
        "metadata/src/test/java/org/apache/kafka/controller/metrics/ControllerMetadataMetricsPublisherTest.java",
        "metadata/src/test/java/org/apache/kafka/image/DelegationTokenImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/MetadataImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/node/printer/MetadataNodeRedactionCriteriaTest.java",
        "metadata/src/test/java/org/apache/kafka/image/publisher/SnapshotEmitterTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/DelegationTokenDataTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/CapturingDelegationTokenMigrationClient.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/CapturingMigrationClient.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationDriverTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationZkWriterTest.java",
        "server-common/src/main/java/org/apache/kafka/server/common/MetadataVersion.java",
        "server-common/src/test/java/org/apache/kafka/server/common/MetadataVersionTest.java"
      ]
    },
    "message": "KAFKA-15219: KRaft support for DelegationTokens (#14083)\n\nReviewers: David Arthur <mumrah@gmail.com>, Ron Dagostino <rndgstn@gmail.com>, Manikumar Reddy <manikumar.reddy@gmail.com>, Viktor Somogyi <viktor.somogyi@cloudera.com>",
    "epoch": 1692464468,
    "epoch_utc": null
  },
  {
    "commit": "05c329e61fbfddc1f972403fbec0a24c45d4e173",
    "author": "Bruno Cadonna",
    "author_email": "cadonna@apache.org",
    "date": "Sat Aug 19 19:00:23 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Aug 19 19:00:23 2023 +0200",
    "stats": {
      "files_changed": 5,
      "insertions": 71,
      "deletions": 30,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/Tasks.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TasksRegistry.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TasksTest.java"
      ]
    },
    "message": "KAFKA-10199: Change to RUNNING if no pending task to init exist (#14249)\n\nA stream thread should only change to RUNNING if there are no\nactive tasks in restoration in the state updater and if there\nare no pending tasks to recycle and to init.\n\nUsually all pending tasks to init are added to the state updater\nin the same poll iteration that handles the assignment. However,\nif during an initialization of a task a LockException the task\nis re-added to the tasks to init and initialization is retried\nin the next poll iteration.\n\nA LockException might occur when a state directory is still locked\nby another thread, when the rebalance just happened.\n\nReviewers: Lucas Brutschy <lbrutschy@confluent.io>, Walker Carlson <wcarlson@confluent.io>",
    "epoch": 1692482423,
    "epoch_utc": null
  },
  {
    "commit": "4c7e0a9fa66fd1becc590d6060228b0305dd400b",
    "author": "Bruno Cadonna",
    "author_email": "cadonna@apache.org",
    "date": "Sat Aug 19 12:13:30 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Aug 19 12:13:30 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 34,
      "deletions": 1,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java"
      ]
    },
    "message": "MINOR: Decouple purging committed records from committing (#14227)\n\nCurrently, Kafka Streams only tries to purge records whose\noffset are committed from a repartition topic when at\nleast one offset was committed in the current commit.\nThe coupling between committing some offsets and purging\nrecords is not needed and might delay purging of records.\nFor example, if a in-flight call for purging records has not\ncompleted yet when a commit happens, a new call\nis not issued.\nIf then the earlier in-flight call for purging records\nfinally completes but the next commit does not commit any\noffsets, Streams does not issue the call for purging records\nwhose offset were committed in the previous commit\nbecause the purging call was still in-flight.\n\nThis change issues calls for purging records during any commit\nif the purge interval passed, even if no offsets were committed\nin the current commit.\n\nReviewers: Lucas Brutschy <lbrutschy@confluent.io>, Walker Carlson <wcarlson@confluent.io>",
    "epoch": 1692458010,
    "epoch_utc": null
  },
  {
    "commit": "d0b7677c2c9a8265643a90175f86987521615849",
    "author": "Walker Carlson",
    "author_email": "18128741+wcarlson5@users.noreply.github.com",
    "date": "Fri Aug 18 22:00:04 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 18 22:00:04 2023 -0500",
    "stats": {
      "files_changed": 6,
      "insertions": 459,
      "deletions": 5,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBTimeOrderedKeyValueBuffer.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBTimeOrderedKeyValueBytesStore.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/JoinGracePeriodDurabilityIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBTimeOrderedKeyValueBufferTest.java",
        ".../src/test/java/org/apache/kafka/streams/state/internals/RocksDBTimeOrderedKeyValueBytesStoreTest.java"
      ]
    },
    "message": "KAFKA-14936: Add restore logic (3/N)  (#14027)\n\nAdded restore logic for the buffer in grace period joins.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>, Bill Bejeck <bbejeck@gmail.com>",
    "epoch": 1692406804,
    "epoch_utc": null
  },
  {
    "commit": "82ae77f94566881d957929acbdc3197e60f7f5f8",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Fri Aug 18 15:28:43 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 18 15:28:43 2023 -0700",
    "stats": {
      "files_changed": 5,
      "insertions": 100,
      "deletions": 7,
      "files": [
        "tests/kafkatest/directory_layout/kafka_path.py",
        "tests/kafkatest/services/connect.py",
        "tests/kafkatest/tests/connect/connect_plugin_discovery_test.py",
        "tests/kafkatest/tests/connect/templates/connect-distributed.properties",
        "tests/kafkatest/tests/connect/templates/connect-standalone.properties"
      ]
    },
    "message": "KAFKA-15226: Add connect-plugin-path and plugin.discovery system test (#14230)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1692383323,
    "epoch_utc": null
  },
  {
    "commit": "b36cf4ef977fb14bc57683630a9f3f3680705550",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Fri Aug 18 11:06:08 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 18 11:06:08 2023 -0700",
    "stats": {
      "files_changed": 9,
      "insertions": 261,
      "deletions": 153,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java",
        "streams/src/main/java/org/apache/kafka/streams/internals/UpgradeFromValues.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/ChangedSerializer.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableRepartitionMap.java",
        ".../src/main/java/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapperSerde.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/InternalTopicManager.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.java",
        "streams/src/test/java/org/apache/kafka/streams/StreamsConfigTest.java",
        ".../src/test/java/org/apache/kafka/streams/processor/internals/assignment/AssignorConfigurationTest.java"
      ]
    },
    "message": "HOTIFX: fix Kafka Streams upgrade path from 3.4 to 3.5 (#14103)\n\nKIP-904 introduced a backward incompatible change that requires a 2-bounce rolling upgrade.\nThe new \"3.4\" upgrade config value is not recognized by `AssignorConfiguration` though and thus crashed Kafka Streams if use.\n\nReviewers: Farooq Qaiser <fqaiser94@gmail.com>, Bruno Cadonna <bruno@confluent.io>",
    "epoch": 1692367568,
    "epoch_utc": null
  },
  {
    "commit": "3ad5f42f595e4eef3a5787ce34e2676ed58bee3d",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Fri Aug 18 12:44:01 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 18 12:44:01 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 15,
      "deletions": 2,
      "files": [
        "core/src/main/scala/kafka/zk/ZkMigrationClient.scala",
        "core/src/test/scala/unit/kafka/zk/migration/ZkConfigMigrationClientTest.scala"
      ]
    },
    "message": "Handle case of default broker in config migration (#14237)\n\nWhen collecting the set of broker IDs during the migration, don't try to parse the default broker resource `\"\"` as a broker ID.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1692373441,
    "epoch_utc": null
  },
  {
    "commit": "ee036ed9effe6d38ee737e9360d3dd256a74fa9f",
    "author": "Lucas Brutschy",
    "author_email": "lucasbru@users.noreply.github.com",
    "date": "Fri Aug 18 18:31:27 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 18 18:31:27 2023 +0200",
    "stats": {
      "files_changed": 4,
      "insertions": 38,
      "deletions": 3,
      "files": [
        "LICENSE-binary",
        "gradle/dependencies.gradle",
        ".../src/main/java/org/apache/kafka/streams/state/internals/RocksDBGenericOptionsToDbOptionsColumnFamilyOptionsAdapter.java",
        "tests/setup.py"
      ]
    },
    "message": "KAFKA-15319: Upgrade rocksdb to fix CVE-2022-37434 (#14216)\n\nRocksdbjni<7.9.2 is vulnerable to CVE-2022-37434 due to zlib 1.2.12\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1692394287,
    "epoch_utc": null
  },
  {
    "commit": "4f88fb28f38f3e461377bf688520b28a3f209b5d",
    "author": "DL1231",
    "author_email": "53332773+DL1231@users.noreply.github.com",
    "date": "Fri Aug 18 20:51:09 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 18 18:21:09 2023 +0530",
    "stats": {
      "files_changed": 8,
      "insertions": 467,
      "deletions": 96,
      "files": [
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java",
        "core/src/test/scala/integration/kafka/admin/RemoteTopicCrudTest.scala",
        "core/src/test/scala/unit/kafka/log/remote/RemoteIndexCacheTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "storage/api/src/test/java/org/apache/kafka/server/log/remote/storage/NoOpRemoteLogMetadataManager.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/RemoteIndexCache.java"
      ]
    },
    "message": "KAFKA-15130: Delete remote segments when deleting a topic (#13947)\n\n* Delete remote segments when deleting a topic\n\nCo-authored-by: Kamal Chandraprakash <kchandraprakash@uber.com>\nCo-authored-by: d00791190 <dinglan6@huawei.com>",
    "epoch": 1692402669,
    "epoch_utc": null
  },
  {
    "commit": "3f4816dd3eafaf1a0636d3ee689069f897c99e28",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Thu Aug 17 18:40:17 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 17 18:40:17 2023 -0700",
    "stats": {
      "files_changed": 7,
      "insertions": 217,
      "deletions": 79,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/record/MemoryRecords.java",
        "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
        "raft/src/main/java/org/apache/kafka/raft/internals/RecordsBatchReader.java",
        "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientTest.java",
        "raft/src/test/java/org/apache/kafka/raft/RaftClientTestContext.java",
        "raft/src/test/java/org/apache/kafka/raft/internals/RecordsBatchReaderTest.java",
        "raft/src/test/java/org/apache/kafka/raft/internals/RecordsIteratorTest.java"
      ]
    },
    "message": "KAFKA-15345; KRaft leader notifies leadership when listener reaches epoch start (#14213)\n\nIn a non-empty log the KRaft leader only notifies the listener of leadership when it has read to the leader's epoch start offset. This guarantees that the leader epoch has been committed and that the listener has read all committed offsets/records.\n\nUnfortunately, the KRaft leader doesn't do this when the log is empty. When the log is empty the listener is notified immediately when it has become leader. This makes the API inconsistent and harder to program against.\n\nThis change fixes that by having the KRaft leader wait for the listener's nextOffset to be greater than the leader's epochStartOffset before calling handleLeaderChange.\n\nThe RecordsBatchReader implementation is also changed to include control records. This makes it possible for the state machine learn about committed control records. This additional information can be used to compute the committed offset or for counting those bytes when determining when to snapshot the partition.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1692308417,
    "epoch_utc": null
  },
  {
    "commit": "7802c264c96ae27167cf38c263b86398aa0ea3fe",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Thu Aug 17 19:13:53 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 17 14:13:53 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 25,
      "deletions": 10,
      "files": [
        "connect/file/src/main/java/org/apache/kafka/connect/file/FileStreamSourceConnector.java",
        "connect/file/src/test/java/org/apache/kafka/connect/file/FileStreamSourceConnectorTest.java"
      ]
    },
    "message": "MINOR: Allow writing tombstone offsets for arbitrary partitions in the FileStreamSourceConnector (#14234)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1692310433,
    "epoch_utc": null
  },
  {
    "commit": "a253dc6643bb18b123a3832f88b0d97965f38068",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Thu Aug 17 14:11:01 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 17 14:11:01 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 4,
      "deletions": 0,
      "files": [
        "docs/upgrade.html"
      ]
    },
    "message": "KAFKA-15102: Add release notes about the replication.policy.internal.topic.separator.enabled property for MirrorMaker 2 (#14220)\n\nReviewers: Greg Harris <greg.harris@aiven.io>",
    "epoch": 1692292261,
    "epoch_utc": null
  },
  {
    "commit": "d85a70081333a2ab9dd6593e99abf213a469ba2d",
    "author": "Lucas Brutschy",
    "author_email": "lucasbru@users.noreply.github.com",
    "date": "Thu Aug 17 19:53:58 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 17 10:53:58 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 6,
      "deletions": 13,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/integration/AbstractResetIntegrationTest.java"
      ]
    },
    "message": "MINOR: Do not reuse admin client across tests (#14225)\n\nReusing an admin client across tests can cause false positives in leak checkers, so don't do it.\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1692312838,
    "epoch_utc": null
  },
  {
    "commit": "de409b389d26f7681fba8583db2b96584258aa48",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Thu Aug 17 09:33:59 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 17 09:33:59 2023 -0400",
    "stats": {
      "files_changed": 12,
      "insertions": 844,
      "deletions": 22,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointConnector.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorHeartbeatConnector.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceConnector.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorUtils.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorCheckpointConnectorTest.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorHeartBeatConnectorTest.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorSourceConnectorTest.java",
        ".../src/test/java/org/apache/kafka/connect/mirror/integration/MirrorConnectorsIntegrationBaseTest.java",
        ".../test/java/org/apache/kafka/connect/mirror/integration/MirrorConnectorsIntegrationExactlyOnceTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/ConnectWorkerIntegrationTest.java",
        ".../runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectClusterAssertions.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedKafkaCluster.java"
      ]
    },
    "message": "KAFKA-15177: Implement KIP-875 SourceConnector::alterOffset API in MirrorMaker 2 connectors (#14005)\n\nReviewers: Yash Mayya <yash.mayya@gmail.com>, Greg Harris <greg.harris@aiven.io>",
    "epoch": 1692275639,
    "epoch_utc": null
  },
  {
    "commit": "6bd17419b76f8cf8d7e4a11c071494dfaa72cd50",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Wed Aug 16 11:37:33 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 16 11:37:33 2023 -0700",
    "stats": {
      "files_changed": 5,
      "insertions": 933,
      "deletions": 177,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginSource.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginUtils.java",
        "tools/src/main/java/org/apache/kafka/tools/ConnectPluginPath.java",
        "tools/src/main/java/org/apache/kafka/tools/ManifestWorkspace.java",
        "tools/src/test/java/org/apache/kafka/tools/ConnectPluginPathTest.java"
      ]
    },
    "message": "KAFKA-15228: Add sync-manifests command to connect-plugin-path (KIP-898) (#14195)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1692196653,
    "epoch_utc": null
  },
  {
    "commit": "a9efca0bf63110d68f84fc9841d8a31f245e10e0",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Wed Aug 16 10:30:24 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 16 10:30:24 2023 -0700",
    "stats": {
      "files_changed": 18,
      "insertions": 48,
      "deletions": 58,
      "files": [
        "build.gradle",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorPluginsResource.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorPluginsResourceTest.java",
        "connect/{runtime => test-plugins}/src/main/java/org/apache/kafka/connect/tools/MockConnector.java",
        "connect/{runtime => test-plugins}/src/main/java/org/apache/kafka/connect/tools/MockSinkConnector.java",
        "connect/{runtime => test-plugins}/src/main/java/org/apache/kafka/connect/tools/MockSinkTask.java",
        "connect/{runtime => test-plugins}/src/main/java/org/apache/kafka/connect/tools/MockSourceConnector.java",
        "connect/{runtime => test-plugins}/src/main/java/org/apache/kafka/connect/tools/MockSourceTask.java",
        "connect/{runtime => test-plugins}/src/main/java/org/apache/kafka/connect/tools/SchemaSourceConnector.java",
        "connect/{runtime => test-plugins}/src/main/java/org/apache/kafka/connect/tools/SchemaSourceTask.java",
        "connect/{runtime => test-plugins}/src/main/java/org/apache/kafka/connect/tools/VerifiableSinkConnector.java",
        "connect/{runtime => test-plugins}/src/main/java/org/apache/kafka/connect/tools/VerifiableSinkTask.java",
        "connect/{runtime => test-plugins}/src/main/java/org/apache/kafka/connect/tools/VerifiableSourceConnector.java",
        "connect/{runtime => test-plugins}/src/main/java/org/apache/kafka/connect/tools/VerifiableSourceTask.java",
        "connect/{runtime => test-plugins}/src/main/resources/META-INF/services/org.apache.kafka.connect.sink.SinkConnector",
        ".../{runtime => test-plugins}/src/main/resources/META-INF/services/org.apache.kafka.connect.source.SourceConnector",
        "settings.gradle",
        "tests/kafkatest/services/connect.py"
      ]
    },
    "message": "KAFKA-14759: Move Mock, Schema, and Verifiable connectors to new test-plugins module (#13302)\n\nReviewers: Hector Geraldino <hgeraldino@gmail.com>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1692192624,
    "epoch_utc": null
  },
  {
    "commit": "f970ddff10114ae7f9ea1b9966cd25ac8bb5f581",
    "author": "Gantigmaa Selenge",
    "author_email": "39860586+tinaselenge@users.noreply.github.com",
    "date": "Wed Aug 16 12:00:39 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 16 13:00:39 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 0,
      "files": [
        "release.py"
      ]
    },
    "message": "KAFKA-15210: Mention vote should be open for at atleast 72 hours in the release script (#14183)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1692198039,
    "epoch_utc": null
  },
  {
    "commit": "d0e9e94629c1347b19a2992b67d8590e61a59d04",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Wed Aug 16 09:19:35 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 16 10:19:35 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 57,
      "deletions": 78,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/ActiveTaskCreatorTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/ChangelogTopicsTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/GlobalProcessorContextImplTest.java"
      ]
    },
    "message": "KAFKA-14133: Migrate ActiveTaskCreatorTest, ChangelogTopicsTest and GlobalProcessorContextImplTest to Mockito (#14209)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1692188375,
    "epoch_utc": null
  },
  {
    "commit": "cfe49d1b7782e4adde409638c4a4152b22bd1ce5",
    "author": "bachmanity1",
    "author_email": "81428651+bachmanity1@users.noreply.github.com",
    "date": "Wed Aug 16 17:01:49 2023 +0900",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 16 10:01:49 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 15,
      "deletions": 39,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/state/internals/SessionStoreBuilderTest.java"
      ]
    },
    "message": "KAFKA-7438: Replace EasyMock with Mockito in SessionStoreBuilderTest (#14142)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Yash Mayya <yash.mayya@gmail.com>",
    "epoch": 1692216109,
    "epoch_utc": null
  },
  {
    "commit": "1a15cd708ab252e7c75dea06f36db36599f18322",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Wed Aug 16 08:46:40 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 16 09:46:40 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 42,
      "deletions": 53,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/SessionCacheFlushListenerTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimestampedCacheFlushListenerTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimestampedTupleForwarderTest.java"
      ]
    },
    "message": "KAFKA-14133: Migrato SessionCacheFlushListenerTest, TimestampedCacheFlushListenerTest and TimestampedTupleForwarderTest to Mockito (#14205)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1692186400,
    "epoch_utc": null
  },
  {
    "commit": "ee27773549646602b955343dba680efaa5227286",
    "author": "vamossagar12",
    "author_email": "sagarmeansocean@gmail.com",
    "date": "Wed Aug 16 07:16:17 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 16 09:46:17 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 17,
      "deletions": 7,
      "files": [
        "storage/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteLogManagerConfig.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/RemoteLogManagerConfigTest.java"
      ]
    },
    "message": "KAFKA-15329: Make default remote.log.metadata.manager.class.name as topic based RLMM (#14202)\n\nAs described in the KIP here the default value of remote.log.metadata.manager.class.name should be TopicBasedRemoteLogMetadataManager\n\nReviewers: Luke Chen <showuon@gmail.com>, Kamal Chandraprakash <kchandraprakash@uber.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1692180977,
    "epoch_utc": null
  },
  {
    "commit": "35e925f3535e7774520317310505fcde946228d5",
    "author": "Omnia G.H Ibrahim",
    "author_email": "o.g.h.ibrahim@gmail.com",
    "date": "Wed Aug 16 00:58:52 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 15 19:58:52 2023 -0400",
    "stats": {
      "files_changed": 4,
      "insertions": 95,
      "deletions": 3,
      "files": [
        "connect/mirror-client/src/main/java/org/apache/kafka/connect/mirror/DefaultReplicationPolicy.java",
        "connect/mirror-client/src/main/java/org/apache/kafka/connect/mirror/MirrorClientConfig.java",
        "connect/mirror-client/src/test/java/org/apache/kafka/connect/mirror/ReplicationPolicyTest.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java"
      ]
    },
    "message": "KAFKA-15102: Add replication.policy.internal.topic.separator.enabled property to MirrorMaker 2 (KIP-949) (#14082)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1692158332,
    "epoch_utc": null
  },
  {
    "commit": "b97e8203eb1fb016cd7cccd3dbf5fecc716969be",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Tue Aug 15 15:01:28 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 15 15:01:28 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 38,
      "deletions": 2,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CommitRequestManager.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CommitRequestManagerTest.java"
      ]
    },
    "message": "MINOR: CommitRequestManager should only poll when the coordinator node is known (#14179)\n\nAs title, we discovered a flaky bug during testing that the commit request manager would seldomly throw a NOT_COORDINATOR exception, which means the request was routed to a non-coordinator node. We discovered that if we don't check the coordinator node in the commitRequestManager, the request manager will pass on an empty node to the NetworkClientDelegate, which implies the request can be sent to any node in the cluster. This behavior is incorrect as the commit requests need to be routed to a coordinator node.\n\nBecause the timing coordinator's discovery during integration testing isn't entirely deterministic; therefore, the test became extremely flaky. After fixing this: The coordinator node is mandatory before attempt to enqueue these commit request to the NetworkClient.\n\nReviewers: Jun Rao <junrao@gmail.com>",
    "epoch": 1692122488,
    "epoch_utc": null
  },
  {
    "commit": "28858f3a3e2e6a8499944344b270bf33ca116503",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Tue Aug 15 14:24:48 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 15 14:24:48 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 16,
      "deletions": 8,
      "files": [
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/SynchronizationTest.java"
      ]
    },
    "message": "MINOR: Fix SynchronizationTest classloaders sometimes not being parallel capable (#14177)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1692120288,
    "epoch_utc": null
  },
  {
    "commit": "1a001c1e88e3e32b34a5c52f257de722da95a736",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Tue Aug 15 13:21:45 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 15 13:21:45 2023 -0700",
    "stats": {
      "files_changed": 9,
      "insertions": 29,
      "deletions": 7,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/config/provider/ConfigProvider.java",
        "connect/api/src/main/java/org/apache/kafka/connect/connector/policy/ConnectorClientConfigOverridePolicy.java",
        "connect/api/src/main/java/org/apache/kafka/connect/rest/ConnectRestExtension.java",
        "connect/api/src/main/java/org/apache/kafka/connect/sink/SinkConnector.java",
        "connect/api/src/main/java/org/apache/kafka/connect/source/SourceConnector.java",
        "connect/api/src/main/java/org/apache/kafka/connect/storage/Converter.java",
        "connect/api/src/main/java/org/apache/kafka/connect/storage/HeaderConverter.java",
        "connect/api/src/main/java/org/apache/kafka/connect/transforms/Transformation.java",
        "connect/api/src/main/java/org/apache/kafka/connect/transforms/predicates/Predicate.java"
      ]
    },
    "message": "KAFKA-15336: Add ServiceLoader Javadocs for Connect plugins (#14194)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1692116505,
    "epoch_utc": null
  },
  {
    "commit": "0a531b7e7cc614b273092a6d28b1b8c72bb93ea9",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Tue Aug 15 16:01:31 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 15 13:01:31 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 25,
      "deletions": 26,
      "files": [
        "core/src/main/scala/kafka/server/ControllerServer.scala"
      ]
    },
    "message": "MINOR: Install ControllerServer metadata publishers sooner (#14215)\n\nThis patch is a follow up of #14169 that installs the metadata publishers before blocking on the authorizer future.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1692126091,
    "epoch_utc": null
  },
  {
    "commit": "c199840f0add1c191c4333dc58baae49594734a8",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Sat Aug 12 09:14:17 2023 -0400",
    "commit_by": "Colin P. McCabe",
    "commit_by_email": "cmccabe@apache.org",
    "commit_by_date": "Tue Aug 15 12:29:59 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 13,
      "deletions": 2,
      "files": [
        "core/src/main/scala/kafka/controller/KafkaController.scala",
        "core/src/test/scala/unit/kafka/metrics/MetricsTest.scala"
      ]
    },
    "message": "MINOR: Fix the ZkMigrationState metric in KafkaController\n\nThis patch fixes an issue for ZK controllers where we were emitting the ZkMigrationState enum\nrather than a value. This can lead to downstream failures with JMX metrics since the RMI protocol\nwill marshal the ZkMigrationState object returned by the gauge. Any downstream consumer of this\nmetric (like jconsole or a metrics exporter) will not be able to unmarshal the value since the\nZkMigrationState class will not be present.\n\nThe fix is simply to emit the byte value of this enum.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>, Alok Thatikunta <athatikunta@confluent.io>",
    "epoch": 1691842457,
    "epoch_utc": null
  },
  {
    "commit": "696a56dd2ba54beed41748ef8cce958dadd6b375",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Wed Aug 16 00:13:11 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 15 20:43:11 2023 +0200",
    "stats": {
      "files_changed": 9,
      "insertions": 606,
      "deletions": 65,
      "files": [
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/main/scala/kafka/server/ControllerConfigurationValidator.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/ZkAdminManager.scala",
        "core/src/main/scala/kafka/zk/AdminZkClient.scala",
        "core/src/test/scala/integration/kafka/admin/RemoteTopicCrudTest.scala",
        "core/src/test/scala/unit/kafka/log/LogConfigTest.scala",
        "core/src/test/scala/unit/kafka/server/ControllerConfigurationValidatorTest.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogConfig.java"
      ]
    },
    "message": "KAFKA-15295: Add config validation when remote storage is enabled on a topic (#14176)\n\nAdd config validation which verifies that system level remote storage is enabled when enabling remote storage for a topic. In case verification fails, it throws InvalidConfigurationException.\n\nReviewers: Christo Lolov <lolovc@amazon.com>, Divij Vaidya <diviv@amazon.com>,  Luke Chen <showuon@gmail.com>",
    "epoch": 1692155591,
    "epoch_utc": null
  },
  {
    "commit": "fd6c9f16bacf26261fee2755c1d3679b9703a8a0",
    "author": "bachmanity1",
    "author_email": "81428651+bachmanity1@users.noreply.github.com",
    "date": "Tue Aug 15 18:48:13 2023 +0900",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 15 11:48:13 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 6,
      "deletions": 13,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorderGaugesTest.java"
      ]
    },
    "message": "KAFKA-7438: Replace Easymock & Powermock with Mockito in RocksDBMetricsRecorderGaugesTest (#14190)\n\nReviewers: Christo Lolov <christololov@gmail.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1692136093,
    "epoch_utc": null
  },
  {
    "commit": "adc16d0f310dc1350bca66d5da013d599b990cfa",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Mon Aug 14 16:58:56 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Aug 14 16:58:56 2023 -0700",
    "stats": {
      "files_changed": 15,
      "insertions": 913,
      "deletions": 159,
      "files": [
        "core/src/test/java/kafka/test/ClusterTestExtensionsTest.java",
        "core/src/test/java/kafka/test/annotation/ClusterTest.java",
        "metadata/src/main/java/org/apache/kafka/controller/OffsetControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/resources/common/metadata/AbortTransactionRecord.json",
        "metadata/src/main/resources/common/metadata/BeginTransactionRecord.json",
        "metadata/src/main/resources/common/metadata/EndTransactionRecord.json",
        "metadata/src/test/java/org/apache/kafka/controller/OffsetControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerIntegrationTestUtils.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerMetricsIntegrationTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "server-common/src/main/java/org/apache/kafka/server/common/MetadataVersion.java",
        "server-common/src/main/java/org/apache/kafka/timeline/SnapshotRegistry.java",
        "server-common/src/test/java/org/apache/kafka/timeline/TrackingSnapshotRegistry.java",
        "tools/src/test/java/org/apache/kafka/tools/FeatureCommandTest.java"
      ]
    },
    "message": "KAFKA-14538: Implement KRaft metadata transactions in QuorumController\n\nImplement the QuorumController side of KRaft metadata transactions.\n\nAs specified in KIP-868, this PR creates a new metadata version, IBP_3_6_IV1, which contains the\nthree new records: AbortTransactionRecord, BeginTransactionRecord, EndTransactionRecord.\n\nIn order to make offset management unit-testable, this PR moves it out of QuorumController.java and\ninto OffsetControlManager.java. The general approach here is to track the \"last stable offset,\" which is\ncalculated by looking at the latest committed offset and the in-progress transaction (if any). When\na transaction is aborted, we revert back to this last stable offset. We also revert back to it when\nthe controller is transitioning from active to inactive.\n\nIn a follow-up PR, we will add support for the transaction records in MetadataLoader. We will also\nadd support for automatically aborting pending transactions after a controller failover.\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1692043136,
    "epoch_utc": null
  },
  {
    "commit": "5a67b080c7d7814c38a83a25ab951e65743fae81",
    "author": "Calvin Liu",
    "author_email": "83986057+CalvinConfluent@users.noreply.github.com",
    "date": "Mon Aug 14 16:14:29 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Aug 14 16:14:29 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 56,
      "deletions": 8,
      "files": [
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala"
      ]
    },
    "message": "MINOR: Fix a race when query isUnderMinIsr (#14138)\n\nWhen the leader becomes the follower, we first remove the ISR and then reset the leader. If we call isUnderMinIsr in between, we will get an answer with true which is a race bug.\n\nReviewers: Justine Olshan <jolshan@confluent.io>",
    "epoch": 1692040469,
    "epoch_utc": null
  },
  {
    "commit": "67b527460e155f1f5e850bb7fd65c7c373367b48",
    "author": "Kirk True",
    "author_email": "kirk@kirktrue.pro",
    "date": "Mon Aug 14 10:08:20 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Aug 14 10:08:20 2023 -0700",
    "stats": {
      "files_changed": 11,
      "insertions": 422,
      "deletions": 306,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/ClientUtils.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerMetadata.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerUtils.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThread.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultEventHandler.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java"
      ]
    },
    "message": "KAFKA-14937: Refactoring for client code to reduce boilerplate (#13990)\n\nMove common code from the client implementations to the ClientUtils\nclass or (consumer) Utils class, where passible.\n\nThere are a number of places in the client code where the same basic\ncalls are made by more than one client implementation. Minor\nrefactoring will reduce the amount of boilerplate code necessary for\nthe client to construct its internal state.\n\n\nReviewers: Lianet Magrans <lianetmr@gmail.com>, Jun Rao <junrao@gmail.com>",
    "epoch": 1692018500,
    "epoch_utc": null
  },
  {
    "commit": "5234ddff5025501be2b4fca3ecba4e4eb584bbc5",
    "author": "Lucas Brutschy",
    "author_email": "lucasbru@users.noreply.github.com",
    "date": "Mon Aug 14 17:17:28 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Aug 14 17:17:28 2023 +0200",
    "stats": {
      "files_changed": 9,
      "insertions": 293,
      "deletions": 38,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/PunctuationQueue.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskExecutor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskManager.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/tasks/TaskExecutorCreator.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/PunctuationQueueTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskExecutorTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskManagerTest.java"
      ]
    },
    "message": "KAFKA-15326: [5/N] Processing thread punctuation (#14001)\n\nImplements punctuation inside processing threads. The scheduler\nalgorithm checks if a task that is not assigned currently can\nbe punctuated, and returns it when a worker thread asks for the\nnext task to be processed. Then, the processing thread runs all\npunctuations in the punctionation queue.\n\nPiggy-backed: take TaskExecutionMetadata into account when\nprocessing records.\n\nReviewer: Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1692044248,
    "epoch_utc": null
  },
  {
    "commit": "43751d8d0521b1440a823a9430fdb0659ce7c436",
    "author": "vveicc",
    "author_email": "vveicc@163.com",
    "date": "Mon Aug 14 17:04:15 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Aug 14 17:04:15 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 115,
      "deletions": 43,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/protocol/ApiKeys.java",
        "core/src/test/scala/unit/kafka/server/RequestQuotaTest.scala"
      ]
    },
    "message": "KAFKA-15289: Support KRaft mode in RequestQuotaTest (#14201)\n\nEnable kraft mode for RequestQuotaTest, there are 2 works left to be done.\n\nReviewers: dengziming <dengziming1993@gmail.com>",
    "epoch": 1692043455,
    "epoch_utc": null
  },
  {
    "commit": "d91c9bd2b594719cee629b6c057204fb0de0d1a2",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Sat Aug 12 16:52:49 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Aug 12 16:52:49 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "Jenkinsfile"
      ]
    },
    "message": "KAFKA-14682: Report Mockito unused stubbings during Jenkins build (#14186)\n\n* KAFKA-14682: Report Mockito unused stubbings during Jenkins build\n\n* DO NOT MERGE: Add test case that should fail during Jenkins build\n\n* Revert \"DO NOT MERGE: Add test case that should fail during Jenkins build\"\n\nThis reverts commit 8418b835ecb49fa10da04c7a997c7e982a8c4a47.",
    "epoch": 1691869969,
    "epoch_utc": null
  },
  {
    "commit": "ae46c0a34c90e3954b47ead2dc057e0bbf186a1f",
    "author": "bachmanity1",
    "author_email": "81428651+bachmanity1@users.noreply.github.com",
    "date": "Sat Aug 12 17:41:07 2023 +0900",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Aug 12 10:41:07 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 11,
      "deletions": 16,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/graph/TableSourceNodeTest.java"
      ]
    },
    "message": "KAFKA-7438: Replace Easymock & Powermock with Mockito in TableSourceNodeTest (#14189)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1691872867,
    "epoch_utc": null
  },
  {
    "commit": "3a94670a013caa57b991caa47037d5c9bfdbf20a",
    "author": "Hao Li",
    "author_email": "1127478+lihaosky@users.noreply.github.com",
    "date": "Sat Aug 12 01:38:07 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Aug 12 10:38:07 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 4,
      "deletions": 4,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/HighAvailabilityTaskAssignorTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/StickyTaskAssignorTest.java"
      ]
    },
    "message": "MINOR: Fix streams task assignor tests (#14196)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1691815087,
    "epoch_utc": null
  },
  {
    "commit": "cfb45b000140729aabc34953a80bc8dc4c9a08d3",
    "author": "Rittika Adhikari",
    "author_email": "rittika.adhikari@gmail.com",
    "date": "Fri Aug 11 14:15:17 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 11 14:15:17 2023 -0700",
    "stats": {
      "files_changed": 6,
      "insertions": 697,
      "deletions": 547,
      "files": [
        "core/src/test/scala/unit/kafka/server/AbstractFetcherThreadTest.scala",
        "core/src/test/scala/unit/kafka/server/FetcherThreadTestUtils.scala",
        "core/src/test/scala/unit/kafka/server/MockFetcherThread.scala",
        "core/src/test/scala/unit/kafka/server/MockLeaderEndPoint.scala",
        "core/src/test/scala/unit/kafka/server/MockTierStateMachine.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaFetcherTierStateMachineTest.scala"
      ]
    },
    "message": "MINOR: Refactor TierStateMachine related tests into a separate test file (#13503)\n\nThis PR builds off of KAFKA-14685 and refactors any tests explicitly related to ReplicaFetcherTierStateMachine into a separate testing file ReplicaFetcherTierStateMachineTest.\n\nReviewers: Jun Rao <junrao@gmail.com>",
    "epoch": 1691774117,
    "epoch_utc": null
  },
  {
    "commit": "f6b8b39747112bd8f3418893af760d42a1635648",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Fri Aug 11 13:15:30 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 11 13:15:30 2023 -0700",
    "stats": {
      "files_changed": 5,
      "insertions": 73,
      "deletions": 24,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEventProcessor.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/OffsetFetchApplicationEvent.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumerTest.java",
        "core/src/test/scala/integration/kafka/api/BaseAsyncConsumerTest.scala"
      ]
    },
    "message": "MINOR: Fix committed API in the PrototypeAsyncConsumer timeout (#14123)\n\nDiscovered the committed() API timeout during the integration test. After investigation, this is because the future was not completed in the ApplicationEventProcessor. Also added toString methods to the event class for debug purposes.\n\nReviewers: Jun Rao <junrao@gmail.com>",
    "epoch": 1691770530,
    "epoch_utc": null
  },
  {
    "commit": "f5655d31d3d527dae057240570162827c6a79fb2",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Fri Aug 11 12:05:51 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 11 12:05:51 2023 -0700",
    "stats": {
      "files_changed": 21,
      "insertions": 1576,
      "deletions": 32,
      "files": [
        "bin/connect-plugin-path.sh",
        "bin/windows/connect-plugin-path.bat",
        "build.gradle",
        "checkstyle/import-control.xml",
        "config/tools-log4j.properties",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginScanner.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginSource.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginUtils.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/Plugins.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/ReflectionScanner.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/TestPlugins.java",
        ".../META-INF/services/org.apache.kafka.connect.connector.policy.ConnectorClientConfigOverridePolicy",
        "connect/runtime/src/test/resources/test-plugins/non-migrated/test/plugins/NonMigratedConverter.java",
        "connect/runtime/src/test/resources/test-plugins/non-migrated/test/plugins/NonMigratedHeaderConverter.java",
        "connect/runtime/src/test/resources/test-plugins/non-migrated/test/plugins/NonMigratedMultiPlugin.java",
        "connect/runtime/src/test/resources/test-plugins/non-migrated/test/plugins/NonMigratedPredicate.java",
        "connect/runtime/src/test/resources/test-plugins/non-migrated/test/plugins/NonMigratedSinkConnector.java",
        "connect/runtime/src/test/resources/test-plugins/non-migrated/test/plugins/NonMigratedSourceConnector.java",
        "connect/runtime/src/test/resources/test-plugins/non-migrated/test/plugins/NonMigratedTransformation.java",
        "tools/src/main/java/org/apache/kafka/tools/ConnectPluginPath.java",
        "tools/src/test/java/org/apache/kafka/tools/ConnectPluginPathTest.java"
      ]
    },
    "message": "KAFKA-15030: Add connect-plugin-path command-line tool (#14064)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1691766351,
    "epoch_utc": null
  },
  {
    "commit": "1e747a24a361eb4ca258eab3acd07fa0260e19d4",
    "author": "Florin Akermann",
    "author_email": "florin.akermann@gmail.com",
    "date": "Fri Aug 11 20:45:18 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 11 11:45:18 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 16,
      "deletions": 32,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/KStream.java"
      ]
    },
    "message": "KAFKA-13197: fix GlobalKTable join/left-join semantics documentation. (#14187)\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1691797518,
    "epoch_utc": null
  },
  {
    "commit": "4268e502ec403a049c6a01be93195236fddbaad7",
    "author": "Hao Li",
    "author_email": "1127478+lihaosky@users.noreply.github.com",
    "date": "Fri Aug 11 11:40:33 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 11 11:40:33 2023 -0700",
    "stats": {
      "files_changed": 6,
      "insertions": 84,
      "deletions": 4,
      "files": [
        "docs/streams/architecture.html",
        "docs/streams/developer-guide/config-streams.html",
        "docs/streams/upgrade-guide.html",
        "docs/upgrade.html",
        "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java",
        "streams/src/test/java/org/apache/kafka/streams/StreamsConfigTest.java"
      ]
    },
    "message": "KAFKA-15022: [10/N] docs for rack aware assignor (#14181)\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1691764833,
    "epoch_utc": null
  },
  {
    "commit": "1fd58e30cf38587a66c1f7188c7667b555624485",
    "author": "Nikolay",
    "author_email": "nizhikov@apache.org",
    "date": "Fri Aug 11 15:52:14 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 11 14:52:14 2023 +0200",
    "stats": {
      "files_changed": 11,
      "insertions": 658,
      "deletions": 2,
      "files": [
        "server-common/src/main/java/org/apache/kafka/server/util/json/DecodeJson.java",
        "tools/src/main/java/org/apache/kafka/tools/reassign/ActiveMoveState.java",
        "tools/src/main/java/org/apache/kafka/tools/reassign/CancelledMoveState.java",
        "tools/src/main/java/org/apache/kafka/tools/reassign/CompletedMoveState.java",
        "tools/src/main/java/org/apache/kafka/tools/reassign/LogDirMoveState.java",
        "tools/src/main/java/org/apache/kafka/tools/reassign/MissingLogDirMoveState.java",
        "tools/src/main/java/org/apache/kafka/tools/reassign/MissingReplicaMoveState.java",
        "tools/src/main/java/org/apache/kafka/tools/reassign/PartitionMove.java",
        "tools/src/main/java/org/apache/kafka/tools/reassign/PartitionReassignmentState.java",
        "tools/src/main/java/org/apache/kafka/tools/reassign/ReassignPartitionsCommandOptions.java",
        "tools/src/main/java/org/apache/kafka/tools/reassign/VerifyAssignmentResult.java"
      ]
    },
    "message": "KAFKA-14595: Move classes from ReassignPartitionsCommand to tools (#14172)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1691779934,
    "epoch_utc": null
  },
  {
    "commit": "f137da04fa71734d176e19f5800622f4b4dfdb66",
    "author": "bachmanity1",
    "author_email": "81428651+bachmanity1@users.noreply.github.com",
    "date": "Fri Aug 11 17:50:37 2023 +0900",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 11 10:50:37 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 75,
      "deletions": 164,
      "files": [
        "build.gradle",
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/KafkaBasedLogTest.java"
      ]
    },
    "message": "KAFKA-14132: Replace Easymock & Powermock with Mockito in KafkaBasedLogTest (#14153)\n\nReviewers: Yash Mayya <yash.mayya@gmail.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1691787037,
    "epoch_utc": null
  },
  {
    "commit": "cdbc9a8d88c1ddc9dd088a33d047783a5b13c282",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Fri Aug 11 10:42:14 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 11 10:42:14 2023 +0800",
    "stats": {
      "files_changed": 3,
      "insertions": 85,
      "deletions": 11,
      "files": [
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java",
        "storage/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteLogManagerConfig.java"
      ]
    },
    "message": "KAFKA-15083: add config with \"remote.log.metadata\" prefix (#14151)\n\nWhen configuring RLMM, the configs passed into configure method is the RemoteLogManagerConfig. But in RemoteLogManagerConfig, there's no configs related to remote.log.metadata.*, ex: remote.log.metadata.topic.replication.factor. So, even if users have set the config in broker, it'll never be applied.\n\nThis PR fixed the issue to allow users setting RLMM prefix: remote.log.metadata.manager.impl.prefix (default is rlmm.config.), and then, appending the desired remote.log.metadata.* configs, it'll pass into RLMM, including remote.log.metadata.common.client./remote.log.metadata.producer./ remote.log.metadata.consumer. prefixes.\n\nEx:\n\n# default value\n# remote.log.storage.manager.impl.prefix=rsm.config.\n# remote.log.metadata.manager.impl.prefix=rlmm.config.\n\nrlmm.config.remote.log.metadata.topic.num.partitions=50\nrlmm.config.remote.log.metadata.topic.replication.factor=4\n\nrsm.config.test=value\n\nReviewers: Christo Lolov <christololov@gmail.com>, Kamal Chandraprakash <kchandraprakash@uber.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1691761334,
    "epoch_utc": null
  },
  {
    "commit": "111df859f0db7542eaa32a570bba5d83d5ef4a0b",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Fri Aug 11 04:34:55 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 11 10:34:55 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 5,
      "deletions": 0,
      "files": [
        "examples/src/main/java/kafka/examples/Consumer.java"
      ]
    },
    "message": "MINOR: Add comment to onPartitionsLost override (#14121)\n\nThis adds comments to the ConsumerRebalanceListener overrides, in order to briefly explain why we are overriding these methods, when they are called, and what you can or can't do. Especially onPartitionsLost can create some confusion given the default implementation.\n\nReviewers: Luke Chen <showuon@gmail.com>, David Jacot <djacot@confluent.io>",
    "epoch": 1691739295,
    "epoch_utc": null
  },
  {
    "commit": "594156e01bb59aab4d6dcbcb62679df9d83f8849",
    "author": "vveicc",
    "author_email": "vveicc@163.com",
    "date": "Fri Aug 11 10:18:13 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 11 10:18:13 2023 +0800",
    "stats": {
      "files_changed": 3,
      "insertions": 7,
      "deletions": 6,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/NodeApiVersions.java",
        "clients/src/test/java/org/apache/kafka/common/protocol/ApiKeysTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/ApiVersionsResponseTest.java"
      ]
    },
    "message": "KAFKA-15287: Change NodeApiVersions.create() to support both zk and kraft (#14185)\n\nReviewers: dengziming <dengziming1993@gmail.com>",
    "epoch": 1691759893,
    "epoch_utc": null
  },
  {
    "commit": "ab60bce090c37a1dbddb32fc9875d1a7f9109e60",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Thu Aug 10 16:53:49 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 10 16:53:49 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 0,
      "files": [
        "checkstyle/import-control.xml"
      ]
    },
    "message": "KAFKA-15239: Fix ThroughputThrottler import-control (#14188)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1691697229,
    "epoch_utc": null
  },
  {
    "commit": "821954e5692f0a2748018939a7af8fe0f765ac24",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Thu Aug 10 16:16:11 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 10 16:16:11 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 69,
      "deletions": 1,
      "files": [
        "docs/connect.html",
        "docs/toc.html"
      ]
    },
    "message": "KAFKA-15233: Add documentation for plugin.discovery and connect-plugin-path (KIP-898) (#14068)\n\nReviewers: Qichao Chu (@ex172000), Chris Egerton <chrise@aiven.io>",
    "epoch": 1691694971,
    "epoch_utc": null
  },
  {
    "commit": "8de3e0436abc2c58697041fe08fa22ce79b4743c",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Thu Aug 10 23:23:43 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 10 14:23:43 2023 -0700",
    "stats": {
      "files_changed": 7,
      "insertions": 7,
      "deletions": 6,
      "files": [
        "build.gradle",
        "connect/runtime/src/main/java/org/apache/kafka/connect/tools/SchemaSourceTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/tools/VerifiableSourceTask.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/MonitorableSourceConnector.java",
        "{clients/src/main/java/org/apache/kafka/common/utils => server-common/src/main/java/org/apache/kafka/server/util}/ThroughputThrottler.java",
        "tools/src/main/java/org/apache/kafka/tools/ProducerPerformance.java",
        "tools/src/main/java/org/apache/kafka/tools/VerifiableProducer.java"
      ]
    },
    "message": "KAFKA-15239: Fix system tests using producer performance service (#14092)\n\nReviewers: Greg Harris <greg.harris@aiven.io>",
    "epoch": 1691720623,
    "epoch_utc": null
  },
  {
    "commit": "f2ebd333e880e0099360116299551b8a8142a68b",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Thu Aug 10 21:47:30 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 10 16:47:30 2023 -0400",
    "stats": {
      "files_changed": 3,
      "insertions": 1557,
      "deletions": 2460,
      "files": [
        "build.gradle",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedHerderTest.java"
      ]
    },
    "message": "KAFKA-13187: Replace EasyMock / PowerMock with Mockito in DistributedHerderTest (#14102)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1691714850,
    "epoch_utc": null
  },
  {
    "commit": "0ee26640e59958fa547a25af5b03ab1acbae2f93",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Thu Aug 10 13:25:50 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 10 13:25:50 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 116,
      "deletions": 40,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/OffsetSyncStore.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/OffsetSyncStoreTest.java"
      ]
    },
    "message": "KAFKA-15202: Fix MM2 offset translation when syncs are variably spaced (#14156)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1691684750,
    "epoch_utc": null
  },
  {
    "commit": "b35ee39edafc9f102c455ce82301cf38b0db166c",
    "author": "David Mao",
    "author_email": "47232755+splett2@users.noreply.github.com",
    "date": "Thu Aug 10 11:06:12 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 10 11:06:12 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 39,
      "deletions": 3,
      "files": [
        "core/src/main/scala/kafka/server/metadata/KRaftMetadataCache.scala",
        "core/src/test/scala/unit/kafka/server/MetadataCacheTest.scala"
      ]
    },
    "message": "KAFKA-15220: Do not returned fenced brokers from getAliveBrokerNode (#14050)\n\ngetAliveBrokerNode returns fenced brokers as alive which is inconsistent with methods like\ngetAliveBrokerNodes. Add a filter to not return fenced brokers and adds a test to validate that\nthe two functions are consistent.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1691676372,
    "epoch_utc": null
  },
  {
    "commit": "db34f8b9a1430e440f3a40fc863d2fd70e549bb2",
    "author": "aindriu-aiven",
    "author_email": "121855584+aindriu-aiven@users.noreply.github.com",
    "date": "Thu Aug 10 18:45:12 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 10 10:45:12 2023 -0700",
    "stats": {
      "files_changed": 55,
      "insertions": 484,
      "deletions": 54,
      "files": [
        "connect/api/src/main/java/org/apache/kafka/connect/storage/SimpleHeaderConverter.java",
        "connect/api/src/main/java/org/apache/kafka/connect/storage/StringConverter.java",
        "connect/api/src/test/java/org/apache/kafka/connect/storage/SimpleHeaderConverterTest.java",
        "connect/api/src/test/java/org/apache/kafka/connect/storage/StringConverterTest.java",
        "connect/json/src/main/java/org/apache/kafka/connect/json/JsonConverter.java",
        "connect/json/src/test/java/org/apache/kafka/connect/json/JsonConverterTest.java",
        ".../runtime/src/main/java/org/apache/kafka/connect/connector/policy/AbstractConnectorClientConfigOverridePolicy.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/converters/ByteArrayConverter.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/converters/NumberConverter.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/converters/ByteArrayConverterTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/converters/NumberConverterTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/ErrorHandlingIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/ConnectorConfigTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/ErrorHandlingTaskTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/SampleConverterWithHeaders.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/SampleHeaderConverter.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/SamplePredicate.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/SampleTransformation.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginScannerTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginUtilsTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginsTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorPluginsResourceTest.java",
        "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/Cast.java",
        "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/DropHeaders.java",
        "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/ExtractField.java",
        "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/Filter.java",
        "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/Flatten.java",
        "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/HeaderFrom.java",
        "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/HoistField.java",
        "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/InsertField.java",
        "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/InsertHeader.java",
        "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/MaskField.java",
        "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/RegexRouter.java",
        "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/ReplaceField.java",
        "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/SetSchemaMetadata.java",
        "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/TimestampConverter.java",
        "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/TimestampRouter.java",
        "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/ValueToKey.java",
        "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/predicates/HasHeaderKey.java",
        "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/predicates/RecordIsTombstone.java",
        "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/predicates/TopicNameMatches.java",
        "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/CastTest.java",
        "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/DropHeadersTest.java",
        "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/ExtractFieldTest.java",
        "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java",
        "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/HoistFieldTest.java",
        "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/InsertFieldTest.java",
        "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/InsertHeaderTest.java",
        "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/MaskFieldTest.java",
        "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/RegexRouterTest.java",
        "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/ReplaceFieldTest.java",
        "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/SetSchemaMetadataTest.java",
        "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/TimestampConverterTest.java",
        "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/TimestampRouterTest.java",
        "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/ValueToKeyTest.java"
      ]
    },
    "message": "KAFKA-15291: Connect plugins should declare a version (#14159)\n\nSigned-off-by: Aindriu Lavelle <aindriu.lavelle@aiven.io>\nReviewers: Andrew Schofield, Greg Harris <greg.harris@aiven.io>",
    "epoch": 1691703912,
    "epoch_utc": null
  },
  {
    "commit": "9318b591d7a57b9db1e7519986d78f0402cd5b5e",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Wed Aug 9 23:54:46 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 9 23:54:46 2023 -0700",
    "stats": {
      "files_changed": 15,
      "insertions": 252,
      "deletions": 336,
      "files": [
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/metadata/AclPublisher.scala",
        "core/src/main/scala/kafka/server/metadata/BrokerMetadataPublisher.scala",
        "core/src/test/scala/unit/kafka/security/authorizer/AuthorizerTest.scala",
        "core/src/test/scala/unit/kafka/server/metadata/BrokerMetadataPublisherTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/AclControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/image/AclsDelta.java",
        "metadata/src/test/java/org/apache/kafka/controller/AclControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/MockAclControlManager.java",
        "metadata/src/test/java/org/apache/kafka/controller/MockAclMutator.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/RecordTestUtils.java",
        "metadata/src/test/java/org/apache/kafka/metadata/authorizer/MockAclMutator.java"
      ]
    },
    "message": "KAFKA-15318: Update the Authorizer via AclPublisher (#14169)\n\nOn the controller, move publishing acls to the Authorizer into a dedicated MetadataPublisher,\nAclPublisher. This publisher listens for notifications from MetadataLoader, and receives only\ncommitted data. This brings the controller side in line with how the broker has always worked. It\nalso avoids some ugly code related to publishing directly from the QuorumController. Most important\nof all, it clears the way to implement metadata transactions without worrying about Authorizer\nstate (since it will be handled by the MetadataLoader, along with other metadata image state).\n\nIn AclsDelta, we can remove isSnapshotDelta. We always know when the MetadataLoader is giving us a\nsnapshot. Also bring AclsDelta in line with the other delta classes, where completeSnapshot\ncalculates the diff between the previous image and the next one. We don't use this delta (since we\njust apply the image directly to the authorizer) but we should have it, for consistency.\n\nFinally, change MockAclMutator to avoid the need to subclass AclControlManager.\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1691636086,
    "epoch_utc": null
  },
  {
    "commit": "393b563bb5bfc5c8e4f9505f604a1963248f710a",
    "author": "vveicc",
    "author_email": "vveicc@163.com",
    "date": "Thu Aug 10 14:26:37 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 10 14:26:37 2023 +0800",
    "stats": {
      "files_changed": 3,
      "insertions": 57,
      "deletions": 33,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/NodeApiVersions.java",
        "clients/src/test/java/org/apache/kafka/clients/NodeApiVersionsTest.java",
        "core/src/test/scala/integration/kafka/admin/BrokerApiVersionsCommandTest.scala"
      ]
    },
    "message": "KAFKA-15288: Change BrokerApiVersionsCommandTest to support kraft mode (#14175)\n\nUse ApiKeys.clientApis() to replace ApiKeys.zkBrokerApis() to support kraft mode.\n\nReviewers: dengziming <dengziming1993@gmail.com>",
    "epoch": 1691688397,
    "epoch_utc": null
  },
  {
    "commit": "96631c25d5feb0d946dace56ddcd02515cc5e3a0",
    "author": "Hao Li",
    "author_email": "1127478+lihaosky@users.noreply.github.com",
    "date": "Wed Aug 9 19:50:43 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 9 19:50:43 2023 -0700",
    "stats": {
      "files_changed": 13,
      "insertions": 935,
      "deletions": 199,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/ClientState.java",
        ".../src/main/java/org/apache/kafka/streams/processor/internals/assignment/FallbackPriorTaskAssignor.java",
        ".../main/java/org/apache/kafka/streams/processor/internals/assignment/HighAvailabilityTaskAssignor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/RackAwareTaskAssignor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/StickyTaskAssignor.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/utils/EmbeddedKafkaCluster.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/AssignmentTestUtils.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/ClientStateTest.java",
        ".../java/org/apache/kafka/streams/processor/internals/assignment/HighAvailabilityTaskAssignorTest.java",
        ".../src/test/java/org/apache/kafka/streams/processor/internals/assignment/RackAwareTaskAssignorTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/StickyTaskAssignorTest.java",
        ".../test/java/org/apache/kafka/streams/processor/internals/assignment/TaskAssignorConvergenceTest.java"
      ]
    },
    "message": "KAFKA-15022: [9/N] use RackAwareTaskAssignor in StickyTaskAssignor (#14178)\n\nPart of KIP-925.\n\nUse rack aware assignor in StickyTaskAssignor.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1691621443,
    "epoch_utc": null
  },
  {
    "commit": "c72065a6327317c4281d5cee08b2861b488fc9d7",
    "author": "Qichao Chu",
    "author_email": "5326144+ex172000@users.noreply.github.com",
    "date": "Wed Aug 9 19:16:30 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 10 10:16:30 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 69,
      "deletions": 0,
      "files": [
        "clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java"
      ]
    },
    "message": "MINOR: Add test for describe topic with ID (#14110)\n\n* MINOR: Add test for describe topic with ID\n\nAdd a simple test to verify topic description with topic IDs.\n\nReviewers: Divij Vaidya <diviv@amazon.com>, dengziming <dengziming1993@gmail.com>",
    "epoch": 1691619390,
    "epoch_utc": null
  },
  {
    "commit": "87308167b19f6ffee76a144376cea540be028f0a",
    "author": "Hao Li",
    "author_email": "1127478+lihaosky@users.noreply.github.com",
    "date": "Wed Aug 9 16:42:53 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 9 16:42:53 2023 -0700",
    "stats": {
      "files_changed": 16,
      "insertions": 820,
      "deletions": 227,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java",
        ".../src/main/java/org/apache/kafka/streams/processor/internals/assignment/FallbackPriorTaskAssignor.java",
        ".../main/java/org/apache/kafka/streams/processor/internals/assignment/HighAvailabilityTaskAssignor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/StandbyTaskAssignor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/StickyTaskAssignor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/TaskAssignor.java",
        ".../src/test/java/org/apache/kafka/streams/integration/HighAvailabilityTaskAssignorIntegrationTest.java",
        ".../test/java/org/apache/kafka/streams/integration/StreamsUncaughtExceptionHandlerIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/TaskMetadataIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/utils/EmbeddedKafkaCluster.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/utils/IntegrationTestUtils.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/AssignmentTestUtils.java",
        ".../java/org/apache/kafka/streams/processor/internals/assignment/HighAvailabilityTaskAssignorTest.java",
        ".../test/java/org/apache/kafka/streams/processor/internals/assignment/TaskAssignorConvergenceTest.java"
      ]
    },
    "message": "KAFKA-15022: [8/N] more tests for HAAssignor (#14164)\n\nPart of KIP-925.\n\n- Add more tests for HighAvailabilityTaskAssignor\n- Remove null and optional check for RackAwareTaskAssignor\n- Pass rack aware assignor configs to getMainConsumerConfigs so that they can be picked up in rebalance protocol\n- Change STATELESS_NON_OVERLAP_COST to 0. It was a mistake to be 1. Stateless tasks should be moved without this cost.\n- Update of existing tests\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1691610173,
    "epoch_utc": null
  },
  {
    "commit": "dafe51b65885c476d3e06d5cad7cb553392cce42",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Wed Aug 9 07:12:08 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 9 07:12:08 2023 -0700",
    "stats": {
      "files_changed": 9,
      "insertions": 152,
      "deletions": 37,
      "files": [
        "raft/src/main/java/org/apache/kafka/raft/ElectionState.java",
        "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
        "raft/src/main/java/org/apache/kafka/raft/LeaderState.java",
        "raft/src/main/java/org/apache/kafka/raft/QuorumState.java",
        "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientSnapshotTest.java",
        "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientTest.java",
        "raft/src/test/java/org/apache/kafka/raft/MockLog.java",
        "raft/src/test/java/org/apache/kafka/raft/RaftClientTestContext.java",
        "raft/src/test/java/org/apache/kafka/raft/RaftEventSimulationTest.java"
      ]
    },
    "message": "KAFKA-15100; KRaft data race with the expiration service (#14141)\n\nThe KRaft client uses an expiration service to complete FETCH requests that have timed out. This expiration service uses a different thread from the KRaft polling thread. This means that it is unsafe for the expiration service thread to call tryCompleteFetchRequest. tryCompleteFetchRequest reads and updates a lot of states that is assumed to be only be read and updated from the polling thread.\n\nThe KRaft client now does not call tryCompleteFetchRequest when the FETCH request has expired. It instead will send the FETCH response that was computed when the FETCH request was first handled.\n\nThis change also fixes a bug where the KRaft client was not sending the FETCH response immediately, if the response contained a diverging epoch or snapshot id.\n\nReviewers: Jason Gustafson <jason@confluent.io>",
    "epoch": 1691575928,
    "epoch_utc": null
  },
  {
    "commit": "f23394336a7741bf4eb23fcde951af0a23a69bd0",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Wed Aug 9 10:13:28 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 9 11:13:28 2023 +0200",
    "stats": {
      "files_changed": 21,
      "insertions": 68,
      "deletions": 29,
      "files": [
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/InternalSinkRecordTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/TransformationStageTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerConfigTransformerTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedConfigTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/IncrementalCooperativeAssignorTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/WorkerCoordinatorIncrementalTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/WorkerCoordinatorTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/WorkerGroupMemberTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/health/ConnectClusterStateImplTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/DelegatingClassLoaderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/ConnectRestServerTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/InternalRequestSignatureTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/RestClientTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorPluginsResourceTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/LoggingResourceTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/FileOffsetBackingStoreTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaStatusBackingStoreFormatTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaStatusBackingStoreTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/OffsetStorageWriterTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/ConnectUtilsTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/SharedTopicAdminTest.java"
      ]
    },
    "message": "MINOR: Use Mockito's strict stubs functionality for Connect tests and cleanup unused stubs (#14166)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1691586808,
    "epoch_utc": null
  },
  {
    "commit": "ddeb89f4a9f31b5ff63661e18a94c403a8f45f69",
    "author": "Nikolay",
    "author_email": "nizhikov@apache.org",
    "date": "Wed Aug 9 11:32:45 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 9 10:32:45 2023 +0200",
    "stats": {
      "files_changed": 18,
      "insertions": 409,
      "deletions": 339,
      "files": [
        "checkstyle/import-control-server-common.xml",
        "core/src/main/scala/kafka/admin/AdminUtils.scala",
        "core/src/main/scala/kafka/admin/BrokerMetadata.scala",
        "core/src/main/scala/kafka/admin/ReassignPartitionsCommand.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/main/scala/kafka/server/MetadataCache.scala",
        "core/src/main/scala/kafka/server/ZkAdminManager.scala",
        "core/src/main/scala/kafka/server/metadata/KRaftMetadataCache.scala",
        "core/src/main/scala/kafka/server/metadata/ZkMetadataCache.scala",
        "core/src/main/scala/kafka/utils/CoreUtils.scala",
        "core/src/main/scala/kafka/zk/AdminZkClient.scala",
        "core/src/test/scala/unit/kafka/admin/AdminRackAwareTest.scala",
        "core/src/test/scala/unit/kafka/admin/RackAwareTest.scala",
        "core/src/test/scala/unit/kafka/admin/ReassignPartitionsUnitTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala",
        "core/src/test/scala/unit/kafka/zk/AdminZkClientTest.scala",
        "server-common/src/main/java/org/apache/kafka/admin/AdminUtils.java",
        "server-common/src/main/java/org/apache/kafka/admin/BrokerMetadata.java"
      ]
    },
    "message": "KAFKA-14595: Move AdminUtils to server-common (#14096)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1691591565,
    "epoch_utc": null
  },
  {
    "commit": "9bc4a2d4d1e9b4ce0f322ec6c604c7b7ac7c7d26",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Tue Aug 8 16:36:59 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 8 16:36:59 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 19,
      "deletions": 2,
      "files": [
        "server-common/src/main/java/org/apache/kafka/timeline/SnapshottableHashTable.java",
        "server-common/src/test/java/org/apache/kafka/timeline/SnapshottableHashTableTest.java"
      ]
    },
    "message": "KAFKA-15271: Historicalterator can exposes elements that are too new (#14125)\n\nA HistoricalIterator at epoch N is supposed to only reveal elements at epoch N or earlier. However,\ndue to a bug, we sometimes will reveal elements which are at a newer epoch than N. The bug does\nnot affect elements that are in the latest epoch (aka topTier). It only affects elements that are\nnewer than N, but which do not persist until the latest epoch.  This PR fixes the bug and adds a\nunit test for this case.\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1691523419,
    "epoch_utc": null
  },
  {
    "commit": "e0727063f7a52e99faef1ac745b3232109a0ff5a",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Tue Aug 8 14:31:42 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 8 14:31:42 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 0,
      "files": [
        "raft/src/main/java/org/apache/kafka/snapshot/FileRawSnapshotWriter.java"
      ]
    },
    "message": "KAFKA-15312; Force channel before atomic file move (#14162)\n\nOn ext4 file systems we have seen snapshots with zero-length files. This is possible if\nthe file is closed and moved before forcing the channel to write to disk.\n\nReviewers: Ron Dagostino <rndgstn@gmail.com>, Alok Thatikunta <athatikunta@confluent.io>",
    "epoch": 1691515902,
    "epoch_utc": null
  },
  {
    "commit": "a1cb4b4025c8bca7c164d9a63fad79455a6aef75",
    "author": "Lucia Cerchie",
    "author_email": "luciacerchie@gmail.com",
    "date": "Tue Aug 8 12:03:42 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 8 15:03:42 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 4,
      "deletions": 10,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/query/RangeQuery.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/IQv2StoreIntegrationTest.java"
      ]
    },
    "message": "add changes made before merge (#14137)\n\nChange in response to KIP-941.\n\nNew PR due to merge issue.\n\nChanges line 57 in the RangeQuery class file from:\n\npublic static <K, V> RangeQuery<K, V> withRange(final K lower, final K upper) {\nreturn new RangeQuery<>(Optional.of(lower), Optional.of(upper));\n}\nto\n\npublic static <K, V> RangeQuery<K, V> withRange(final K lower, final K upper) {\nreturn new RangeQuery<>(Optional.ofNullable(lower), Optional.ofNullable(upper));\n}\nTesting strategy:\n\nSince null values can now be entered in RangeQuerys in order to receive full scans, I changed the logic defining query starting at line 1085 in IQv2StoreIntegrationTest.java from:\n\nfinal RangeQuery<Integer, V> query;\nif (lower.isPresent() && upper.isPresent()) {\nquery = RangeQuery.withRange(lower.get(), upper.get());\n} else if (lower.isPresent()) {\nquery = RangeQuery.withLowerBound(lower.get());\n} else if (upper.isPresent()) {\nquery = RangeQuery.withUpperBound(upper.get());\n} else {\nquery = RangeQuery.withNoBounds();\n}\nto\n\nquery = RangeQuery.withRange(lower.orElse(null), upper.orElse(null));\nbecause different combinations of isPresent() in the bounds is no longer necessary.\n\nReviewers: John Roesler <vvcephei@apache.org>, Bill Bejeck <bbejeck@apache.org>",
    "epoch": 1691507022,
    "epoch_utc": null
  },
  {
    "commit": "ff4fed5cbe01480f671cc5070fac97d16ca0a5ba",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Tue Aug 8 10:06:35 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 8 10:06:35 2023 -0700",
    "stats": {
      "files_changed": 27,
      "insertions": 688,
      "deletions": 7,
      "files": [
        "connect/api/src/main/resources/META-INF/services/org.apache.kafka.connect.storage.Converter",
        "connect/api/src/main/resources/META-INF/services/org.apache.kafka.connect.storage.HeaderConverter",
        "connect/api/src/test/resources/META-INF/services/org.apache.kafka.connect.sink.SinkConnector",
        "connect/api/src/test/resources/META-INF/services/org.apache.kafka.connect.source.SourceConnector",
        "connect/file/src/main/resources/META-INF/services/org.apache.kafka.connect.sink.SinkConnector",
        "connect/file/src/main/resources/META-INF/services/org.apache.kafka.connect.source.SourceConnector",
        "connect/json/src/main/resources/META-INF/services/org.apache.kafka.connect.storage.Converter",
        "connect/json/src/main/resources/META-INF/services/org.apache.kafka.connect.storage.HeaderConverter",
        "connect/mirror/src/main/resources/META-INF/services/org.apache.kafka.connect.source.SourceConnector",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginDiscoveryMode.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/Plugins.java",
        "connect/runtime/src/main/resources/META-INF/services/org.apache.kafka.connect.sink.SinkConnector",
        "connect/runtime/src/main/resources/META-INF/services/org.apache.kafka.connect.source.SourceConnector",
        "connect/runtime/src/main/resources/META-INF/services/org.apache.kafka.connect.storage.Converter",
        "connect/runtime/src/main/resources/META-INF/services/org.apache.kafka.connect.storage.HeaderConverter",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginsTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/SynchronizationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectCluster.java",
        "connect/runtime/src/test/resources/META-INF/services/org.apache.kafka.connect.sink.SinkConnector",
        "connect/runtime/src/test/resources/META-INF/services/org.apache.kafka.connect.source.SourceConnector",
        "connect/runtime/src/test/resources/META-INF/services/org.apache.kafka.connect.storage.Converter",
        "connect/runtime/src/test/resources/META-INF/services/org.apache.kafka.connect.storage.HeaderConverter",
        "connect/runtime/src/test/resources/META-INF/services/org.apache.kafka.connect.transforms.Transformation",
        ".../runtime/src/test/resources/META-INF/services/org.apache.kafka.connect.transforms.predicates.Predicate",
        ".../transforms/src/main/resources/META-INF/services/org.apache.kafka.connect.transforms.Transformation",
        ".../src/main/resources/META-INF/services/org.apache.kafka.connect.transforms.predicates.Predicate"
      ]
    },
    "message": "KAFKA-15031: Add plugin.discovery to Connect worker configuration (KIP-898) (#14055)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1691499995,
    "epoch_utc": null
  },
  {
    "commit": "60a51170014622f65a22675ac54ec78058299fda",
    "author": "Hao Li",
    "author_email": "1127478+lihaosky@users.noreply.github.com",
    "date": "Tue Aug 8 08:01:05 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 8 08:01:05 2023 -0700",
    "stats": {
      "files_changed": 12,
      "insertions": 714,
      "deletions": 140,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/ChangelogTopics.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java",
        ".../src/main/java/org/apache/kafka/streams/processor/internals/assignment/FallbackPriorTaskAssignor.java",
        ".../main/java/org/apache/kafka/streams/processor/internals/assignment/HighAvailabilityTaskAssignor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/RackAwareTaskAssignor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/StandbyTaskAssignor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/StickyTaskAssignor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/TaskAssignor.java",
        ".../test/java/org/apache/kafka/streams/processor/internals/assignment/FallbackPriorTaskAssignorTest.java",
        ".../java/org/apache/kafka/streams/processor/internals/assignment/HighAvailabilityTaskAssignorTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/StickyTaskAssignorTest.java",
        ".../test/java/org/apache/kafka/streams/processor/internals/assignment/TaskAssignorConvergenceTest.java"
      ]
    },
    "message": "KAFKA-15022: [7/N] use RackAwareTaskAssignor in HAAssignor (#14139)\n\nPart of KIP-915.\n\n- Change TaskAssignor interface to take RackAwareTaskAssignor\n- Integrate RackAwareTaskAssignor to StreamsPartitionAssignor and HighAvailabilityTaskAssignor\n- Update HAAssignor tests\n\nReviewers: Anna Sophie Blee-Goldman <ableegoldman@apache.org>, Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1691492465,
    "epoch_utc": null
  },
  {
    "commit": "1c04ae8e614533ebca7768c2f929b424213bf09f",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Tue Aug 8 07:51:59 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 8 07:51:59 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 7,
      "deletions": 3,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/api/ProcessingContext.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/AssignmentTestUtils.java"
      ]
    },
    "message": "MINOR: Improve JavaDocs of KafkaStreams `context.commit()` (#14163)\n\nReviewers: Bill Bejeck <bill@confluent.io>",
    "epoch": 1691491919,
    "epoch_utc": null
  },
  {
    "commit": "8dec3e66163420ee0c2c259eef6e0c0f3185ca17",
    "author": "Hao Li",
    "author_email": "1127478+lihaosky@users.noreply.github.com",
    "date": "Mon Aug 7 11:21:55 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Aug 7 11:21:55 2023 -0700",
    "stats": {
      "files_changed": 6,
      "insertions": 605,
      "deletions": 373,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/RackAwareTaskAssignor.java",
        "streams/src/test/java/org/apache/kafka/streams/StreamsConfigTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/AssignmentTestUtils.java",
        ".../src/test/java/org/apache/kafka/streams/processor/internals/assignment/RackAwareTaskAssignorTest.java"
      ]
    },
    "message": "KAFKA-15022: [6/N] add rack aware assignor configs and update standby optimizer (#14150)\n\nPart of KIP-925.\n\n- Add configs for rack aware assignor\n- Update standby optimizer in RackAwareTaskAssignor to have more rounds\n- Refactor some method in RackAwareTaskAssignorTest to test utils so that they can also be used in HighAvailabilityTaskAssignorTest and other tests\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1691418115,
    "epoch_utc": null
  },
  {
    "commit": "ac6a536c7c1e9ea8c5889669b59816d84247224e",
    "author": "Maros Orsak",
    "author_email": "maros.orsak159@gmail.com",
    "date": "Mon Aug 7 15:19:55 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Aug 7 06:19:55 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 0,
      "files": [
        "tests/kafkatest/services/security/minikdc.py"
      ]
    },
    "message": "MINOR: Fix MiniKdc Java 17 issue in system tests (#14011)\n\nKafka system tests with Java version 17 are failing on this issue:\n\n```python\nTimeoutError(\"MiniKdc didn't finish startup\",)\nTraceback (most recent call last):\nFile \"/usr/local/lib/python3.6/site-packages/ducktape/tests/runner_client.py\", line 186, in _do_run\ndata = self.run_test()\nFile \"/usr/local/lib/python3.6/site-packages/ducktape/tests/runner_client.py\", line 246, in run_test\nreturn self.test_context.function(self.test)\nFile \"/usr/local/lib/python3.6/site-packages/ducktape/mark/_mark.py\", line 433, in wrapper\nreturn functools.partial(f, *args, **kwargs)(*w_args, **w_kwargs)\nFile \"/opt/kafka-dev/tests/kafkatest/sanity_checks/test_verifiable_producer.py\", line 74, in test_simple_run\nself.kafka.start()\nFile \"/opt/kafka-dev/tests/kafkatest/services/kafka/kafka.py\", line 635, in start\nself.start_minikdc_if_necessary(add_principals)\nFile \"/opt/kafka-dev/tests/kafkatest/services/kafka/kafka.py\", line 596, in start_minikdc_if_necessary\nself.minikdc.start()\nFile \"/usr/local/lib/python3.6/site-packages/ducktape/services/service.py\", line 265, in start\nself.start_node(node, **kwargs)\nFile \"/opt/kafka-dev/tests/kafkatest/services/security/minikdc.py\", line 114, in start_node\nmonitor.wait_until(\"MiniKdc Running\", timeout_sec=60, backoff_sec=1, err_msg=\"MiniKdc didn't finish startup\")\nFile \"/usr/local/lib/python3.6/site-packages/ducktape/cluster/remoteaccount.py\", line 754, in wait_until\nallow_fail=True) == 0, **kwargs)\nFile \"/usr/local/lib/python3.6/site-packages/ducktape/utils/util.py\", line 58, in wait_until\nraise TimeoutError(err_msg() if callable(err_msg) else err_msg) from last_exception\nducktape.errors.TimeoutError: MiniKdc didn't finish startup\n```\n\nSpecifically, when one runs the test cases and looks at the logs of the MiniKdc:\n```java\nException in thread \"main\" java.lang.IllegalAccessException: class kafka.security.minikdc.MiniKdc cannot access class sun.security.krb5.Config (in module java.security.jgss) because module java.security.jgss does not export sun.security.krb5 to unnamed module @24959ca4\nat java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:392)\nat java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:674)\nat java.base/java.lang.reflect.Method.invoke(Method.java:560)\nat kafka.security.minikdc.MiniKdc.refreshJvmKerberosConfig(MiniKdc.scala:268)\nat kafka.security.minikdc.MiniKdc.initJvmKerberosConfig(MiniKdc.scala:245)\nat kafka.security.minikdc.MiniKdc.start(MiniKdc.scala:123)\nat kafka.security.minikdc.MiniKdc$.start(MiniKdc.scala:375)\nat kafka.security.minikdc.MiniKdc$.main(MiniKdc.scala:366)\nat kafka.security.minikdc.MiniKdc.main(MiniKdc.scala)\n```\n\nThis error is caused by the fact that sun.security module is no longer supported in Java 16 and higher. Related to the [1].\nThere are two ways how to solve it, and I present one of them. The second way is to export the ENV variable during the deployment of the containers using Ducktape in [2].\n\n[1] - https://openjdk.org/jeps/396\n[2] - https://github.com/apache/kafka/blob/trunk/tests/docker/ducker-ak#L308\n\nReviewers: Ismael Juma <ismael@juma.me.uk>, Luke Chen <showuon@gmail.com>",
    "epoch": 1691432395,
    "epoch_utc": null
  },
  {
    "commit": "7a2e11cae739f3391f61e2e29b148d3a3ebea8b3",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Sun Aug 6 10:20:08 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Aug 6 10:20:08 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "docs/streams/developer-guide/config-streams.html"
      ]
    },
    "message": "MINOR: update Kafka Streams state.dir doc (#14155)\n\nDefault state directory was changes in 2.8.0 release (cf KAFKA-10604)\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1691328008,
    "epoch_utc": null
  },
  {
    "commit": "748175ce62ea68d2a99ff9f96c7e349e1d0e1b96",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Sat Aug 5 13:00:16 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Aug 5 13:00:16 2023 +0800",
    "stats": {
      "files_changed": 24,
      "insertions": 236,
      "deletions": 81,
      "files": [
        "build.gradle",
        "checkstyle/import-control.xml",
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/main/java/kafka/server/builders/KafkaApisBuilder.java",
        "core/src/main/java/kafka/server/builders/ReplicaManagerBuilder.java",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/KafkaRequestHandler.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java",
        "core/src/test/java/kafka/log/remote/RemoteLogReaderTest.java",
        "core/src/test/scala/integration/kafka/api/MetricsTest.scala",
        "core/src/test/scala/kafka/server/KafkaRequestHandlerTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/fetcher/ReplicaFetcherThreadBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/metadata/KRaftMetadataRequestBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/metadata/MetadataRequestBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/partition/PartitionMakeFollowerBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/partition/UpdateFollowerFetchStateBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/record/BaseRecordBatchBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/server/CheckpointBench.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/server/PartitionCreationBench.java",
        "storage/api/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteStorageMetrics.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/RemoteStorageThreadPool.java"
      ]
    },
    "message": "KAFKA-15189: only init remote topic metrics when enabled (#14133)\n\nOnly initialize remote topic metrics when system-wise remote storage is enabled to avoid impacting performance for existing brokers. Also add tests.\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Kamal Chandraprakash <kamal.chandraprakash@gmail.com>",
    "epoch": 1691251216,
    "epoch_utc": null
  },
  {
    "commit": "faf36357f3c87888087627d1d2220d6db29d98fb",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Fri Aug 4 21:06:53 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 4 21:06:53 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 5,
      "deletions": 0,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/ResponseJoinProcessorSupplier.java"
      ]
    },
    "message": "MINOR: improve logging for FK-join (#14105)\n\nReviewers: Colt McNealy <colt@littlehorse.io>, Walker Carlson <wcarlson@confluent.io>",
    "epoch": 1691194013,
    "epoch_utc": null
  },
  {
    "commit": "b3db905b27ff4133f4018ac922c9ce2beb2d6087",
    "author": "Ivan Yurchenko",
    "author_email": "ivanyu@aiven.io",
    "date": "Fri Aug 4 15:53:25 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 4 18:23:25 2023 +0530",
    "stats": {
      "files_changed": 33,
      "insertions": 700,
      "deletions": 60,
      "files": [
        "checkstyle/suppressions.xml",
        "core/src/main/java/kafka/log/remote/CustomMetadataSizeLimitExceededException.java",
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java",
        "storage/api/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteLogSegmentMetadata.java",
        "storage/api/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteLogSegmentMetadataUpdate.java",
        "storage/api/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteStorageManager.java",
        "storage/api/src/test/java/org/apache/kafka/server/log/remote/storage/NoOpRemoteStorageManager.java",
        "storage/api/src/test/java/org/apache/kafka/server/log/remote/storage/RemoteLogSegmentMetadataTest.java",
        ".../main/java/org/apache/kafka/server/log/remote/metadata/storage/FileBasedRemoteLogMetadataCache.java",
        ".../main/java/org/apache/kafka/server/log/remote/metadata/storage/RemoteLogSegmentMetadataSnapshot.java",
        ".../kafka/server/log/remote/metadata/storage/serialization/RemoteLogSegmentMetadataSnapshotTransform.java",
        ".../apache/kafka/server/log/remote/metadata/storage/serialization/RemoteLogSegmentMetadataTransform.java",
        ".../kafka/server/log/remote/metadata/storage/serialization/RemoteLogSegmentMetadataUpdateTransform.java",
        ".../src/main/java/org/apache/kafka/server/log/remote/storage/ClassLoaderAwareRemoteStorageManager.java",
        "storage/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteLogManagerConfig.java",
        "storage/src/main/resources/message/RemoteLogSegmentMetadataRecord.json",
        "storage/src/main/resources/message/RemoteLogSegmentMetadataSnapshotRecord.json",
        "storage/src/main/resources/message/RemoteLogSegmentMetadataUpdateRecord.json",
        ".../java/org/apache/kafka/server/log/remote/metadata/storage/FileBasedRemoteLogMetadataCacheTest.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/metadata/storage/RemoteLogMetadataCacheTest.java",
        ".../src/test/java/org/apache/kafka/server/log/remote/metadata/storage/RemoteLogMetadataFormatterTest.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/metadata/storage/RemoteLogMetadataSerdeTest.java",
        ".../test/java/org/apache/kafka/server/log/remote/metadata/storage/RemoteLogMetadataSnapshotFileTest.java",
        ".../src/test/java/org/apache/kafka/server/log/remote/metadata/storage/RemoteLogMetadataTransformTest.java",
        ".../src/test/java/org/apache/kafka/server/log/remote/metadata/storage/RemoteLogSegmentLifecycleTest.java",
        ".../server/log/remote/metadata/storage/serialization/RemoteLogSegmentMetadataSnapshotTransformTest.java",
        ".../kafka/server/log/remote/metadata/storage/serialization/RemoteLogSegmentMetadataTransformTest.java",
        ".../server/log/remote/metadata/storage/serialization/RemoteLogSegmentMetadataUpdateTransformTest.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/InmemoryRemoteStorageManager.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/LocalTieredStorage.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/RemoteLogManagerConfigTest.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/RemoteLogMetadataManagerTest.java"
      ]
    },
    "message": "KAFKA-15107: Support custom metadata for remote log segment (#13984)\n\n* KAFKA-15107: Support custom metadata for remote log segment\n\nThis commit does the changes discussed in the KIP-917. Mainly, changes the `RemoteStorageManager` interface in order to return `CustomMetadata` and then ensures these custom metadata are stored, propagated, (de-)serialized correctly along with the standard metadata throughout the whole lifecycle. It introduces the `remote.log.metadata.custom.metadata.max.size` to limit the custom metadata size acceptable by the broker and stop uploading in case a piece of metadata exceeds this limit.\n\nOn testing:\n1. `RemoteLogManagerTest` checks the case when a piece of custom metadata is larger than the configured limit.\n2. `RemoteLogSegmentMetadataTest` checks if `createWithUpdates` works correctly, including custom metadata.\n3. `RemoteLogSegmentMetadataTransformTest`, `RemoteLogSegmentMetadataSnapshotTransformTest`, and `RemoteLogSegmentMetadataUpdateTransformTest` were added to test the corresponding class (de-)serialization, including custom metadata.\n4. `FileBasedRemoteLogMetadataCacheTest` checks if custom metadata are being correctly saved and loaded to a file (indirectly, via `equals`).\n5. `RemoteLogManagerConfigTest` checks if the configuration setting is handled correctly.\n\nReviewers: Luke Chen <showuon@gmail.com>, Satish Duggana <satishd@apache.org>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1691175205,
    "epoch_utc": null
  },
  {
    "commit": "7782741262c08e5735f7c8e09727ec37cb5f7f02",
    "author": "Bruno Cadonna",
    "author_email": "cadonna@apache.org",
    "date": "Fri Aug 4 09:07:58 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Aug 4 09:07:58 2023 +0200",
    "stats": {
      "files_changed": 5,
      "insertions": 64,
      "deletions": 2,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/Tasks.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TasksRegistry.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TasksTest.java"
      ]
    },
    "message": "KAFKA-10199: Change to RUNNING if no pending task to recycle exist (#14145)\n\nA stream thread should only change to RUNNING if there are no\nactive tasks in restoration in the state updater and if there\nare no pending tasks to recycle.\n\nThere are situations in which a stream thread might only have\nstandby tasks that are recycled to active task after a rebalance.\nIn such situations, the stream thread might be faster in checking\nactive tasks in restoration then the state updater removing the\nstandby task to recycle from the state updater. If that happens\nthe stream thread changes to RUNNING although it should wait until\nthe standby tasks are recycled to active tasks and restored.\n\nReviewers: Walker Carlson <wcarlson@confluent.io>, Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1691150878,
    "epoch_utc": null
  },
  {
    "commit": "e0b7499103df9222140cdbf7047494d92913987e",
    "author": "flashmouse",
    "author_email": "jackson_666@qq.com",
    "date": "Fri Aug 4 02:17:08 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 3 11:17:08 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 89,
      "deletions": 2,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignorTest.java"
      ]
    },
    "message": "KAFKA-15106: Fix AbstractStickyAssignor isBalanced predict (#13920)\n\nin 3.5.0 AbstractStickyAssignor may run useless loop in performReassignments  because isBalanced have a trivial mistake, and result in rebalance timeout in some situation.\n\nCo-authored-by: lixy <lixy@tuya.com>\nReviewers: Ritika Reddy <rreddy@confluent.io>, Philip Nee <pnee@confluent.io>, Kirk True <kirk@mustardgrain.com>, Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1691126228,
    "epoch_utc": null
  },
  {
    "commit": "b9936d6292f3d7e76260b91e96520f94d5bc9bd7",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Thu Aug 3 18:07:35 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 3 13:07:35 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 7,
      "deletions": 7,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/RetryUtil.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/RetryUtilTest.java"
      ]
    },
    "message": "KAFKA-7438: Replace PowerMockRunner with MockitoJUnitRunner in RetryUtilTest (#14143)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1691096855,
    "epoch_utc": null
  },
  {
    "commit": "7d39d7400c919a519fb73d93e311eba9b13bbb97",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Thu Aug 3 11:05:01 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 3 11:05:01 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 9,
      "deletions": 2,
      "files": [
        "storage/src/main/java/org/apache/kafka/storage/internals/log/TimeIndex.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/TimestampOffset.java"
      ]
    },
    "message": "MINOR: Fix debug logs to display TimeIndexOffset (#13935)\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1691071501,
    "epoch_utc": null
  },
  {
    "commit": "d89b26ff443c8dd5d584ad0a979ac3944366cc06",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Thu Aug 3 13:56:00 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Aug 3 13:56:00 2023 +0530",
    "stats": {
      "files_changed": 10,
      "insertions": 292,
      "deletions": 67,
      "files": [
        "core/src/main/java/kafka/server/ReplicaFetcherTierStateMachine.java",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/server/DynamicBrokerConfig.scala",
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/test/scala/unit/kafka/log/LogConfigTest.scala",
        "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaConfigTest.scala",
        "server-common/src/main/java/org/apache/kafka/server/config/ServerTopicConfigSynonyms.java",
        "storage/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteLogManagerConfig.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogConfig.java"
      ]
    },
    "message": "KAFKA-12969: Add broker level config synonyms for topic level tiered storage configs (#14114)\n\nKAFKA-12969: Add broker level config synonyms for topic level tiered storage configs.\n\nTopic -> Broker Synonym:\nlocal.retention.bytes -> log.local.retention.bytes\nlocal.retention.ms -> log.local.retention.ms\n\nWe cannot add synonym for `remote.storage.enable` topic property as it depends on KIP-950\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Satish Duggana <satishd@apache.org>, Luke Chen <showuon@gmail.com>",
    "epoch": 1691081760,
    "epoch_utc": null
  },
  {
    "commit": "bb48b157af6ca06972927666a5b6f84b9551fe3a",
    "author": "Hao Li",
    "author_email": "1127478+lihaosky@users.noreply.github.com",
    "date": "Wed Aug 2 19:20:23 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 2 19:20:23 2023 -0700",
    "stats": {
      "files_changed": 7,
      "insertions": 882,
      "deletions": 118,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/ClientState.java",
        ".../java/org/apache/kafka/streams/processor/internals/assignment/ClientTagAwareStandbyTaskAssignor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/RackAwareTaskAssignor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/StandbyTaskAssignor.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/AssignmentTestUtils.java",
        ".../org/apache/kafka/streams/processor/internals/assignment/ClientTagAwareStandbyTaskAssignorTest.java",
        ".../src/test/java/org/apache/kafka/streams/processor/internals/assignment/RackAwareTaskAssignorTest.java"
      ]
    },
    "message": "KAFKA-15022: [5/N] compute rack aware assignment for standby tasks (#14108)\n\nPart of KIP-925.\n\nReviewer: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1691014823,
    "epoch_utc": null
  },
  {
    "commit": "8aaf7daff393f2b26438fb7fe28016e06e23558c",
    "author": "Abhijeet Kumar",
    "author_email": "abhijeet.cse.kgp@gmail.com",
    "date": "Wed Aug 2 12:27:25 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 2 14:57:25 2023 +0800",
    "stats": {
      "files_changed": 5,
      "insertions": 68,
      "deletions": 68,
      "files": [
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/main/java/kafka/log/remote/RemoteLogReader.java",
        "core/src/main/scala/kafka/server/KafkaRequestHandler.scala",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java",
        "core/src/test/java/kafka/log/remote/RemoteLogReaderTest.java"
      ]
    },
    "message": "KAFKA-15236: Rename tiered storage metrics (#14074)\n\nRename tiered storage metrics\n\nReviewers: Kamal Chandraprakash<kamal.chandraprakash@gmail.com>, Divij Vaidya <diviv@amazon.com>, Luke Chen <showuon@gmail.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1690990045,
    "epoch_utc": null
  },
  {
    "commit": "ffe5f9fbefcba0b2fe8808546e6fd0d02492f75f",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Wed Aug 2 12:05:40 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Aug 2 12:05:40 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 146,
      "deletions": 36,
      "files": [
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java"
      ]
    },
    "message": "KAFKA-15272: Fix the logic which finds candidate log segments to upload it to tiered storage (#14128)\n\nIn tiered storage, a segment is eligible for deletion from local disk when it gets uploaded to the remote storage.\n\nIf the topic active segment contains some messages and there are no new incoming messages, then the active segment gets rotated to passive segment after the configured log.roll.ms timeout.\n\nThe logic to find the candidate segment in RemoteLogManager does not include the recently rotated passive segment as eligible to upload it to remote storage so the passive segment won't be removed even after if it breaches by retention time/size. (ie) Topic won't be empty after it becomes stale.\n\nAdded unit test to cover the scenario which will fail without this patch.\n\nReviewers: Christo Lolov <lolovc@amazon.com>, Luke Chen <showuon@gmail.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1690988740,
    "epoch_utc": null
  },
  {
    "commit": "0ce16406e0abbc5d27a0be064f64da74b2e404c5",
    "author": "Hao Li",
    "author_email": "1127478+lihaosky@users.noreply.github.com",
    "date": "Tue Aug 1 17:33:24 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 1 17:33:24 2023 -0700",
    "stats": {
      "files_changed": 11,
      "insertions": 472,
      "deletions": 192,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/ClientState.java",
        ".../java/org/apache/kafka/streams/processor/internals/assignment/ClientTagAwareStandbyTaskAssignor.java",
        ".../main/java/org/apache/kafka/streams/processor/internals/assignment/HighAvailabilityTaskAssignor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/RackAwareTaskAssignor.java",
        ".../src/main/java/org/apache/kafka/streams/processor/internals/assignment/StandbyTaskAssignorFactory.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/AssignmentTestUtils.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/ClientStateTest.java",
        ".../org/apache/kafka/streams/processor/internals/assignment/ClientTagAwareStandbyTaskAssignorTest.java",
        ".../src/test/java/org/apache/kafka/streams/processor/internals/assignment/RackAwareTaskAssignorTest.java",
        ".../test/java/org/apache/kafka/streams/processor/internals/assignment/StandbyTaskAssignorFactoryTest.java"
      ]
    },
    "message": "KAFKA-15022: [4/N] use client tag assignor for rack aware standby task assignment (#14097)\n\nPart of KIP-925.\n\nFor rack aware standby task assignment, we can either use the already existing \"rack tags\" or as a fall-back the newly added \"rack.id\". This PR unifies both without the need to change the actual standby task assignment logic.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1690922004,
    "epoch_utc": null
  },
  {
    "commit": "b9a45546a7918799b6fb3c0fe63b56f47d8fcba9",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Tue Aug 1 10:05:46 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 1 10:05:46 2023 -0700",
    "stats": {
      "files_changed": 17,
      "insertions": 246,
      "deletions": 210,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginClassLoader.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginDesc.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginScanResult.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginScanner.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginType.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginUtils.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/Plugins.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/ReflectionScanner.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/ServiceLoaderScanner.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/AbstractHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/DelegatingClassLoaderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginDescTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginScannerTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginUtilsTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/TestPlugins.java",
        ".../src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorPluginsResourceTest.java"
      ]
    },
    "message": "KAFKA-15244: Remove PluginType.from(Class) (#14089)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1690895146,
    "epoch_utc": null
  },
  {
    "commit": "7ecf5183dd22ca1335d277837adc87543de69ffb",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Tue Aug 1 15:10:39 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 1 16:10:39 2023 +0200",
    "stats": {
      "files_changed": 4,
      "insertions": 19,
      "deletions": 3,
      "files": [
        "LICENSE-binary",
        "build.gradle",
        "docs/upgrade.html",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "KAFKA-14661: Upgrade Zookeeper to 3.8.1 (#13260)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1690913439,
    "epoch_utc": null
  },
  {
    "commit": "660e6fe8108e8a9b3481ea1ec20327a099dd8310",
    "author": "hzh0425",
    "author_email": "642256541@qq.com",
    "date": "Tue Aug 1 14:53:42 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Aug 1 14:53:42 2023 +0800",
    "stats": {
      "files_changed": 4,
      "insertions": 8,
      "deletions": 8,
      "files": [
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/RemoteLogLeaderEpochState.java",
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/RemoteLogMetadataCache.java",
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/RemoteLogSegmentMetadataSnapshot.java",
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManager.java"
      ]
    },
    "message": "MINOR: Fix some typos in remote.metadata.storage (#13133)\n\nFix some typos in remote.metadata.storage\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1690912422,
    "epoch_utc": null
  },
  {
    "commit": "938fee2b1fec52fa336f68118da120190bff4600",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Mon Jul 31 09:21:22 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 31 09:21:22 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 5,
      "deletions": 5,
      "files": [
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala"
      ]
    },
    "message": "Fix a Scala 2.12 compile issue (#14126)\n\nReviewers: Luke Chen <showuon@gmail.com>, Qichao Chu",
    "epoch": 1690806082,
    "epoch_utc": null
  },
  {
    "commit": "3ba718e1599dabcf737106df27d260ba518919e1",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Fri Jul 28 19:35:42 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 28 11:35:42 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/AbstractWorkerSourceTaskTest.java"
      ]
    },
    "message": "MINOR: Remove duplicate instantiation of MockConnectMetrics in AbstractWorkerSourceTaskTest (#14091)\n\nReviewers: Christo Lolov <christololov@gmail.com>, Manyanda Chitimbo <manyanda.chitimbo@gmail.com>, Greg Harris <greg.harris@aiven.io>",
    "epoch": 1690583742,
    "epoch_utc": null
  },
  {
    "commit": "1574b9f16df83c6a392502a9134d4b04647511cf",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Fri Jul 28 20:28:54 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 28 11:28:54 2023 -0700",
    "stats": {
      "files_changed": 12,
      "insertions": 228,
      "deletions": 276,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
        ".../org/apache/kafka/coordinator/group/{ReplicatedGroupCoordinator.java => GroupCoordinatorShard.java}",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
        ".../src/main/java/org/apache/kafka/coordinator/group/runtime/{Coordinator.java => CoordinatorShard.java}",
        ".../org/apache/kafka/coordinator/group/runtime/{CoordinatorBuilder.java => CoordinatorShardBuilder.java}",
        ".../coordinator/group/runtime/{CoordinatorBuilderSupplier.java => CoordinatorShardBuilderSupplier.java}",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorServiceTest.java",
        ".../kafka/coordinator/group/{ReplicatedGroupCoordinatorTest.java => GroupCoordinatorShardTest.java}",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntimeTest.java"
      ]
    },
    "message": "MINOR: Code cleanups in group-coordinator module (#14117)\n\nThis patch does a few code cleanups in the group-coordinator module.\n\nIt renames Coordinator to CoordinatorShard;\nIt renames ReplicatedGroupCoordinator to GroupCoordinatorShard. I was never really happy with this name. The new name makes more sense to me;\nIt removes TopicPartition from the GroupMetadataManager. It was only used in log messages. The log context already includes it so we don't have to log it again.\nIt renames assignors to consumerGroupAssignors.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1690586934,
    "epoch_utc": null
  },
  {
    "commit": "3709901c9ee0f61277b122a4863fea46f039335f",
    "author": "Ritika Reddy",
    "author_email": "98577846+rreddy-22@users.noreply.github.com",
    "date": "Fri Jul 28 10:30:04 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 28 19:30:04 2023 +0200",
    "stats": {
      "files_changed": 19,
      "insertions": 959,
      "deletions": 361,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/RecordHelpers.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/assignor/AssignmentSpec.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/assignor/AssignmentTopicMetadata.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/assignor/PartitionAssignor.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/assignor/RangeAssignor.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/assignor/SubscribedTopicDescriber.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroup.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/SubscribedTopicMetadata.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/TargetAssignmentBuilder.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/TopicMetadata.java",
        "group-coordinator/src/main/resources/common/message/ConsumerGroupPartitionMetadataValue.json",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/RecordHelpersTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/assignor/RangeAssignorTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroupTest.java",
        ".../src/test/java/org/apache/kafka/coordinator/group/consumer/SubscribedTopicMetadataTest.java",
        ".../src/test/java/org/apache/kafka/coordinator/group/consumer/TargetAssignmentBuilderTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/consumer/TopicMetadataTest.java"
      ]
    },
    "message": "KAFKA-14702: Extend server side assignor to support rack aware replica placement (#14099)\n\nThis patch updates the `PartitionAssignor` interface to support rack-awareness. The change introduces the `SubscribedTopicDescriber` interface that can be used to retrieve topic metadata such as the number of partitions or the racks from within an assignor. We use an interface because it allows us to wrap internal data structures instead of having to copy them. It is more efficient.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1690551004,
    "epoch_utc": null
  },
  {
    "commit": "32c39c8149bca18d852b7139a8caffb141dc8840",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Fri Jul 28 13:02:47 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 28 13:02:47 2023 -0400",
    "stats": {
      "files_changed": 3,
      "insertions": 99,
      "deletions": 20,
      "files": [
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationDriverTest.java"
      ]
    },
    "message": "KAFKA-15263 Check KRaftMigrationDriver state in each event (#14115)\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1690560167,
    "epoch_utc": null
  },
  {
    "commit": "811ae01723e938a7b97ed6de0ace78709472cc9e",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Fri Jul 28 09:11:20 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 28 09:11:20 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 14,
      "deletions": 2,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/NetworkClientDelegate.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.java",
        "core/src/test/scala/integration/kafka/api/BaseAsyncConsumerTest.scala"
      ]
    },
    "message": "MINOR: Test assign() and assignment() in the integration test (#14086)\n\nA missing piece from KAFKA-14950. This is to test assign() and assignment() in the integration test.\n\nAlso fixed an accidental mistake in the committed API.\n\nReviewers: Jun Rao <junrao@gmail.com>",
    "epoch": 1690546280,
    "epoch_utc": null
  },
  {
    "commit": "19f9e1e6d0853646b68b08080f8afc5ef0038110",
    "author": "Jeff Kim",
    "author_email": "kimkb2011@gmail.com",
    "date": "Fri Jul 28 09:13:27 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 28 15:13:27 2023 +0200",
    "stats": {
      "files_changed": 6,
      "insertions": 1316,
      "deletions": 261,
      "files": [
        "checkstyle/suppressions.xml",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/ReplicatedGroupCoordinator.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorServiceTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java"
      ]
    },
    "message": "KAFKA-14501: Implement Heartbeat protocol in new GroupCoordinator (#14056)\n\nThis patch implements the existing Heartbeat API in the new Group Coordinator.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1690546407,
    "epoch_utc": null
  },
  {
    "commit": "dcabc295ec86b61c6d1420c5c54626eb4514bd93",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Fri Jul 28 14:49:48 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 28 14:49:48 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 208,
      "deletions": 163,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java"
      ]
    },
    "message": "KAFKA-14048; CoordinatorContext should be protected by a lock (#14090)\n\nAccessing the `CoordinatorContext` in the `CoordinatorRuntime` should be protected by a lock. The runtime guarantees that the context is never access concurrently however it is accessed by multiple threads. The lock is here to ensure that we have a proper memory barrier. The patch does the following:\n1) Adds a lock to `CoordinatorContext`;\n2) Adds helper methods to get the context and acquire/release the lock.\n3) Allow transition from Failed to Loading. Previously, the context was recreated in this case.\n\nReviewers: Justine Olshan <jolshan@confluent.io>",
    "epoch": 1690566588,
    "epoch_utc": null
  },
  {
    "commit": "afe631cd7362222dec08463fed509fe24e43b5e7",
    "author": "James Shaw",
    "author_email": "js102@zepler.net",
    "date": "Fri Jul 28 10:45:15 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 28 11:45:15 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 11,
      "deletions": 1,
      "files": [
        "clients/src/test/java/org/apache/kafka/clients/admin/MockAdminClient.java"
      ]
    },
    "message": "KAFKA-14967: fix NPE in CreateTopicsResult in MockAdminClient (#13671)\n\n\nCo-authored-by: James Shaw <james.shaw@masabi.com>\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1690551915,
    "epoch_utc": null
  },
  {
    "commit": "722b259961c39da83db254eea54c7b87249ab1ad",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Fri Jul 28 06:40:37 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 28 11:10:37 2023 +0530",
    "stats": {
      "files_changed": 7,
      "insertions": 136,
      "deletions": 0,
      "files": [
        "storage/api/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteLogMetadataManager.java",
        "storage/api/src/test/java/org/apache/kafka/server/log/remote/storage/NoOpRemoteLogMetadataManager.java",
        ".../org/apache/kafka/server/log/remote/metadata/storage/ClassLoaderAwareRemoteLogMetadataManager.java",
        ".../main/java/org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManager.java",
        ".../java/org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManagerTest.java",
        ".../kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManagerWrapperWithHarness.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/InmemoryRemoteLogMetadataManager.java"
      ]
    },
    "message": "KAFKA-14038: Optimise calculation of size for log in remote tier (#14049)\n\nReviewers: Kamal Chandraprakash<kamal.chandraprakash@gmail.com>, Divij Vaidya <diviv@amazon.com>, Luke Chen <showuon@gmail.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1690537237,
    "epoch_utc": null
  },
  {
    "commit": "10bcd4fc7f7258c20d5b0cdedf91ebb54697f97a",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Thu Jul 27 17:01:55 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 27 17:01:55 2023 -0700",
    "stats": {
      "files_changed": 18,
      "insertions": 775,
      "deletions": 304,
      "files": [
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/controller/errors/ControllerExceptions.java",
        "metadata/src/main/java/org/apache/kafka/controller/errors/EventHandlerExceptionInfo.java",
        "metadata/src/main/java/org/apache/kafka/metadata/util/BatchFileWriter.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerIntegrationTestUtils.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerMetricsIntegrationTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/errors/ControllerExceptionsTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/errors/EventHandlerExceptionInfoTest.java",
        "metadata/src/test/java/org/apache/kafka/image/publisher/SnapshotEmitterTest.java",
        "metadata/src/test/java/org/apache/kafka/metalog/LocalLogManager.java",
        "metadata/src/test/java/org/apache/kafka/metalog/LocalLogManagerTestEnv.java",
        "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
        "raft/src/main/java/org/apache/kafka/raft/RaftClient.java",
        "raft/src/main/java/org/apache/kafka/raft/errors/UnexpectedBaseOffsetException.java",
        "raft/src/main/java/org/apache/kafka/raft/internals/BatchAccumulator.java",
        "raft/src/main/java/org/apache/kafka/snapshot/RecordsSnapshotWriter.java",
        "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientTest.java",
        "raft/src/test/java/org/apache/kafka/raft/internals/BatchAccumulatorTest.java"
      ]
    },
    "message": "KAFKA-15213: provide the exact offset to QuorumController.replay (#13643)\n\nProvide the exact record offset to QuorumController.replay() in all cases. There are several situations\nwhere this is useful, such as logging, implementing metadata transactions, or handling broker\nregistration records.\n\nIn the case where the QC is inactive, and simply replaying records, it is easy to compute the exact\nrecord offset from the batch base offset and the record index.\n\nThe active QC case is more difficult. Technically, when we submit records to the Raft layer, it can\nchoose a batch base offset later than the one we expect, if someone else is also adding records.\nWhile the QC is the only entity submitting data records, control records may be added at any time.\nIn the current implementation, these are really only used for leadership elections. However, this\ncould change with the addition of quorum reconfiguration or similar features.\n\nTherefore, this PR allows the QC to tell the Raft layer that a record append should fail if it\nwould have resulted in a batch base offset other than what was expected. This in turn will trigger a\ncontroller failover. In the future, if automatically added control records become more common, we\nmay wish to have a more sophisticated system than this simple optimistic concurrency mechanism. But\nfor now, this will allow us to rely on the offset as correct.\n\nIn order that the active QC can learn what offset to start writing at, the PR also adds a new\nRaftClient#endOffset function.\n\nAt the Raft level, this PR adds a new exception, UnexpectedBaseOffsetException. This gets thrown\nwhen we request a base offset that doesn't match the one the Raft layer would have given us.\nAlthough this exception should cause a failover, it should not be considered a fault. This\ncomplicated the exception handling a bit and motivated splitting more of it out into the new\nEventHandlerExceptionInfo class. This will also let us unit test things like slf4j log messages a\nbit better.\n\nReviewers: David Arthur <mumrah@gmail.com>, Jos\u00e9 Armando Garc\u00eda Sancio <jsancio@apache.org>",
    "epoch": 1690488115,
    "epoch_utc": null
  },
  {
    "commit": "e5861eeaae0fabca28e7a512ebc487438eab2bad",
    "author": "Alyssa Huang",
    "author_email": "ahuang@confluent.io",
    "date": "Thu Jul 27 13:12:25 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 27 16:12:25 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 15,
      "deletions": 3,
      "files": [
        "tests/kafkatest/tests/core/kraft_upgrade_test.py",
        "tests/kafkatest/version.py"
      ]
    },
    "message": "[MINOR] Add latest versions to kraft upgrade kafkatest (#14084)\n\nReviewers: Ron Dagostino <rndgstn@gmail.com>",
    "epoch": 1690474345,
    "epoch_utc": null
  },
  {
    "commit": "6f39ef02ca1cec70067752bfde57537952e5bb42",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Thu Jul 27 09:36:32 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 27 09:36:32 2023 -0700",
    "stats": {
      "files_changed": 7,
      "insertions": 54,
      "deletions": 18,
      "files": [
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/SenderTest.java",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/server/AddPartitionsToTxnManager.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/server/AddPartitionsToTxnManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala"
      ]
    },
    "message": "MINOR: Adjust Invalid Record Exception for Invalid Txn State as mentioned in KIP-890 (#14088)\n\nInvalid record is a newer error. INVALID_TXN_STATE has been around as long as transactions and is not retriable. This is the desired behavior.",
    "epoch": 1690461392,
    "epoch_utc": null
  },
  {
    "commit": "29825ee24f91e17a6193de0755bec668821e94a3",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Thu Jul 27 13:18:10 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 27 13:18:10 2023 +0200",
    "stats": {
      "files_changed": 20,
      "insertions": 2245,
      "deletions": 194,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/OffsetCommitRequest.java",
        "clients/src/main/resources/common/message/OffsetCommitResponse.json",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/Group.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorConfig.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/OffsetAndMetadata.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/OffsetMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/ReplicatedGroupCoordinator.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/Utils.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroup.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/generic/GenericGroup.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorConfigTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorServiceTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetAndMetadataTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/ReplicatedGroupCoordinatorTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroupTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/generic/GenericGroupTest.java"
      ]
    },
    "message": "KAFKA-14499: [3/N] Implement OffsetCommit API (#14067)\n\nThis patch introduces the `OffsetMetadataManager` and implements the `OffsetCommit` API for both the old rebalance protocol and the new rebalance protocol. It introduces version 9 of the API but keeps it as unstable for now. The patch adds unit tests to test the API. Integration tests will be done separately.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1690474690,
    "epoch_utc": null
  },
  {
    "commit": "353141ed9294f11098984d137a3c244997405472",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Thu Jul 27 12:33:34 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 27 12:33:34 2023 +0200",
    "stats": {
      "files_changed": 4,
      "insertions": 7,
      "deletions": 6,
      "files": [
        "gradle/dependencies.gradle",
        "tests/docker/Dockerfile",
        "tests/kafkatest/version.py",
        "vagrant/base.sh"
      ]
    },
    "message": "KAFKA-15251: Add 3.5.1 to system tests (#14069)\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1690472014,
    "epoch_utc": null
  },
  {
    "commit": "d2fc9076231261db947168776505f0c21418a25f",
    "author": "Jeff Kim",
    "author_email": "kimkb2011@gmail.com",
    "date": "Thu Jul 27 02:02:29 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 27 08:02:29 2023 +0200",
    "stats": {
      "files_changed": 9,
      "insertions": 3339,
      "deletions": 165,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/RecordHelpers.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/ReplicatedGroupCoordinator.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/generic/GenericGroup.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/generic/GenericGroupMember.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorServiceTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/RecordHelpersTest.java"
      ]
    },
    "message": "KAFKA-14500; [6/6] Implement SyncGroup protocol in new GroupCoordinator (#14017)\n\nThis patch implements the SyncGroup API in the new group coordinator. All the new unit tests are based on the existing scala tests.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1690434149,
    "epoch_utc": null
  },
  {
    "commit": "ed44bcd71b3b9926c474033882eaa6c1cf35cfa4",
    "author": "Hao Li",
    "author_email": "1127478+lihaosky@users.noreply.github.com",
    "date": "Wed Jul 26 16:02:52 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 26 16:02:52 2023 -0700",
    "stats": {
      "files_changed": 6,
      "insertions": 902,
      "deletions": 123,
      "files": [
        "checkstyle/suppressions.xml",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/Graph.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/RackAwareTaskAssignor.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/AssignmentTestUtils.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/GraphTest.java",
        ".../src/test/java/org/apache/kafka/streams/processor/internals/assignment/RackAwareTaskAssignorTest.java"
      ]
    },
    "message": "KAFKA-15022: [3/N] use graph to compute rack aware assignment for active stateful tasks (#14030)\n\nPart of KIP-925.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1690398172,
    "epoch_utc": null
  },
  {
    "commit": "8135b6dfd85b7e6e08bf21a6217dc981433b8c2b",
    "author": "Said Boudjelda",
    "author_email": "bmscomp@gmail.com",
    "date": "Wed Jul 26 19:52:02 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 26 19:52:02 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 6,
      "deletions": 6,
      "files": [
        "build.gradle"
      ]
    },
    "message": "KAFKA-15235: Fix broken coverage reports since migration to Gradle 8.x (#14075)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1690411922,
    "epoch_utc": null
  },
  {
    "commit": "e5fb9b61fb682ffa3d024a68bfb86bd793a08f6e",
    "author": "Said Boudjelda",
    "author_email": "bmscomp@gmail.com",
    "date": "Wed Jul 26 19:12:27 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 26 19:12:27 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "build.gradle"
      ]
    },
    "message": "MINOR: upgrade version of gradle plugin (ben-manes.versions) to 0.47.0 (#14098)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1690409547,
    "epoch_utc": null
  },
  {
    "commit": "a900794ace4dcf1f9dadee27fbd8b63979532a18",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Wed Jul 26 12:54:59 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 26 12:54:59 2023 -0400",
    "stats": {
      "files_changed": 12,
      "insertions": 152,
      "deletions": 25,
      "files": [
        "core/src/main/scala/kafka/controller/KafkaController.scala",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/controller/metrics/ControllerMetadataMetrics.java",
        "metadata/src/main/java/org/apache/kafka/controller/metrics/ControllerMetadataMetricsPublisher.java",
        "metadata/src/main/java/org/apache/kafka/controller/metrics/ControllerMetricsChanges.java",
        "metadata/src/main/java/org/apache/kafka/controller/metrics/QuorumControllerMetrics.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationZkWriter.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/ZkMigrationState.java",
        "metadata/src/test/java/org/apache/kafka/controller/metrics/ControllerMetadataMetricsTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/metrics/ControllerMetricsChangesTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/metrics/QuorumControllerMetricsTest.java"
      ]
    },
    "message": "KAFKA-15196 Additional ZK migration metrics (#14028)\n\nThis patch adds several metrics defined in KIP-866:\n\n* MigratingZkBrokerCount: the number of zk brokers registered with KRaft\n* ZkWriteDeltaTimeMs: time spent writing MetadataDelta to ZK\n* ZkWriteSnapshotTimeMs: time spent writing MetadataImage to ZK\n* Adds value 4 for \"ZK\" to ZkMigrationState\n\nAlso fixes a typo in the metric name introduced in #14009 (ZKWriteBehindLag -> ZkWriteBehindLag)\n\nReviewers: Luke Chen <showuon@gmail.com>, Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1690386899,
    "epoch_utc": null
  },
  {
    "commit": "6d81698ba4cb9c62185b0a50cc81ddea3047994d",
    "author": "sciclon2",
    "author_email": "74413315+sciclon2@users.noreply.github.com",
    "date": "Wed Jul 26 15:48:09 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 26 19:18:09 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 32,
      "deletions": 20,
      "files": [
        "core/src/main/scala/kafka/server/ZkAdminManager.scala",
        "core/src/test/scala/unit/kafka/server/AlterUserScramCredentialsRequestTest.scala"
      ]
    },
    "message": "KAFKA-15243: Set decoded user names to DescribeUserScramCredentialsResponse (#14094)\n\n\nReviewers: Manikumar Reddy <manikumar.reddy@gmail.com>",
    "epoch": 1690397289,
    "epoch_utc": null
  },
  {
    "commit": "ff390ab60a57100cc829be243ce525ac31523000",
    "author": "vamossagar12",
    "author_email": "sagarmeansocean@gmail.com",
    "date": "Wed Jul 26 17:56:20 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 26 20:26:20 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/KafkaFuture.java"
      ]
    },
    "message": "[MINOR] Fix Javadoc comment in KafkaFuture#toCompletionStage (#14100)\n\nFix Javadoc comment in KafkaFuture#toCompletionStage\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1690404980,
    "epoch_utc": null
  },
  {
    "commit": "bb677c4959e18efbb3dae0b4bde123fca7c9ba33",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Wed Jul 26 12:04:34 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 26 12:04:34 2023 +0200",
    "stats": {
      "files_changed": 8,
      "insertions": 823,
      "deletions": 600,
      "files": [
        "bin/kafka-replica-verification.sh",
        "bin/windows/kafka-replica-verification.bat",
        "checkstyle/suppressions.xml",
        "core/src/main/scala/kafka/tools/ReplicaVerificationTool.scala",
        "core/src/test/scala/kafka/tools/ReplicaVerificationToolTest.scala",
        "tests/kafkatest/services/replica_verification_tool.py",
        "tools/src/main/java/org/apache/kafka/tools/ReplicaVerificationTool.java",
        "tools/src/test/java/org/apache/kafka/tools/ReplicaVerificationToolTest.java"
      ]
    },
    "message": "KAFKA-14583: Move ReplicaVerificationTool to tools (#14059)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1690383874,
    "epoch_utc": null
  },
  {
    "commit": "4d30cbf3cd0644e21630e87a1de919759b8c231b",
    "author": "Said Boudjelda",
    "author_email": "bmscomp@gmail.com",
    "date": "Wed Jul 26 11:21:36 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 26 11:21:36 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "LICENSE-binary",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "MINOR: Upgrade the minor version of snappy dependency to 1.1.10.3 (#14072)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1690381296,
    "epoch_utc": null
  },
  {
    "commit": "206a4af0d1ecb693ee3cb15c04ca1a83f6e3bf9f",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Wed Jul 26 11:19:56 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 26 11:19:56 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 5,
      "deletions": 4,
      "files": [
        "release.py"
      ]
    },
    "message": "MINOR: Add co-authors to release email template (#14080)\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1690381196,
    "epoch_utc": null
  },
  {
    "commit": "46a8a2877b18600abb608da5afcb3bef13e882f0",
    "author": "vamossagar12",
    "author_email": "sagarmeansocean@gmail.com",
    "date": "Wed Jul 26 07:21:23 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 26 09:51:23 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 60,
      "deletions": 3,
      "files": [
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala"
      ]
    },
    "message": "KAFKA-15218: Avoid NPE thrown while deleting topic and fetch from follower concurrently (#14051)\n\nWhen deleting topics, we'll first clear all the remoteReplicaMap when stopPartitions here. But this time, there might be fetch request coming from follower, and try to check if the replica is eligible to be added into ISR here. At this moment, NPE will be thrown. Although it's fine since this topic is already deleted, it'd be better to avoid it happen.\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1690366883,
    "epoch_utc": null
  },
  {
    "commit": "af1f50fc9ecfa40162bc7700aefebe50797bd1a3",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Tue Jul 25 14:56:58 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jul 25 14:56:58 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 13,
      "deletions": 13,
      "files": [
        "docs/ops.html",
        "docs/toc.html"
      ]
    },
    "message": "MINOR: fix docs markup (#14085)\n\nReviewers: Qichao Chu (@ex172000), Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1690307818,
    "epoch_utc": null
  },
  {
    "commit": "e794bc719a371f457e03e2b4c54638f37ea26092",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Tue Jul 25 16:05:04 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jul 25 16:05:04 2023 -0400",
    "stats": {
      "files_changed": 3,
      "insertions": 161,
      "deletions": 88,
      "files": [
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationDriverTest.java"
      ]
    },
    "message": "MINOR: Add a Builder for KRaftMigrationDriver (#14062)\n\nReviewers: Justine Olshan <jolshan@confluent.io>",
    "epoch": 1690311904,
    "epoch_utc": null
  },
  {
    "commit": "8b027b6fefd46aade40abd125becc58dea02d6a3",
    "author": "tison",
    "author_email": "wander4096@gmail.com",
    "date": "Tue Jul 25 23:56:49 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jul 25 17:56:49 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "clients/src/main/resources/common/message/ProduceRequest.json"
      ]
    },
    "message": "MINOR: Fix typo in ProduceRequest.json (#14070)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1690340209,
    "epoch_utc": null
  },
  {
    "commit": "08b3820d5e3994e137fa5ab917adc37a30910144",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Tue Jul 25 14:03:29 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jul 25 09:03:29 2023 -0400",
    "stats": {
      "files_changed": 11,
      "insertions": 150,
      "deletions": 56,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractWorkerSourceTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ExactlyOnceWorkerSourceTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Worker.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSinkTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSourceTask.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/AbstractWorkerSourceTaskTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/ErrorHandlingTaskTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/ExactlyOnceWorkerSourceTaskTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerSinkTaskTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerSinkTaskThreadedTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerSourceTaskTest.java"
      ]
    },
    "message": "KAFKA-15238: Move DLQ reporter setup from the DistributedHerder's tick thread to the sink task thread (#14079)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1690304609,
    "epoch_utc": null
  },
  {
    "commit": "58b8c5c7b1c7d28073bdef4f13fee16e5122a6d2",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Tue Jul 25 05:12:46 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jul 25 08:12:46 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginUtils.java"
      ]
    },
    "message": "MINOR: Downgrade log level for conflicting Connect plugin aliases (#14081)\n\nReviewers: Greg Harris <greg.harris@aiven.io>",
    "epoch": 1690272766,
    "epoch_utc": null
  },
  {
    "commit": "c7de30f38bfd6e2d62a0b5c09b5dc9707e58096b",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Mon Jul 24 21:13:58 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 24 21:13:58 2023 -0700",
    "stats": {
      "files_changed": 28,
      "insertions": 1404,
      "deletions": 427,
      "files": [
        "README.md",
        "checkstyle/import-control-metadata.xml",
        "core/src/main/scala/kafka/server/SharedServer.scala",
        "core/src/main/scala/kafka/server/metadata/BrokerServerMetrics.scala",
        "core/src/test/scala/integration/kafka/server/KRaftClusterTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/controller/metrics/QuorumControllerMetrics.java",
        "metadata/src/main/java/org/apache/kafka/image/loader/MetadataLoader.java",
        "metadata/src/main/java/org/apache/kafka/image/loader/MetadataLoaderMetrics.java",
        "metadata/src/main/java/org/apache/kafka/image/loader/metrics/MetadataLoaderMetrics.java",
        "metadata/src/main/java/org/apache/kafka/image/publisher/SnapshotEmitter.java",
        "metadata/src/main/java/org/apache/kafka/image/publisher/metrics/SnapshotEmitterMetrics.java",
        "metadata/src/main/java/org/apache/kafka/image/writer/RaftSnapshotWriter.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerIntegrationTestUtils.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerMetricsIntegrationTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/metrics/QuorumControllerMetricsTest.java",
        "metadata/src/test/java/org/apache/kafka/image/FakeSnapshotWriter.java",
        "metadata/src/test/java/org/apache/kafka/image/loader/MetadataLoaderTest.java",
        "metadata/src/test/java/org/apache/kafka/image/loader/metrics/MetadataLoaderMetricsTest.java",
        "metadata/src/test/java/org/apache/kafka/image/publisher/SnapshotEmitterTest.java",
        "metadata/src/test/java/org/apache/kafka/image/publisher/metrics/SnapshotEmitterMetricsTest.java",
        "metadata/src/test/java/org/apache/kafka/image/writer/RaftSnapshotWriterTest.java",
        "raft/src/main/java/org/apache/kafka/snapshot/FileRawSnapshotWriter.java",
        "raft/src/main/java/org/apache/kafka/snapshot/RecordsSnapshotWriter.java",
        "raft/src/main/java/org/apache/kafka/snapshot/SnapshotWriter.java",
        "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientSnapshotTest.java",
        "raft/src/test/java/org/apache/kafka/snapshot/MockRawSnapshotWriter.java"
      ]
    },
    "message": "KAFKA-15183: Add more controller, loader, snapshot emitter metrics (#14010)\n\nImplement some of the metrics from KIP-938: Add more metrics for\nmeasuring KRaft performance.\n\nAdd these metrics to QuorumControllerMetrics:\nkafka.controller:type=KafkaController,name=TimedOutBrokerHeartbeatCount\nkafka.controller:type=KafkaController,name=EventQueueOperationsStartedCount\nkafka.controller:type=KafkaController,name=EventQueueOperationsTimedOutCount\nkafka.controller:type=KafkaController,name=NewActiveControllersCount\n\nCreate LoaderMetrics with these new metrics:\nkafka.server:type=MetadataLoader,name=CurrentMetadataVersion\nkafka.server:type=MetadataLoader,name=HandleLoadSnapshotCount\n\nCreate SnapshotEmitterMetrics with these new metrics:\nkafka.server:type=SnapshotEmitter,name=LatestSnapshotGeneratedBytes\nkafka.server:type=SnapshotEmitter,name=LatestSnapshotGeneratedAgeMs\n\nReviewers: Ron Dagostino <rndgstn@gmail.com>",
    "epoch": 1690244038,
    "epoch_utc": null
  },
  {
    "commit": "79b8c969e5371073e04488e0f3490abaca2b4584",
    "author": "David Mao",
    "author_email": "47232755+splett2@users.noreply.github.com",
    "date": "Mon Jul 24 13:22:25 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 24 13:22:25 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 12,
      "deletions": 8,
      "files": [
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/test/scala/integration/kafka/api/ProducerIdExpirationTest.scala"
      ]
    },
    "message": "KAFKA-14990: Dynamic producer ID expiration should be applied on a broker restart (#13707)\n\nDynamic overrides for the producer ID expiration config are not picked up on broker restart in Zookeeper mode. Based on the integration test, this does not apply to KRaft mode.\n\nAdds a broker restart that fails without the corresponding KafkaConfig change.\n\nReviewers: Justine Olshan <jolshan@confluent.io>",
    "epoch": 1690215745,
    "epoch_utc": null
  },
  {
    "commit": "38781f9aea2070775ca353f37510effa0e7963ba",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Mon Jul 24 13:08:57 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 24 13:08:57 2023 -0700",
    "stats": {
      "files_changed": 10,
      "insertions": 229,
      "deletions": 63,
      "files": [
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/log/ProducerStateManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/ProducerAppendInfo.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/ProducerStateManager.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/VerificationStateEntry.java"
      ]
    },
    "message": "KAFKA-14920: Address timeouts and out of order sequences (#14033)\n\nWhen creating a verification state entry, we also store sequence and epoch. On subsequent requests, we will take the latest epoch seen and the earliest sequence seen. That way, if we try to append a sequence after the earliest seen sequence, we can block that and retry. This addresses potential OutOfOrderSequence loops caused by errors during verification (coordinator loading, timeouts, etc).\n\nReviewers:  David Jacot <david.jacot@gmail.com>,  Artem Livshits <alivshits@confluent.io>",
    "epoch": 1690214937,
    "epoch_utc": null
  },
  {
    "commit": "84691b11f64e85a7f3f6fdbafd0f8fb2f8dd630c",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Mon Jul 24 19:36:25 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 24 19:36:25 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 224,
      "deletions": 6,
      "files": [
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/RemoteLogLeaderEpochState.java",
        ".../src/test/java/org/apache/kafka/server/log/remote/metadata/storage/RemoteLogLeaderEpochStateTest.java"
      ]
    },
    "message": "KAFKA-15168: Handle overlapping remote log segments in RemoteLogMetadata cache (#14004)\n\nKAFKA-15168: Handle overlapping remote log segments in RemoteLogMetadata cache\n\nReviewers: Satish Duggana <satishd@apache.org>, Viktor Nikitash <nikitashvictor@pdffiller.com>, Jorge Esteban Quilcate Otoya <quilcate.jorge@gmail.com>, Abhijeet Kumar <abhijeet.cse.kgp@gmail.com>",
    "epoch": 1690238185,
    "epoch_utc": null
  },
  {
    "commit": "4981fa939d588645401619bfc3e321dc523d10e7",
    "author": "Owen Leung",
    "author_email": "owen.leung2@gmail.com",
    "date": "Mon Jul 24 10:37:23 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 24 10:37:23 2023 +0800",
    "stats": {
      "files_changed": 3,
      "insertions": 38,
      "deletions": 4,
      "files": [
        "metadata/src/main/java/org/apache/kafka/image/writer/ImageWriterOptions.java",
        "metadata/src/test/java/org/apache/kafka/image/ImageDowngradeTest.java",
        "metadata/src/test/java/org/apache/kafka/image/writer/ImageWriterOptionsTest.java"
      ]
    },
    "message": "KAFKA-14712: Produce correct error msg with correct metadataversion (#13773)\n\nFix the confusing error message in ImageWriterOptions\n\nReviewers: Luke Chen <showuon@gmail.com>, David Arthur <mumrah@gmail.com>",
    "epoch": 1690205843,
    "epoch_utc": null
  },
  {
    "commit": "a3204aed2eb6f2fe7d9f300cca686d3bc2a37c7c",
    "author": "Owen Leung",
    "author_email": "owen.leung2@gmail.com",
    "date": "Sat Jul 22 19:47:26 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Jul 22 13:47:26 2023 +0200",
    "stats": {
      "files_changed": 4,
      "insertions": 77,
      "deletions": 70,
      "files": [
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogFileUtils.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/LocalTieredStorage.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/LocalTieredStorageTest.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/RemoteLogSegmentFileset.java"
      ]
    },
    "message": "KAFKA-15194: Prepend offset in the filenames used by LocalTieredStorage (#14057)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1690066046,
    "epoch_utc": null
  },
  {
    "commit": "cc4e699d4cb2880d05603e2e8310d28e1c9f201a",
    "author": "Jorge Esteban Quilcate Otoya",
    "author_email": "jorge.quilcate@aiven.io",
    "date": "Sat Jul 22 07:33:35 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Jul 22 10:03:35 2023 +0530",
    "stats": {
      "files_changed": 8,
      "insertions": 73,
      "deletions": 50,
      "files": [
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/ConsumerManager.java",
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/ConsumerTask.java",
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManager.java",
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManagerConfig.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/metadata/storage/RemoteLogSegmentLifecycleTest.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManagerConfigTest.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManagerRestartTest.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManagerTest.java"
      ]
    },
    "message": "MINOR: Minor logging and doc related improvements in topic-based RLMM consumer-manager/task (#14045)\n\nImproved logging and docs on consumer manager/task call paths.\n\nReviewers: Luke Chen <showuon@gmail.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1690022015,
    "epoch_utc": null
  },
  {
    "commit": "1656591d0b339c385d0ba1f938fc94b52e29965d",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Fri Jul 21 13:59:00 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 21 13:59:00 2023 -0700",
    "stats": {
      "files_changed": 11,
      "insertions": 269,
      "deletions": 25,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CommitRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThread.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultEventHandler.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEventProcessor.java",
        ".../main/java/org/apache/kafka/clients/consumer/internals/events/AssignmentChangeApplicationEvent.java",
        ".../main/java/org/apache/kafka/clients/consumer/internals/events/NewTopicsMetadataUpdateRequestEvent.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CommitRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThreadTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumerTest.java"
      ]
    },
    "message": "KAFKA-14950: implement assign() and assignment() (#13797)\n\nWe will explicitly send an assignment change event to the background thread to invoke auto-commit if the group.id is configured. After updating the subscription state, a NewTopicsMetadataUpdateRequestEvent will also be sent to the background thread to update the metadata.\n\nCo-authored-by: Kirk True <kirk@kirktrue.pro>\nReviewers: Jun Rao <junrao@gmail.com>",
    "epoch": 1689958740,
    "epoch_utc": null
  },
  {
    "commit": "1bf73d89d0d3faf9439a7398621a9376278d5c0b",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Fri Jul 21 20:27:44 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 21 20:27:44 2023 +0200",
    "stats": {
      "files_changed": 5,
      "insertions": 5,
      "deletions": 10,
      "files": [
        "tools/src/main/java/org/apache/kafka/tools/ConsumerPerformance.java",
        "tools/src/main/java/org/apache/kafka/tools/MetadataQuorumCommand.java",
        "tools/src/main/java/org/apache/kafka/tools/ProducerPerformance.java",
        "{server-common/src/main/java/org/apache/kafka/server/util => tools/src/main/java/org/apache/kafka/tools}/ToolsUtils.java",
        "tools/src/main/java/org/apache/kafka/tools/TransactionsCommand.java"
      ]
    },
    "message": "KAFKA-15232: Move ToolsUtils to tools (#14066)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1689982064,
    "epoch_utc": null
  },
  {
    "commit": "2528dd41169a95f05117ba01302c5dcce0642ab1",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Fri Jul 21 20:09:06 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 21 20:09:06 2023 +0200",
    "stats": {
      "files_changed": 7,
      "insertions": 409,
      "deletions": 0,
      "files": [
        "checkstyle/import-control.xml",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/OffsetAndMetadata.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/RecordHelpers.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/OffsetAndMetadataTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/RecordHelpersTest.java",
        "server-common/src/main/java/org/apache/kafka/server/common/MetadataVersion.java",
        "server-common/src/test/java/org/apache/kafka/server/common/MetadataVersionTest.java"
      ]
    },
    "message": "KAFKA-14499: [2/N] Add OffsetCommit record & related (#14047)\n\nThis patch does a few things:\n1) It introduces the `OffsetAndMetadata` class which hold the committed offsets in the group coordinator.\n2) It adds methods to deal with OffsetCommit records to `RecordHelpers`.\n3) It adds `MetadataVersion#offsetCommitValueVersion` to get the version of the OffsetCommit value record that should be used.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, David Arthur <mumrah@gmail.com>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1689980946,
    "epoch_utc": null
  },
  {
    "commit": "69659b70fca10349d8c799d29e9115bb5ced64db",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Fri Jul 21 20:08:06 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 21 20:08:06 2023 +0200",
    "stats": {
      "files_changed": 20,
      "insertions": 146,
      "deletions": 75,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CommitRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.java",
        "clients/src/main/java/org/apache/kafka/common/errors/StaleMemberEpochException.java",
        "clients/src/main/java/org/apache/kafka/common/protocol/Errors.java",
        "clients/src/main/java/org/apache/kafka/common/requests/AbstractRequest.java",
        "clients/src/main/java/org/apache/kafka/common/requests/ConsumerGroupHeartbeatRequest.java",
        "clients/src/main/java/org/apache/kafka/common/requests/OffsetCommitRequest.java",
        "clients/src/main/resources/common/message/OffsetCommitRequest.json",
        "clients/src/main/resources/common/message/OffsetCommitResponse.json",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinatorTest.java",
        "clients/src/test/java/org/apache/kafka/common/message/MessageTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/OffsetCommitRequestTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/RequestResponseTest.java",
        "core/src/main/scala/kafka/coordinator/group/GroupCoordinatorAdapter.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/test/scala/integration/kafka/api/AuthorizerIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorAdapterTest.scala",
        "core/src/test/scala/unit/kafka/server/ConsumerGroupHeartbeatRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "core/src/test/scala/unit/kafka/server/RequestQuotaTest.scala"
      ]
    },
    "message": "KAFKA-14499: [1/N] Introduce OffsetCommit API version 9 and add new StaleMemberEpochException error (#14046)\n\nThis patch does a few things:\n1) It introduces version 9 of the OffsetCommit API. This new version has no schema changes but it can return a StaleMemberEpochException if the new consumer group protocol is used. Note the use of `\"latestVersionUnstable\": true` in the request schema. This means that this new version is not available yet unless activated.\n2) It renames the `generationId` field in the request to `GenerationIdOrMemberEpoch`. This is backward compatible change.\n3) It introduces the new StaleMemberEpochException error.\n4) It does a minor refactoring in OffsetCommitRequest class.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, David Arthur <mumrah@gmail.com>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1689980886,
    "epoch_utc": null
  },
  {
    "commit": "4daeb2714c29e4a34698292dcad5a64beed72e74",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Fri Jul 21 17:06:01 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 21 12:06:01 2023 -0400",
    "stats": {
      "files_changed": 8,
      "insertions": 263,
      "deletions": 31,
      "files": [
        "checkstyle/import-control.xml",
        "connect/api/src/main/java/org/apache/kafka/connect/sink/SinkRecord.java",
        "connect/api/src/main/java/org/apache/kafka/connect/sink/SinkTask.java",
        "connect/api/src/test/java/org/apache/kafka/connect/sink/SinkRecordTest.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/InternalSinkRecord.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/InternalSinkRecordTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerSinkTaskTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerSinkTaskThreadedTest.java"
      ]
    },
    "message": "KAFKA-13431 (KIP-793): Expose the original pre-transform topic partition and offset in sink records (#14024)\n\nReviewers: Greg Harris <greg.harris@aiven.io>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1689969961,
    "epoch_utc": null
  },
  {
    "commit": "4bba2c8a32a3e35f6870cf3f738c0eef8bb652d2",
    "author": "Nikolay",
    "author_email": "nizhikov@apache.org",
    "date": "Fri Jul 21 18:30:28 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 21 17:30:28 2023 +0200",
    "stats": {
      "files_changed": 21,
      "insertions": 408,
      "deletions": 168,
      "files": [
        "bin/kafka-delete-records.sh",
        "bin/windows/kafka-delete-records.bat",
        "core/src/main/scala/kafka/admin/AdminUtils.scala",
        "core/src/main/scala/kafka/admin/DeleteRecordsCommand.scala",
        "core/src/main/scala/kafka/admin/LeaderElectionCommand.scala",
        "core/src/main/scala/kafka/admin/ReassignPartitionsCommand.scala",
        "core/src/main/scala/kafka/admin/TopicCommand.scala",
        "core/src/main/scala/kafka/controller/KafkaController.scala",
        "core/src/main/scala/kafka/server/ZkAdminManager.scala",
        "core/src/main/scala/kafka/zk/AdminZkClient.scala",
        "core/src/test/scala/unit/kafka/admin/AddPartitionsTest.scala",
        "core/src/test/scala/unit/kafka/admin/LeaderElectionCommandErrorTest.scala",
        "core/src/test/scala/unit/kafka/admin/LeaderElectionCommandTest.scala",
        "core/src/test/scala/unit/kafka/admin/ReassignPartitionsUnitTest.scala",
        "core/src/test/scala/unit/kafka/admin/TopicCommandTest.scala",
        "core/src/test/scala/unit/kafka/server/DynamicConfigTest.scala",
        "core/src/test/scala/unit/kafka/zk/AdminZkClientTest.scala",
        ".../src/main/java/org/apache/kafka/server/common/AdminCommandFailedException.java",
        ".../src/main/java/org/apache/kafka/server/common/AdminOperationException.java",
        "tools/src/main/java/org/apache/kafka/tools/DeleteRecordsCommand.java",
        "tools/src/test/java/org/apache/kafka/tools/DeleteRecordsCommandTest.java"
      ]
    },
    "message": "KAFKA-14591: Move DeleteRecordsCommand to tools (#13278)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Federico Valeri <fedevaleri@gmail.com>",
    "epoch": 1689975028,
    "epoch_utc": null
  },
  {
    "commit": "2e30dd894f4f502f24ad797e1018a523fc138574",
    "author": "Said Boudjelda",
    "author_email": "bmscomp@gmail.com",
    "date": "Fri Jul 21 10:45:01 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 21 10:45:01 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "README.md"
      ]
    },
    "message": "MINOR: add JDK 20 build support to README (#14061)\n\nAdding the value 20 to the JDK version that can build Apache Kafka into README.md\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1689947101,
    "epoch_utc": null
  },
  {
    "commit": "e9fc742979888a9e375509dbb28ab9cc74fe3234",
    "author": "Said Boudjelda",
    "author_email": "bmscomp@gmail.com",
    "date": "Fri Jul 21 10:42:47 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 21 10:42:47 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "gradle/dependencies.gradle"
      ]
    },
    "message": "KAFKA-15222: upgrade zinc scala plugin to 1.9.2 (#14060)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1689946967,
    "epoch_utc": null
  },
  {
    "commit": "4ea9394e7ebf71e2dcf96e9b96191dac253f4930",
    "author": "Satish Duggana",
    "author_email": "satishd@apache.org",
    "date": "Fri Jul 21 13:56:02 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 21 13:56:02 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 3,
      "deletions": 3,
      "files": [
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala"
      ]
    },
    "message": "MINOR Fix the build failure (#14065)\n\nFixing the build failure caused by the earlier commit https://github.com/apache/kafka/commit/27ea025e33aab525e96bef24840414f7a4e132f1\n\n\n```\n[Error] /Users/satishd/repos/apache-kafka/core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala:3526:77: the result type of an implicit conversion must be more specific than Object\n[Error] /Users/satishd/repos/apache-kafka/core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala:3530:70: the result type of an implicit conversion must be more specific than Object\n[Warn] /Users/satishd/repos/apache-kafka/core/src/test/scala/unit/kafka/server/ServerGenerateBrokerIdTest.scala:23:21: imported `QuorumTestHarness` is permanently hidden by definition of object QuorumTestHarness in package server\n[Warn] /Users/satishd/repos/apache-kafka/core/src/test/scala/unit/kafka/server/ServerGenerateClusterIdTest.scala:29:21: imported `QuorumTestHarness` is permanently hidden by definition of object QuorumTestHarness in package server\n[Error] /Users/satishd/repos/apache-kafka/core/src/test/scala/unit/kafka/utils/TestUtils.scala:1438:15: ambiguous reference to overloaded definition,\nboth method doReturn in class Mockito of type (x$1: Any, x$2: Object*)org.mockito.stubbing.Stubber\nand  method doReturn in class Mockito of type (x$1: Any)org.mockito.stubbing.Stubber\nmatch argument types (kafka.log.UnifiedLog)\n```\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1689958562,
    "epoch_utc": null
  },
  {
    "commit": "27ea025e33aab525e96bef24840414f7a4e132f1",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Fri Jul 21 10:30:33 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 21 10:30:33 2023 +0800",
    "stats": {
      "files_changed": 5,
      "insertions": 360,
      "deletions": 15,
      "files": [
        "checkstyle/suppressions.xml",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/server/CheckpointBench.java"
      ]
    },
    "message": "KAFKA-15176: add tests for tiered storage metrics (#13999)\n\nAdded tests for metrics:\n1. RemoteLogReaderTaskQueueSize\n2. RemoteLogReaderAvgIdlePercent\n3. RemoteLogManagerTasksAvgIdlePercent\n\nAlso, added tests for OffsetOutOfRangeException will be thrown while reading logs\n\nReviewers: Christo Lolov <christololov@gmail.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1689946233,
    "epoch_utc": null
  },
  {
    "commit": "6bb88ae2f74d89b88e1d1b6228bc3ccc1a52120f",
    "author": "Hao Li",
    "author_email": "1127478+lihaosky@users.noreply.github.com",
    "date": "Thu Jul 20 16:17:47 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 20 16:17:47 2023 -0700",
    "stats": {
      "files_changed": 4,
      "insertions": 793,
      "deletions": 2,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/Graph.java",
        ".../main/java/org/apache/kafka/streams/processor/internals/{ => assignment}/RackAwareTaskAssignor.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/GraphTest.java",
        ".../src/test/java/org/apache/kafka/streams/processor/internals/assignment/RackAwareTaskAssignorTest.java"
      ]
    },
    "message": "KAFKA-15022: [2/N] introduce graph to compute min cost (#13996)\n\nPart of KIP-925.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1689880667,
    "epoch_utc": null
  },
  {
    "commit": "125dbb92867c11739afc54c5e546f551f70d7113",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Thu Jul 20 12:58:48 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 20 12:58:48 2023 -0700",
    "stats": {
      "files_changed": 11,
      "insertions": 18,
      "deletions": 14,
      "files": [
        "build.gradle",
        "checkstyle/import-control.xml",
        "{tools/src/main/java/org/apache/kafka/tools => clients/src/main/java/org/apache/kafka/common/utils}/ThroughputThrottler.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/tools/SchemaSourceTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/tools/VerifiableSourceTask.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/MonitorableSourceConnector.java",
        "tests/kafkatest/directory_layout/kafka_path.py",
        "tests/kafkatest/sanity_checks/test_verifiable_producer.py",
        "tests/kafkatest/services/verifiable_client.py",
        "tools/src/main/java/org/apache/kafka/tools/ProducerPerformance.java",
        "tools/src/main/java/org/apache/kafka/tools/VerifiableProducer.java"
      ]
    },
    "message": "KAFKA-14760: Move ThroughputThrottler from tools to clients, remove tools dependency from connect-runtime (#13313)\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1689868728,
    "epoch_utc": null
  },
  {
    "commit": "8f313eaed4f9dc9730016e0316529ba0ed4c62b4",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Thu Jul 20 17:16:18 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 20 18:16:18 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 41,
      "deletions": 56,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java"
      ]
    },
    "message": "KAFKA-14133: Migrate various mocks in TaskManagerTest to Mockito (#13874)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1689884178,
    "epoch_utc": null
  },
  {
    "commit": "01a16ca301d93620e0ac7d1d0a340f3048fbb4da",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Thu Jul 20 07:25:34 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 20 10:25:34 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 1,
      "files": [
        "docs/toc.html"
      ]
    },
    "message": "KAFKA-14469: Add MirrorMaker configs to table of contents in docs page (#14041)\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1689848734,
    "epoch_utc": null
  },
  {
    "commit": "ea6e100ec31f6a3e0b90f2504fd5370409809d36",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Thu Jul 20 15:22:35 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 20 10:22:35 2023 -0400",
    "stats": {
      "files_changed": 3,
      "insertions": 46,
      "deletions": 3,
      "files": [
        "connect/api/src/main/java/org/apache/kafka/connect/sink/SinkRecord.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/InternalSinkRecord.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/InternalSinkRecordTest.java"
      ]
    },
    "message": "KAFKA-15216: InternalSinkRecord::newRecord should not ignore new headers (#14044)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1689877355,
    "epoch_utc": null
  },
  {
    "commit": "e9fe2a2eeaf449cddd7770a1a7fa07bc75918c69",
    "author": "Walker Carlson",
    "author_email": "18128741+wcarlson5@users.noreply.github.com",
    "date": "Thu Jul 20 09:01:21 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 20 16:01:21 2023 +0200",
    "stats": {
      "files_changed": 4,
      "insertions": 98,
      "deletions": 3,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/StreamTableJoinNode.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableJoinTest.java"
      ]
    },
    "message": "KAFKA-14936: Check the versioned table's history retention and compare to grace period (4/N) (#13942)\n\nCheck the history retention of the ktable of the grace period join.\n\nReviewers: Reviewers: Victoria Xia <victoria.xia@confluent.io>, Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1689854481,
    "epoch_utc": null
  },
  {
    "commit": "334c41d6042bac184ecaa21f230482da1f856ab2",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Thu Jul 20 12:45:05 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 20 18:45:05 2023 +0800",
    "stats": {
      "files_changed": 5,
      "insertions": 293,
      "deletions": 254,
      "files": [
        "checkstyle/import-control.xml",
        "streams/src/test/java/org/apache/kafka/streams/integration/AbstractResetIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/ResetIntegrationTest.java",
        "tools/src/main/java/org/apache/kafka/tools/StreamsResetter.java",
        ".../java/org/apache/kafka/streams => tools/src/test/java/org/apache/kafka}/tools/StreamsResetterTest.java"
      ]
    },
    "message": "KAFKA-14734: Use CommandDefaultOptions in StreamsResetter (#13983)\n\nThis PR adds CommandDefaultOptions usage like in the other joptsimple based tools. It also moves the associated unit test class from streams to tools module as discussed in #13127 (comment)\n\nReviewers:  Luke Chen <showuon@gmail.com>, Bruno Cadonna <cadonna@apache.org>, Sagar Rao <sagarmeansocean@gmail.com>",
    "epoch": 1689867905,
    "epoch_utc": null
  },
  {
    "commit": "583f70800666ba94f4059b699e4c1a06346393e3",
    "author": "Tanay Karmarkar",
    "author_email": "31416664+tanay27@users.noreply.github.com",
    "date": "Thu Jul 20 11:23:39 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 20 11:23:39 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 0,
      "deletions": 21,
      "files": [
        "licenses/classgraph-MIT"
      ]
    },
    "message": "MINOR: Delete unneeded classgraph-MIT license (#14040)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1689863019,
    "epoch_utc": null
  },
  {
    "commit": "f6e7aa3763373407ab594ddba994d584caa5e469",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Wed Jul 19 16:21:58 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 19 16:21:58 2023 -0700",
    "stats": {
      "files_changed": 20,
      "insertions": 454,
      "deletions": 72,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginScanner.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginSource.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginUtils.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/ReflectionScanner.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/ServiceLoaderScanner.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginScannerTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/TestPlugins.java",
        ".../test-plugins/aliased-static-field/META-INF/services/org.apache.kafka.connect.storage.Converter",
        ".../test-plugins/always-throw-exception/META-INF/services/org.apache.kafka.connect.storage.Converter",
        ".../resources/test-plugins/bad-packaging/META-INF/services/org.apache.kafka.connect.sink.SinkConnector",
        ".../resources/test-plugins/bad-packaging/META-INF/services/org.apache.kafka.connect.storage.Converter",
        ".../test-plugins/multiple-plugins-in-jar/META-INF/services/org.apache.kafka.connect.storage.Converter",
        ".../read-version-from-resource-v1/META-INF/services/org.apache.kafka.connect.storage.Converter",
        ".../read-version-from-resource-v2/META-INF/services/org.apache.kafka.connect.storage.Converter",
        ".../test-plugins/sampling-configurable/META-INF/services/org.apache.kafka.connect.storage.Converter",
        ".../test-plugins/sampling-connector/META-INF/services/org.apache.kafka.connect.sink.SinkConnector",
        ".../test-plugins/sampling-converter/META-INF/services/org.apache.kafka.connect.storage.Converter",
        ".../sampling-header-converter/META-INF/services/org.apache.kafka.connect.storage.HeaderConverter",
        ".../resources/test-plugins/service-loader/META-INF/services/org.apache.kafka.connect.storage.Converter",
        ".../test-plugins/subclass-of-classpath/META-INF/services/org.apache.kafka.connect.storage.Converter"
      ]
    },
    "message": "KAFKA-15150: Add ServiceLoaderScanner implementation (#13971)\n\nReviewers: Chris Egerton <chris.egerton@aiven.io>",
    "epoch": 1689794518,
    "epoch_utc": null
  },
  {
    "commit": "844469311aacdd444c5117c9a83c92cc6de5555c",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Wed Jul 19 14:00:15 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 19 14:00:15 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 7,
      "deletions": 29,
      "files": [
        "LICENSE-binary",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/ReflectionScanner.java",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "KAFKA-10579: Upgrade reflections from 0.9.12 to 0.10.2 (#14029)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Chris Egerton <chris.egerton@aiven.io>",
    "epoch": 1689786015,
    "epoch_utc": null
  },
  {
    "commit": "d5a00cca74decaf7b44238bb6ac57e3c9f9c7218",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Wed Jul 19 12:49:25 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 19 12:49:25 2023 -0700",
    "stats": {
      "files_changed": 4,
      "insertions": 32,
      "deletions": 5,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginUtils.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginsTest.java",
        "connect/runtime/src/test/resources/test-plugins/read-version-from-resource-v1/test/plugins/ReadVersionFromResource.java",
        "connect/runtime/src/test/resources/test-plugins/read-version-from-resource-v2/test/plugins/ReadVersionFromResource.java"
      ]
    },
    "message": "KAFKA-15162: Reflectively find plugins in parent ClassLoaders that aren't on the classpath (#13977)\n\nSigned-off-by: Greg Harris <greg.harris@aiven.io>\nReviewed-by: Chris Egerton <chris.egerton@aiven.io>",
    "epoch": 1689781765,
    "epoch_utc": null
  },
  {
    "commit": "29f36d733b4898257b148ddc4270c1b2a291cb7a",
    "author": "gaurav-narula",
    "author_email": "97168911+gaurav-narula@users.noreply.github.com",
    "date": "Wed Jul 19 20:24:40 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 19 12:24:40 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 28,
      "deletions": 2,
      "files": [
        "core/src/main/scala/kafka/server/DelayedProduce.scala",
        "core/src/main/scala/kafka/server/FetchSession.scala"
      ]
    },
    "message": "KAFKA-15141: Initialize logger statically on hot codepaths (#13949)\n\nLog4j based loggers use `org.apache.logging.log4j.spi.AbstractLoggerAdapter::getContext`\nwhich invokes StackLocatorUtil to walk the stacktrace. This operation is quite CPU intensive\nand is performed each time during instantiation.\n\nTo avoid walking the stack often, this change uses a static variable to initialize the logger\nfor a few classes which seem to be instantiated frequently.\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1689809080,
    "epoch_utc": null
  },
  {
    "commit": "a68281bf3c72dd895b7c4c387ffa3ce494dd9ff3",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Wed Jul 19 18:23:02 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 19 10:23:02 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "connect/api/src/main/java/org/apache/kafka/connect/sink/SinkTaskContext.java",
        "connect/api/src/main/java/org/apache/kafka/connect/source/SourceTaskContext.java"
      ]
    },
    "message": "MINOR: Fix Connect compatibility javadocs to use NoSuchMethodError instead of NoSuchMethodException (#14036)\n\nReviewed-by: Greg Harris <greg.harris@aiven.io>",
    "epoch": 1689801782,
    "epoch_utc": null
  },
  {
    "commit": "1f7f6ceebf5b4dde6c617d879ede8c3174024ae7",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Wed Jul 19 09:02:44 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 19 09:02:44 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 9,
      "deletions": 2,
      "files": [
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedConfigTest.java"
      ]
    },
    "message": "KAFKA-15211: Mock InvalidParameterException in DistributedConfigTest (#14039)\n\nSigned-off-by: Greg Harris <greg.harris@aiven.io>\nReviewed-by: Chris Egerton <chris.egerton@aiven.io>",
    "epoch": 1689768164,
    "epoch_utc": null
  },
  {
    "commit": "2999168cde37142ae3a2377fe939d6b581e692b8",
    "author": "Said Boudjelda",
    "author_email": "bmscomp@gmail.com",
    "date": "Wed Jul 19 09:39:29 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 19 09:39:29 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 4,
      "deletions": 4,
      "files": [
        "gradle/dependencies.gradle",
        "gradle/wrapper/gradle-wrapper.properties",
        "gradlew"
      ]
    },
    "message": "MINOR: Upgrade Gradle wrapper version to 8.2.1 (#14032)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1689770369,
    "epoch_utc": null
  },
  {
    "commit": "f66a0f0babf7b5b119ba4afca1e40663503bb21c",
    "author": "Tanay Karmarkar",
    "author_email": "31416664+tanay27@users.noreply.github.com",
    "date": "Wed Jul 19 09:35:05 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 19 09:35:05 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 16,
      "deletions": 8,
      "files": [
        "release.py"
      ]
    },
    "message": "KAFKA-15199: Remove Leading and Trailing Spaces in release.py (#14035)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1689770105,
    "epoch_utc": null
  },
  {
    "commit": "a500c3ecf9a5926681eacc778f44076dc699d853",
    "author": "Jeff Kim",
    "author_email": "kimkb2011@gmail.com",
    "date": "Wed Jul 19 03:15:13 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 19 09:15:13 2023 +0200",
    "stats": {
      "files_changed": 25,
      "insertions": 4981,
      "deletions": 616,
      "files": [
        "checkstyle/suppressions.xml",
        "clients/src/main/java/org/apache/kafka/common/requests/JoinGroupRequest.java",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorConfig.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/RecordHelpers.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/ReplicatedGroupCoordinator.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/generic/GenericGroup.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/generic/GenericGroupMember.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/generic/Protocol.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorBuilder.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorResult.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorTimer.java",
        "group-coordinator/src/main/resources/common/message/GroupMetadataValue.json",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorConfigTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorServiceTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/MockCoordinatorTimer.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/RecordHelpersTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/ReplicatedGroupCoordinatorTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/generic/GenericGroupMemberTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/generic/GenericGroupTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntimeTest.java"
      ]
    },
    "message": "KAFKA-14500; [5/N] Implement JoinGroup protocol in new GroupCoordinator (#13870)\n\nThis patch implements the existing JoinGroup protocol within the new group coordinator.\n\nSome notable differences:\n* Methods return a CoordinatorResult to the runtime framework, which includes records to append to the log as well as a future to complete after the append succeeds/fails.\n* The coordinator runtime ensures that only a single thread will be processing a group at any given time, therefore there is no more locking on groups.\n* Instead of using on purgatories, we rely on the Timer interface to schedule/cancel delayed operations.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1689747313,
    "epoch_utc": null
  },
  {
    "commit": "a82df3000a405c29cc830650ae294de4f00dd6b7",
    "author": "Chase Thomas",
    "author_email": "forlack@gmail.com",
    "date": "Tue Jul 18 14:36:12 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jul 18 14:36:12 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 17,
      "deletions": 1,
      "files": [
        "docs/ops.html"
      ]
    },
    "message": "MINOR: Update docs to include ZK deprecation notice and information (#14031)\n\nReviewers: Ismael Juma <ismael@confluent.io>, Mickael Maison <mickael.maison@gmail.com>, Divij Vaidya <diviv@amazon.com>, Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1689701772,
    "epoch_utc": null
  },
  {
    "commit": "d6aaddf6ee37eea8b583fe76b22828f9f343355d",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Tue Jul 18 21:38:30 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jul 18 16:38:30 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 4,
      "deletions": 3,
      "files": [
        "connect/api/src/main/java/org/apache/kafka/connect/source/SourceTask.java"
      ]
    },
    "message": "KAFKA-15091: Fix misleading Javadoc for SourceTask::commit (#13948)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1689727110,
    "epoch_utc": null
  },
  {
    "commit": "5cb2504c4931183b7817f0856776a09a99c10b6b",
    "author": "Gantigmaa Selenge",
    "author_email": "39860586+tinaselenge@users.noreply.github.com",
    "date": "Tue Jul 18 23:27:19 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jul 18 11:27:19 2023 -0400",
    "stats": {
      "files_changed": 7,
      "insertions": 276,
      "deletions": 252,
      "files": [
        "build.gradle",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorHeartbeatConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceConfig.java",
        "docs/configuration.html",
        "docs/ops.html"
      ]
    },
    "message": "KAFKA-14669: Use the generated docs for MirrorMaker configs in the doc (#13658)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1689733639,
    "epoch_utc": null
  },
  {
    "commit": "fd3b1137d2f12bd5c3717fc7ac5ba3d8a96fd951",
    "author": "Abhijeet Kumar",
    "author_email": "abhijeet.cse.kgp@gmail.com",
    "date": "Tue Jul 18 20:16:19 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jul 18 20:16:19 2023 +0530",
    "stats": {
      "files_changed": 13,
      "insertions": 313,
      "deletions": 21,
      "files": [
        "build.gradle",
        "checkstyle/import-control-core.xml",
        "checkstyle/import-control.xml",
        "checkstyle/suppressions.xml",
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/main/java/kafka/log/remote/RemoteLogReader.java",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/KafkaRequestHandler.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java",
        "core/src/test/java/kafka/log/remote/RemoteLogReaderTest.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/RemoteStorageThreadPool.java"
      ]
    },
    "message": "KAFKA-14953: Add tiered storage related metrics (#13944)\n\n* KAFKA-14953: Adding RemoteLogManager metrics\nIn this PR, I have added the following metrics that are related to tiered storage mentioned in[ KIP-405](https://cwiki.apache.org/confluence/display/KAFKA/KIP-405%3A+Kafka+Tiered+Storage).\n|Metric|Description|\n|-----------------------------------------|--------------------------------------------------------------|\n| RemoteReadRequestsPerSec                    | Number of remote storage read requests per second               |\n| RemoteWriteRequestsPerSec                    | Number of remote storage write requests per second              |\n| RemoteBytesInPerSec                                | Number of bytes read from remote storage per second           |\n| RemoteReadErrorsPerSec                          | Number of remote storage read errors per second                   |\n| RemoteBytesOutPerSec                             | Number of bytes copied to remote storage per second            |\n| RemoteWriteErrorsPerSec                          | Number of remote storage write errors per second                   |\n| RemoteLogReaderTaskQueueSize             | Number of remote storage read tasks pending for execution.  |\n| RemoteLogReaderAvgIdlePercent             | Average idle percent of the remote storage reader thread pool|\n| RemoteLogManagerTasksAvgIdlePercent | Average idle percent of RemoteLogManager thread pool          |\n\nAdded unit tests for all the rate metrics.\n\nReviewers: Luke Chen <showuon@gmail.com>, Divij Vaidya <diviv@amazon.com>, Kamal Chandraprakash<kamal.chandraprakash@gmail.com>, Jorge Esteban Quilcate Otoya <quilcate.jorge@gmail.com>, Staniel Yao<yaolixinylx@gmail.com>, hudeqi<1217150961@qq.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1689722179,
    "epoch_utc": null
  },
  {
    "commit": "0b025b771136a8a166d5349b34297dbbbb81c393",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Tue Jul 18 15:37:51 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jul 18 10:37:51 2023 -0400",
    "stats": {
      "files_changed": 3,
      "insertions": 141,
      "deletions": 4,
      "files": [
        "connect/file/src/main/java/org/apache/kafka/connect/file/FileStreamSinkConnector.java",
        "connect/file/src/main/java/org/apache/kafka/connect/file/FileStreamSourceConnector.java",
        "connect/file/src/test/java/org/apache/kafka/connect/file/FileStreamSourceConnectorTest.java"
      ]
    },
    "message": "KAFKA-15121: Implement the alterOffsets method in the FileStreamSourceConnector and the FileStreamSinkConnector (#13945)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1689705471,
    "epoch_utc": null
  },
  {
    "commit": "3580f453810b54c06b78d187a30cf2cf33555cf2",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Tue Jul 18 14:33:50 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jul 18 14:33:50 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 50,
      "deletions": 17,
      "files": [
        ".asf.yaml"
      ]
    },
    "message": "Revert \"MINOR: Update .asf.yaml file with refreshed github_whitelist, and collaborators\" (#14037)\n\nThis reverts commit a1f6ab69387deb10988461152a0087f0cd2827c4.\n\nReviewers: Luke Chen <showuon@gmail.com>, Yash Mayya <yash.mayya@gmail.com>, Nikolay Izhikov <NIzhikov@gmail.com>",
    "epoch": 1689701630,
    "epoch_utc": null
  },
  {
    "commit": "a1f6ab69387deb10988461152a0087f0cd2827c4",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Tue Jul 18 11:33:54 2023 +0200",
    "commit_by": "Mickael Maison",
    "commit_by_email": "mimaison@users.noreply.github.com",
    "commit_by_date": "Tue Jul 18 11:33:54 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 17,
      "deletions": 50,
      "files": [
        ".asf.yaml"
      ]
    },
    "message": "MINOR: Update .asf.yaml file with refreshed github_whitelist, and collaborators",
    "epoch": 1689690834,
    "epoch_utc": null
  },
  {
    "commit": "0c6b1a4e9a94cc8d7461b78e5bb0b583dc0307d7",
    "author": "Omnia G H Ibrahim",
    "author_email": "o.g.h.ibrahim@gmail.com",
    "date": "Tue Jul 18 10:02:40 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jul 18 11:02:40 2023 +0200",
    "stats": {
      "files_changed": 8,
      "insertions": 749,
      "deletions": 0,
      "files": [
        "build.gradle",
        "checkstyle/import-control-server-common.xml",
        "server-common/src/main/java/org/apache/kafka/server/util/Json.java",
        "server-common/src/main/java/org/apache/kafka/server/util/json/DecodeJson.java",
        "server-common/src/main/java/org/apache/kafka/server/util/json/JsonArray.java",
        "server-common/src/main/java/org/apache/kafka/server/util/json/JsonObject.java",
        "server-common/src/main/java/org/apache/kafka/server/util/json/JsonValue.java",
        "server-common/src/test/java/org/apache/kafka/server/util/JsonTest.java"
      ]
    },
    "message": "KAFKA-14737: Move kafka.utils.json to server-common (#13585)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Federico Valeri <fedevaleri@gmail.com>",
    "epoch": 1689685360,
    "epoch_utc": null
  },
  {
    "commit": "fa5b493241d43c6d8809853678dcd05fb8fa518a",
    "author": "vamossagar12",
    "author_email": "sagarmeansocean@gmail.com",
    "date": "Tue Jul 18 14:08:56 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jul 18 10:38:56 2023 +0200",
    "stats": {
      "files_changed": 12,
      "insertions": 287,
      "deletions": 181,
      "files": [
        "checkstyle/import-control-server-common.xml",
        "core/src/main/scala/kafka/admin/TopicCommand.scala",
        "core/src/main/scala/kafka/tools/ConsoleConsumer.scala",
        "core/src/main/scala/kafka/tools/GetOffsetShell.scala",
        "core/src/main/scala/kafka/tools/MirrorMaker.scala",
        "core/src/main/scala/kafka/tools/ReplicaVerificationTool.scala",
        "core/src/main/scala/kafka/utils/TopicFilter.scala",
        "core/src/test/scala/unit/kafka/utils/TopicFilterTest.scala",
        "server-common/src/main/java/org/apache/kafka/server/util/PartitionFilter.java",
        "server-common/src/main/java/org/apache/kafka/server/util/TopicFilter.java",
        "server-common/src/main/java/org/apache/kafka/server/util/TopicPartitionFilter.java",
        "server-common/src/test/java/org/apache/kafka/server/util/TopicFilterTest.java"
      ]
    },
    "message": "KAFKA-14647: Move TopicFilter to server-common/utils (#13158)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Federico Valeri <fedevaleri@gmail.com>",
    "epoch": 1689700136,
    "epoch_utc": null
  },
  {
    "commit": "2574bef61c7c53a8db6b23f8cde990cbe3fa2e11",
    "author": "Said Boudjelda",
    "author_email": "bmscomp@gmail.com",
    "date": "Mon Jul 17 21:40:21 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 17 21:40:21 2023 +0200",
    "stats": {
      "files_changed": 4,
      "insertions": 49,
      "deletions": 19,
      "files": [
        "examples/src/main/java/kafka/examples/ExactlyOnceMessageProcessor.java",
        "examples/src/main/java/kafka/examples/KafkaConsumerProducerDemo.java",
        "examples/src/main/java/kafka/examples/KafkaExactlyOnceDemo.java",
        "examples/src/main/java/kafka/examples/KafkaProperties.java"
      ]
    },
    "message": "MINOR: remove unused variable in examples (#14021)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1689640821,
    "epoch_utc": null
  },
  {
    "commit": "cbd5d52ec7b89a5bbbbc245f5373a98d8379ab5a",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Mon Jul 17 21:49:43 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 17 21:49:43 2023 +0530",
    "stats": {
      "files_changed": 12,
      "insertions": 2503,
      "deletions": 0,
      "files": [
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/LocalTieredStorage.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/LocalTieredStorageCondition.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/LocalTieredStorageEvent.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/LocalTieredStorageHistory.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/LocalTieredStorageListener.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/LocalTieredStorageSnapshot.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/LocalTieredStorageTest.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/LocalTieredStorageTraverser.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/RemoteLogSegmentFileset.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/RemoteTopicPartitionDirectory.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/RemoteTopicPartitionDirectoryTest.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/Transferer.java"
      ]
    },
    "message": "KAFKA-9564: Local Tiered Storage implementation for Remote Storage Manager (#13837)\n\nReviewers: Luke Chen <showuon@gmail.com>, Divij Vaidya <diviv@amazon.com>, Jorge Esteban Quilcate Otoya <quilcate.jorge@gmail.com>, Christo Lolov <lolovc@amazon.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1689641383,
    "epoch_utc": null
  },
  {
    "commit": "9e50f7cdd37f923cfef4711cf11c1c5271a0a6c7",
    "author": "Hailey Ni",
    "author_email": "136509748+hni61223@users.noreply.github.com",
    "date": "Sun Jul 16 20:23:01 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Jul 16 21:23:01 2023 -0400",
    "stats": {
      "files_changed": 7,
      "insertions": 136,
      "deletions": 24,
      "files": [
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/controller/metrics/QuorumControllerMetrics.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/metrics/QuorumControllerMetricsTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationDriverTest.java"
      ]
    },
    "message": "MINOR: Add ZK dual-write lag metric (#14009)\n\nThis patch adds ZKWriteBehindLag metric to the KafkaController mbean as specified in KIP-866\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1689549781,
    "epoch_utc": null
  },
  {
    "commit": "8afa881a115003aed9e9afe45ae135d9ae86d0c2",
    "author": "Iblis Lin",
    "author_email": "iblis@apache.org",
    "date": "Sun Jul 16 14:58:37 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Jul 16 14:58:37 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "docs/streams/developer-guide/dsl-api.html"
      ]
    },
    "message": "fix typo in streams/dsl-api.html (#14023)\n\nFix typo in docs/streams/dsl-api.html\n\nReviewers: Luke Chen <showuon@gmail.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1689530317,
    "epoch_utc": null
  },
  {
    "commit": "15418db69d3a7d88ff430e8c107d1a45380545de",
    "author": "Max Riedel",
    "author_email": "m_riedel_95@gmx.de",
    "date": "Sat Jul 15 15:26:36 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Jul 15 15:26:36 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 50,
      "deletions": 0,
      "files": [
        "clients/src/test/java/org/apache/kafka/common/utils/ChunkedBytesStreamTest.java"
      ]
    },
    "message": "KAFKA-15123: Add tests for ChunkedBytesStream (#13941)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1689445596,
    "epoch_utc": null
  },
  {
    "commit": "ea0bb001262320bc9233221955a2be31c85993b9",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Fri Jul 14 15:18:11 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 14 15:18:11 2023 -0700",
    "stats": {
      "files_changed": 20,
      "insertions": 719,
      "deletions": 154,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/Sender.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/TransactionManager.java",
        "clients/src/test/java/org/apache/kafka/clients/MockClient.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/SenderTest.java",
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/unit/kafka/cluster/AbstractPartitionTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionLockTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupMetadataManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/ProducerStateManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/server/CheckpointBench.java",
        "server-common/src/main/java/org/apache/kafka/server/util/InterBrokerSendThread.java",
        "server-common/src/test/java/org/apache/kafka/server/util/InterBrokerSendThreadTest.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/ProducerStateManager.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/VerificationStateEntry.java"
      ]
    },
    "message": "KAFKA-14884: Include check transaction is still ongoing right before append (take 2) (#13787)\n\nIntroduced extra mapping to track verification state.\n\nWhen verifying, there is a race condition that the add partitions verification response returns that the partition is in the ongoing transaction, but an abort marker is written before we get to append. Therefore, we track any given transaction we are verifying with an object unique to that transaction.\n\nWe check this unique state upon the first append to the log. After that, we can rely on currentTransactionFirstOffset. We remove the verification state on appending to the log with a transactional data record or marker.\n\nWe will also clean up lingering verification state entries via the producer state entry expiration mechanism. We do not update the the timestamp on retrying a verification for a transaction, so each entry must be verified before producer.id.expiration.ms.\n\nThere were a few other fixes:\n- Moved the transaction manager handling for failed batch into the future completed exceptionally block to avoid processing it twice (this caused issues in unit tests)\n- handle interrupted exceptions encountered when callback thread encountered them\n- change handling to throw error if we try to set verification state and leaderLogIfLocal is None.\n\nReviewers: David Jacot <djacot@confluent.io>, Artem Livshits <alivshits@confluent.io>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1689358691,
    "epoch_utc": null
  },
  {
    "commit": "d9253fed5c022c53a43e986c7d738ca25ef7d92b",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Fri Jul 14 17:44:00 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 14 17:44:00 2023 -0400",
    "stats": {
      "files_changed": 5,
      "insertions": 194,
      "deletions": 56,
      "files": [
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/test/scala/integration/kafka/server/KafkaServerKRaftRegistrationTest.scala",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/MigrationManifest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationDriverTest.java"
      ]
    },
    "message": "MINOR Improve logging during the ZK to KRaft migration (#14008)\n\n* Adds an exponential backoff to 1m while the controller is waiting for brokers to show up\n* Increases one-time logs to INFO\n* Adds a summary of the migration records\n* Use RecordRedactor for summary of migration batches (TRACE only)\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1689367440,
    "epoch_utc": null
  },
  {
    "commit": "2b19b7325aac0449de15970b4710a83a51ae29ad",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Fri Jul 14 17:14:03 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 14 12:14:03 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 68,
      "deletions": 10,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Worker.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerTest.java"
      ]
    },
    "message": "KAFKA-15182: Normalize source connector offsets before invoking SourceConnector::alterOffsets (#14003)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1689365643,
    "epoch_utc": null
  },
  {
    "commit": "32ff347b2c0ca21b9c567ab4cfe54869d7148e28",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Fri Jul 14 17:41:06 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 14 17:41:06 2023 +0200",
    "stats": {
      "files_changed": 10,
      "insertions": 322,
      "deletions": 36,
      "files": [
        "checkstyle/import-control-server-common.xml",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/test/scala/unit/kafka/server/ConsumerGroupHeartbeatRequestTest.scala",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/util/SystemTimerReaper.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/util/SystemTimerReaperTest.java"
      ]
    },
    "message": "KAFKA-14462; [23/23] Wire GroupCoordinatorService in BrokerServer (#13991)\n\nThis patch wires the new group coordinator in BrokerServer (KRaft only). With this, it is now possible to run a cluster with the new group coordinator and to use the ConsumerGroupHeartbeat API by specifying the following two properties:\n- group.coordinator.new.enable = true (to enable the new group coordinator)\n- unstable.api.versions.enable = true (to enable unreleased APIs)\n\nNote that the new group coordinator does not support all the existing APIs yet.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1689367266,
    "epoch_utc": null
  },
  {
    "commit": "b3ce2e54f40f2d1e287d8bfd196dc5dcdbd2046d",
    "author": "Kirk True",
    "author_email": "kirk@kirktrue.pro",
    "date": "Fri Jul 14 01:24:36 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 14 10:24:36 2023 +0200",
    "stats": {
      "files_changed": 22,
      "insertions": 55,
      "deletions": 54,
      "files": [
        "core/src/test/scala/integration/kafka/api/BaseConsumerTest.scala",
        "core/src/test/scala/integration/kafka/api/BaseProducerSendTest.scala",
        "core/src/test/scala/integration/kafka/api/BaseQuotaTest.scala",
        "core/src/test/scala/integration/kafka/api/CustomQuotaCallbackTest.scala",
        "core/src/test/scala/integration/kafka/api/IntegrationTestHarness.scala",
        "core/src/test/scala/integration/kafka/api/MetricsTest.scala",
        "core/src/test/scala/integration/kafka/api/PlaintextAdminIntegrationTest.scala",
        "core/src/test/scala/integration/kafka/api/ProducerIdExpirationTest.scala",
        "core/src/test/scala/integration/kafka/api/SaslClientsWithInvalidCredentialsTest.scala",
        "core/src/test/scala/integration/kafka/api/TransactionsBounceTest.scala",
        "core/src/test/scala/integration/kafka/api/TransactionsExpirationTest.scala",
        "core/src/test/scala/integration/kafka/api/TransactionsTest.scala",
        "core/src/test/scala/integration/kafka/api/TransactionsWithMaxInFlightOneTest.scala",
        "core/src/test/scala/integration/kafka/server/DynamicBrokerReconfigurationTest.scala",
        "core/src/test/scala/integration/kafka/server/MultipleListenersWithSameSecurityProtocolBaseTest.scala",
        "core/src/test/scala/kafka/tools/LogCompactionTester.scala",
        "core/src/test/scala/unit/kafka/admin/ConsumerGroupCommandTest.scala",
        "core/src/test/scala/unit/kafka/admin/DeleteOffsetsConsumerGroupCommandIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/server/LogDirFailureTest.scala",
        "core/src/test/scala/unit/kafka/server/ServerShutdownTest.scala",
        "core/src/test/scala/unit/kafka/server/epoch/EpochDrivenReplicationProtocolAcceptanceTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala"
      ]
    },
    "message": "KAFKA-15180: Generalize integration tests to change use of KafkaConsumer to Consumer (#13997)\n\nUpdate the integration tests to swap the use of the concrete KafkaConsumer class to the generic Consumer interface.\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Philip Nee <philipnee@gmail.com>, Jun Rao <junrao@gmail.com>",
    "epoch": 1689308676,
    "epoch_utc": null
  },
  {
    "commit": "4960a5ebe90c44b8d0616d328e022dac5067395b",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Fri Jul 14 10:22:14 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 14 10:22:14 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 59,
      "deletions": 46,
      "files": [
        "core/src/test/scala/integration/kafka/api/ConsumerBounceTest.scala"
      ]
    },
    "message": "MINOR: Remove thread leak from ConsumerBounceTest (#13956)\n\nThis commit prevents the leak of daemon-bounce-broker thread which was causing test failures for tests which check for thread leak prior to running.\n\nReviewers: Luke Chen <showuon@gmail.com>, Justine Olshan <jolshan@confluent.io>, Philip Nee <philipnee@gmail.com>",
    "epoch": 1689340934,
    "epoch_utc": null
  },
  {
    "commit": "c84ac00609c09caafc47764de26f11958c615a43",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Thu Jul 13 23:46:13 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 13 23:46:13 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "metadata/src/test/java/org/apache/kafka/controller/ReplicationControlManagerTest.java"
      ]
    },
    "message": "Fix compile test error (#14013)\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1689302773,
    "epoch_utc": null
  },
  {
    "commit": "ab71c56973518bac8e1868eccdc40b17d7da35c1",
    "author": "Okada Haruki",
    "author_email": "ocadaruma@gmail.com",
    "date": "Fri Jul 14 12:14:31 2023 +0900",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 14 11:14:31 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 8,
      "deletions": 1,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java"
      ]
    },
    "message": "KAFKA-12261: Mention about potential delivery loss on increasing partition when auto.offset.reset = latest (#10167)\n\nSplitting partitions while setting auto.offset.reset to latest may cause message delivery loss, but users might not be aware about that since currently it isn't documented anywhere.\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1689347671,
    "epoch_utc": null
  },
  {
    "commit": "959f9ca4c02817cce85f0375d431ed72f22699e2",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Thu Jul 13 13:27:15 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 13 13:27:15 2023 -0700",
    "stats": {
      "files_changed": 14,
      "insertions": 230,
      "deletions": 57,
      "files": [
        "metadata/src/main/java/org/apache/kafka/controller/AclControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/ClientQuotaControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/ClusterControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/ConfigurationControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/FeatureControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/ProducerIdControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/controller/ReplicationControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/ScramControlManager.java",
        "metadata/src/test/java/org/apache/kafka/controller/AclControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/ClientQuotaControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/MockAclControlManager.java",
        "metadata/src/test/java/org/apache/kafka/controller/ProducerIdControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/ReplicationControlManagerTest.java"
      ]
    },
    "message": "MINOR: Standardize controller log4j output for replaying records (#13703)\n\nStandardize controller log4j output for replaying important records. The log message should include\nword \"replayed\" to make it clear that this is a record replay. Log the replay of records for ACLs,\nclient quotas, and producer IDs, which were previously not logged. Also fix a case where we weren't\nlogging changes to broker registrations.\n\nAclControlManager, ClientQuotaControlManager, and ProducerIdControlManager didn't previously have a\nlog4j logger object, so this PR adds one. It also converts them to using Builder objects. This\nmakes junit tests more readable because we don't need to specify paramaters where the test can use\nthe default (like LogContexts).\n\nThrow an exception in replay if we get another TopicRecord for a topic which already exists.\n\nExample log messages:\nINFO [QuorumController id=3000] Replayed a FeatureLevelRecord setting metadata version to 3.6-IV0\nDEBUG [QuorumController id=3000] Replayed a ZkMigrationStateRecord which did not alter the state from NONE.\nINFO [QuorumController id=3000] Replayed BrokerRegistrationChangeRecord modifying the registration for broker 0: BrokerRegistrationChangeRecord(brokerId=0, brokerEpoch=3, fenced=-1, inControlledShutdown=0)\nINFO [QuorumController id=3000] Replayed ClientQuotaRecord for ClientQuotaEntity(entries={user=testkit}) setting request_percentage to 0.99.\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Ron Dagostino <rndgstn@gmail.com>, David Arthur <mumrah@gmail.com>",
    "epoch": 1689265635,
    "epoch_utc": null
  },
  {
    "commit": "5f20750dc14c56538e904c363d27264f02e74d82",
    "author": "Lucas Brutschy",
    "author_email": "lucasbru@users.noreply.github.com",
    "date": "Thu Jul 13 14:33:39 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 13 14:33:39 2023 +0200",
    "stats": {
      "files_changed": 5,
      "insertions": 119,
      "deletions": 1,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskExecutor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskManager.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/tasks/TaskManager.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskExecutorTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/tasks/DefaultTaskManagerTest.java"
      ]
    },
    "message": "Kafka Streams Threading: Exception handling (#13957)\n\nCatch any exceptions that escape the processing logic\ninside TaskExecutors and record them in the TaskManager.\nMake sure the TaskExecutor survives, but the task is\nunassigned. Add a method to TaskManager to drain the\nexceptions. The aim here is that the polling thread will\ndrain the exceptions to be able to execute the\nuncaught exception handler, abort transactions, etc.\n\nReviewer: Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1689269619,
    "epoch_utc": null
  },
  {
    "commit": "8d24716f27b307da79a819487aefb8dec79b4ca8",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Thu Jul 13 03:19:35 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 12 12:19:35 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 3,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceConnector.java"
      ]
    },
    "message": "MINOR: Avoid slow Set.removeAll(List) in MirrorSourceConnector (#13992)\n\nReviewed-by: Greg Harris <greg.harris@aiven.io>",
    "epoch": 1689229175,
    "epoch_utc": null
  },
  {
    "commit": "d114d8e29ca3b8b80bbb4ea693f2a772a0e9b7d9",
    "author": "Sambhav Jain",
    "author_email": "67923444+sambhav-jain-16@users.noreply.github.com",
    "date": "Wed Jul 12 21:15:49 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 12 11:45:49 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 14,
      "deletions": 7,
      "files": [
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/ExactlyOnceSourceIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/MonitorableSourceConnector.java"
      ]
    },
    "message": "KAFKA-14938: Fixing flaky test testConnectorBoundary (#13646)\n\nReviewers: Sagar Rao <sagarmeansocean@gmail.com>, Yash Mayya <yash.mayya@gmail.com>,\nSudesh Wasnik <swasnik@confluent.io>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1689207349,
    "epoch_utc": null
  },
  {
    "commit": "170f5f4ed0127022d0d2d7b2d7d80eb3f7f503e4",
    "author": "ezio",
    "author_email": "eziosudo@gmail.com",
    "date": "Wed Jul 12 04:41:58 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 12 13:41:58 2023 +0200",
    "stats": {
      "files_changed": 14,
      "insertions": 31,
      "deletions": 33,
      "files": [
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/StartAndStopCounterTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/StartAndStopLatchTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/KTableEfficientRangeQueryTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/KTableKTableForeignKeyInnerJoinMultiIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/KTableKTableForeignKeyJoinDistributedTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/LagFetchIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/MetricsIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/MetricsReporterIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/NamedTopologyIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/OptimizedKTableIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/PurgeRepartitionTopicIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/QueryableStateIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/RegexSourceIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/StandbyTaskCreationIntegrationTest.java"
      ]
    },
    "message": "KAFKA-15148: Mark tests correctly as integration tests where they running as unit tests  (#13973)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1689147718,
    "epoch_utc": null
  },
  {
    "commit": "4e85bc9f80d5dcfcfb256ebbbc752d58fe5e534a",
    "author": "Manikumar Reddy",
    "author_email": "manikumar.reddy@gmail.com",
    "date": "Wed Jul 12 17:01:10 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 12 17:01:10 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 14,
      "deletions": 1,
      "files": [
        "tools/src/main/java/org/apache/kafka/tools/JmxTool.java",
        "tools/src/test/java/org/apache/kafka/tools/JmxToolTest.java"
      ]
    },
    "message": "MINOR: Fix Jmxtool to honour wait option when MBean is not yet avaibale in MBean server (#13995)\n\nIn JmxTool.scala, we will wait till all the object names are available from MBean server. But in the newer version, we only wait for subset of object names. Due to this, we may not enforce wait option and prematurely return the result if the objects are not yet registered in MBean sever.\n\nReviewers: Luke Chen <showuon@gmail.com>, Federico Valeri <fvaleri@redhat.com>",
    "epoch": 1689192070,
    "epoch_utc": null
  },
  {
    "commit": "aafbe3444354cfb0e4a8fdbd3443a63ba867c732",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Wed Jul 12 11:10:51 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 12 11:10:51 2023 +0200",
    "stats": {
      "files_changed": 7,
      "insertions": 1058,
      "deletions": 48,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/ReplicatedGroupCoordinator.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorResult.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/MockCoordinatorTimer.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/ReplicatedGroupCoordinatorTest.java"
      ]
    },
    "message": "KAFKA-14462; [22/N] Implement session and revocation timeouts (#13963)\n\nThis patch adds the session timeout and the revocation timeout to the new consumer group protocol.\n\nReviewers: Calvin Liu <caliu@confluent.io>, Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1689171051,
    "epoch_utc": null
  },
  {
    "commit": "451fff8937c626a187371b8fcdf50cfb5177d38f",
    "author": "Clay Johnson",
    "author_email": "cjohnson@gradle.com",
    "date": "Wed Jul 12 03:47:32 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 12 10:47:32 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 34,
      "deletions": 2,
      "files": [
        "build.gradle",
        "settings.gradle"
      ]
    },
    "message": "MINOR: Capture build scans on ge.apache.org to benefit from deep build insights (#13676)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Ismael Juma <ismael@juma.me.uk>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1689144452,
    "epoch_utc": null
  },
  {
    "commit": "b584e91036ed16bc4bbee34b63d34fb62bcf5d02",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Wed Jul 12 10:36:57 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 12 10:36:57 2023 +0200",
    "stats": {
      "files_changed": 5,
      "insertions": 23,
      "deletions": 5,
      "files": [
        "tests/kafkatest/tests/client/client_compatibility_features_test.py",
        "tests/kafkatest/tests/client/client_compatibility_produce_consume_test.py",
        "tests/kafkatest/tests/core/compatibility_test_new_broker_test.py",
        "tests/kafkatest/tests/core/downgrade_test.py",
        "tests/kafkatest/tests/core/upgrade_test.py"
      ]
    },
    "message": "KAFKA-15093: Add 3.4.0 and 3.5.0 to core upgrade and compatibility system tests (#13859)\n\n\nReviewers: Luke Chen <showuon@gmail.com>, Christo Lolov  <christololov@gmail.com>",
    "epoch": 1689169017,
    "epoch_utc": null
  },
  {
    "commit": "354db26b954c1df7c8c83748c466768399209b8c",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Wed Jul 12 10:11:44 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 12 10:11:44 2023 +0200",
    "stats": {
      "files_changed": 4,
      "insertions": 15,
      "deletions": 3,
      "files": [
        "gradle/dependencies.gradle",
        "tests/docker/Dockerfile",
        "tests/kafkatest/version.py",
        "vagrant/base.sh"
      ]
    },
    "message": "MINOR: Add 3.5.0 and 3.4.1 to system tests (#13849)\n\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1689167504,
    "epoch_utc": null
  },
  {
    "commit": "f3ee9ff90ff107942280fb0c4bd83e7ebc5c062c",
    "author": "Jim Galasyn",
    "author_email": "jim.galasyn@confluent.io",
    "date": "Tue Jul 11 12:24:40 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jul 11 12:24:40 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 53,
      "deletions": 0,
      "files": [
        "docs/streams/upgrade-guide.html"
      ]
    },
    "message": "MINOR: Add Streams API broker compatibility table (#13937)\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1689089080,
    "epoch_utc": null
  },
  {
    "commit": "7e2f87871371d4d88187f73f43090488612ef42a",
    "author": "Satish Duggana",
    "author_email": "satishd@apache.org",
    "date": "Tue Jul 11 23:55:23 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jul 11 23:55:23 2023 +0530",
    "stats": {
      "files_changed": 10,
      "insertions": 713,
      "deletions": 490,
      "files": [
        "build.gradle",
        "checkstyle/import-control.xml",
        "checkstyle/suppressions.xml",
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/main/scala/kafka/log/LocalLog.scala",
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/main/scala/kafka/log/remote/RemoteIndexCache.scala",
        "core/src/test/scala/unit/kafka/log/LogManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/remote/RemoteIndexCacheTest.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/RemoteIndexCache.java"
      ]
    },
    "message": "KAFKA-14522 Rewrite/Move of RemoteIndexCache to storage module. (#13275)\n\nKAFKA-14522 Rewrite and Move of RemoteIndexCache to storage module.\nCleanedup index file suffix usages and other minor cleanups\n\nReviewers: Jun Rao <junrao@gmail.com>, Ismael Juma <ismael@juma.me.uk>, Luke Chen <showuon@gmail.com>, Divij Vaidya <diviv@amazon.com>, Kamal Chandraprakash<kamal.chandraprakash@gmail.com>, Jorge Esteban Quilcate Otoya <quilcate.jorge@gmail.com>",
    "epoch": 1689130523,
    "epoch_utc": null
  },
  {
    "commit": "adacfea2d6c133c9bb2a7ac3891dc69eb6f91e03",
    "author": "vamossagar12",
    "author_email": "sagarmeansocean@gmail.com",
    "date": "Tue Jul 11 20:35:10 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jul 11 08:05:10 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 71,
      "deletions": 0,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaStatusBackingStore.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaStatusBackingStoreTest.java"
      ]
    },
    "message": "KAFKA-12525: Ignoring stale status statuses when reading from Connect status topic (#13453)\n\nDuring fast consecutive rebalances where a task is revoked from one worker and assigned to another one, it has been observed that there is a small time window and thus a race condition during which a RUNNING status record in the new generation is produced and is immediately followed by a delayed UNASSIGNED status record belonging to the same or a previous generation before the worker that sends this message reads the RUNNING status record that corresponds to the latest generation.\nAlthough this doesn't inhibit the actual execution of tasks, it reports an incorrect status for those tasks(i.e UNASSIGNED). If the users have setup some kind of monitoring on tasks status then this could lead to false alarms for example.\nThis fix addresses this problem by checking if a status message is stale after reading it and updates it's status only when it is safe to.\n\nReviewers: Lucent-Wong <manchesterfans@live.cn>, Chris Egerton <chrise@aiven.io>, Yash Mayya <yash.mayya@gmail.com>, Konstantine Karantasis <k.karantasis@gmail.com>",
    "epoch": 1689118510,
    "epoch_utc": null
  },
  {
    "commit": "b8f3776f2458d0270276bd3d59db66f4c7f3748c",
    "author": "Yi-Sheng Lien",
    "author_email": "yisheng@apache.org",
    "date": "Tue Jul 11 17:01:50 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jul 11 11:01:50 2023 +0200",
    "stats": {
      "files_changed": 21,
      "insertions": 33,
      "deletions": 33,
      "files": [
        "kafka-merge-pr.py",
        "release.py",
        "reviewers.py",
        "tests/kafkatest/benchmarks/core/benchmark_test.py",
        "tests/kafkatest/services/connect.py",
        "tests/kafkatest/services/kafka/kafka.py",
        "tests/kafkatest/services/monitor/http.py",
        "tests/kafkatest/services/monitor/jmx.py",
        "tests/kafkatest/services/streams.py",
        "tests/kafkatest/services/transactional_message_copier.py",
        "tests/kafkatest/services/trogdor/kibosh.py",
        "tests/kafkatest/services/trogdor/trogdor.py",
        "tests/kafkatest/tests/connect/connect_distributed_test.py",
        "tests/kafkatest/tests/connect/connect_rest_test.py",
        "tests/kafkatest/tests/core/get_offset_shell_test.py",
        "tests/kafkatest/tests/core/group_mode_transactions_test.py",
        "tests/kafkatest/tests/core/replication_test.py",
        "tests/kafkatest/tests/core/snapshot_test.py",
        "tests/kafkatest/tests/core/transactions_test.py",
        "tests/kafkatest/tests/streams/streams_broker_bounce_test.py",
        "tests/kafkatest/tests/streams/streams_relational_smoke_test.py"
      ]
    },
    "message": "KAFKA-15155: Follow PEP 8 best practice in Python to check if a container is empty (#13974)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1689105710,
    "epoch_utc": null
  },
  {
    "commit": "5b5f6fcafb490f9440c0cb1a2ef5aace58f83496",
    "author": "Alyssa Huang",
    "author_email": "ahuang@confluent.io",
    "date": "Tue Jul 11 01:48:53 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jul 11 10:48:53 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 15,
      "deletions": 1,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/AbstractControlRequest.java",
        "core/src/main/scala/kafka/controller/ControllerChannelManager.scala"
      ]
    },
    "message": "[KAFKA-15137] Do not log entire request payload in KRaftControllerChannelManager (#13988)\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1689050933,
    "epoch_utc": null
  },
  {
    "commit": "6afcfba9f3949cc8e8eecac42dabb099ba9cc0a9",
    "author": "ezio",
    "author_email": "eziosudo@gmail.com",
    "date": "Tue Jul 11 01:39:39 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jul 11 10:39:39 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 15,
      "deletions": 14,
      "files": [
        "LICENSE-binary",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "KAFKA-15159: upgrade minor dependencies (#13982)\n\nReviewers: Divij Vaidya <diviv@amazon.com>\n\n---------\n\nCo-authored-by: Damon Xie <damon.xie@zoom.us>",
    "epoch": 1689050379,
    "epoch_utc": null
  },
  {
    "commit": "51bc41031b91b16ffcbd95832e8a20a00d3b6f81",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Tue Jul 11 05:35:46 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 10 14:35:46 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 26,
      "deletions": 26,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointConnector.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorCheckpointConnectorTest.java"
      ]
    },
    "message": "KAFKA-15139: Avoid slow Set.removeAll(List) in MirrorCheckpointConnector (#13946)\n\nReviewed-by: Greg Harris <greg.harris@aiven.io>",
    "epoch": 1689064546,
    "epoch_utc": null
  },
  {
    "commit": "9ee28d1fe67d880725130bca84aacef718b11c98",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Mon Jul 10 18:26:58 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 10 13:26:58 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 45,
      "deletions": 6,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractWorkerSourceTask.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/AbstractWorkerSourceTaskTest.java"
      ]
    },
    "message": "KAFKA-15145: Don't re-process records filtered out by SMTs on Kafka client retriable exceptions in AbstractWorkerSourceTask (#13955)\n\nReviewers: Sagar Rao <sagarmeansocean@gmail.com>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1689024418,
    "epoch_utc": null
  },
  {
    "commit": "6368d14a1d8c37305290b8b89fb5990ad07aa4db",
    "author": "Hector Geraldino",
    "author_email": "hgeraldino@gmail.com",
    "date": "Mon Jul 10 12:58:54 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 10 12:58:54 2023 -0400",
    "stats": {
      "files_changed": 3,
      "insertions": 366,
      "deletions": 493,
      "files": [
        "build.gradle",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSourceTask.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerSourceTaskTest.java"
      ]
    },
    "message": "KAFKA-14059 Replace PowerMock with Mockito in WorkerSourceTaskTest (#13383)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1689004734,
    "epoch_utc": null
  },
  {
    "commit": "d9a3e60dcc0aab24b609ffa808f169cd2e1eecc3",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Mon Jul 10 18:53:01 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 10 12:53:01 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 108,
      "deletions": 24,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorMaker.java",
        ".../mirror/src/test/java/org/apache/kafka/connect/mirror/integration/DedicatedMirrorIntegrationTest.java"
      ]
    },
    "message": "KAFKA-14718: Wait for MirrorMaker to start before executing test (#13284)",
    "epoch": 1689025981,
    "epoch_utc": null
  },
  {
    "commit": "e98508747acc8972ac5ceb921e0fd3a7d7bd5e9c",
    "author": "Cheryl Simmons",
    "author_email": "csimmons@confluent.io",
    "date": "Mon Jul 10 09:48:35 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 10 12:48:35 2023 -0400",
    "stats": {
      "files_changed": 3,
      "insertions": 61,
      "deletions": 63,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java",
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "raft/src/main/java/org/apache/kafka/raft/RaftConfig.java"
      ]
    },
    "message": "Doc fixes: Fix format and other small errors in config documentation (#13661)\n\nVarious formatting fixes in the config docs.\n\nReviewers: Bill Bejeck <bbejeck@apache.org>",
    "epoch": 1688993315,
    "epoch_utc": null
  },
  {
    "commit": "8be601d05129b0cfa349a739cf21fbb87351f5e9",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Tue Jul 11 00:11:21 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 10 18:11:21 2023 +0200",
    "stats": {
      "files_changed": 8,
      "insertions": 7,
      "deletions": 7,
      "files": [
        "build.gradle",
        "tests/spec/connection_stress_test.json",
        "tests/spec/external_command.json",
        "tests/spec/round_trip.json",
        "tests/spec/simple_consume_bench_spec.json",
        "tests/spec/simple_produce_bench.json",
        "tests/spec/transactional-produce-bench.json",
        "TROGDOR.md => trogdor/README.md"
      ]
    },
    "message": "MINOR: Move TROGDOR.md to trogdor module (#13979)\n\nReviewers: Divij Vaidya <diviv@amazon.com>\n\n---------\n\nCo-authored-by: Deqi Hu <deqi.hu@shopee.com>",
    "epoch": 1689045081,
    "epoch_utc": null
  },
  {
    "commit": "0e56cc88416faf31485343ebb95948cb5d8fbc06",
    "author": "Hao Li",
    "author_email": "1127478+lihaosky@users.noreply.github.com",
    "date": "Mon Jul 10 08:41:20 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 10 08:41:20 2023 -0700",
    "stats": {
      "files_changed": 4,
      "insertions": 604,
      "deletions": 11,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/InternalTopicManager.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/RackAwareTaskAssignor.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopicManagerTest.java",
        ".../src/test/java/org/apache/kafka/streams/processor/internals/assignment/RackAwareTaskAssignorTest.java"
      ]
    },
    "message": "KAFKA-15022: [1/N] initial implementation of rack aware assignor (#13851)\n\nPart of KIP-925. Adds first internal classes to track rack.id client/partition metadata.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1688989280,
    "epoch_utc": null
  },
  {
    "commit": "edd64fa251b665b1ff88ed80112ac56a1ac0f9e2",
    "author": "Ron Dagostino",
    "author_email": "rndgstn@gmail.com",
    "date": "Mon Jul 10 10:01:10 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 10 10:01:10 2023 -0400",
    "stats": {
      "files_changed": 10,
      "insertions": 383,
      "deletions": 111,
      "files": [
        "metadata/src/test/java/org/apache/kafka/image/AclsImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/ClientQuotasImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/ClusterImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/ConfigurationsImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/FeaturesImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/MetadataImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/ProducerIdsImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/ScramImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/TopicsImageTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/RecordTestUtils.java"
      ]
    },
    "message": "MINOR: more KRaft Metadata Image tests (#13724)\n\nAdds additional testing for the various KRaft *Image classes. For every image that we create we already test that we can get there by applying all the records corresponding to that image written out as a list of records. This patch adds more tests to confirm that we can get to each such final image with intermediate stops at all possible intermediate images along the way.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>, David Arthur <mumrah@gmail.com>",
    "epoch": 1688994070,
    "epoch_utc": null
  },
  {
    "commit": "726d277c0aac6bfc57a16ef240740b7875ce75ae",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Mon Jul 10 09:05:46 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 10 09:05:46 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 164,
      "deletions": 171,
      "files": [
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java"
      ]
    },
    "message": "MINOR: Move some things around in KRaftMigrationDriver (#13978)\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1688990746,
    "epoch_utc": null
  },
  {
    "commit": "5926840cab3c4900442f994addcffd78cd28570f",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Mon Jul 10 14:29:04 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 10 14:29:04 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 2,
      "files": [
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala"
      ]
    },
    "message": "MINOR: Check for thread leak at the end of @AfterEach, not at beginning (#13976)\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1689010144,
    "epoch_utc": null
  },
  {
    "commit": "d481163d55a1cea3206fa6e386b24ac84e17c3d7",
    "author": "DL1231",
    "author_email": "53332773+DL1231@users.noreply.github.com",
    "date": "Sat Jul 8 18:53:47 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Jul 8 12:53:47 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 1,
      "files": [
        "core/src/main/scala/kafka/log/remote/RemoteIndexCache.scala"
      ]
    },
    "message": "MINOR: Print startup time for RemoteIndexCache (#13970)\n\nReviewers: Satish Duggana <satishd@apache.org>, Divij Vaidya <diviv@amazon.com>\n\nCo-authored-by: d00791190 <dinglan6@huawei.com>",
    "epoch": 1688853227,
    "epoch_utc": null
  },
  {
    "commit": "7bdcb22cf6fde46efa0f129ca7e66d3015033d1a",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Sat Jul 8 12:52:22 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Jul 8 12:52:22 2023 +0200",
    "stats": {
      "files_changed": 6,
      "insertions": 215,
      "deletions": 67,
      "files": [
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/main/scala/kafka/log/remote/RemoteIndexCache.scala",
        "core/src/test/scala/unit/kafka/log/remote/RemoteIndexCacheTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala",
        "storage/api/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteLogSegmentId.java",
        "storage/api/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteLogSegmentMetadata.java"
      ]
    },
    "message": "MINOR: Refactor & cleanup for RemoteIndexCache (#13936)\n\n- Add new unit tests\n- Change the on-disk filename from <offset>_<uuid>_.<indexSuffix> to <offset>_<uuid>.<indexSuffix> i.e. remove trailing underscore after\n- Fix a small bug where we were parsing offset as Int when reading the file name from disk. Offset is long.\n- Perform input validation in RemoteLogSegmentMetadata.\n- Remove an extra loop in cleaner thread. Shutdownable thread already performs looping.\n\nReviewers: Jorge Esteban Quilcate Otoya <jorge.quilcate@aiven.io>, Satish Duggana <satishd@apache.org>",
    "epoch": 1688831542,
    "epoch_utc": null
  },
  {
    "commit": "14a97fafe719e5df7d4d8eb4e9c599f3e6a290c1",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Fri Jul 7 13:52:47 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 7 13:52:47 2023 -0700",
    "stats": {
      "files_changed": 5,
      "insertions": 104,
      "deletions": 1,
      "files": [
        "shell/src/main/java/org/apache/kafka/shell/command/FindCommandHandler.java",
        "shell/src/main/java/org/apache/kafka/shell/command/LsCommandHandler.java",
        "shell/src/main/java/org/apache/kafka/shell/state/MetadataShellPublisher.java",
        "shell/src/test/java/org/apache/kafka/shell/glob/GlobComponentTest.java",
        "shell/src/test/resources/log4j.properties"
      ]
    },
    "message": "MINOR: some minor shell fixes and improvements (#13940)\n\nMake the output of 'find' and 'ls' sorted alphabetically.\n\nAdd GlobComponentTest.java to test globbing.\n\nAdd shell/src/test/resources/log4j.properties so that shell JUnit tests show some output\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1688748767,
    "epoch_utc": null
  },
  {
    "commit": "9cde3a79107130a13a215bf65d6b2b8df93757aa",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Fri Jul 7 22:21:30 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 7 22:21:30 2023 +0200",
    "stats": {
      "files_changed": 10,
      "insertions": 761,
      "deletions": 36,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/ReplicatedGroupCoordinator.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorBuilder.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorResult.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
        ".../src/main/java/org/apache/kafka/coordinator/group/runtime/{Timer.java => CoordinatorTimer.java}",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/runtime/CoordinatorResultTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntimeTest.java"
      ]
    },
    "message": "KAFKA-14462; [21/N] Add CoordinatorTimer implementation in CoordinatorRuntime (#13961)\n\nThis patch adds EventBasedCoordinatorTimer and the CoordinatorTimer interface.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1688779290,
    "epoch_utc": null
  },
  {
    "commit": "fd5b300b573dc41b94c710a791f9ee6f568992d4",
    "author": "Aneel Kumar",
    "author_email": "aneelkkhatri@users.noreply.github.com",
    "date": "Fri Jul 7 18:50:35 2023 +0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 7 16:50:35 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/StreamsBuilder.java"
      ]
    },
    "message": "MINOR: Fix typo in javadoc (#13972)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1688766635,
    "epoch_utc": null
  },
  {
    "commit": "1223b79973c90240aff6cfda14135b22402e2338",
    "author": "andymg3",
    "author_email": "97484553+andymg3@users.noreply.github.com",
    "date": "Fri Jul 7 10:16:51 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 7 10:16:51 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 18,
      "deletions": 3,
      "files": [
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationZkWriter.java"
      ]
    },
    "message": "KAFKA-15149: Fix handling of new partitions in dual-write mode (#13968)\n\nFixes a bug where we don't send UMR and LISR requests in dual-write mode when new partitions are created. Prior to this patch, KRaftMigrationZkWriter was mutating the internal data-structures of TopicDelta which prevented MigrationPropagator from sending UMR and LISR for the changed partitions.\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1688735811,
    "epoch_utc": null
  },
  {
    "commit": "1d8b07ed6435568d3daf514c2d902107436d2ac8",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Fri Jul 7 16:27:10 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 7 10:27:10 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 46,
      "deletions": 6,
      "files": [
        "core/src/main/scala/kafka/coordinator/transaction/TransactionMarkerChannelManager.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionMarkerChannelManagerTest.scala"
      ]
    },
    "message": "KAFKA-15129;[7/N] Remove metrics in TransactionMarkerChannelManager when TransactionCoordinator shutdown (#13962)\n\nReviewers: Divij Vaidya <diviv@amazon.com>\n\nCo-authored-by: Deqi Hu <deqi.hu@shopee.com>",
    "epoch": 1688758030,
    "epoch_utc": null
  },
  {
    "commit": "574f394a3e711fe70bc979766112089085720c50",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Fri Jul 7 16:18:38 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jul 7 10:18:38 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 26,
      "deletions": 17,
      "files": [
        "core/src/main/scala/kafka/log/LogCleanerManager.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerTest.scala"
      ]
    },
    "message": "MINOR: Fix regression introduced in #13924 (#13958)\n\nFixes a regression introduced in PR #13924 by moving the map from static to a instance specific variable.\n---------\n\nCo-authored-by: Deqi Hu <deqi.hu@shopee.com>",
    "epoch": 1688757518,
    "epoch_utc": null
  },
  {
    "commit": "1b925e9ee753390d4633e8e5bd25a00af8d26cb9",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Thu Jul 6 10:22:28 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 6 13:22:28 2023 -0400",
    "stats": {
      "files_changed": 16,
      "insertions": 751,
      "deletions": 416,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/ClassLoaderFactory.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/DelegatingClassLoader.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginClassLoaderFactory.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginDesc.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginScanner.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginSource.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginUtils.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/Plugins.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/ReflectionScanner.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/entities/PluginInfo.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/DelegatingClassLoaderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginScannerTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginsTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/SynchronizationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/entities/PluginInfoTest.java",
        ".../src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorPluginsResourceTest.java"
      ]
    },
    "message": "KAFKA-15069: Refactor plugin scanning logic into ReflectionScanner (#13821)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1688649748,
    "epoch_utc": null
  },
  {
    "commit": "4149e31caddd859376f36f5e020c567b40b9ab9f",
    "author": "DL1231",
    "author_email": "53332773+DL1231@users.noreply.github.com",
    "date": "Thu Jul 6 22:59:13 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 6 16:59:13 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 3,
      "deletions": 3,
      "files": [
        "release_notes.py",
        "tests/kafkatest/tests/client/consumer_test.py",
        "tests/kafkatest/tests/connect/connect_test.py"
      ]
    },
    "message": "KAFKA-15153: Use Python 'is' instead of '==' to compare for None (#13964)\n\nReviewers: Divij Vaidya <diviv@amazon.com>\n\nCo-authored-by: d00791190 <dinglan6@huawei.com>",
    "epoch": 1688695153,
    "epoch_utc": null
  },
  {
    "commit": "a1a3ec0bcb4cc64ee1a4582b645d31de16e101cd",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Thu Jul 6 14:28:07 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 6 15:28:07 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectMetricsRegistry.java"
      ]
    },
    "message": "MINOR: Update connector status metric description to include 'stopped' as a potential value (#13967)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1688664487,
    "epoch_utc": null
  },
  {
    "commit": "bd1f02b2beca69a0937bb3df6f1e0ebcc3d9bfeb",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Thu Jul 6 14:56:05 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jul 6 14:56:05 2023 +0200",
    "stats": {
      "files_changed": 6,
      "insertions": 98,
      "deletions": 77,
      "files": [
        "checkstyle/import-control-server-common.xml",
        "core/src/test/scala/unit/kafka/coordinator/AbstractCoordinatorConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "core/src/test/scala/unit/kafka/utils/timer/MockTimer.scala",
        "server-common/src/test/java/org/apache/kafka/server/util/timer/MockTimer.java"
      ]
    },
    "message": "MINOR: Move MockTimer to server-common (#13954)\n\nThis patch rewrites MockTimer in Java and moves it from core to server-common. This continues the work started in https://github.com/apache/kafka/pull/13820.\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1688666165,
    "epoch_utc": null
  },
  {
    "commit": "4a61b48d3dca81e28b57f10af6052f36c50a05e3",
    "author": "Lianet Magrans",
    "author_email": "98415067+lianetm@users.noreply.github.com",
    "date": "Wed Jul 5 20:20:49 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 5 17:20:49 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 98,
      "deletions": 75,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetFetcher.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetFetcherUtils.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/SubscriptionState.java"
      ]
    },
    "message": "KAFKA-14966; [2/N] Extract OffsetFetcher reusable logic (#13898)\n\nThis is a follow up on the initial OffsetFetcher refactoring to extract reusable logic, needed for the new consumer implementation (initial refactoring merged with PR-13815).\n\nSimilar to the initial refactoring, this PR brings no changes to the existing logic, just extracting functions or pieces of logic.\n\nThere were no individual tests for the extracted functions, so no tests were migrated.\n\nReviewers: Jun Rao <junrao@gmail.com>",
    "epoch": 1688599249,
    "epoch_utc": null
  },
  {
    "commit": "98fbd8afc7f3ba806d742690536090936738f1e7",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Wed Jul 5 18:28:38 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jul 5 18:28:38 2023 +0200",
    "stats": {
      "files_changed": 10,
      "insertions": 965,
      "deletions": 78,
      "files": [
        "checkstyle/suppressions.xml",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/ReplicatedGroupCoordinator.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroup.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/Coordinator.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroupTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntimeTest.java"
      ]
    },
    "message": "KAFKA-14462; [20/N] Refresh subscription metadata on new metadata image (#13901)\n\nThis patch adds (1) the logic to propagate a new MetadataImage to the running coordinators; and (2) the logic to ensure that all the consumer groups subscribed to topics with changes will refresh their subscriptions metadata on the next heartbeat. In the mean time, it ensures that freshly loaded consumer groups also refresh their subscriptions metadata on the next heartbeat.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1688592518,
    "epoch_utc": null
  },
  {
    "commit": "701f924352da1225a881f0f78f19ddf51485030a",
    "author": "DL1231",
    "author_email": "53332773+DL1231@users.noreply.github.com",
    "date": "Tue Jul 4 22:02:39 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jul 4 16:02:39 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 65,
      "deletions": 104,
      "files": [
        "core/src/test/scala/integration/kafka/admin/TopicCommandIntegrationTest.scala"
      ]
    },
    "message": "KAFKA-15140: Use TestUtils methods and add logs for assertion failure at TopicCommandIntegrationTest (#13950)\n\nThis commit utilizes TestUtils methods to create a topic and adds logs when assertions fail.\n\nReviewers: Divij Vaidya <diviv@amazon.com>\n\n---------\n\nCo-authored-by: d00791190 <dinglan6@huawei.com>",
    "epoch": 1688518959,
    "epoch_utc": null
  },
  {
    "commit": "5c2492bca71200806ccf776ea31639a90290d43e",
    "author": "Bruno Cadonna",
    "author_email": "cadonna@apache.org",
    "date": "Mon Jul 3 16:35:34 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 3 16:35:34 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 91,
      "deletions": 15,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java"
      ]
    },
    "message": "KAFKA-10199: Consider tasks in state updater when computing offset sums (#13925)\n\nWith the state updater, the task manager needs also to look into the\ntasks owned by the state updater when computing the sum of offsets\nof the state. This sum of offsets is used by the high availability\nassignor to assign warm-up replicas.\nIf the task manager does not take into account tasks in the\nstate updater, a warm-up replica will never report back that\nthe state for the corresponding task has caught up. Consequently,\nthe warm-up replica will never be dismissed and probing rebalances\nwill never end.\n\nReviewers: Lucas Brutschy <lbrutschy@confluent.io>, Matthias J. Sax <matthias@confluent.io>, Walker Carlson <wcarlson@confluent.io>",
    "epoch": 1688412934,
    "epoch_utc": null
  },
  {
    "commit": "48eb8c90ef5f474e54694b74377d20f9e378174c",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Mon Jul 3 22:14:30 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 3 16:14:30 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 52,
      "deletions": 8,
      "files": [
        "core/src/main/scala/kafka/log/LogCleaner.scala",
        "core/src/main/scala/kafka/log/LogCleanerManager.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerTest.scala"
      ]
    },
    "message": "KAFKA-15129: [1/N] Remove metrics in LogCleanerManager when LogCleaner shutdown (#13924)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Christo Lolov <lolovc@amazon.com>\n\n---------\n\nCo-authored-by: Deqi Hu <deqi.hu@shopee.com>",
    "epoch": 1688433270,
    "epoch_utc": null
  },
  {
    "commit": "0ae1d228796e100f371cd1f20d826547b6231113",
    "author": "Jorge Esteban Quilcate Otoya",
    "author_email": "jorge.quilcate@aiven.io",
    "date": "Sun Jul 2 20:16:15 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 3 09:16:15 2023 +0800",
    "stats": {
      "files_changed": 3,
      "insertions": 11,
      "deletions": 5,
      "files": [
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/metadata/storage/TopicBasedRemoteLogMetadataManagerConfigTest.java"
      ]
    },
    "message": "KAFKA-15135: fix(storage): pass endpoint configurations as client common to TBRLMM (#13938)\n\nPass endpoint properties from RLM to TBRLMM and validate those are not ignored.\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1688339775,
    "epoch_utc": null
  },
  {
    "commit": "b2d647904c0d9e02509bc303ae42d880a90d4742",
    "author": "Gantigmaa Selenge",
    "author_email": "39860586+tinaselenge@users.noreply.github.com",
    "date": "Mon Jul 3 02:13:55 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jul 3 09:13:55 2023 +0800",
    "stats": {
      "files_changed": 5,
      "insertions": 452,
      "deletions": 178,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/internals/DeleteRecordsHandler.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/internals/DeleteRecordsHandlerTest.java",
        "core/src/test/scala/integration/kafka/api/PlaintextAdminIntegrationTest.scala"
      ]
    },
    "message": "KAFKA-8982: Add retry of fetching metadata to Admin.deleteRecords (#13760)\n\nUse AdminApiDriver class to refresh the metadata and retry the request that failed with retriable errors.\n\nReviewers: Luke Chen <showuon@gmail.com>, Divij Vaidya <diviv@amazon.com>, Mickael Maison <mmaison@redhat.com>, Dimitar Dimitrov <30328539+dimitarndimitrov@users.noreply.github.com>",
    "epoch": 1688361235,
    "epoch_utc": null
  },
  {
    "commit": "96e59d7bfd631366bc84d20a5dbf7ca98eeb5d09",
    "author": "vamossagar12",
    "author_email": "sagarmeansocean@gmail.com",
    "date": "Fri Jun 30 22:09:37 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jun 30 12:39:37 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java"
      ]
    },
    "message": "[MINOR] Correcting few WARN log lines in DistributedHerder#handleRebalance (#13939)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1688173777,
    "epoch_utc": null
  },
  {
    "commit": "43574beb972d47d696e0de077f453b36ce148026",
    "author": "Jorge Esteban Quilcate Otoya",
    "author_email": "jorge.quilcate@aiven.io",
    "date": "Fri Jun 30 07:37:48 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jun 30 14:37:48 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 11,
      "deletions": 5,
      "files": [
        "storage/api/src/main/java/org/apache/kafka/server/log/remote/storage/RemoteStorageManager.java"
      ]
    },
    "message": "KAFKA-15131: Improve RemoteStorageManager exception handling documentation (#13923)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Satish Duggana <satishd@apache.org>, Luke Chen <showuon@gmail.com>",
    "epoch": 1688121468,
    "epoch_utc": null
  },
  {
    "commit": "1f4cbc5d53259031123b6e9e6bb9a5bbe1e084e8",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Fri Jun 30 01:12:00 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jun 30 01:12:00 2023 -0700",
    "stats": {
      "files_changed": 11,
      "insertions": 47,
      "deletions": 79,
      "files": [
        "Jenkinsfile",
        "build.gradle",
        "clients/src/main/java/org/apache/kafka/common/utils/ChunkedBytesStream.java",
        "clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/OffsetSyncStoreTest.java",
        "core/src/test/scala/kafka/server/KafkaRequestHandlerTest.scala",
        "gradle/dependencies.gradle",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/CachingInMemoryKeyValueStoreTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/CachingPersistentWindowStoreTest.java",
        ".../test/java/org/apache/kafka/streams/state/internals/TimeOrderedCachingPersistentWindowStoreTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/TimeOrderedWindowStoreTest.java"
      ]
    },
    "message": "MINOR: Add JDK 20 CI build and remove some branch builds (#12948)\n\nIt's good for us to add support for Java 20 in preparation for Java 21 - the next LTS.\n\nGiven that Scala 2.12 support has been deprecated, a Scala 2.12 variant is not included.\n\nAlso remove some branch builds that add load to the CI, but have\nlow value: JDK 8 & Scala 2.13 (JDK 8 support has been deprecated),\nJDK 11 & Scala 2.12 (Scala 2.12 support has been deprecated) and\nJDK 17 & Scala 2.12 (Scala 2.12 support has been deprecated).\n\nA newer version of Mockito (4.9.0 -> 4.11.0) is required for Java 20 support, but we\nonly use it with Scala 2.13+ since it causes compilation errors with Scala 2.12. Similarly,\nwe upgrade easymock when the Java version is 16 or newer as it's incompatible\nwith powermock (which doesn't support Java 16 or newer).\n\nFiled KAFKA-15117 for a test that fails with Java 20 (SslTransportLayerTest.testValidEndpointIdentificationCN).\n\nFinally, fixed some lossy conversions that were added after #13582 was submitted.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1688098320,
    "epoch_utc": null
  },
  {
    "commit": "32bcdac6a187939efe879ed275ee23d3dfc6fe63",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Thu Jun 29 20:05:06 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 29 15:05:06 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 6,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/StateTracker.java"
      ]
    },
    "message": "MINOR: Replace synchronization with atomic update in Connect's StateTracker::changeState method (#13934)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1688079906,
    "epoch_utc": null
  },
  {
    "commit": "a81f35c1c8f9dc594aa585618c36f92ade0f86e2",
    "author": "Kirk True",
    "author_email": "kirk@kirktrue.pro",
    "date": "Thu Jun 29 11:21:15 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 29 11:21:15 2023 -0700",
    "stats": {
      "files_changed": 4,
      "insertions": 150,
      "deletions": 7,
      "files": [
        "checkstyle/suppressions.xml",
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/Sender.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/TransactionManager.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java"
      ]
    },
    "message": "KAFKA-14831: Illegal state errors should be fatal in transactional producer (#13591)\n\nPoison the transaction manager if we detect an illegal transition in the Sender thread. A ThreadLocal in is stored in TransactionManager so that the Sender can inform TransactionManager which thread it's using.\n\nReviewers: Daniel Urban <durban@cloudera.com>, Justine Olshan <jolshan@confluent.io>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1688048475,
    "epoch_utc": null
  },
  {
    "commit": "1ed8fa2ee09816b770930a713f9dc9c4e17b9690",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Thu Jun 29 11:15:32 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 29 14:15:32 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "docs/connect.html"
      ]
    },
    "message": "MINOR: Update anchor link for exactly-once source connectors (#13933)\n\nReviewers: Josep Prat <josep.prat@aiven.io>",
    "epoch": 1688048132,
    "epoch_utc": null
  },
  {
    "commit": "586f89cb1c7a43d597da094c3aff1fdd1ee11a5d",
    "author": "Proven Provenzano",
    "author_email": "93720617+pprovenzano@users.noreply.github.com",
    "date": "Thu Jun 29 14:11:12 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 29 11:11:12 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "core/src/main/scala/kafka/tools/StorageTool.scala"
      ]
    },
    "message": "KAFKA-15114: Update StorageTool help for creating SCRAM credentials to specify name instead of user. (#13904)\n\nThe choice of using name vs. user as a parameter is because internally the record uses name, all\ntests using the StorageTool use name as a parameter, KafkaPrincipals are created with name and\nbecause creating SCRAM credentials is done with --entity-name\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1688058672,
    "epoch_utc": null
  },
  {
    "commit": "30b087ead967b28d459945fe90c80545bf189d1f",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Thu Jun 29 16:23:23 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 29 11:23:23 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 47,
      "deletions": 2,
      "files": [
        "docs/connect.html"
      ]
    },
    "message": "KAFKA-14930: Document the new PATCH and DELETE offsets REST APIs for Connect (#13915)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1688066603,
    "epoch_utc": null
  },
  {
    "commit": "12be344fdd3b20f338ccab87933b89049ce202a4",
    "author": "Walker Carlson",
    "author_email": "18128741+wcarlson5@users.noreply.github.com",
    "date": "Thu Jun 29 07:14:04 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 29 14:14:04 2023 +0200",
    "stats": {
      "files_changed": 12,
      "insertions": 455,
      "deletions": 40,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/Joined.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamGlobalKTableJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamKTableJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamKTableJoinProcessor.java",
        ".../src/main/java/org/apache/kafka/streams/state/internals/InMemoryTimeOrderedKeyValueChangeBuffer.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBTimeOrderedKeyValueBuffer.java",
        ".../main/java/org/apache/kafka/streams/state/internals/RocksDBTimeOrderedKeyValueBytesStoreSupplier.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/TimeOrderedKeyValueBuffer.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/StreamTableJoinWithGraceIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKTableJoinTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBTimeOrderedKeyValueBufferTest.java"
      ]
    },
    "message": "KAFKA-14936: Add Grace period logic to Stream Table Join (2/N) (#13855)\n\nThis PR adds the interface for grace period to the Joined object as well as uses the buffer. The majority of it is tests and moving some of the existing join logic.\n\nReviewers: Victoria Xia <victoria.xia@confluent.io>, Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1688033644,
    "epoch_utc": null
  },
  {
    "commit": "005416879e4c180e8e9dea94a08e57521ac8cf1d",
    "author": "Bo Gao",
    "author_email": "bo.gao@databricks.com",
    "date": "Thu Jun 29 01:13:21 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 29 10:13:21 2023 +0200",
    "stats": {
      "files_changed": 16,
      "insertions": 81,
      "deletions": 11,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/admin/AdminClientConfig.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/ConsumerConfigTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/ProducerConfigTest.java",
        "connect/mirror-client/src/main/java/org/apache/kafka/connect/mirror/MirrorClientConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorMakerConfig.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorConfigTest.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorMakerConfigTest.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedConfig.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedConfigTest.java",
        "core/src/main/scala/kafka/admin/BrokerApiVersionsCommand.scala",
        "docs/security.html",
        "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java",
        "streams/src/test/java/org/apache/kafka/streams/StreamsConfigTest.java"
      ]
    },
    "message": "KAFKA-15053: Use case insensitive validator for security.protocol config (#13831)\n\nFixed a regression described in KAFKA-15053 that security.protocol only allows uppercase values like PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL. With this fix, both lower case and upper case values will be supported (e.g. PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL, plaintext, ssl, sasl_plaintext, sasl_ssl)\n\nReviewers: Chris Egerton <chrise@aiven.io>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1688012001,
    "epoch_utc": null
  },
  {
    "commit": "482299c4e2c97315feea3db5d6bf0e5c2c8b8cc7",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Thu Jun 29 08:12:53 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 29 08:12:53 2023 +0200",
    "stats": {
      "files_changed": 9,
      "insertions": 960,
      "deletions": 131,
      "files": [
        "core/src/main/scala/kafka/coordinator/group/CoordinatorLoaderImpl.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/CoordinatorLoaderImplTest.scala",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/RecordSerde.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/RecordSerializer.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorLoader.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/RecordSerdeTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/RecordSerializerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntimeTest.java"
      ]
    },
    "message": "KAFKA-14462; [19/N] Add CoordinatorLoader implementation (#13880)\n\nThis patch adds a coordinator loader implementation.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1688037173,
    "epoch_utc": null
  },
  {
    "commit": "ee88a3d1b9e8db491e944570afdf7da66b19f4a6",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Wed Jun 28 15:55:50 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 28 15:55:50 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/utils/Utils.java"
      ]
    },
    "message": "MINOR; Failed atomic file move should be logged at WARN (#13917)\n\nWhen Kafka fails to perform an atomic file move the error is getting swallowed. Kafka should log these cases at least at WARN level.\n\nReviewers: Ron Dagostino <rndgstn@gmail.com>, Kirk True <kirk@kirktrue.pro>",
    "epoch": 1687978550,
    "epoch_utc": null
  },
  {
    "commit": "3a246b1abab0cfa8050546f54c987af2ec6cdd4e",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Wed Jun 28 14:21:11 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 28 14:21:11 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 57,
      "deletions": 2,
      "files": [
        "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
        "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientSnapshotTest.java"
      ]
    },
    "message": "KAFKA-15078; KRaft leader replys with snapshot for offset 0 (#13845)\n\nIf the follower has an empty log, fetches with offset 0, it is more\nefficient for the leader to reply with a snapshot id (redirect to\nFETCH_SNAPSHOT) than for the follower to continue fetching from the log\nsegments.\n\nReviewers: David Arthur <mumrah@gmail.com>, dengziming <dengziming1993@gmail.com>",
    "epoch": 1687972871,
    "epoch_utc": null
  },
  {
    "commit": "2f71708955b293658cec3b27e9a5588d39c38d7e",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Wed Jun 28 09:00:37 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 28 09:00:37 2023 -0700",
    "stats": {
      "files_changed": 5,
      "insertions": 240,
      "deletions": 77,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/AddPartitionsToTxnRequest.java",
        "core/src/main/scala/kafka/network/RequestChannel.scala",
        "core/src/main/scala/kafka/server/AddPartitionsToTxnManager.scala",
        "core/src/test/scala/unit/kafka/server/AddPartitionsToTxnManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala"
      ]
    },
    "message": "KAFKA-15028: AddPartitionsToTxnManager metrics (#13798)\n\nAdding the following metrics as per kip-890:\n\nVerificationTimeMs \u2013 number of milliseconds from adding partition info to the manager to the time the response is sent. This will include the round trip to the transaction coordinator if it is called. This will also account for verifications that fail before the coordinator is called.\n\nVerificationFailureRate \u2013 rate of verifications that returned in failure either from the AddPartitionsToTxn response or through errors in the manager.\n\nAddPartitionsToTxnVerification metrics \u2013 separating the verification request metrics from the typical add partitions ones similar to how fetch replication and fetch consumer metrics are separated.\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1687953637,
    "epoch_utc": null
  },
  {
    "commit": "58fc264410531e8d47685580bf938e8067748740",
    "author": "prasanthV",
    "author_email": "40450906+PrasanthV454@users.noreply.github.com",
    "date": "Wed Jun 28 21:16:22 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 28 17:46:22 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 0,
      "deletions": 1,
      "files": [
        "tools/src/test/java/org/apache/kafka/tools/ToolsTestUtils.java"
      ]
    },
    "message": "MINOR: Fix ToolsTestUtils by removing incorrect closure of Std Stream (#13922)\n\nReviewers: Lucas Bradstreet <lucas@confluent.io>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1687997782,
    "epoch_utc": null
  },
  {
    "commit": "e71f68d6c91394db30bb1219ea882232f7be194d",
    "author": "minjian.cai",
    "author_email": "cmjgithub@163.com",
    "date": "Wed Jun 28 22:47:42 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 28 16:47:42 2023 +0200",
    "stats": {
      "files_changed": 38,
      "insertions": 54,
      "deletions": 54,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/admin/Admin.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/ConfigEntry.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/NoOffsetForPartitionException.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/NetworkClientDelegate.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetFetcher.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/common/requests/FetchSnapshotResponse.java",
        "clients/src/main/java/org/apache/kafka/common/security/auth/SaslExtensions.java",
        "clients/src/main/java/org/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerValidationUtils.java",
        "clients/src/main/java/org/apache/kafka/common/utils/ConfigUtils.java",
        "clients/src/main/resources/common/message/AlterPartitionResponse.json",
        "clients/src/main/resources/common/message/ConsumerGroupHeartbeatRequest.json",
        "clients/src/main/resources/common/message/CreateTopicsResponse.json",
        "clients/src/main/resources/common/message/FetchRequest.json",
        "clients/src/main/resources/common/message/ListOffsetsRequest.json",
        "clients/src/main/resources/common/message/ListOffsetsResponse.json",
        "clients/src/main/resources/common/message/MetadataRequest.json",
        "clients/src/main/resources/common/message/ProduceRequest.json",
        "clients/src/main/resources/common/message/TxnOffsetCommitRequest.json",
        "clients/src/test/java/org/apache/kafka/clients/NetworkClientTest.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/DeleteConsumerGroupOffsetsResultTest.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/internals/PartitionLeaderStrategyTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinatorTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetcherTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/MockProducerTest.java",
        "clients/src/test/java/org/apache/kafka/common/feature/FeaturesTest.java",
        "clients/src/test/java/org/apache/kafka/common/metrics/MetricsTest.java",
        "clients/src/test/java/org/apache/kafka/common/network/SslTransportTls12Tls13Test.java",
        "clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java",
        "clients/src/test/java/org/apache/kafka/common/security/oauthbearer/internals/OAuthBearerClientInitialResponseTest.java",
        "clients/src/test/java/org/apache/kafka/common/security/oauthbearer/internals/OAuthBearerSaslServerTest.java",
        "clients/src/test/java/org/apache/kafka/common/security/plain/internals/PlainSaslServerTest.java",
        "clients/src/test/java/org/apache/kafka/common/security/scram/internals/ScramSaslServerTest.java",
        "clients/src/test/java/org/apache/kafka/test/MetricsBench.java"
      ]
    },
    "message": "MINOR: fix typos for client (#13884)\n\nReviewers: Luke Chen <showuon@gmail.com>, Divij Vaidya <diviv@amazon.com>, Kirk True <ktrue@confluent.io>",
    "epoch": 1688003262,
    "epoch_utc": null
  },
  {
    "commit": "12005484af625a65a8068e021bbf448f7aa59d23",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Wed Jun 28 22:45:26 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 28 22:45:26 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 2,
      "files": [
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala"
      ]
    },
    "message": "MINOR: fix flaky ZkMigrationIntegrationTest.testNewAndChangedTopicsInDualWrite (#13902)\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1688003126,
    "epoch_utc": null
  },
  {
    "commit": "f32ebeab17ce574660669873402a7f40927d0492",
    "author": "Manyanda Chitimbo",
    "author_email": "manyanda.chitimbo@gmail.com",
    "date": "Tue Jun 27 21:17:22 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 27 21:17:22 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "tests/setup.py"
      ]
    },
    "message": "MINOR: Bump requests (python package) from 2.24.0 to 2.31.0 in /tests (#13903)\n\nUpdate \"requests\" lib used in system tests to version \"2.31.0\" to fix CVE-2023-32681: Unintended leak of Proxy-Authorization header in requests\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1687911442,
    "epoch_utc": null
  },
  {
    "commit": "fc7d912e8bb856500fa27b7455e6eff098c08196",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Tue Jun 27 11:49:20 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 27 11:49:20 2023 -0400",
    "stats": {
      "files_changed": 4,
      "insertions": 59,
      "deletions": 19,
      "files": [
        "metadata/src/main/java/org/apache/kafka/controller/PartitionChangeBuilder.java",
        "metadata/src/main/java/org/apache/kafka/controller/ReplicationControlManager.java",
        "metadata/src/test/java/org/apache/kafka/controller/PartitionChangeBuilderTest.java",
        "server-common/src/main/java/org/apache/kafka/server/common/MetadataVersion.java"
      ]
    },
    "message": "KAFKA-15109 Ensure the leader epoch bump occurs for older MetadataVersions (#13910)\n\nThis fixes a regression introduced by the previous KAFKA-15109 commit (d0457f7360 on trunk).\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>, Jos\u00e9 Armando Garc\u00eda Sancio <jsancio@apache.org>",
    "epoch": 1687877360,
    "epoch_utc": null
  },
  {
    "commit": "c5889fceddb9a0174452ae60a57c8ff3f087a6a4",
    "author": "Manyanda Chitimbo",
    "author_email": "manyanda.chitimbo@gmail.com",
    "date": "Sat Jun 24 06:32:21 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Jun 24 12:32:21 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 20,
      "deletions": 4,
      "files": [
        "clients/src/main/java/org/apache/kafka/server/policy/CreateTopicPolicy.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinatorTest.java"
      ]
    },
    "message": "MINOR: Split ConsumerCoordinator#testCommitOffsetMetadata onto two test cases testing commitSync and commitAsync  (#13665)\n\nSplit ConsumerCoordinator#testCommitOffsetMetadata onto two test cases testing commitSync and commitAsync\n\nReviewers:  Luke Chen <showuon@gmail.com>",
    "epoch": 1687599141,
    "epoch_utc": null
  },
  {
    "commit": "397868412612bbb908e0d075b1d4cb5ede20d7ac",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Fri Jun 23 14:10:18 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jun 23 14:10:18 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 4,
      "deletions": 2,
      "files": [
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/ErrorHandlingTaskTest.java"
      ]
    },
    "message": "MINOR: Silence error logs for faulty plugins in integration tests (#13912)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1687540218,
    "epoch_utc": null
  },
  {
    "commit": "6e729869496e36990ca76ffeabfaec3f389fb059",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Fri Jun 23 18:27:46 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jun 23 13:27:46 2023 -0400",
    "stats": {
      "files_changed": 17,
      "insertions": 1113,
      "deletions": 267,
      "files": [
        "checkstyle/suppressions.xml",
        "connect/api/src/main/java/org/apache/kafka/connect/sink/SinkConnector.java",
        "connect/api/src/main/java/org/apache/kafka/connect/source/SourceConnector.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Herder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Worker.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/entities/ConnectorOffsets.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResource.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/SinkUtils.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/OffsetsApiIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectCluster.java"
      ]
    },
    "message": "KAFKA-14784: Connect offset reset REST API (#13818)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1687555666,
    "epoch_utc": null
  },
  {
    "commit": "1dbcb7da9e3625ec2078a82f84542a3127730fef",
    "author": "Jeff Kim",
    "author_email": "kimkb2011@gmail.com",
    "date": "Thu Jun 22 13:19:39 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 22 10:19:39 2023 -0700",
    "stats": {
      "files_changed": 12,
      "insertions": 414,
      "deletions": 146,
      "files": [
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/SenderTest.java",
        "core/src/main/scala/kafka/coordinator/transaction/ProducerIdManager.scala",
        "core/src/main/scala/kafka/coordinator/transaction/TransactionCoordinator.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/test/scala/integration/kafka/coordinator/transaction/ProducerIdsIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/ProducerIdManagerTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionCoordinatorConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionCoordinatorTest.scala",
        "core/src/test/scala/unit/kafka/server/AddPartitionsToTxnRequestServerTest.scala",
        "server-common/src/main/java/org/apache/kafka/server/common/ProducerIdsBlock.java",
        "server-common/src/test/java/org/apache/kafka/server/common/ProducerIdsBlockTest.java"
      ]
    },
    "message": "KAFKA-14694: RPCProducerIdManager should not wait on new block (#13267)\n\nRPCProducerIdManager initiates an async request to the controller to grab a block of producer IDs and then blocks waiting for a response from the controller.\n\nThis is done in the request handler threads while holding a global lock. This means that if many producers are requesting producer IDs and the controller is slow to respond, many threads can get stuck waiting for the lock.\n\nThis patch aims to:\n* resolve the deadlock scenario mentioned above by not waiting for a new block and returning an error immediately\n* remove synchronization usages in RpcProducerIdManager.generateProducerId()\n* handle errors returned from generateProducerId() so that KafkaApis does not log unexpected errors\n* confirm producers backoff before retrying\n* introduce backoff if manager fails to process AllocateProducerIdsResponse\n\nReviewers: Artem Livshits <alivshits@confluent.io>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1687450779,
    "epoch_utc": null
  },
  {
    "commit": "9c8aaa2c35aabb09bd2d5c3d28d1b4587818b419",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Thu Jun 22 08:05:55 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 22 08:05:55 2023 -0700",
    "stats": {
      "files_changed": 19,
      "insertions": 47,
      "deletions": 46,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/record/CompressionType.java",
        "clients/src/main/java/org/apache/kafka/common/record/DefaultRecord.java",
        "clients/src/main/java/org/apache/kafka/common/record/DefaultRecordBatch.java",
        "clients/src/main/java/org/apache/kafka/common/record/DefaultRecordsSend.java",
        "clients/src/main/java/org/apache/kafka/common/record/FileRecords.java",
        "clients/src/main/java/org/apache/kafka/common/record/LazyDownConversionRecordsSend.java",
        "clients/src/main/java/org/apache/kafka/common/record/LegacyRecord.java",
        "clients/src/main/java/org/apache/kafka/common/record/MemoryRecords.java",
        "clients/src/main/java/org/apache/kafka/common/record/MultiRecordsSend.java",
        "clients/src/main/java/org/apache/kafka/common/record/RecordsSend.java",
        "clients/src/main/java/org/apache/kafka/common/record/TransferableRecords.java",
        "clients/src/main/java/org/apache/kafka/common/record/UnalignedFileRecords.java",
        "clients/src/main/java/org/apache/kafka/common/record/UnalignedMemoryRecords.java",
        "clients/src/main/java/org/apache/kafka/common/serialization/ShortDeserializer.java",
        "clients/src/main/java/org/apache/kafka/common/utils/Utils.java",
        "clients/src/test/java/org/apache/kafka/common/compress/KafkaLZ4Test.java",
        "clients/src/test/java/org/apache/kafka/common/metrics/stats/MeterTest.java",
        "clients/src/test/java/org/apache/kafka/common/record/FileRecordsTest.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskExecutor.java"
      ]
    },
    "message": "MINOR: Fix lossy conversions flagged by Java 20 (#13582)\n\nAn example of the warning:\n> warning: [lossy-conversions] implicit cast from long to int in compound assignment is possibly lossy\n\nThere should be no change in behavior as part of these changes - runtime logic ensured\nwe didn't run into issues due to the lossy conversions.\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1687431955,
    "epoch_utc": null
  },
  {
    "commit": "1bf703999999123c4ac7901ee45e5523be2236f8",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Thu Jun 22 09:34:49 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 22 09:34:49 2023 -0400",
    "stats": {
      "files_changed": 5,
      "insertions": 59,
      "deletions": 10,
      "files": [
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaConfigTest.scala",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/MigrationDriverState.java"
      ]
    },
    "message": "KAFKA-15098 Allow authorizers to be configured in ZK migration (#13895)\n\nReviewers: Ron Dagostino <rdagostino@confluent.io>",
    "epoch": 1687437289,
    "epoch_utc": null
  },
  {
    "commit": "a81486e4f822b646039586ed0f70f9d75ec3ae36",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Thu Jun 22 09:06:10 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 22 09:06:10 2023 +0200",
    "stats": {
      "files_changed": 14,
      "insertions": 1600,
      "deletions": 7,
      "files": [
        "checkstyle/import-control.xml",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorConfig.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinatorService.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/ReplicatedGroupCoordinator.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/Coordinator.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorBuilder.java",
        ".../src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorBuilderSupplier.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorLoader.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorConfigTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupCoordinatorServiceTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/ReplicatedGroupCoordinatorTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/TestUtil.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntimeTest.java"
      ]
    },
    "message": "KAFKA-14462; [18/N] Add GroupCoordinatorService (#13812)\n\nThis patch introduces the GroupCoordinatorService. This is the new (incomplete) implementation of the group coordinator based on the coordinator runtime introduced in https://github.com/apache/kafka/pull/13795.\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1687435570,
    "epoch_utc": null
  },
  {
    "commit": "3c059133d3008d87f018f2efa4af27027fd5d18e",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Wed Jun 21 21:44:14 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 21 21:44:14 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 4,
      "deletions": 1,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/ConnectUtils.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/ConnectUtilsTest.java"
      ]
    },
    "message": "MINOR: Fix generated client ids for Connect (#13896)\n\n\nReviewers: Chris Egerton <fearthecellos@gmail.com>",
    "epoch": 1687394654,
    "epoch_utc": null
  },
  {
    "commit": "3b72b0abb1c38828555a33096a7431616be7b8c4",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Wed Jun 21 14:51:54 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 21 14:51:54 2023 -0400",
    "stats": {
      "files_changed": 4,
      "insertions": 128,
      "deletions": 76,
      "files": [
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/TestUtils.java",
        ".../src/test/java/org/apache/kafka/connect/mirror/integration/MirrorConnectorsIntegrationBaseTest.java",
        ".../java/org/apache/kafka/connect/mirror/integration/MirrorConnectorsIntegrationTransactionsTest.java",
        ".../apache/kafka/connect/mirror/integration/MirrorConnectorsWithCustomForwardingAdminIntegrationTest.java"
      ]
    },
    "message": "MINOR: Optimize runtime of MM2 integration tests by batching transactions (#13816)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1687369914,
    "epoch_utc": null
  },
  {
    "commit": "d0457f7360e2e3d34800fbd41de429afbaabd101",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Wed Jun 21 13:09:05 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 21 13:09:05 2023 -0400",
    "stats": {
      "files_changed": 3,
      "insertions": 58,
      "deletions": 10,
      "files": [
        "metadata/src/main/java/org/apache/kafka/controller/PartitionChangeBuilder.java",
        "metadata/src/main/java/org/apache/kafka/controller/ReplicationControlManager.java",
        "metadata/src/test/java/org/apache/kafka/controller/PartitionChangeBuilderTest.java"
      ]
    },
    "message": "KAFKA-15109 Don't skip leader epoch bump while in migration mode (#13890)\n\nWhile in migration mode, the KRaft controller must always bump the leader epoch when shrinking an ISR.\nThis is required to maintain compatibility with the ZK brokers. Without the epoch bump, the ZK brokers\nwill ignore the partition state change present in the LeaderAndIsrRequest since it would not contain a new\nleader epoch.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1687363745,
    "epoch_utc": null
  },
  {
    "commit": "88e784f7c6fa7df91965076d8cb0e0e691719cdc",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Wed Jun 21 18:22:49 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 21 18:22:49 2023 +0200",
    "stats": {
      "files_changed": 6,
      "insertions": 486,
      "deletions": 160,
      "files": [
        "LICENSE-binary",
        "build.gradle",
        "core/src/main/scala/kafka/log/remote/RemoteIndexCache.scala",
        "core/src/test/scala/unit/kafka/log/remote/RemoteIndexCacheTest.scala",
        "gradle/dependencies.gradle",
        "server-common/src/main/java/org/apache/kafka/server/util/ShutdownableThread.java"
      ]
    },
    "message": "KAFKA-15084: Remove lock contention from RemoteIndexCache (#13850)\n\nUse thread safe Caffeine to cache indexes fetched from RemoteTier locally. This PR removes a lock contention that led to higher fetch latencies as the IO threads spent time unnecessarily waiting on global cache lock while a single thread fetches the index from remote tier. See PR #13850 for details and rejected alternatives.\n\nReviewers: Luke Chen <showuon@gmail.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1687382569,
    "epoch_utc": null
  },
  {
    "commit": "d5dafe22fed244d25cca8839c41221fab87d367e",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Wed Jun 21 21:54:32 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 21 15:54:32 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 116,
      "deletions": 14,
      "files": [
        "core/src/main/scala/kafka/log/LogCleaner.scala",
        "core/src/main/scala/kafka/log/LogSegment.scala"
      ]
    },
    "message": "MINOR:Fill missing parameter annotations for LogCleaner methods (#13839)\n\n\nReviewers: Josep Prat <josep.prat@aiven.io>\n---------\n\nCo-authored-by: Deqi Hu <deqi.hu@shopee.com>",
    "epoch": 1687395272,
    "epoch_utc": null
  },
  {
    "commit": "16bb8cbb8c5f194b8bfeb1f83f68d9fec74f3523",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Wed Jun 21 09:52:49 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 21 09:52:49 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        ".github/workflows/stale.yml"
      ]
    },
    "message": "MINOR: Increase Github API operations for stale PR check (#13894)\n\nReviewers: Josep Prat <josep.prat@aiven.io>",
    "epoch": 1687351969,
    "epoch_utc": null
  },
  {
    "commit": "ba5e1acdfb86c8325ed00b69fb6605190c1a9b1c",
    "author": "minjian.cai",
    "author_email": "cmjgithub@163.com",
    "date": "Wed Jun 21 21:09:15 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 21 15:09:15 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 9,
      "deletions": 9,
      "files": [
        "metadata/src/main/java/org/apache/kafka/controller/ReplicationControlManager.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationZkWriter.java",
        "metadata/src/test/java/org/apache/kafka/controller/FeatureControlManagerTest.java"
      ]
    },
    "message": "MINOR: fix typos for metadata (#13889)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Deqi Hu <deqi.hu@shopee.com>",
    "epoch": 1687392555,
    "epoch_utc": null
  },
  {
    "commit": "9b383a1e9e0b8dc82a1ffa8d884bd9f2954e67f1",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Wed Jun 21 20:49:13 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 21 14:49:13 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "TROGDOR.md"
      ]
    },
    "message": "MINOR: Fix documentation for ConsumeBench metrics in Trogdor  (#13877)\n\nCo-authored-by: Deqi Hu <deqi.hu@shopee.com>\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1687391353,
    "epoch_utc": null
  },
  {
    "commit": "72503904e8e594a20ad7efe60f223390fb312335",
    "author": "Joseph (Ting-Chou) Lin",
    "author_email": "tlin@linkedin.com",
    "date": "Wed Jun 21 01:15:50 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 21 10:15:50 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 7,
      "deletions": 3,
      "files": [
        "core/src/main/scala/kafka/cluster/Partition.scala"
      ]
    },
    "message": "MINOR: Log lastCaughtUpTime on ISR shrinkage (#13187)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1687320950,
    "epoch_utc": null
  },
  {
    "commit": "49c1697ab08189c9707d04a6078aa9d5b69ed3aa",
    "author": "minjian.cai",
    "author_email": "cmjgithub@163.com",
    "date": "Wed Jun 21 15:57:43 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 21 09:57:43 2023 +0200",
    "stats": {
      "files_changed": 6,
      "insertions": 19,
      "deletions": 19,
      "files": [
        "docs/design.html",
        "docs/ops.html",
        "docs/security.html",
        "docs/streams/developer-guide/dsl-api.html",
        "docs/streams/developer-guide/dsl-topology-naming.html",
        "docs/streams/upgrade-guide.html"
      ]
    },
    "message": "MINOR: fix typos for doc (#13883)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1687373863,
    "epoch_utc": null
  },
  {
    "commit": "dd25753aa2d7d54180d46c977f46d0ed20ca3feb",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Wed Jun 21 09:55:03 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 21 09:55:03 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 526,
      "deletions": 476,
      "files": [
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala"
      ]
    },
    "message": "MINOR: Close ReplicaManager correctly in ReplicaManagerTest (#13868)\n\nFixes thread leaks by closing the ReplicaManager using try/finally at the end of each test. The leaks were leading to flaky test failures in ReplicaManagerTest.\n\nReviewers: Justine Olshan <jolshan@confluent.io>, David Jacot <djacot@confluent.io>",
    "epoch": 1687352103,
    "epoch_utc": null
  },
  {
    "commit": "474053d2973b8790e50ccfe1bb0699694b0de1c7",
    "author": "minjian.cai",
    "author_email": "cmjgithub@163.com",
    "date": "Wed Jun 21 05:03:42 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 20 23:03:42 2023 +0200",
    "stats": {
      "files_changed": 26,
      "insertions": 42,
      "deletions": 42,
      "files": [
        "streams/quickstart/java/src/main/resources/archetype-resources/src/main/java/WordCount.java",
        "streams/src/main/java/org/apache/kafka/streams/LagInfo.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/KStream.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/Produced.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/Repartitioned.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/TableSourceNode.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/ForwardingDisabledProcessorContext.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorRecordContext.java",
        "streams/src/main/java/org/apache/kafka/streams/state/Stores.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/SessionKeySchema.java",
        "streams/src/test/java/org/apache/kafka/streams/StreamsConfigTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/JoinStoreIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/KTableKTableForeignKeyJoinIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/RepartitionTopicNamingTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/TransformerSupplierAdapterTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/graph/StreamsGraphTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/CopartitionedTopicsEnforcerTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TopicPartitionMetadataTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/BufferValueTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/CompositeReadOnlySessionStoreTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/FilteredCacheIteratorTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/SessionKeySchemaTest.java",
        "streams/src/test/java/org/apache/kafka/test/MockRestoreConsumer.java"
      ]
    },
    "message": "MINOR: fix typos for streams (#13888)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Manyanda Chitimbo <manyanda.chitimbo@gmail.com>",
    "epoch": 1687334622,
    "epoch_utc": null
  },
  {
    "commit": "39a47c89990eb3b8f419e0e8ac8343663c8d35a7",
    "author": "minjian.cai",
    "author_email": "cmjgithub@163.com",
    "date": "Wed Jun 21 04:57:26 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 20 22:57:26 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 8,
      "deletions": 8,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/generic/GenericGroup.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntimeTest.java"
      ]
    },
    "message": "MINOR: fix typos for group coordinator (#13886)\n\nReviewers: Manyanda Chitimbo <manyanda.chitimbo@gmail.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1687334246,
    "epoch_utc": null
  },
  {
    "commit": "af678a563d9b89e8bd87f77d400b693bd47829c4",
    "author": "minjian.cai",
    "author_email": "cmjgithub@163.com",
    "date": "Wed Jun 21 04:56:01 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 20 22:56:01 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 10,
      "deletions": 10,
      "files": [
        "server-common/src/main/java/org/apache/kafka/server/common/MetadataVersion.java",
        "server-common/src/test/java/org/apache/kafka/queue/KafkaEventQueueTest.java",
        "server-common/src/test/java/org/apache/kafka/timeline/BaseHashTableTest.java"
      ]
    },
    "message": "MINOR: fix typos for server common (#13887)\n\nReviewers: Manyanda Chitimbo <manyanda.chitimbo@gmail.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1687334161,
    "epoch_utc": null
  },
  {
    "commit": "3d97743c678bc9df534bd0c84b9b60eda20c3a7c",
    "author": "minjian.cai",
    "author_email": "cmjgithub@163.com",
    "date": "Wed Jun 21 04:52:39 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 20 22:52:39 2023 +0200",
    "stats": {
      "files_changed": 29,
      "insertions": 55,
      "deletions": 55,
      "files": [
        "core/src/main/scala/kafka/admin/TopicCommand.scala",
        "core/src/main/scala/kafka/controller/ControllerChannelManager.scala",
        "core/src/main/scala/kafka/raft/RaftManager.scala",
        "core/src/main/scala/kafka/server/ForwardingManager.scala",
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/main/scala/kafka/zk/KafkaZkClient.scala",
        "core/src/test/scala/integration/kafka/api/PlaintextConsumerTest.scala",
        "core/src/test/scala/integration/kafka/server/DynamicBrokerReconfigurationTest.scala",
        "core/src/test/scala/integration/kafka/server/RaftClusterSnapshotTest.scala",
        "core/src/test/scala/other/kafka/TestLinearWriteSpeed.scala",
        "core/src/test/scala/unit/kafka/admin/ConsumerGroupServiceTest.scala",
        "core/src/test/scala/unit/kafka/admin/ReassignPartitionsUnitTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionLockTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupMetadataTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionMarkerRequestCompletionHandlerTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionStateManagerTest.scala",
        "core/src/test/scala/unit/kafka/integration/MinIsrConfigTest.scala",
        "core/src/test/scala/unit/kafka/log/OffsetMapTest.scala",
        "core/src/test/scala/unit/kafka/log/TimeIndexTest.scala",
        "core/src/test/scala/unit/kafka/security/authorizer/AuthorizerTest.scala",
        "core/src/test/scala/unit/kafka/server/AlterUserScramCredentialsRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/CreateTopicsRequestWithPolicyTest.scala",
        "core/src/test/scala/unit/kafka/server/ZkAdminManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/checkpoints/InMemoryLeaderEpochCheckpointTest.scala",
        "core/src/test/scala/unit/kafka/server/epoch/LeaderEpochFileCacheTest.scala",
        "core/src/test/scala/unit/kafka/zk/KafkaZkClientTest.scala",
        "core/src/test/scala/unit/kafka/zk/migration/ZkConfigMigrationClientTest.scala",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/generic/GenericGroupTest.java"
      ]
    },
    "message": "MINOR: Fix some typos for core (#13882)\n\nReviewers:  Divij Vaidya <diviv@amazon.com>",
    "epoch": 1687333959,
    "epoch_utc": null
  },
  {
    "commit": "d751c13950770ab2fee3087c7de8f8e7416b4fd8",
    "author": "minjian.cai",
    "author_email": "cmjgithub@163.com",
    "date": "Wed Jun 21 04:16:16 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 20 16:16:16 2023 -0400",
    "stats": {
      "files_changed": 11,
      "insertions": 26,
      "deletions": 26,
      "files": [
        "connect/mirror-client/src/main/java/org/apache/kafka/connect/mirror/Checkpoint.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorMakerConfigTest.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/TopicCreationConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerTransactionContext.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/ErrorHandlingIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/ErrorHandlingTaskTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginDescTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginUtilsTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/ConnectRestServerTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaConfigBackingStoreTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedKafkaCluster.java"
      ]
    },
    "message": "MINOR: Fix typos for connect (#13885)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1687331776,
    "epoch_utc": null
  },
  {
    "commit": "dfaae317b82035323ba9c693b3ad7f02a6a58395",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Tue Jun 20 10:29:23 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 20 10:29:23 2023 -0700",
    "stats": {
      "files_changed": 6,
      "insertions": 11,
      "deletions": 10,
      "files": [
        "LICENSE-binary",
        "bin/kafka-run-class.sh",
        "bin/windows/kafka-run-class.bat",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "gradle.properties",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "MINOR: Upgrade Scala for Java 20/21 support (#13840)\n\nUpgrade to Scala 2.13.11 and Scala 2.12.18. A minor test change was required\nto fix compilation with Scala 2.13.11.\n\nScala 2.13 release notes:\n* https://github.com/scala/scala/releases/tag/v2.13.11\n\nScala 2.12 release notes:\n* https://github.com/scala/scala/releases/tag/v2.12.16\n* https://github.com/scala/scala/releases/tag/v2.12.17\n* https://github.com/scala/scala/releases/tag/v2.12.18\n\nReviewers: Justine Olshan <jolshan@confluent.io>, Josep Prat <josep.prat@aiven.io>",
    "epoch": 1687267763,
    "epoch_utc": null
  },
  {
    "commit": "b100f1efac77bf795683ab5e68ecf87845372089",
    "author": "Dimitar Dimitrov",
    "author_email": "30328539+dimitarndimitrov@users.noreply.github.com",
    "date": "Tue Jun 20 16:50:46 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 20 16:50:46 2023 +0200",
    "stats": {
      "files_changed": 14,
      "insertions": 695,
      "deletions": 523,
      "files": [
        "checkstyle/import-control-server-common.xml",
        "core/src/main/scala/kafka/common/InterBrokerSendThread.scala",
        "core/src/main/scala/kafka/coordinator/transaction/TransactionMarkerChannelManager.scala",
        "core/src/main/scala/kafka/raft/KafkaNetworkChannel.scala",
        "core/src/main/scala/kafka/server/AddPartitionsToTxnManager.scala",
        "core/src/main/scala/kafka/server/BrokerToControllerChannelManager.scala",
        "core/src/test/scala/kafka/common/InterBrokerSendThreadTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionCoordinatorConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionMarkerChannelManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/AddPartitionsToTxnManagerTest.scala",
        "server-common/src/main/java/org/apache/kafka/server/util/InterBrokerSendThread.java",
        "server-common/src/main/java/org/apache/kafka/server/util/RequestAndCompletionHandler.java",
        "server-common/src/main/java/org/apache/kafka/server/util/ShutdownableThread.java",
        "server-common/src/test/java/org/apache/kafka/server/util/InterBrokerSendThreadTest.java"
      ]
    },
    "message": "KAFKA-15087 Move/rewrite InterBrokerSendThread to server-commons (#13856)\n\nThe Java rewrite is kept relatively close to the Scala original\nto minimize potential newly introduced bugs and to make reviewing\nsimpler. The following details might be of note:\n- The `Logging` trait moved to InterBrokerSendThread with the\nrewrite of ShutdownableThread has been similarly moved to any\nsubclasses that currently use it. InterBrokerSendThread's own\nlogging has been made to use ShutdownableThread's logger which\nmimics the prefix/log identifier that the trait provided.\n- The case RequestAndCompletionHandler class has been made a\nseparate POJO class and the internal-use UnsentRequests class\nhas been kept as a static nested class.\n- The relatively commonly used but internal (not part of the\npublic API) clients classes that InterBrokerSendThread relies on\nhave been allowlisted in the server-common import control.\n- The accompanying test class has also been moved and rewritten\nwith one new test added and most of the pre-existing tests made\nstricter.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1687290646,
    "epoch_utc": null
  },
  {
    "commit": "0e8c436c7d08f78eb9c4960aa1679725b4ce06a9",
    "author": "Shekhar Rajak",
    "author_email": "60732970+shekhar-rajak@users.noreply.github.com",
    "date": "Tue Jun 20 17:21:56 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 20 13:51:56 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 33,
      "deletions": 58,
      "files": [
        ".../test/java/org/apache/kafka/streams/state/internals/TimeOrderedCachingPersistentWindowStoreTest.java"
      ]
    },
    "message": "KAFKA-7438: Migrate to Mockito in TimeOrderedCachingPersistentWindowStoreTest (#12739)\n\nReplaces EasyMock and PowerMock with Mockito in TimeOrderedCachingPersistentWindowStoreTest.\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Guozhang Wang <wangguoz@gmail.com>, Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1687292516,
    "epoch_utc": null
  },
  {
    "commit": "cd3c0ab1a3de0e02f473edeeb986acff3fc87230",
    "author": "Colin P. McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Wed Jun 7 13:11:55 2023 -0700",
    "commit_by": "Colin P. McCabe",
    "commit_by_email": "cmccabe@apache.org",
    "commit_by_date": "Mon Jun 19 16:46:44 2023 -0700",
    "stats": {
      "files_changed": 25,
      "insertions": 857,
      "deletions": 152,
      "files": [
        "checkstyle/import-control-server-common.xml",
        "core/src/main/scala/kafka/controller/KafkaController.scala",
        "core/src/main/scala/kafka/server/ApiVersionManager.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/ControllerApis.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/MetadataCache.scala",
        "core/src/main/scala/kafka/server/metadata/KRaftMetadataCache.scala",
        "core/src/main/scala/kafka/server/metadata/ZkMetadataCache.scala",
        "core/src/main/scala/kafka/tools/TestRaftRequestHandler.scala",
        "core/src/main/scala/kafka/tools/TestRaftServer.scala",
        "core/src/test/scala/unit/kafka/network/SocketServerTest.scala",
        "core/src/test/scala/unit/kafka/server/ApiVersionManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/ControllerApisTest.scala",
        "core/src/test/scala/unit/kafka/server/FinalizedFeatureCacheTest.scala",
        "core/src/test/scala/unit/kafka/server/FinalizedFeatureChangeListenerTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/metadata/KRaftMetadataRequestBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/metadata/MetadataRequestBenchmark.java",
        "metadata/src/main/java/org/apache/kafka/metadata/publisher/FeaturesPublisher.java",
        "server-common/src/main/java/org/apache/kafka/server/common/Features.java",
        "server-common/src/main/java/org/apache/kafka/server/network/EndpointReadyFutures.java",
        "server-common/src/main/java/org/apache/kafka/server/network/KafkaAuthorizerServerInfo.java",
        "server-common/src/test/java/org/apache/kafka/server/common/FeaturesTest.java",
        "server-common/src/test/java/org/apache/kafka/server/network/EndpointReadyFuturesTest.java"
      ]
    },
    "message": "KAFKA-15060: fix the ApiVersionManager interface\n\nThis PR expands the scope of ApiVersionManager a bit to include returning the current\nMetadataVersion and features that are in effect. This is useful in general because that information\nneeds to be returned in an ApiVersionsResponse. It also allows us to fix the ApiVersionManager\ninterface so that all subclasses implement all methods of the interface. Having subclasses that\ndon't implement some methods is dangerous because they could cause exceptions at runtime in\nunexpected scenarios.\n\nOn the KRaft controller, we were previously performing a read operation in the QuorumController\nthread to get the current metadata version and features. With this PR, we now read a volatile\nvariable maintained by a separate MetadataVersionContextPublisher object. This will improve\nperformance and simplify the code. It should not change the guarantees we are providing; in both\nthe old and new scenarios, we need to be robust against version skew scenarios during updates.\n\nAdd a Features class which just has a 3-tuple of metadata version, features, and feature epoch.\nRemove MetadataCache.FinalizedFeaturesAndEpoch, since it just duplicates the Features class.\n(There are some additional feature-related classes that can be consolidated in in a follow-on PR.)\n\nCreate a java class, EndpointReadyFutures, for managing the futures associated with individual\nauthorizer endpoints. This avoids code duplication between ControllerServer and BrokerServer and\nmakes this code unit-testable.\n\nReviewers: David Arthur <mumrah@gmail.com>, dengziming <dengziming1993@gmail.com>, Luke Chen <showuon@gmail.com>",
    "epoch": 1686154315,
    "epoch_utc": null
  },
  {
    "commit": "190e6de809af052eba425ae0838058986ae244a8",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Mon Jun 19 16:58:55 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jun 19 16:58:55 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java"
      ]
    },
    "message": "MINOR: Close code tag in Producer configs (#13875)\n\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1687204735,
    "epoch_utc": null
  },
  {
    "commit": "f4981790c414eafbb0cd29f9ce42297e10420ca6",
    "author": "Joobi S B",
    "author_email": "joobisb@gmail.com",
    "date": "Mon Jun 19 19:20:30 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jun 19 15:50:30 2023 +0200",
    "stats": {
      "files_changed": 6,
      "insertions": 8,
      "deletions": 11,
      "files": [
        "core/src/main/scala/kafka/raft/RaftManager.scala",
        "core/src/main/scala/kafka/server/DelayedOperation.scala",
        "core/src/test/scala/unit/kafka/utils/timer/MockTimer.scala",
        "server-common/src/main/java/org/apache/kafka/server/util/timer/SystemTimer.java",
        "server-common/src/main/java/org/apache/kafka/server/util/timer/Timer.java",
        "server-common/src/test/java/org/apache/kafka/server/util/timer/TimerTest.java"
      ]
    },
    "message": "KAFKA-15085: Make Timer.java implement AutoCloseable (#13872)\n\nChange Timer.java to implement AutoCloseable because automatic bug finders will flag a warning if an object of a class is marked as AutoCloseable but is not closed properly in the code.\n\nReviewers:  Divij Vaidya <diviv@amazon.com>",
    "epoch": 1687213230,
    "epoch_utc": null
  },
  {
    "commit": "6f7682d2f4ecc8110f80cb6301de02f512d36a53",
    "author": "Daniel Scanteianu",
    "author_email": "danielms853@gmail.com",
    "date": "Mon Jun 19 12:22:09 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jun 19 13:22:09 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerRecord.java"
      ]
    },
    "message": "MINOR: add comment that timestamp unit is milliseconds (#13341)\n\nReviewers:  Divij Vaidya <diviv@amazon.com>",
    "epoch": 1687188129,
    "epoch_utc": null
  },
  {
    "commit": "546b912b831d46208499c6e1f4f785db6ddd9aa3",
    "author": "Alexandre Garnier",
    "author_email": "zigarn@users.noreply.github.com",
    "date": "Mon Jun 19 13:09:10 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jun 19 13:09:10 2023 +0200",
    "stats": {
      "files_changed": 7,
      "insertions": 31,
      "deletions": 62,
      "files": [
        "core/src/test/scala/integration/kafka/api/SaslClientsWithInvalidCredentialsTest.scala",
        "core/src/test/scala/integration/kafka/server/DynamicBrokerReconfigurationTest.scala",
        "core/src/test/scala/unit/kafka/admin/AclCommandTest.scala",
        "core/src/test/scala/unit/kafka/admin/ConfigCommandTest.scala",
        "core/src/test/scala/unit/kafka/tools/ConsoleConsumerTest.scala",
        "core/src/test/scala/unit/kafka/tools/ConsoleProducerTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala"
      ]
    },
    "message": "MINOR: Add and use new method TestUtils.tempPropertiesFile() (#12976)\n\nReviewers:  Divij Vaidya <diviv@amazon.com>",
    "epoch": 1687190950,
    "epoch_utc": null
  },
  {
    "commit": "9b7f7e0fa09121e204540b46bd3d7340a0175e7d",
    "author": "Manyanda Chitimbo",
    "author_email": "manyanda.chitimbo@gmail.com",
    "date": "Mon Jun 19 11:05:07 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jun 19 11:05:07 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "core/src/main/scala/kafka/log/LogCleaner.scala"
      ]
    },
    "message": "MINOR: update LogCleaner.scala javadoc with a link to OffsetMap to help with code navigation in IDE (#13866)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1687183507,
    "epoch_utc": null
  },
  {
    "commit": "958b41b27afd061d17734043cc23ed1fc8f35dbd",
    "author": "Manyanda Chitimbo",
    "author_email": "manyanda.chitimbo@gmail.com",
    "date": "Mon Jun 19 10:35:49 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jun 19 10:35:49 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "LICENSE-binary",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "KAFKA-15096: Update snappy-java to 1.1.10.1 (#13865)\n\nThe release notes are available at https://github.com/xerial/snappy-java/releases/tag/v1.1.10.1\n\nReviewers:  Divij Vaidya <diviv@amazon.com>, Josep Prat <josep.prat@aiven.io>",
    "epoch": 1687181749,
    "epoch_utc": null
  },
  {
    "commit": "41a8e55634311ada8e3af9f5eda9d2e0500c715d",
    "author": "Iblis Lin",
    "author_email": "iblislin@gmail.com",
    "date": "Mon Jun 19 16:33:44 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jun 19 10:33:44 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/StreamsBuilder.java"
      ]
    },
    "message": "MINOR: fix doc typo of StreamsBuilder.addGlobalStore (#13871)\n\nReviewers: Manyanda Chitimbo <manyanda.chitimbo@gmail.com>",
    "epoch": 1687203224,
    "epoch_utc": null
  },
  {
    "commit": "ce7758f3f320ec25ffe913a7bee6c260d50fd041",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Mon Jun 19 08:43:42 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jun 19 08:43:42 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 2,
      "files": [
        "core/src/test/scala/integration/kafka/server/FetchFromFollowerIntegrationTest.scala"
      ]
    },
    "message": "MINOR: Fix testRackAwareRangeAssignor, second try (#13863)\n\nThis test still fails regularly with the following error:\n\n```\nError\njava.util.concurrent.ExecutionException: org.opentest4j.AssertionFailedError: Timed out while awaiting expected assignment Set(topicWithAllPartitionsOnAllRacks-0, topicWithSingleRackPartitions-0). The current assignment is []\nStacktrace\njava.util.concurrent.ExecutionException: org.opentest4j.AssertionFailedError: Timed out while awaiting expected assignment Set(topicWithAllPartitionsOnAllRacks-0, topicWithSingleRackPartitions-0). The current assignment is []\nat java.base/java.util.concurrent.FutureTask.report(FutureTask.java:122)\nat java.base/java.util.concurrent.FutureTask.get(FutureTask.java:205)\nat integration.kafka.server.FetchFromFollowerIntegrationTest.$anonfun$testRackAwareRangeAssignor$9(FetchFromFollowerIntegrationTest.scala:211)\nat integration.kafka.server.FetchFromFollowerIntegrationTest.$anonfun$testRackAwareRangeAssignor$9$adapted(FetchFromFollowerIntegrationTest.scala:211)\nat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)\nat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)\n```\n\nI propose to increase the timeouts to 30 secs to mitigate it. The test already uses 30 secs timeouts in many places. This patch uses 30 secs everywhere. This solution is not optimal but this is better than having a flaky test.\n\nReviewers: Justine Olshan <jolshan@confluent.io>",
    "epoch": 1687175022,
    "epoch_utc": null
  },
  {
    "commit": "48903c0a9fabae0fcfdcf99680796641f7f5c49a",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Mon Jun 19 08:38:45 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jun 19 08:38:45 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 31,
      "deletions": 8,
      "files": [
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala"
      ]
    },
    "message": "MINOR: Make offsets topic creation more reliable in tests (zk mode) (#13848)\n\nI have seen failures like the following one in a few builds:\n\n```\nBuild / JDK 11 and Scala 2.13 / testDescribeSimpleConsumerGroup() \u2013 kafka.admin.DescribeConsumerGroupTest\norg.apache.kafka.common.errors.TopicExistsException: Topic '__consumer_offsets' already exists.\n```\n\nMany tests still use `TestUtils.createOffsetsTopic(zkClient, servers)` to create the offsets topic. This method does not handle the case where the topic exists (e.g. in the case of a retry). This patch adds this logic.\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1687174725,
    "epoch_utc": null
  },
  {
    "commit": "09e8adb330e8dfb45455d00ec12fd28e07cb3aa7",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Sat Jun 17 16:44:56 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Jun 17 10:44:56 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 50,
      "deletions": 27,
      "files": [
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala"
      ]
    },
    "message": "MINOR:Optimize the use of metrics in ReplicaManager and remove checks (#13705)\n\nCo-authored-by: Deqi Hu <deqi.hu@shopee.com>\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Manyanda Chitimbo <manyanda.chitimbo@gmail.com>, Kirk True <ktrue@confluent.io>",
    "epoch": 1687031096,
    "epoch_utc": null
  },
  {
    "commit": "2aa1555423cf0cec48653a7d936da6d06da914b6",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Fri Jun 16 18:38:43 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jun 16 18:38:43 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 6,
      "deletions": 0,
      "files": [
        "build.gradle"
      ]
    },
    "message": "MINOR: rat should depend on processMessages task (#13854)\n\nThis fix the following issue that we occasionally see in [builds](https://ci-builds.apache.org/blue/organizations/jenkins/Kafka%2Fkafka-pr/detail/PR-13848/4/pipeline/13/).\n\n```\n[2023-06-14T11:41:50.769Z] * What went wrong:\n[2023-06-14T11:41:50.769Z] A problem was found with the configuration of task ':rat' (type 'RatTask').\n[2023-06-14T11:41:50.769Z]   - Gradle detected a problem with the following location: '/home/jenkins/jenkins-agent/workspace/Kafka_kafka-pr_PR-13848'.\n[2023-06-14T11:41:50.769Z]\n[2023-06-14T11:41:50.769Z]     Reason: Task ':rat' uses this output of task ':clients:processTestMessages' without declaring an explicit or implicit dependency. This can lead to incorrect results being produced, depending on what order the tasks are executed.\n[2023-06-14T11:41:50.769Z]\n[2023-06-14T11:41:50.769Z]     Possible solutions:\n[2023-06-14T11:41:50.769Z]       1. Declare task ':clients:processTestMessages' as an input of ':rat'.\n[2023-06-14T11:41:50.769Z]       2. Declare an explicit dependency on ':clients:processTestMessages' from ':rat' using Task#dependsOn.\n[2023-06-14T11:41:50.769Z]       3. Declare an explicit dependency on ':clients:processTestMessages' from ':rat' using Task#mustRunAfter.\n[2023-06-14T11:41:50.769Z]\n[2023-06-14T11:41:50.769Z]     Please refer to https://docs.gradle.org/8.1.1/userguide/validation_problems.html#implicit_dependency for more details about this problem.\n```\n\nValidated manually as well:\n\n```\n% ./gradlew rat\n\n> Configure project :\nStarting build with version 3.6.0-SNAPSHOT (commit id 874081ca) using Gradle 8.1.1, Java 17 and Scala 2.13.10\nBuild properties: maxParallelForks=10, maxScalacThreads=8, maxTestRetries=0\n\n> Task :storage:processMessages\nMessageGenerator: processed 4 Kafka message JSON files(s).\n\n> Task :raft:processMessages\nMessageGenerator: processed 1 Kafka message JSON files(s).\n\n> Task :core:processMessages\nMessageGenerator: processed 2 Kafka message JSON files(s).\n\n> Task :group-coordinator:processMessages\nMessageGenerator: processed 16 Kafka message JSON files(s).\n\n> Task :streams:processMessages\nMessageGenerator: processed 1 Kafka message JSON files(s).\n\n> Task :metadata:processMessages\nMessageGenerator: processed 20 Kafka message JSON files(s).\n\n> Task :clients:processMessages\nMessageGenerator: processed 146 Kafka message JSON files(s).\n\n> Task :clients:processTestMessages\nMessageGenerator: processed 4 Kafka message JSON files(s).\n\nBUILD SUCCESSFUL in 8s\n```\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1686951523,
    "epoch_utc": null
  },
  {
    "commit": "73dd51e13765f77004aae51bea1009006778bd0e",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Fri Jun 16 09:10:26 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jun 16 12:10:26 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 23,
      "deletions": 37,
      "files": [
        ".../src/test/java/org/apache/kafka/connect/mirror/integration/MirrorConnectorsIntegrationBaseTest.java",
        ".../apache/kafka/connect/mirror/integration/MirrorConnectorsWithCustomForwardingAdminIntegrationTest.java"
      ]
    },
    "message": "Revert \"MINOR: Reduce MM2 integration test flakiness due to missing dummy offset commits (#13838)\" (#13864)\n\nReviewers: Josep Prat <josep.prat@aiven.io>\n\nReverts commit 505c7b64875ba05301d933a9b73964fad30e8639.",
    "epoch": 1686917426,
    "epoch_utc": null
  },
  {
    "commit": "66f0cbc424ae103de15ccc78adae42fcd8f6ed48",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Fri Jun 16 11:03:57 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jun 16 11:03:57 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 201,
      "deletions": 6,
      "files": [
        "docs/ops.html",
        "docs/toc.html"
      ]
    },
    "message": "MINOR: Add ZK migration instructions to the operations documentation (#13257)\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1686924237,
    "epoch_utc": null
  },
  {
    "commit": "b10beaae77905e6750a789ed52ecddf8ff81a9a6",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Fri Jun 16 15:17:57 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jun 16 15:17:57 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 4,
      "deletions": 2,
      "files": [
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala"
      ]
    },
    "message": "MINOR: Add more information in assertion failure for non daemon threads (#13858)\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1686939477,
    "epoch_utc": null
  },
  {
    "commit": "74238656dcc42e27733bbcb0a2df6d1cd61f09a4",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Fri Jun 16 20:56:13 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jun 16 20:56:13 2023 +0800",
    "stats": {
      "files_changed": 8,
      "insertions": 131,
      "deletions": 23,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/network/ListenerName.java",
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java",
        "core/src/test/scala/integration/kafka/server/KRaftClusterTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaServerTest.scala",
        "core/src/test/scala/unit/kafka/server/ServerStartupTest.scala"
      ]
    },
    "message": "KAFKA-15066: add \"remote.log.metadata.manager.listener.name\" config to rlmm (#13828)\n\nadd \"remote.log.metadata.manager.listener.name\" config to rlmm to allow producer/consumer to connect to the server. Also add tests.\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1686959773,
    "epoch_utc": null
  },
  {
    "commit": "88320a81404df313bbdf4443e0598e4fd1b62615",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Fri Jun 16 19:51:22 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jun 16 13:51:22 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 8,
      "deletions": 3,
      "files": [
        "core/src/main/scala/kafka/server/AbstractFetcherThread.scala"
      ]
    },
    "message": "MINOR: Fix illogical log in fetchOffsetAndTruncate method (#13719)\n\nCo-authored-by: Deqi Hu <deqi.hu@shopee.com>\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Satish Duggana <satishd@apache.org>, Kamal Chandraprakash <kamal.chandraprakash@gmail.com>, David Jacot <djacot@confluent.io>, Alexandre Dupriez <alexandre.dupriez@gmail.com>",
    "epoch": 1686955882,
    "epoch_utc": null
  },
  {
    "commit": "e1d59920f4fed5c4bc890e53e249d3439e148bab",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Fri Jun 16 02:58:36 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jun 16 11:58:36 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 3,
      "deletions": 4,
      "files": [
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/integration/DedicatedMirrorIntegrationTest.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java"
      ]
    },
    "message": "KAFKA-15059: Remove pending rebalance check when fencing zombie source connector tasks (#13819)\n\nDiscovered while researching KAFKA-14718\n\nCurrently, we perform a check during zombie fencing that causes the round of zombie fencing to fail when a rebalance is pending (i.e., when we've detected from a background poll of the config topic that a new connector has been created, that an existing connector has been deleted, or that a new set of connector tasks has been generated).\n\nIt's possible but not especially likely that this check causes issues when running vanilla Kafka Connect. Even when it does, it's easy enough to restart failed tasks via the REST API.\n\nHowever, when running MirrorMaker 2 in dedicated mode, this check is more likely to cause issues as we write three connector configs to the config topic in rapid succession on startup. And in that mode, there is no API to restart failed tasks aside from restarting the worker that they are hosted on.\n\nIn either case, this check can lead to test flakiness in integration tests for MirrorMaker 2 both in dedicated mode and when deployed onto a vanilla Kafka Connect cluster.\n\nThis check is not actually necessary, and we can safely remove it. Copied from Jira:\n\n>If the worker that we forward the zombie fencing request to is a zombie leader (i.e., a worker that believes it is the leader but in reality is not), it will fail to finish the round of zombie fencing because it won't be able to write to the config topic with a transactional producer.\n\n>If the connector has just been deleted, we'll still fail the request since we force a read-to-end of the config topic and refresh our snapshot of its contents before checking to see if the connector exists.\n\n>And regardless, the worker that owns the task will still do a read-to-end of the config topic and verify that (1) no new task configs have been generated for the connector and (2) the worker is still assigned the connector, before allowing the task to process any data.\n\nIn addition, while waiting on a fix for KAFKA-14718 that adds more granularity for diagnosing failures in the DedicatedMirrorIntegrationTest suite (#13284), some of the timeouts in that test are bumped to work better on our CI infrastructure.\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Yash Mayya <yash.mayya@gmail.com>, Viktor Somogyi-Vass <viktorsomogyi@gmail.com>",
    "epoch": 1686895116,
    "epoch_utc": null
  },
  {
    "commit": "11aa999d2054d3ecb28de2a95ada02131c5d9616",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Thu Jun 15 17:01:37 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 15 17:01:37 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 0,
      "deletions": 0,
      "files": [
        "reviewers.py"
      ]
    },
    "message": "MINOR: Change file permissions of reviewers.py to make it executable (#13861)\n\nReviewers: David Jacot <djacot@confluent.io>, Manyanda Chitimbo <manyanda.chitimbo@gmail.com>",
    "epoch": 1686859297,
    "epoch_utc": null
  },
  {
    "commit": "c5df47a1cbb81d475f94f22a2cb7eff8d91b19cd",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Thu Jun 15 13:55:55 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 15 14:55:55 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 119,
      "deletions": 224,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java"
      ]
    },
    "message": "KAFKA-14133: Migrate StandbyTaskCreator mock in TaskManagerTest to Mockito (#13711)\n\nReviewers: Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1686848155,
    "epoch_utc": null
  },
  {
    "commit": "505c7b64875ba05301d933a9b73964fad30e8639",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Thu Jun 15 03:02:32 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 15 12:02:32 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 37,
      "deletions": 23,
      "files": [
        ".../src/test/java/org/apache/kafka/connect/mirror/integration/MirrorConnectorsIntegrationBaseTest.java",
        ".../apache/kafka/connect/mirror/integration/MirrorConnectorsWithCustomForwardingAdminIntegrationTest.java"
      ]
    },
    "message": "MINOR: Reduce MM2 integration test flakiness due to missing dummy offset commits (#13838)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1686808952,
    "epoch_utc": null
  },
  {
    "commit": "930744c3a84f08dc9f56d51975adb7f1c0c05c7e",
    "author": "Gantigmaa Selenge",
    "author_email": "39860586+tinaselenge@users.noreply.github.com",
    "date": "Thu Jun 15 03:16:52 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 15 10:16:52 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 40,
      "deletions": 298,
      "files": [
        "connect/mirror/README.md",
        "docs/ops.html"
      ]
    },
    "message": "KAFKA-14709: Move content in connect/mirror/README.md to the docs (#13650)\n\nMost of the contents in the README.md was already covered in the docs therefore only had to add the section for Exactly Once support.\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1686809812,
    "epoch_utc": null
  },
  {
    "commit": "4a5d1b320502c808509e9b795bd669030ce03fd2",
    "author": "Walker Carlson",
    "author_email": "18128741+wcarlson5@users.noreply.github.com",
    "date": "Wed Jun 14 15:16:55 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 14 15:16:55 2023 -0500",
    "stats": {
      "files_changed": 6,
      "insertions": 466,
      "deletions": 5,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/state/Stores.java",
        ".../state/internals/{RocksDbKeyValueBytesStoreSupplier.java => RocksDBKeyValueBytesStoreSupplier.java}",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBTimeOrderedKeyValueBuffer.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBTimeOrderedKeyValueBytesStore.java",
        ".../main/java/org/apache/kafka/streams/state/internals/RocksDBTimeOrderedKeyValueBytesStoreSupplier.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBTimeOrderedKeyValueBufferTest.java"
      ]
    },
    "message": "KAFKA-14936: Add On Disk Time Ordered Buffer (1/N) (#13756)\n\nKAFKA-14936: Add On Disk Time Ordered Buffer\n\nAdd a time ordered key-value buffer stored on disk and implemented using RocksDBTimeOrderedKeyValueSegmentedBytesStore.\n\nThis will be used in the stream buffered for joins with a grace period.\n\nReviewers: Bruno Cadonna <cadonna@confluent.io> Victoria Xia <victoria.xia@confluent.io>",
    "epoch": 1686766615,
    "epoch_utc": null
  },
  {
    "commit": "45a279ec7098aa925ac076b962dc923deb2f9d8f",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Wed Jun 14 18:21:30 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 14 18:21:30 2023 +0200",
    "stats": {
      "files_changed": 17,
      "insertions": 760,
      "deletions": 608,
      "files": [
        "core/src/main/scala/kafka/raft/RaftManager.scala",
        "core/src/main/scala/kafka/raft/TimingWheelExpirationService.scala",
        "core/src/main/scala/kafka/server/DelayedOperation.scala",
        "core/src/main/scala/kafka/utils/timer/Timer.scala",
        "core/src/main/scala/kafka/utils/timer/TimerTask.scala",
        "core/src/main/scala/kafka/utils/timer/TimerTaskList.scala",
        "core/src/test/scala/unit/kafka/utils/timer/MockTimer.scala",
        "core/src/test/scala/unit/kafka/utils/timer/TimerTaskListTest.scala",
        "core/src/test/scala/unit/kafka/utils/timer/TimerTest.scala",
        "server-common/src/main/java/org/apache/kafka/server/util/timer/SystemTimer.java",
        "server-common/src/main/java/org/apache/kafka/server/util/timer/Timer.java",
        "server-common/src/main/java/org/apache/kafka/server/util/timer/TimerTask.java",
        "server-common/src/main/java/org/apache/kafka/server/util/timer/TimerTaskEntry.java",
        "server-common/src/main/java/org/apache/kafka/server/util/timer/TimerTaskList.java",
        ".../TimingWheel.scala => server-common/src/main/java/org/apache/kafka/server/util/timer/TimingWheel.java",
        "server-common/src/test/java/org/apache/kafka/server/util/timer/TimerTaskListTest.java",
        "server-common/src/test/java/org/apache/kafka/server/util/timer/TimerTest.java"
      ]
    },
    "message": "MINOR: Move Timer/TimingWheel to server-common (#13820)\n\nThis patch rewrite `Timer` and the related classes in Java and moves them to `server-common` module. It is basically a one to one rewrite of the Scala code. Note that `MockTimer` is not moved as part of this patch. It will be done separately.\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1686777690,
    "epoch_utc": null
  },
  {
    "commit": "044d058e03bde8179ed57994d0a77ae9bff9fc10",
    "author": "Manyanda Chitimbo",
    "author_email": "manyanda.chitimbo@gmail.com",
    "date": "Wed Jun 14 15:30:57 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 14 15:30:57 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 0,
      "deletions": 5,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorNode.java"
      ]
    },
    "message": "MINOR: remove unused field ProcessorNode#time (#13624)\n\nReviewers: Divij Vaidya <diviv@amazon.com>",
    "epoch": 1686767457,
    "epoch_utc": null
  },
  {
    "commit": "dfe050c8bfaf312f1ccc89a1ae2d6cbd0761b88e",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Tue Jun 13 15:18:54 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 13 15:18:54 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 102,
      "deletions": 7,
      "files": [
        "core/src/main/scala/kafka/server/AbstractFetcherThread.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaFetcherThreadTest.scala"
      ]
    },
    "message": "KAFKA-15080; Fetcher's lag never set when partition is idle (#13843)\n\nThe PartitionFetchState's lag field is set to None when the state is created and it is updated when bytes are received for a partition. For idle partitions (newly created or not), the lag is never updated because `validBytes > 0` is never true. As a side effect, the partition is considered out-of-sync and could be incorrectly throttled.\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1686680334,
    "epoch_utc": null
  },
  {
    "commit": "303b45704923111d5a79dabd3d5d8658d84ab580",
    "author": "Calvin Liu",
    "author_email": "83986057+CalvinConfluent@users.noreply.github.com",
    "date": "Tue Jun 13 05:02:10 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 13 14:02:10 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 1,
      "files": [
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala"
      ]
    },
    "message": "MINOR: Make sure replicas will not be removed in initial ISR (#13844)\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1686643330,
    "epoch_utc": null
  },
  {
    "commit": "7f0e45590a77a3609306a601f7cc422edbc69078",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Tue Jun 13 09:48:07 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 13 10:48:07 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 14,
      "deletions": 19,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java"
      ]
    },
    "message": "KAFKA-14133: Migrate Admin mock in TaskManagerTest to Mockito (#13712)\n\nThis pull requests migrates the Admin mock in TaskManagerTest from EasyMock to Mockito.\nThe change is restricted to a single mock to minimize the scope and make it easier for review.\n\nReviewers: Manyanda Chitimbo <manyanda.chitimbo@gmail.com>, Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1686660487,
    "epoch_utc": null
  },
  {
    "commit": "7556ce366a6df1f60928e66258e32f9b3b6286c2",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Tue Jun 13 09:46:38 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 13 09:46:38 2023 +0200",
    "stats": {
      "files_changed": 9,
      "insertions": 2183,
      "deletions": 28,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/Coordinator.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorBuilder.java",
        ".../src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorBuilderSupplier.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorEvent.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntime.java",
        ".../src/main/java/org/apache/kafka/coordinator/group/runtime/MultiThreadedEventProcessor.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/runtime/CoordinatorRuntimeTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/runtime/InMemoryPartitionWriter.java",
        ".../src/test/java/org/apache/kafka/coordinator/group/runtime/MultiThreadedEventProcessorTest.java"
      ]
    },
    "message": "KAFKA-14462; [17/N] Add CoordinatorRuntime (#13795)\n\nThis patch introduces the CoordinatorRuntime. The CoordinatorRuntime is a framework which encapsulate all the common features requires to build a coordinator such as the group coordinator. Please refer to the javadoc of that class for the details.\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1686660398,
    "epoch_utc": null
  },
  {
    "commit": "b7a6a8fd5f03144c2ff964f5531470e456dbb4ba",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Mon Jun 12 07:25:42 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jun 12 07:25:42 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 41,
      "deletions": 19,
      "files": [
        "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
        "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientSnapshotTest.java"
      ]
    },
    "message": "KAFKA-15076; KRaft should prefer latest snapshot (#13834)\n\nIf the KRaft listener is at offset 0, the start of the log, and KRaft has generated a snapshot, it should prefer the latest snapshot instead of having the listener read from the start of the log.\n\nThis is implemented by having KafkaRaftClient send a Listener.handleLoadSnapshot event, if the Listener is at offset 0 and the KRaft partition has generated a snapshot.\n\nReviewers: Jason Gustafson <jason@confluent.io>, David Arthur <mumrah@gmail.com>",
    "epoch": 1686565542,
    "epoch_utc": null
  },
  {
    "commit": "c0cb8dd4bc7f5ac0e496772baae1a03255628f06",
    "author": "dengziming",
    "author_email": "dengziming1993@gmail.com",
    "date": "Mon Jun 12 10:45:17 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jun 12 10:45:17 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 31,
      "deletions": 1,
      "files": [
        "core/src/test/scala/integration/kafka/server/KRaftClusterTest.scala"
      ]
    },
    "message": "KAFKA-15036: Add a test case for controller failover (#13832)\n\nAdd a test case for controller failover to avoid bug like KAFKA-15036.\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1686577517,
    "epoch_utc": null
  },
  {
    "commit": "6fe74f78dc725466319bd0465764913532949ba3",
    "author": "Bruno Cadonna",
    "author_email": "cadonna@apache.org",
    "date": "Sun Jun 11 15:14:46 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Jun 11 15:14:46 2023 +0200",
    "stats": {
      "files_changed": 4,
      "insertions": 46,
      "deletions": 2,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/DefaultStateUpdaterTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java"
      ]
    },
    "message": "KAFKA-10199: Re-add revived tasks to the state updater after handling (#13829)\n\nFixes a bug regarding the state updater where tasks that experience corruption\nduring restoration are passed from the state updater to the stream thread\nfor closing and reviving but then the revived tasks are not re-added to\nthe state updater.\n\nReviewers: Lucas Brutschy <lbrutschy@confluent.io>, Walker Carlson <wcarlson@confluent.io>",
    "epoch": 1686507286,
    "epoch_utc": null
  },
  {
    "commit": "5afce2de68517498e23c6c224a686115252d2611",
    "author": "Sushant Mahajan",
    "author_email": "smahajan@confluent.io",
    "date": "Sun Jun 11 11:52:25 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Jun 11 11:52:25 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 31,
      "deletions": 0,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/security/oauthbearer/internals/secured/FileTokenRetriever.java",
        "clients/src/test/java/org/apache/kafka/common/security/oauthbearer/OAuthBearerLoginCallbackHandlerTest.java"
      ]
    },
    "message": "KAFKA-15077: Code to trim token in FileTokenRetriever (#13835)\n\nThe FileTokenRetriever class is used to read the access_token from a file on the clients system and then it is passed along with the jaas config to the OAuthBearerSaslServer. In case the token was sent using FileTokenRetriever on the client side, some EOL character is getting appended to the token, causing authentication to fail with the message:\n\n\nReviewers: Manikumar Reddy <manikumar.reddy@gmail.com>",
    "epoch": 1686495145,
    "epoch_utc": null
  },
  {
    "commit": "daba741826ec9b7ceed7ce9ef3396f83157b7f34",
    "author": "Walker Carlson",
    "author_email": "18128741+wcarlson5@users.noreply.github.com",
    "date": "Sat Jun 10 17:22:32 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Jun 10 17:22:32 2023 -0500",
    "stats": {
      "files_changed": 9,
      "insertions": 80,
      "deletions": 74,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableImpl.java",
        ".../main/java/org/apache/kafka/streams/kstream/internals/suppress/KTableSuppressProcessorSupplier.java",
        ".../internals/{InMemoryTimeOrderedKeyValueBuffer.java => InMemoryTimeOrderedKeyValueChangeBuffer.java}",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/TimeOrderedKeyValueBuffer.java",
        ".../test/java/org/apache/kafka/streams/kstream/internals/suppress/KTableSuppressProcessorMetricsTest.java",
        ".../src/test/java/org/apache/kafka/streams/kstream/internals/suppress/KTableSuppressProcessorTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/suppress/SuppressSuite.java",
        ".../{InMemoryTimeOrderedKeyValueBufferTest.java => InMemoryTimeOrderedKeyValueChangeBufferTest.java}",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/TimeOrderedKeyValueBufferTest.java"
      ]
    },
    "message": "KAFKA-14936: Change Time Ordered Buffer to not require Change<> 0/N (#13830)\n\nChange the TimeOrderedKeyValueBuffer to take three types to include the store type so that it can be used for non change<V> operations as well.\n\nReviewers: Victoria Xia<victoria.xia@confluent.io> , Gabriel Gama <>",
    "epoch": 1686428552,
    "epoch_utc": null
  },
  {
    "commit": "4fe96ddfcca5a46e084a8be5704e1d4420ee1a31",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Sat Jun 10 17:05:03 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Jun 10 17:05:03 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        ".github/workflows/stale.yml"
      ]
    },
    "message": "MINOR fix formatting in stale PR comment",
    "epoch": 1686427503,
    "epoch_utc": null
  },
  {
    "commit": "9637cc7a3210312fb28324c17513d095b53d8551",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Sat Jun 10 16:46:55 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Jun 10 16:46:55 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 9,
      "deletions": 6,
      "files": [
        ".github/workflows/stale.yml"
      ]
    },
    "message": "MINOR: Enable schedule stale PR workflow (#13841)\n\nAlso fixes a few things in the workflow config (label name, better PR comment)\n\nReviewers: Josep Prat <josep.prat@aiven.io>",
    "epoch": 1686426415,
    "epoch_utc": null
  },
  {
    "commit": "da22d03605e4258c344bb015667250b3d2b5adb9",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Sat Jun 10 10:03:07 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Jun 10 10:03:07 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 52,
      "deletions": 0,
      "files": [
        ".github/workflows/stale.yml"
      ]
    },
    "message": "KAFKA-15073: Add a Github action to mark PRs as stale (#13827)\n\nThis patch makes use of the Github action `actions/stale@v8` to add a `stale` label to PRs older than 90 days.\n\nReviewers: Josep Prat <josep.prat@aiven.io>, David Jacot <djacot@confluent.io>",
    "epoch": 1686402187,
    "epoch_utc": null
  },
  {
    "commit": "7eea2a3908fdcee1627c18827e6dcb5ed0089fdd",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Fri Jun 9 08:54:25 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jun 9 08:54:25 2023 +0200",
    "stats": {
      "files_changed": 69,
      "insertions": 109,
      "deletions": 87,
      "files": [
        "build.gradle",
        "checkstyle/import-control.xml",
        "core/src/test/scala/kafka/common/InterBrokerSendThreadTest.scala",
        "core/src/test/scala/kafka/metrics/LinuxIoMetricsCollectorTest.scala",
        "core/src/test/scala/kafka/raft/KafkaMetadataLogTest.scala",
        "core/src/test/scala/kafka/server/LocalLeaderEndPointTest.scala",
        "core/src/test/scala/kafka/server/RemoteLeaderEndPointTest.scala",
        "core/src/test/scala/other/kafka/StressTestLog.scala",
        "core/src/test/scala/unit/kafka/cluster/AbstractPartitionTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionLockTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/cluster/ReplicaTest.scala",
        "core/src/test/scala/unit/kafka/controller/KafkaControllerTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/AbstractCoordinatorConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorAdapterTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupMetadataManagerTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionMetadataTest.scala",
        "core/src/test/scala/unit/kafka/log/AbstractLogCleanerIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/BrokerCompressionTest.scala",
        "core/src/test/scala/unit/kafka/log/LocalLogTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerLagIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerParameterizedIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogLoaderTest.scala",
        "core/src/test/scala/unit/kafka/log/LogManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogValidatorTest.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/log/remote/RemoteIndexCacheTest.scala",
        "core/src/test/scala/unit/kafka/network/ConnectionQuotasTest.scala",
        "core/src/test/scala/unit/kafka/server/AlterPartitionManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/BrokerLifecycleManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/ControllerApisTest.scala",
        "core/src/test/scala/unit/kafka/server/FetchSessionTest.scala",
        "core/src/test/scala/unit/kafka/server/ForwardingManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/HighwatermarkPersistenceTest.scala",
        "core/src/test/scala/unit/kafka/server/IsrExpirationTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "core/src/test/scala/unit/kafka/server/MockBrokerToControllerChannelManager.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerQuotasTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/epoch/OffsetsForLeaderEpochTest.scala",
        "core/src/test/scala/unit/kafka/tools/ConsoleConsumerTest.scala",
        "core/src/test/scala/unit/kafka/tools/DumpLogSegmentsTest.scala",
        "core/src/test/scala/unit/kafka/utils/QuotaUtilsTest.scala",
        "core/src/test/scala/unit/kafka/utils/SchedulerTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala",
        "core/src/test/scala/unit/kafka/utils/ThrottlerTest.scala",
        "core/src/test/scala/unit/kafka/utils/timer/MockTimer.scala",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/fetcher/ReplicaFetcherThreadBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/server/CheckpointBench.java",
        ".../src/test/scala/unit/kafka/utils/MockTime.scala => server-common/src/test/java/org/apache/kafka/server/util/MockTime.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/FineGrainedAutoResetIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/GlobalKTableEOSIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/GlobalKTableIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/InternalTopicIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationDedupIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/KStreamKStreamIntegrationTest.java",
        ".../src/test/java/org/apache/kafka/streams/integration/KTableKTableForeignKeyInnerJoinCustomPartitionerIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/KTableKTableForeignKeyInnerJoinMultiIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/LagFetchIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/QueryableStateIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/RegexSourceIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/utils/EmbeddedKafkaCluster.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/utils/KafkaEmbedded.java"
      ]
    },
    "message": "MINOR: Move MockTime to server-common (#13823)\n\nThis patch rewrite `MockTime` in Java and moves it to `server-common` module. This is a prerequisite to move `MockTimer` later on to `server-common` as well.\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1686311665,
    "epoch_utc": null
  },
  {
    "commit": "d3e0b27b24dc30984894357375f1d47f3848e552",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Fri Jun 9 09:53:46 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jun 9 09:53:46 2023 +0800",
    "stats": {
      "files_changed": 5,
      "insertions": 218,
      "deletions": 47,
      "files": [
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "metadata/src/main/java/org/apache/kafka/image/LocalReplicaChanges.java",
        "metadata/src/main/java/org/apache/kafka/image/TopicDelta.java",
        "metadata/src/main/java/org/apache/kafka/image/TopicsDelta.java"
      ]
    },
    "message": "KAFKA-15040: trigger onLeadershipChange under KRaft mode (#13807)\n\nWhen received LeaderAndIsr request, we'll notify remoteLogManager about this leadership changed to trigger the following workflow. But LeaderAndIsr won't be sent in KRaft mode, instead, the topicDelta will be received.\n\nThis PR fixes this issue by getting leader change and follower change from topicDelta, and triggering rlm.onLeadershipChange to notify remote log manager. Adding tests for remote storage enabled cases.\n\nReviewers: Satish Duggana <satishd@apache.org>",
    "epoch": 1686315226,
    "epoch_utc": null
  },
  {
    "commit": "4af4bccbbf9339846637e0c69acf3ed533d0c1d8",
    "author": "Lianet Magrans",
    "author_email": "98415067+lianetm@users.noreply.github.com",
    "date": "Thu Jun 8 17:03:45 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 8 14:03:45 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 349,
      "deletions": 233,
      "files": [
        "checkstyle/suppressions.xml",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetFetcher.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetFetcherUtils.java"
      ]
    },
    "message": "KAFKA-14966:  Extract OffsetFetcher reusable logic (#13815)\n\nThe OffsetFetcher is internally used by the KafkaConsumer to fetch offsets, validate and reset positions. For the new KafkaConsumer with a refactored threading model, similar functionality will be needed.\n\nThis is an initial refactoring for extracting logic from the OffsetFetcher, that will be reused by the new consumer implementation. No changes to the existing logic, just extracting classes, functions or pieces of logic.\n\nAll the functionality moved out of the OffsetFetcher is already covered by tests in OffsetFetcherTest and FetcherTest. There were no individual tests for the extracted functions, so no tests were migrated.\n\nReviewers: Jun Rao <junrao@gmail.com>",
    "epoch": 1686254625,
    "epoch_utc": null
  },
  {
    "commit": "6b128d7e30cb654f26f11ae650465aa3caa38185",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Thu Jun 8 08:20:35 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 8 11:20:35 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 78,
      "deletions": 55,
      "files": [
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerConnectorTest.java"
      ]
    },
    "message": "KAFKA-14006: Parameterize WorkerConnectorTest suite (#12307)\n\nReviewers: Sagar Rao <sagarmeansocean@gmail.com>, Christo Lolov <lolovc@amazon.com>, Kvicii <kvicii.yu@gmail.com>, Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1686223235,
    "epoch_utc": null
  },
  {
    "commit": "513e1c641d63c5e15144f9fcdafa1b56c5e5ba09",
    "author": "Danica Fine",
    "author_email": "danica.fine@gmail.com",
    "date": "Wed Jun 7 21:35:11 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 7 15:35:11 2023 -0400",
    "stats": {
      "files_changed": 4,
      "insertions": 40,
      "deletions": 38,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsMetadataState.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsMetadataStateTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java"
      ]
    },
    "message": "KAFKA-14539: Simplify StreamsMetadataState by replacing the Cluster metadata with partition info map (#13751)\n\nReplace usage of Cluster in StreamsMetadataState with Map<String, List>. Update StreamsPartitionAssignor#onAssignment method to pass existing Map<TopicPartition, PartitionInfo> instead of fake Cluster object.\n\nBehavior remains the same; updated existing unit tests accordingly.\n\nReviewers:  Walker Carlson <wcarlson@confluent.io>, Bill Bejeck <bbejeck@apache.org>",
    "epoch": 1686184511,
    "epoch_utc": null
  },
  {
    "commit": "ff77b3ad041c1a4c80119f960e1f87c07b9e93dd",
    "author": "Lucas Brutschy",
    "author_email": "lucasbru@users.noreply.github.com",
    "date": "Wed Jun 7 18:48:14 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 7 09:48:14 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 56,
      "deletions": 12,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/TransactionManager.java",
        "clients/src/main/java/org/apache/kafka/common/requests/TxnOffsetCommitResponse.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java"
      ]
    },
    "message": "KAFKA-14278: Fix InvalidProducerEpochException and InvalidTxnStateException handling in producer clients (#13811)\n\nThis PR fixes three issues:\n\nInvalidProducerEpochException was not handled consistently. InvalidProducerEpochException used to be able to be return via both transactional response and produce response, but as of KIP-588 (2.7+), transactional responses should not return InvalidProducerEpochException anymore, only produce responses can. It can happen that older brokers may still return InvalidProducerEpochException for transactional responses; these must be converted to the newer ProducerFencedException. This conversion wasn't done for TxnOffsetCommit (sent to the group coordinator).\n\nInvalidTxnStateException was double-wrapped in KafkaException, whereas other exceptions are usually wrapped only once. Furthermore, InvalidTxnStateException was not handled at all for in AddOffsetsToTxn response, where it should be a possible error as well, according to API documentation.\n\nAccording to API documentation, UNSUPPORTED_FOR_MESSAGE_FORMAT is not possible for TxnOffsetCommit, but it looks like it is, and it is being handled there, so I updated the API documentation.\n\nReviewers: Justine Olshan <jolshan@confluent.io>",
    "epoch": 1686174494,
    "epoch_utc": null
  },
  {
    "commit": "9cfc4b9373bf887ec2fb95bc607f4ebd1c8613c0",
    "author": "Jorge Esteban Quilcate Otoya",
    "author_email": "quilcate.jorge@gmail.com",
    "date": "Wed Jun 7 10:06:22 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 7 11:06:22 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 0,
      "files": [
        "docs/connect.html"
      ]
    },
    "message": "KAFKA-15051: add missing GET plugin/config endpoint (#13803)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1686143182,
    "epoch_utc": null
  },
  {
    "commit": "59d30a06fc1371d01a853139053bd6bd9bb770a0",
    "author": "Erik van Oosten",
    "author_email": "e.vanoosten@grons.nl",
    "date": "Wed Jun 7 16:55:03 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 7 16:55:03 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 78,
      "deletions": 3,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinatorTest.java"
      ]
    },
    "message": "KAFKA-10337: await async commits in commitSync even if no offsets given (#13678)\n\nThe contract for Consumer#commitSync() guarantees that the callbacks for all prior async commits will be invoked before it returns. Prior to this patch the contract could be violated if an empty offsets map were passed in to Consumer#commitSync().\n\nReviewers: Philip Nee <philipnee@gmail.com>, David Jacot <djacot@confluent.io>",
    "epoch": 1686167703,
    "epoch_utc": null
  },
  {
    "commit": "8ad0ed3e618ed6c101907484d6cdbaee90d3d99c",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Wed Jun 7 07:20:40 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 7 07:20:40 2023 -0700",
    "stats": {
      "files_changed": 12,
      "insertions": 319,
      "deletions": 88,
      "files": [
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/test/java/kafka/test/ClusterTestExtensionsTest.java",
        "core/src/test/java/kafka/test/annotation/ClusterTest.java",
        "core/src/test/scala/integration/kafka/api/BaseProducerSendTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/PartitionChangeBuilder.java",
        "metadata/src/main/java/org/apache/kafka/controller/ReplicationControlManager.java",
        "metadata/src/test/java/org/apache/kafka/controller/PartitionChangeBuilderTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/ReplicationControlManagerTest.java",
        "server-common/src/main/java/org/apache/kafka/server/common/MetadataVersion.java",
        "tools/src/test/java/org/apache/kafka/tools/FeatureCommandTest.java"
      ]
    },
    "message": "KAFKA-15021; Skip leader epoch bump on ISR shrink (#13765)\n\nWhen the KRaft controller removes a replica from the ISR because of the controlled shutdown there is no need for the leader epoch to be increased by the KRaft controller. This is accurate as long as the topic partition leader doesn't add the removed replica back to the ISR.\n\nThis change also fixes a bug when computing the HWM. When computing the HWM, replicas that are not eligible to join the ISR but are caught up should not be included in the computation. Otherwise, the HWM will never increase for replica.lag.time.max.ms because the shutting down replica is not sending FETCH request. Without this additional fix PRODUCE requests would timeout if the request timeout is greater than replica.lag.time.max.ms.\n\nBecause of the bug above the KRaft controller needs to check the MV to guarantee that all brokers support this bug fix before skipping the leader epoch bump.\n\nReviewers: David Mao <47232755+splett2@users.noreply.github.com>, Divij Vaidya <diviv@amazon.com>, David Jacot <djacot@confluent.io>",
    "epoch": 1686133240,
    "epoch_utc": null
  },
  {
    "commit": "e1f29554a511cc53d9b45fed1d5d57654c6ef625",
    "author": "Aman Singh",
    "author_email": "103091061+singhnama@users.noreply.github.com",
    "date": "Wed Jun 7 15:41:08 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jun 7 15:41:08 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 7,
      "deletions": 8,
      "files": [
        "core/src/test/scala/unit/kafka/zk/migration/ZkAclMigrationClientTest.scala"
      ]
    },
    "message": "MINOR: Fix ZkAclMigrationClientTest.testAclsMigrateAndDualWrite test  (#13809)\n\nReviewers: Manikumar Reddy <manikumar.reddy@gmail.com>",
    "epoch": 1686163268,
    "epoch_utc": null
  },
  {
    "commit": "f231fe97a4f1a1a4058eef98dbc2b339576226a5",
    "author": "John Roesler",
    "author_email": "vvcephei@users.noreply.github.com",
    "date": "Tue Jun 6 17:03:44 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 6 17:03:44 2023 -0500",
    "stats": {
      "files_changed": 1,
      "insertions": 6,
      "deletions": 0,
      "files": [
        ".asf.yaml"
      ]
    },
    "message": "MINOR: Retrigger collaborator invites: part 2\n\nAdding and removing some users to re-trigger the invites.",
    "epoch": 1686081824,
    "epoch_utc": null
  },
  {
    "commit": "d0556d0e770b780bf63a3ff2d129207a3fb6ed15",
    "author": "John Roesler",
    "author_email": "vvcephei@users.noreply.github.com",
    "date": "Tue Jun 6 10:33:58 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 6 10:33:58 2023 -0500",
    "stats": {
      "files_changed": 1,
      "insertions": 0,
      "deletions": 6,
      "files": [
        ".asf.yaml"
      ]
    },
    "message": "MINOR: Retrigger collaborator invites: part 1\n\nAdding and removing some users to re-trigger the invites.",
    "epoch": 1686058438,
    "epoch_utc": null
  },
  {
    "commit": "3d349ae0d687dacb014c57d200a748784e8c6bbe",
    "author": "Alok Thatikunta",
    "author_email": "athatikunta@confluent.io",
    "date": "Tue Jun 6 20:59:15 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 6 08:29:15 2023 -0700",
    "stats": {
      "files_changed": 7,
      "insertions": 71,
      "deletions": 26,
      "files": [
        "core/src/main/scala/kafka/raft/KafkaMetadataLog.scala",
        "core/src/main/scala/kafka/raft/RaftManager.scala",
        "core/src/test/scala/kafka/raft/KafkaMetadataLogTest.scala",
        "core/src/test/scala/unit/kafka/tools/DumpLogSegmentsTest.scala",
        "raft/src/main/java/org/apache/kafka/raft/internals/IdentitySerde.java",
        "raft/src/main/java/org/apache/kafka/snapshot/Snapshots.java",
        "raft/src/test/java/org/apache/kafka/snapshot/SnapshotWriterReaderTest.java"
      ]
    },
    "message": "MINOR; Add helper util Snapshots.lastContainedLogTimestamp (#13772)\n\nThis change refactors the lastContainedLogTimestamp to the Snapshots class, for re-usability. Introduces IdentitySerde based on ByteBuffer, required for using RecordsSnapshotReader. This change also removes the \"recordSerde: RecordSerde[_]\" argument from the KafkaMetadataLog constructor.\n\nReviewers: Jos\u00e9 Armando Garc\u00eda Sancio <jsancio@apache.org>",
    "epoch": 1686095955,
    "epoch_utc": null
  },
  {
    "commit": "db9d8457027c1dfb72a33290d18e227d4a02f16d",
    "author": "andymg3",
    "author_email": "97484553+andymg3@users.noreply.github.com",
    "date": "Tue Jun 6 10:58:23 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 6 07:58:23 2023 -0700",
    "stats": {
      "files_changed": 12,
      "insertions": 456,
      "deletions": 247,
      "files": [
        "core/src/test/scala/unit/kafka/server/ReplicaManagerConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/server/metadata/BrokerMetadataPublisherTest.scala",
        "core/src/test/scala/unit/kafka/zk/migration/ZkMigrationClientTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/ReplicationControlManager.java",
        "metadata/src/main/java/org/apache/kafka/metadata/PartitionRegistration.java",
        "metadata/src/test/java/org/apache/kafka/controller/PartitionChangeBuilderTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/PartitionReassignmentReplicasTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/PartitionReassignmentRevertTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/ReplicationControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/metrics/ControllerMetricsTestUtils.java",
        "metadata/src/test/java/org/apache/kafka/image/TopicsImageTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/PartitionRegistrationTest.java"
      ]
    },
    "message": "KAFKA-14791; Create a builder for PartitionRegistration (#13788)\n\nThis creates a builder for PartitionRegistration. The motivation for the builder is that the constructor of PartitionRegistration has four arguments all of type int[] which makes it easy to make a mistake when using it.\n\nReviewers: Jos\u00e9 Armando Garc\u00eda Sancio <jsancio@apache.org>",
    "epoch": 1686059903,
    "epoch_utc": null
  },
  {
    "commit": "7d147cf2413e5d361422728e5c9306574658c78d",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Tue Jun 6 16:24:48 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 6 16:24:48 2023 +0200",
    "stats": {
      "files_changed": 13,
      "insertions": 755,
      "deletions": 28,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/ProduceResponse.java",
        "core/src/main/scala/kafka/coordinator/group/CoordinatorPartitionWriter.scala",
        "core/src/main/scala/kafka/server/ActionQueue.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/unit/kafka/coordinator/AbstractCoordinatorConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/CoordinatorPartitionWriterTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupMetadataManagerTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionStateManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/RecordSerializer.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/PartitionWriter.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/RecordSerializerTest.java"
      ]
    },
    "message": "KAFKA-14462; [14/N] Add PartitionWriter (#13675)\n\nThis patch introduces the `PartitionWriter` interface in the `group-coordinator` module. The `ReplicaManager` resides in the `core` module and it is thus not accessible from the `group-coordinator` one. The `CoordinatorPartitionWriter` is basically an implementation of the interface residing in `core` which interfaces with the `ReplicaManager`.\n\nOne notable difference from the usual produce path is that the `PartitionWriter` returns the offset following the written records. This is then used by the coordinator runtime to track when the request associated with the write can be completed.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1686079488,
    "epoch_utc": null
  },
  {
    "commit": "c8cb85274e9e7c7c797d2d498b54fa58ec238e0e",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Tue Jun 6 06:37:57 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 6 09:37:57 2023 -0400",
    "stats": {
      "files_changed": 7,
      "insertions": 357,
      "deletions": 219,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/DelegatingClassLoader.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginDesc.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginScanResult.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginUtils.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/Plugins.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginDescTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginUtilsTest.java"
      ]
    },
    "message": "MINOR: Refactor DelegatingClassLoader to emit immutable PluginScanResult (#13771)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1686044277,
    "epoch_utc": null
  },
  {
    "commit": "9ebe395c578c9531bae8805471939ad6f65e0b31",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Tue Jun 6 17:10:16 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 6 11:10:16 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 126,
      "deletions": 15,
      "files": [
        "core/src/main/scala/kafka/controller/KafkaController.scala",
        "core/src/test/scala/unit/kafka/controller/KafkaControllerTest.scala"
      ]
    },
    "message": "KAFKA-14866: Remove controller module metrics when broker is shutting down (#13473)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1686082216,
    "epoch_utc": null
  },
  {
    "commit": "04f2f6a26ad14dee71a487a13425c26e55156365",
    "author": "mojh7",
    "author_email": "mjh79017901@gmail.com",
    "date": "Tue Jun 6 17:50:56 2023 +0900",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jun 6 10:50:56 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 3,
      "deletions": 7,
      "files": [
        "clients/src/test/java/org/apache/kafka/test/Microbenchmarks.java",
        "core/src/test/scala/integration/kafka/api/PlaintextAdminIntegrationTest.scala",
        "raft/src/test/java/org/apache/kafka/raft/MockLog.java"
      ]
    },
    "message": "MINOR: Typo and unused method removal (#13739)\n\nclean up unused private method and removed typos\n\nReviewers:  Divij Vaidya <diviv@amazon.com>,  Manyanda Chitimbo <manyanda.chitimbo@gmail.com>,  Daniel Scanteianu, Josep Prat <josep.prat@aiven.io>",
    "epoch": 1686084656,
    "epoch_utc": null
  },
  {
    "commit": "17fd30e6b457f097f6a524b516eca1a6a74a9144",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Mon Jun 5 12:50:54 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jun 5 15:50:54 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 27,
      "deletions": 15,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedHerderTest.java"
      ]
    },
    "message": "MINOR: Fix flaky DistributedHerderTest cases related to zombie fencing (#13806)\n\nReviewers: Yash Mayya <yash.mayya@gmail.com>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1685980254,
    "epoch_utc": null
  },
  {
    "commit": "383a8d6114f1dea671f72e33b8b19503209ba31a",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Mon Jun 5 16:10:59 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jun 5 11:10:59 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 1,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java"
      ]
    },
    "message": "MINOR: Handle the config topic read timeout edge case in DistributedHerder's stopConnector method (#13750)\n\nReviewers: Chris Egerton",
    "epoch": 1685992259,
    "epoch_utc": null
  },
  {
    "commit": "fca7ee7270af55bf5f70f6ff05983ee229843186",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Mon Jun 5 15:04:17 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jun 5 10:04:17 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java"
      ]
    },
    "message": "MINOR: Remove reference to 'offset backing store' from exception message in KafkaBasedLog (#13810)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1685988257,
    "epoch_utc": null
  },
  {
    "commit": "8e60368d90cfcbdf2c3c2fd355b4704380bdda0d",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Mon Jun 5 14:43:03 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jun 5 09:43:03 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 0,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/TransformationChain.java"
      ]
    },
    "message": "MINOR: Re-introduce Transformation import to fix TransformationChain Javadoc (#13808)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1685986983,
    "epoch_utc": null
  },
  {
    "commit": "443bd1dd82d45f1169b3d5ff83d62c4e9220511c",
    "author": "Gabriel Oliveira",
    "author_email": "oliveira.gahenrique@gmail.com",
    "date": "Mon Jun 5 08:40:20 2023 -0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jun 5 13:40:20 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "clients/src/main/resources/common/message/FetchRequest.json"
      ]
    },
    "message": "MINOR: Add \"versions\" tag to recently added ReplicaState field on Fetch Request (#13680)\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1685965220,
    "epoch_utc": null
  },
  {
    "commit": "fe6a827e20d30af5328d7376a831f9666e0c8110",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Mon Jun 5 09:04:49 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jun 5 15:04:49 2023 +0800",
    "stats": {
      "files_changed": 16,
      "insertions": 1078,
      "deletions": 303,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/compress/ZstdFactory.java",
        "clients/src/main/java/org/apache/kafka/common/record/CompressionType.java",
        "clients/src/main/java/org/apache/kafka/common/record/DefaultRecord.java",
        "clients/src/main/java/org/apache/kafka/common/record/DefaultRecordBatch.java",
        "clients/src/main/java/org/apache/kafka/common/utils/ByteBufferInputStream.java",
        "clients/src/main/java/org/apache/kafka/common/utils/ByteUtils.java",
        "clients/src/main/java/org/apache/kafka/common/utils/ChunkedBytesStream.java",
        "clients/src/main/java/org/apache/kafka/common/utils/Utils.java",
        "clients/src/test/java/org/apache/kafka/common/record/CompressionTypeTest.java",
        "clients/src/test/java/org/apache/kafka/common/record/DefaultRecordBatchTest.java",
        "clients/src/test/java/org/apache/kafka/common/record/DefaultRecordTest.java",
        "clients/src/test/java/org/apache/kafka/common/utils/ByteBufferInputStreamTest.java",
        "clients/src/test/java/org/apache/kafka/common/utils/ByteUtilsTest.java",
        "clients/src/test/java/org/apache/kafka/common/utils/ChunkedBytesStreamTest.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/record/BaseRecordBatchBenchmark.java",
        "raft/src/main/java/org/apache/kafka/raft/internals/RecordsIterator.java"
      ]
    },
    "message": "KAFKA-14633: Reduce data copy & buffer allocation during decompression (#13135)\n\nAfter this change,\n\nFor broker side decompression: JMH benchmark RecordBatchIterationBenchmark demonstrates 20-70% improvement in throughput (see results for RecordBatchIterationBenchmark.measureSkipIteratorForVariableBatchSize).\nFor consumer side decompression: JMH benchmark RecordBatchIterationBenchmark a mix bag of single digit regression for some compression type to 10-50% improvement for Zstd (see results for RecordBatchIterationBenchmark.measureStreamingIteratorForVariableBatchSize).\n\nReviewers: Luke Chen <showuon@gmail.com>, Manyanda Chitimbo <manyanda.chitimbo@gmail.com>, Ismael Juma <mail@ismaeljuma.com>",
    "epoch": 1685966689,
    "epoch_utc": null
  },
  {
    "commit": "aec30d7ca8ca467ece4875e32267272eac1197c4",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Mon Jun 5 15:02:35 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jun 5 15:02:35 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 1,
      "files": [
        "release.py"
      ]
    },
    "message": "MINOR: update release.py (#13775)\n\nUpdate release.py script:\n-  fix typo\n-  add more info about closing repository in stagingRepository\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1685988155,
    "epoch_utc": null
  },
  {
    "commit": "7a6435af499fc98207747be231997ebd76761a36",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Mon Jun 5 15:00:16 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jun 5 15:00:16 2023 +0800",
    "stats": {
      "files_changed": 10,
      "insertions": 35,
      "deletions": 24,
      "files": [
        "core/src/main/java/kafka/server/builders/LogManagerBuilder.java",
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/unit/kafka/log/LogLoaderTest.scala",
        "core/src/test/scala/unit/kafka/log/LogTestUtils.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala",
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/ConsumerTask.java"
      ]
    },
    "message": "KAFKA-15037: pass remoteLogEnabled to unifiedLog (#13779)\n\nUnifiedLog relied on the remoteStorageSystemEnable to identify if the broker is enabling remote storage, but we never pass this value from the config into UnifiedLog. So it'll always be false.\n\nIn this PR, I did:\n\n- pass remoteStorageSystemEnable to UnifiedLog\n- remove remoteLogManager from the class member of UnifiedLog since only UnifiedLog#fetchOffsetByTimestamp needs remoteLogManager, and this can be passed when called from ReplicaManager.\n\nReviewers: Satish Duggana <satishd@apache.org>, Kamal Chandraprakash <kamal.chandraprakash@gmail.com>",
    "epoch": 1685988016,
    "epoch_utc": null
  },
  {
    "commit": "0d5cf4c3855bcc55410687176dfaf7e3eb6f0a51",
    "author": "Dimitar Dimitrov",
    "author_email": "30328539+dimitarndimitrov@users.noreply.github.com",
    "date": "Sun Jun 4 20:02:27 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Jun 4 11:02:27 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 21,
      "deletions": 15,
      "files": [
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java"
      ]
    },
    "message": "KAFKA-15052 Fix the flaky QuorumControllerTest.testBalancePartitionLeaders (#13804)\n\nIn this test broker session timeout is configured aggressively low\n(to 1 second) so that fencing can happen without much waiting. Then\nin the final portion of the test when brokers should not be fenced\nheartbeats are sent roughly 2 times in a session timeout window.\nHowever the first time that's done there's other code between\nsending the heartbeat and taking the timestamp, and in local tests\nthat code can take up to 0.5 seconds (1/2 of the session timeout).\nThat then can result in all brokers being fenced again which would\nfail the test.\n\nThis change sends a heartbeat just when a timestamp is taken,\nwhich in local tests results flaky failures from 4 out of 50\nto 0 out of 50.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1685919747,
    "epoch_utc": null
  },
  {
    "commit": "6678f1b66aee598355164b8ac07762db130ddcc5",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Sat Jun 3 09:55:20 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Jun 3 12:55:20 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/TestPlugins.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorPluginsResourceTest.java"
      ]
    },
    "message": "KAFKA-14863: Fix failing tests for invalid plugins that are no longer visible (#13805)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1685796920,
    "epoch_utc": null
  },
  {
    "commit": "146a6976aed0d9f90c70b6f21dca8b887cc34e71",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Fri Jun 2 12:51:15 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jun 2 12:51:15 2023 -0700",
    "stats": {
      "files_changed": 8,
      "insertions": 312,
      "deletions": 76,
      "files": [
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/SharedServer.scala",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/controller/ReplicationControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/errors/ControllerExceptions.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTestEnv.java",
        "metadata/src/test/java/org/apache/kafka/controller/ReplicationControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/errors/ControllerExceptionsTest.java"
      ]
    },
    "message": "KAFKA-15048: Improve handling of unexpected quorum controller errors (#13799)\n\nWhen the active quorum controller encounters an \"unexpected\" error, such as a NullPointerException,\nit currently resigns its leadership. This PR fixes it so that in addition to doing that, it also\nincrements the metadata error count metric. This will allow us to better track down these errors.\n\nThis PR also fixes a minor bug where performing read operations on a standby controller would\nresult in an unexpected RuntimeException. The bug happened because the standby controller does not\ntake in-memory snapshots, and read operations were attempting to read from the epoch of the latest\ncommitted offset. The fix is for the standby controller to simply read the latest value of each\ndata structure. This is always safe, because standby controllers don't contain uncommitted data.\n\nAlso, fix a bug where listPartitionReassignments was reading the latest data, rather than data from\nthe last committed offset.\n\nReviewers: dengziming <dengziming1993@gmail.com>, David Arthur <mumrah@gmail.com>",
    "epoch": 1685721075,
    "epoch_utc": null
  },
  {
    "commit": "e5d67b81fd6bc6fbc6533d0a8a0f63fdcb298662",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Fri Jun 2 21:21:51 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jun 2 21:21:51 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 78,
      "deletions": 0,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorLoader.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorPlayback.java"
      ]
    },
    "message": "KAFKA-14462; [16/N] Add CoordinatorLoader and CoordinatorPlayback interfaces (#13794)\n\nThis patch adds the CoordinatorLoader and the CoordinatorPlayback interfaces. The former is used to load (or rebuild) the coordinator state by replaying all the records stored in the partition. The later is the interface that must be implemented by coordinator to support replaying records.\n\nReviewers: Calvin Liu <caliu@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1685751711,
    "epoch_utc": null
  },
  {
    "commit": "02fb4b882b86bc835cf4b0bbdaee099d6056799b",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Fri Jun 2 16:20:37 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jun 2 11:20:37 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 13,
      "deletions": 2,
      "files": [
        "connect/json/src/main/java/org/apache/kafka/connect/json/JsonDeserializer.java",
        "connect/json/src/test/java/org/apache/kafka/connect/json/JsonConverterTest.java"
      ]
    },
    "message": "KAFKA-15012: Allow leading zeros in numeric fields while deserializing JSON messages using the JsonConverter (#13800)\n\nReviewers: Sagar Rao <sagarmeansocean@gmail.com>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1685733637,
    "epoch_utc": null
  },
  {
    "commit": "89581a738f6a67f1735956d0ac7f0c7a2e14822e",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Fri Jun 2 08:09:43 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jun 2 11:09:43 2023 -0400",
    "stats": {
      "files_changed": 6,
      "insertions": 144,
      "deletions": 4,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/DelegatingClassLoader.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginsTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/TestPlugins.java",
        ".../META-INF/services/org.apache.kafka.connect.connector.policy.ConnectorClientConfigOverridePolicy",
        ".../runtime/src/test/resources/test-plugins/bad-packaging/test/plugins/NoDefaultConstructorConverter.java",
        ".../src/test/resources/test-plugins/bad-packaging/test/plugins/NoDefaultConstructorOverridePolicy.java"
      ]
    },
    "message": "KAFKA-14863: Hide plugins with invalid constructors during plugin discovery (#13467)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1685704183,
    "epoch_utc": null
  },
  {
    "commit": "7c3a2846d46f21f2737483eeb7c04e4eee4c2b5f",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Fri Jun 2 09:18:09 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jun 2 09:18:09 2023 +0200",
    "stats": {
      "files_changed": 4,
      "insertions": 34,
      "deletions": 30,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/{Result.java => runtime/CoordinatorResult.java}",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/{ResultTest.java => runtime/CoordinatorResultTest.java}"
      ]
    },
    "message": "KAFKA-14462; [15/N] Make Result generic and rename it (#13793)\n\nThis patch makes the record type generic, moves the class to the runtime package and finally rename the class to follow the naming of the other classes in the runtime package.\n\nReviewers: Calvin Liu <caliu@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1685708289,
    "epoch_utc": null
  },
  {
    "commit": "f4996629239a49afb570a725642fb0311dd42e71",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Thu Jun 1 15:32:41 2023 -0700",
    "commit_by": "Colin P. McCabe",
    "commit_by_email": "cmccabe@apache.org",
    "commit_by_date": "Thu Jun 1 15:43:41 2023 -0700",
    "stats": {
      "files_changed": 9,
      "insertions": 476,
      "deletions": 32,
      "files": [
        "core/src/main/scala/kafka/zk/migration/ZkTopicMigrationClient.scala",
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/zk/migration/ZkMigrationClientTest.scala",
        "metadata/src/main/java/org/apache/kafka/image/TopicDelta.java",
        "metadata/src/main/java/org/apache/kafka/metadata/PartitionRegistration.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationZkWriter.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/TopicMigrationClient.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/CapturingTopicMigrationClient.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationZkWriterTest.java"
      ]
    },
    "message": "KAFKA-15003: Fix ZK sync logic for partition assignments (#13735)\n\nFixed the metadata change events in the Migration component to check correctly for the diff in\nexisting topic changes and replicate the metadata to the Zookeeper. Also, made the diff check\nexhaustive enough to handle the partial writes in Zookeeper when we're try to replicate changes\nusing a snapshot in the event of Controller failover.\n\nAdd migration client and integration tests to verify the change.\n\nCo-authored-by: Akhilesh Chaganti <akhileshchg@users.noreply.github.com>",
    "epoch": 1685644361,
    "epoch_utc": null
  },
  {
    "commit": "47551ea369cd72171900a73d5b79137cff731203",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Thu Jun 1 22:33:40 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 1 13:33:40 2023 -0700",
    "stats": {
      "files_changed": 7,
      "insertions": 583,
      "deletions": 4,
      "files": [
        "checkstyle/import-control.xml",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorEvent.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/CoordinatorEventProcessor.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/EventAccumulator.java",
        ".../src/main/java/org/apache/kafka/coordinator/group/runtime/MultiThreadedEventProcessor.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/runtime/EventAccumulatorTest.java",
        ".../src/test/java/org/apache/kafka/coordinator/group/runtime/MultiThreadedEventProcessorTest.java"
      ]
    },
    "message": "KAFKA-14462; [13/N] CoordinatorEvent and CoordinatorEventProcessor (#13666)\n\nAdds CoordinatorEvent, CoordinatorEventProcessor, and MultiThreadedEventProcessor.\n\nReviewers: Kirk True <ktrue@confluent.io>, Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1685669620,
    "epoch_utc": null
  },
  {
    "commit": "ddad02baa6d2ce9cfa96176509bf6276409ac628",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Thu Jun 1 13:29:52 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 1 13:29:52 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 78,
      "deletions": 66,
      "files": [
        "core/src/main/scala/kafka/server/AddPartitionsToTxnManager.scala",
        "core/src/test/scala/unit/kafka/server/AddPartitionsToTxnManagerTest.scala"
      ]
    },
    "message": "MINOR: Covering all epoch cases in add partitions to txn manager (#13769)\n\nCleaning up the AddPartitionsToTxnManager and covering the 3 epoch cases more clearly.\n\nReviewers:  David Jacot <djacot@confluent.io>",
    "epoch": 1685636992,
    "epoch_utc": null
  },
  {
    "commit": "9bb2f78d53a44c245775d082c1f1bf8ba6955bae",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Thu Jun 1 20:14:31 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 1 15:14:31 2023 -0400",
    "stats": {
      "files_changed": 4,
      "insertions": 90,
      "deletions": 4,
      "files": [
        "build.gradle",
        "checkstyle/import-control-jmh-benchmarks.xml",
        "connect/transforms/src/main/java/org/apache/kafka/connect/transforms/ReplaceField.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/connect/ReplaceFieldBenchmark.java"
      ]
    },
    "message": "KAFKA-15034: Improve performance of the ReplaceField SMT; add JMH benchmark (#13776)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1685661271,
    "epoch_utc": null
  },
  {
    "commit": "1f61ddc0015db7b8fe4c289dc48fb4c3386fb5a7",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Thu Jun 1 17:43:20 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 1 17:43:20 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 61,
      "deletions": 2,
      "files": [
        "docs/upgrade.html"
      ]
    },
    "message": "MINOR: Add 3.5 upgrade steps for ZK and KRaft (#13792)\n\n\nReviewers: Tom Bentley <tbentley@redhat.com>",
    "epoch": 1685652200,
    "epoch_utc": null
  },
  {
    "commit": "d27ba5bfba46647401218d5c1b5d6a1a51a6b631",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Thu Jun 1 10:25:46 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 1 10:25:46 2023 -0400",
    "stats": {
      "files_changed": 23,
      "insertions": 649,
      "deletions": 119,
      "files": [
        "core/src/main/scala/kafka/zk/ZkMigrationClient.scala",
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/zk/migration/ZkAclMigrationClientTest.scala",
        "core/src/test/scala/unit/kafka/zk/migration/ZkConfigMigrationClientTest.scala",
        "core/src/test/scala/unit/kafka/zk/migration/ZkMigrationClientTest.scala",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationOperationConsumer.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationZkWriter.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/MigrationClient.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/MigrationDriverState.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/ZkMigrationLeadershipState.java",
        "metadata/src/test/java/org/apache/kafka/image/AclsImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/ClientQuotasImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/ConfigurationsImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/FeaturesImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/ProducerIdsImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/ScramImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/TopicsImageTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/CapturingMigrationClient.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationDriverTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationZkWriterTest.java",
        "tests/kafkatest/services/zookeeper.py",
        "tests/kafkatest/tests/core/zookeeper_migration_test.py"
      ]
    },
    "message": "KAFKA-15010 ZK migration failover support (#13758)\n\nThis patch adds snapshot reconciliation during ZK to KRaft migration. This reconciliation happens whenever a snapshot is loaded by KRaft, or during a controller failover. Prior to this patch, it was possible to miss metadata updates coming from KRaft when dual-writing to ZK.\n\nInternally this adds a new state SYNC_KRAFT_TO_ZK to the KRaftMigrationDriver state machine. The controller passes through this state after the initial ZK migration and each time a controller becomes active.\n\nLogging during dual-write was enhanced to include a count of write operations happening.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1685625946,
    "epoch_utc": null
  },
  {
    "commit": "115a033e3c03623af071e79aa866b50df9b0989d",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Thu Jun 1 11:17:54 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 1 11:17:54 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 3,
      "deletions": 1,
      "files": [
        "LICENSE-binary",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "MINOR: Update LICENSE-binary following snappy upgrade (#13791)\n\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1685629074,
    "epoch_utc": null
  },
  {
    "commit": "e1913d2e4eb47a4aeefa472c2f6220708339a25e",
    "author": "\u84dd\u58eb\u94a6",
    "author_email": "lanshiqin@outlook.com",
    "date": "Thu Jun 1 17:06:12 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 1 17:06:12 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 28,
      "deletions": 0,
      "files": [
        "core/src/test/scala/unit/kafka/log/LogSegmentTest.scala"
      ]
    },
    "message": "MINOR: Add log segment unit tests, If the maximum offset beyond index, appen\u2026 (#13584)\n\nAdd log segment unit tests, If the maximum offset beyond index, appended to the log section, it throws LogSegmentOffsetOverflowException\n\n*More detailed description of change\nThe unit tests for the log segment should cover more scenario validation, and the unit tests submitted this time cover LogSegmentOffsetOverflowException that are expected to be thrown when the maximum index is exceeded\n\nReviewers: Luke Chen <showuon@gmail.com>, Divij Vaidya <diviv@amazon.com>, Alexandre Dupriez <alexandre.dupriez@gmail.com>",
    "epoch": 1685649972,
    "epoch_utc": null
  },
  {
    "commit": "e33172924ed200a56d58911e0b95051a21b19941",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Thu Jun 1 16:58:24 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 1 16:58:24 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        ".asf.yaml"
      ]
    },
    "message": "MINOR: reorder collaborator (#13790)\n\nreorder collaborator list and hope the invitation can be resent!\n\nReviewers: Bruno Cadonna <cadonna@apache.org>, Josep Prat <josep.prat@aiven.io>",
    "epoch": 1685649504,
    "epoch_utc": null
  },
  {
    "commit": "4b46bb4904775c614b2ef4402b3d9777d968d706",
    "author": "Milind Mantri",
    "author_email": "milind@milindmantri.com",
    "date": "Thu Jun 1 12:46:00 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 1 09:16:00 2023 +0200",
    "stats": {
      "files_changed": 9,
      "insertions": 86,
      "deletions": 47,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/StreamsBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/CogroupedKStream.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/KGroupedStream.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/KGroupedTable.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/KTable.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/SessionWindowedCogroupedKStream.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/SessionWindowedKStream.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedCogroupedKStream.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedKStream.java"
      ]
    },
    "message": "KAFKA-12562: Fix KafkaStreams#store old references in comments (#13774)\n\nFollowing method was deprecated in 2.5 and was removed in 3.0.0.\n\n// KafkaStreams.java\npublic <T> T store(final String storeName, final QueryableStoreType<T> queryableStoreType);\n\nHowever, many comments reference the removed method which can be confusing in generated JavaDocs. The code in java doc comments has been changed to reflect the new method, store(final StoreQueryParameters<T> storeQueryParameters).\n\nAlso, minor changes to variable names in java doc to be context specific.\n\nReviewer: Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1685634360,
    "epoch_utc": null
  },
  {
    "commit": "560ab2cc319899d7ce1181408507061e90752d3e",
    "author": "Mehari Beyene",
    "author_email": "132488287+mehbey@users.noreply.github.com",
    "date": "Wed May 31 23:47:31 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jun 1 08:47:31 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 276,
      "deletions": 337,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java"
      ]
    },
    "message": "KAFKA-14133: Migrate ActiveTaskCreator mock in TaskManagerTest to Mockito (#13681)\n\nThis pull requests migrates the ActiveTaskCreator mock in TaskManagerTest from EasyMock to Mockito\nThe change is restricted to a single mock to minimize the scope and make it easier for review.\nPlease see two examples that follow the same pattern below:\n#13529\n#13621\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Manyanda Chitimbo <manyanda.chitimbo@gmail.com>, Christo Lolov <lolovc@amazon.com>, Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1685587651,
    "epoch_utc": null
  },
  {
    "commit": "f9b2b3a047db5f02ed3e9a41acd044902f197b19",
    "author": "David Mao",
    "author_email": "47232755+splett2@users.noreply.github.com",
    "date": "Wed May 31 14:46:00 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 31 14:46:00 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "gradle/dependencies.gradle"
      ]
    },
    "message": "Upgrade to snappy v1.1.10.0 (#13786)\n\nSnappy v1.1.9.1 has some issues around arm compatibility and glibc library versions shipped by default with certain OS distributions. Snappy v1.1.10.0 uses a glibc LTS version, see: xerial/snappy-java#417 xerial/snappy-java#440\n\nReviewers: Justine Olshan <jolshan@confluent.io>",
    "epoch": 1685555160,
    "epoch_utc": null
  },
  {
    "commit": "e74e5e7ac5be7e5dccd7f6addccf74397680a293",
    "author": "Ron Dagostino",
    "author_email": "rndgstn@gmail.com",
    "date": "Wed May 31 16:26:01 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 31 16:26:01 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 11,
      "deletions": 8,
      "files": [
        "metadata/src/main/java/org/apache/kafka/controller/PartitionChangeBuilder.java"
      ]
    },
    "message": "KAFKA-15039: Reduce logging level to trace in PartitionChangeBuilder.\u2026 (#13780)\n\n\u2026tryElection()\n\nA CPU profile in a large cluster showed PartitionChangeBuilder.tryElection() taking significant CPU due to logging. We adjust the logging statements in that method for clean elections from DEBUG level to TRACE to mitigate the impact of this logging under normal operations.  Unclean elections are now logged at the INFO level rather than DEBUG.\n\nReviewers: Jason Gustafson <jason@confluent.io>, Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1685561161,
    "epoch_utc": null
  },
  {
    "commit": "731c8c967e04ffe212e8b4d8ea15e67f22a60e65",
    "author": "Proven Provenzano",
    "author_email": "93720617+pprovenzano@users.noreply.github.com",
    "date": "Wed May 31 15:42:00 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 31 15:42:00 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 96,
      "deletions": 8,
      "files": [
        "core/src/test/scala/unit/kafka/zk/migration/ZkConfigMigrationClientTest.scala",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationZkWriter.java"
      ]
    },
    "message": "KAFKA-15017 Fix snapshot load in dual write mode for ClientQuotas and SCRAM  (#13757)\n\nThis patch fixes the case where a ClientQuota or SCRAM credential was added in KRaft, but not written back to ZK. This missed write only occurred when handling a KRaft snapshot. If the changed quota was processed in a metadata delta (which is the typical case), it would be written to ZK.\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1685558520,
    "epoch_utc": null
  },
  {
    "commit": "9b3db6d50a9bb892032fa0c09692241fe070103a",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Wed May 31 10:49:05 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 31 10:49:05 2023 -0700",
    "stats": {
      "files_changed": 9,
      "insertions": 280,
      "deletions": 56,
      "files": [
        "core/src/test/scala/integration/kafka/server/KRaftClusterTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/BrokerHeartbeatManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/ClusterControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/controller/ReplicationControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/errors/ControllerExceptions.java",
        "metadata/src/main/java/org/apache/kafka/controller/metrics/QuorumControllerMetrics.java",
        "metadata/src/test/java/org/apache/kafka/controller/ReplicationControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/errors/ControllerExceptionsTest.java"
      ]
    },
    "message": "KAFKA-15019: Improve handling of broker heartbeat timeouts (#13759)\n\nWhen the active KRaft controller is overloaded, it will not be able to process broker heartbeat\nrequests. Instead, they will be timed out. When using the default configuration, this will happen\nif the time needed to process a broker heartbeat climbs above a second for a sustained period.\nThis, in turn, could lead to brokers being improperly fenced when they are still alive.\n\nWith this PR, timed out heartbeats will still update the lastContactNs and metadataOffset of the\nbroker in the BrokerHeartbeatManager. While we don't generate any records, this should still be\nadequate to prevent spurious fencing. We also log a message at ERROR level so that this condition\nwill be more obvious.\n\nOther small changes in this PR: fix grammar issue in log4j of BrokerHeartbeatManager. Add JavaDoc\nfor ClusterControlManager#zkMigrationEnabled field. Add builder for ReplicationControlTestContext\nto avoid having tons of constructors. Update ClusterControlManager.DEFAULT_SESSION_TIMEOUT_NS to\nmatch the default in KafkaConfig.\n\nReviewers: Ismael Juma <ijuma@apache.org>, Ron Dagostino <rdagostino@confluent.io>",
    "epoch": 1685540945,
    "epoch_utc": null
  },
  {
    "commit": "6846f51445d2201724c698461e2e54edc6c3eadd",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Wed May 31 09:57:58 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 31 12:57:58 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerConfig.java"
      ]
    },
    "message": "MINOR: Remove spurious warning about plugin.path config provider usage when null (#13783)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1685537878,
    "epoch_utc": null
  },
  {
    "commit": "7e9a82c7324ac2aaf18883989035f71611197a2a",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Wed May 31 18:48:26 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 31 18:48:26 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 5,
      "deletions": 3,
      "files": [
        "tools/src/main/java/org/apache/kafka/tools/MetadataQuorumCommand.java",
        "tools/src/test/java/org/apache/kafka/tools/MetadataQuorumCommandErrorTest.java"
      ]
    },
    "message": "MINOR: Fix for MetadataQuorumCommandErrorTest.testRelativeTimeMs (#13784)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, David Jacot <djacot@confluent.io>",
    "epoch": 1685569706,
    "epoch_utc": null
  },
  {
    "commit": "03ab5632065eb6ccac24924e90d296d22122319b",
    "author": "vamossagar12",
    "author_email": "sagarmeansocean@gmail.com",
    "date": "Wed May 31 19:56:31 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 31 16:26:31 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 9,
      "deletions": 9,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ExactlyOnceWorkerSourceTask.java"
      ]
    },
    "message": "MINOR: Fixing typo in ExactlyOnceWorkerSourceTask#committableRecords (#13755)\n\nCo-authored-by: Sagar Rao <sagarrao@Sagars-MacBook-Pro.local>\n\nReviewers: Yash Mayya <yash.mayya@gmail.com>, Viktor Somogyi-Vass <viktorsomogyi@gmail.com>",
    "epoch": 1685573791,
    "epoch_utc": null
  },
  {
    "commit": "1957be19d963d3416e3d75a763f0248a51604efc",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Wed May 31 06:48:03 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 31 15:48:03 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 40,
      "deletions": 1,
      "files": [
        "connect/json/src/main/java/org/apache/kafka/connect/json/JsonConverter.java",
        "connect/json/src/test/java/org/apache/kafka/connect/json/JsonConverterTest.java"
      ]
    },
    "message": "KAFKA-8713: JsonConverter replace.null.with.default should prevent emitting default for Struct fields (#13781)\n\nCo-authored-by: GeunJae Jeon <krespo>\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1685526483,
    "epoch_utc": null
  },
  {
    "commit": "08d47cb41d78e448bc73e1751f22895bb2f0ad3e",
    "author": "Josep Prat",
    "author_email": "jlprat@apache.org",
    "date": "Wed May 31 15:27:48 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 31 15:27:48 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 7,
      "deletions": 8,
      "files": [
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java"
      ]
    },
    "message": "MINOR: Clean up RemoteLogManager (#13785)\n\nCleans up some warnings in class, like Raw referencing a parametrized type and lambdas instead of method references.\n\nSigned-off-by: Josep Prat <josep.prat@aiven.io>\n\nReviewers: Luke Chen <showuon@gmail.com>,  Manyanda Chitimbo <manyanda.chitimbo@gmail.com>,  Satish Duggana <satishd@apache.org>",
    "epoch": 1685557668,
    "epoch_utc": null
  },
  {
    "commit": "49d9c6775dedd1abcf45683d6c9e3d9c6c05db9c",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Wed May 31 08:29:41 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 31 08:29:41 2023 +0200",
    "stats": {
      "files_changed": 12,
      "insertions": 4175,
      "deletions": 54,
      "files": [
        "checkstyle/import-control.xml",
        "checkstyle/suppressions.xml",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupMetadataManager.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/RecordHelpers.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroup.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroupMember.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/CurrentAssignmentBuilder.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/GroupMetadataManagerTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/RecordHelpersTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroupMemberTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroupTest.java",
        ".../src/test/java/org/apache/kafka/coordinator/group/consumer/CurrentAssignmentBuilderTest.java"
      ]
    },
    "message": "KAFKA-14462; [12/N] Add GroupMetadataManager and ConsumerGroup (#13639)\n\nThis patch adds the GroupMetadataManager to the group-coordinator module. This manager is responsible for handling the groups management, the members management and the entire reconciliation process. At this point, only the new consumer group type/protocol is implemented.\n\nThe new manager is based on an architecture inspired from the quorum controller. A request can access/read the state but can't mutate it directly. Instead, a list of records is generated together with the response and those records are applied to the state by the runtime framework. We use timeline data structures. Note that the runtime framework is not part of this patch. It will come in a following one.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1685532581,
    "epoch_utc": null
  },
  {
    "commit": "9edf2ec5cce7bd92f3a7fb0617774374b681cd2c",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Tue May 30 13:46:17 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue May 30 13:46:17 2023 -0700",
    "stats": {
      "files_changed": 27,
      "insertions": 44,
      "deletions": 37,
      "files": [
        "core/src/main/java/kafka/server/builders/LogManagerBuilder.java",
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/main/scala/kafka/raft/KafkaMetadataLog.scala",
        "core/src/test/scala/other/kafka/StressTestLog.scala",
        "core/src/test/scala/other/kafka/TestLinearWriteSpeed.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionLockTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/log/AbstractLogCleanerIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/BrokerCompressionTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/log/LogLoaderTest.scala",
        "core/src/test/scala/unit/kafka/log/LogManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogSegmentTest.scala",
        "core/src/test/scala/unit/kafka/log/LogTestUtils.scala",
        "core/src/test/scala/unit/kafka/log/ProducerStateManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "core/src/test/scala/unit/kafka/tools/DumpLogSegmentsTest.scala",
        "core/src/test/scala/unit/kafka/utils/SchedulerTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/fetcher/ReplicaFetcherThreadBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/partition/PartitionMakeFollowerBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/partition/UpdateFollowerFetchStateBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/server/PartitionCreationBench.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/ProducerStateManagerConfig.java"
      ]
    },
    "message": "MINOR: Add transaction verification config to producerStateManager config (#13770)\n\nI have moved this config into producer state manager so it can be checked easily under the log lock when we are about to append.\n\nOnly a few test files currently use the validation and those have been verified to work via running the tests.\n\nReviews:  David Jacot <djacot@confluent.io>",
    "epoch": 1685465177,
    "epoch_utc": null
  },
  {
    "commit": "d557f7997359daa5853d446d9093995577540de2",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Tue May 30 10:40:27 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue May 30 10:40:27 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 10,
      "deletions": 3,
      "files": [
        "core/src/test/scala/integration/kafka/server/FetchFromFollowerIntegrationTest.scala"
      ]
    },
    "message": "MINOR: Hopefully fix flaky FetchFromFollowerIntegrationTest.testRackAwareRangeAssignor (#13754)\n\nThis test fails regularly in CI ([example](https://ci-builds.apache.org/blue/organizations/jenkins/Kafka%2Fkafka-pr/detail/PR-13753/1/tests)). This is an attempt to stabilize it.\n\nReviewers: Rajini Sivaram <rajinisivaram@googlemail.com>",
    "epoch": 1685454027,
    "epoch_utc": null
  },
  {
    "commit": "45520c1342fea9598e608a402ffd2ed8c5e69245",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Mon May 29 04:04:46 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon May 29 10:04:46 2023 +0800",
    "stats": {
      "files_changed": 3,
      "insertions": 103,
      "deletions": 20,
      "files": [
        "tools/src/main/java/org/apache/kafka/tools/MetadataQuorumCommand.java",
        "tools/src/test/java/org/apache/kafka/tools/MetadataQuorumCommandErrorTest.java",
        "tools/src/test/java/org/apache/kafka/tools/MetadataQuorumCommandTest.java"
      ]
    },
    "message": "KAFKA-14982: Improve the kafka-metadata-quorum output (#13738)\n\nWhen running kafka-metadata-quorum script to get the quorum replication status, the LastFetchTimestamp and LastCaughtUpTimestamp output is not human-readable.\n\nI will be convenient to add an optional flag (-hr, --human-readable) to enable a human-readable format showing the delay in ms (i.e. 366 ms ago).\n\nThis dealy is computed as (now - timestamp), where they are both represented as Unix time (UTC based).\n\n$ bin/kafka-metadata-quorum.sh --bootstrap-server :9092 describe --replication --human-readable\nNodeId  LogEndOffset    Lag     LastFetchTimestamp      LastCaughtUpTimestamp   Status\n2       61              0       5 ms ago                5 ms ago                Leader\n3       61              0       56 ms ago               56 ms ago               Follower\n4       61              0       56 ms ago               56 ms ago               Follower\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1685343886,
    "epoch_utc": null
  },
  {
    "commit": "7a679af687a47dcfee365808301aa99ede1719d0",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Sat May 27 17:20:44 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat May 27 17:20:44 2023 -0400",
    "stats": {
      "files_changed": 11,
      "insertions": 257,
      "deletions": 72,
      "files": [
        "core/src/main/scala/kafka/zk/ZkMigrationClient.scala",
        "core/src/main/scala/kafka/zk/migration/ZkConfigMigrationClient.scala",
        "core/src/main/scala/kafka/zk/migration/ZkTopicMigrationClient.scala",
        "core/src/test/scala/unit/kafka/zk/migration/ZkConfigMigrationClientTest.scala",
        "core/src/test/scala/unit/kafka/zk/migration/ZkMigrationClientTest.scala",
        "core/src/test/scala/unit/kafka/zk/migration/ZkMigrationTestHarness.scala",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/ConfigMigrationClient.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationZkWriter.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/TopicMigrationClient.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/CapturingConfigMigrationClient.java"
      ]
    },
    "message": "KAFKA-15004: Fix configuration dual-write during migration (#13767)\n\nThis patch fixes several small bugs with configuration dual-write during migration.\n\n* Topic configs are not written back to ZK while handling snapshot.\n* New broker/topic configs in KRaft that did not exist in ZK will not be written to ZK.\n* The sensitive configs are not encoded while writing them to Zookeeper.\n* Handle topic configs in ConfigMigrationClient and KRaftMigrationZkWriter#handleConfigsSnapshot\n\nAdded tests to ensure we no longer have the above mentioned issues.\n\nCo-authored-by: Akhilesh Chaganti <akhileshchg@users.noreply.github.com>\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1685218844,
    "epoch_utc": null
  },
  {
    "commit": "b74204fa0a41e5779d513116cb32c0f24e7662c2",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Fri May 26 13:16:17 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri May 26 13:16:17 2023 -0700",
    "stats": {
      "files_changed": 12,
      "insertions": 511,
      "deletions": 16,
      "files": [
        "checkstyle/import-control-metadata.xml",
        "core/src/test/scala/integration/kafka/server/KRaftClusterTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/AclControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/ClientQuotaControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/ConfigurationControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/FeatureControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/controller/ReplicationControlManager.java",
        "metadata/src/test/java/org/apache/kafka/controller/ClientQuotaControlManagerTest.java",
        "server-common/src/main/java/org/apache/kafka/server/mutable/BoundedList.java",
        "server-common/src/main/java/org/apache/kafka/server/mutable/BoundedListTooLongException.java",
        "server-common/src/test/java/org/apache/kafka/server/mutable/BoundedListTest.java"
      ]
    },
    "message": "KAFKA-14996: Handle overly large user operations on the kcontroller (#13742)\n\nPreviously, if a user tried to perform an overly large batch operation on the KRaft controller\n(such as creating a million topics), we would create a very large number of records in memory. Our\nattempt to write these records to the Raft layer would fail, because there were too many to fit in\nan atomic batch. This failure, in turn, would trigger a controller failover.\n\n(Note: I am assuming here that no topic creation policy was in place that would prevent the\ncreation of a million topics. I am also assuming that the user operation must be done atomically,\nwhich is true for all current user operations, since we have not implemented KIP-868 yet.)\n\nWith this PR, we fail immediately when the number of records we have generated exceeds the\nthreshold that we can apply. This failure does not generate a controller failover. We also now\nfail with a PolicyViolationException rather than an UnknownServerException.\n\nIn order to implement this in a simple way, this PR adds the BoundedList class, which wraps any\nlist and adds a maximum length. Attempts to grow the list beyond this length cause an exception to\nbe thrown.\n\nReviewers: David Arthur <mumrah@gmail.com>, Ismael Juma <ijuma@apache.org>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1685117777,
    "epoch_utc": null
  },
  {
    "commit": "9aac5ff1fe23fdd0bc8442dd2da03a4517f4dba8",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Fri May 26 09:36:00 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri May 26 12:36:00 2023 -0400",
    "stats": {
      "files_changed": 8,
      "insertions": 85,
      "deletions": 77,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/DelegatingClassLoader.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/PluginUtils.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/Plugins.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/DelegatingClassLoaderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginsTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/SynchronizationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/TestPlugins.java"
      ]
    },
    "message": "MINOR: Move plugin path parsing from DelegatingClassLoader to PluginUtils (#13334)\n\nReviewers: Chaitanya Mukka <chaitanya.mvs2007@gmail.com>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1685104560,
    "epoch_utc": null
  },
  {
    "commit": "2ec6b5e1e2e29fd6a45d2e9344c0bdf3470454f4",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Fri May 26 09:17:07 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri May 26 12:17:07 2023 -0400",
    "stats": {
      "files_changed": 8,
      "insertions": 138,
      "deletions": 64,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/DelegatingClassLoader.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/Plugins.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/DelegatingClassLoaderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginsTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/TestPlugins.java",
        ".../META-INF/services/org.apache.kafka.connect.connector.policy.ConnectorClientConfigOverridePolicy",
        ".../src/test/resources/test-plugins/subclass-of-classpath/test/plugins/SubclassOfClasspathConverter.java",
        ".../test/resources/test-plugins/subclass-of-classpath/test/plugins/SubclassOfClasspathOverridePolicy.java"
      ]
    },
    "message": "KAFKA-14789: Prevent mis-attributing classpath plugins, allow discovery of classpath RestExtension and ConfigProvider (#13356)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1685103427,
    "epoch_utc": null
  },
  {
    "commit": "7ff2dbb1078b71d031652bf4b7378586f374f6fe",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Fri May 26 17:08:06 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri May 26 12:08:06 2023 -0400",
    "stats": {
      "files_changed": 24,
      "insertions": 2303,
      "deletions": 250,
      "files": [
        "checkstyle/import-control.xml",
        "connect/api/src/main/java/org/apache/kafka/connect/sink/SinkConnector.java",
        "connect/api/src/main/java/org/apache/kafka/connect/source/SourceConnector.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Herder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Worker.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/HerderRequestHandler.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/entities/ConnectorOffsets.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/entities/Message.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/errors/BadRequestException.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResource.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaOffsetBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/SinkUtils.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/MonitorableSinkConnector.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/MonitorableSourceConnector.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/OffsetsApiIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/entities/ConnectorOffsetsTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/SinkUtilsTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectCluster.java"
      ]
    },
    "message": "KAFKA-14368: Connect offset write REST API (#13465)\n\nReviewers: Greg Harris <greg.harris@aiven.io>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1685131686,
    "epoch_utc": null
  },
  {
    "commit": "a27c98ca61d5ab30cc54506761d610dccad010ac",
    "author": "Manyanda Chitimbo",
    "author_email": "manyanda.chitimbo@gmail.com",
    "date": "Fri May 26 17:21:40 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri May 26 08:21:40 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 0,
      "deletions": 1,
      "files": [
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java"
      ]
    },
    "message": "MINOR: remove unused variable from QuorumMetaLogListener#handleCommit method (#13611)\n\nThe local variable processedRecordsSize as just left over from another commit and can be safely removed.\n\nReviewers: Divij Vaidya <diviv@amazon.com> , Jos\u00e9 Armando Garc\u00eda Sancio <jsancio@apache.org>",
    "epoch": 1685132500,
    "epoch_utc": null
  },
  {
    "commit": "6d72c26731fe69955127a90e3d43f6d9eb41e2d3",
    "author": "Daniel Scanteianu",
    "author_email": "danielms853@gmail.com",
    "date": "Fri May 26 14:33:03 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri May 26 08:33:03 2023 -0500",
    "stats": {
      "files_changed": 2,
      "insertions": 65,
      "deletions": 2,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/MockConsumer.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/MockConsumerTest.java"
      ]
    },
    "message": "KAFKA-14841 Handle callbacks to ConsumerRebalanceListener in MockConsumer (#13455)\n\nReviewers: Philip Nee <philipnee@gmail.com>",
    "epoch": 1685122383,
    "epoch_utc": null
  },
  {
    "commit": "c14e0df6174bac9eaeddfedb9e3bb355a96f7e75",
    "author": "Manyanda Chitimbo",
    "author_email": "manyanda.chitimbo@gmail.com",
    "date": "Fri May 26 15:28:03 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri May 26 08:28:03 2023 -0500",
    "stats": {
      "files_changed": 1,
      "insertions": 7,
      "deletions": 3,
      "files": [
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThreadTest.java"
      ]
    },
    "message": "KAFKA-14961: harden DefaultBackgroundThreadTest.testStartupAndTearDown test (#13664)\n\n1. Ensures that NPE are not thrown\n2. Ensures that the background thread has been started to avoid flasky\nassertions failures on isRunning\n3. Add a check that the thread is not running when closed\n\nReviewers: Philip Nee <philipnee@gmail.com>, Kirk True <kirk@kirktrue.pro>",
    "epoch": 1685125683,
    "epoch_utc": null
  },
  {
    "commit": "dc00832b965c29fbbb4148cc680fadfc3f28642a",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Thu May 25 07:22:44 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu May 25 10:22:44 2023 -0400",
    "stats": {
      "files_changed": 15,
      "insertions": 252,
      "deletions": 45,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/DelegatingClassLoader.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginsTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/SamplingTestPlugin.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/TestPlugins.java",
        "connect/runtime/src/test/resources/test-plugins/aliased-static-field/test/plugins/AliasedStaticField.java",
        ".../runtime/src/test/resources/test-plugins/always-throw-exception/test/plugins/AlwaysThrowException.java",
        "connect/runtime/src/test/resources/test-plugins/multiple-plugins-in-jar/test/plugins/ThingOne.java",
        "connect/runtime/src/test/resources/test-plugins/multiple-plugins-in-jar/test/plugins/ThingTwo.java",
        ".../src/test/resources/test-plugins/sampling-config-provider/test/plugins/SamplingConfigProvider.java",
        ".../runtime/src/test/resources/test-plugins/sampling-configurable/test/plugins/SamplingConfigurable.java",
        "connect/runtime/src/test/resources/test-plugins/sampling-connector/test/plugins/SamplingConnector.java",
        "connect/runtime/src/test/resources/test-plugins/sampling-converter/test/plugins/SamplingConverter.java",
        ".../src/test/resources/test-plugins/sampling-header-converter/test/plugins/SamplingHeaderConverter.java",
        "connect/runtime/src/test/resources/test-plugins/service-loader/test/plugins/ServiceLoadedClass.java",
        "connect/runtime/src/test/resources/test-plugins/service-loader/test/plugins/ServiceLoaderPlugin.java"
      ]
    },
    "message": "KAFKA-14654: Connector classes should statically initialize with plugin classloader (#13165)\n\nReviewers: Chaitanya Mukka <chaitanya.mvs2007@gmail.com>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1685010164,
    "epoch_utc": null
  },
  {
    "commit": "fe303b9c3eea26b3b030c6472edebbb535c9e0fa",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Thu May 25 09:11:47 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu May 25 12:41:47 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "core/src/main/scala/kafka/cluster/Partition.scala"
      ]
    },
    "message": "MINOR: Log previous leader when replica transitions from leader to follower or vice versa (#13753)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Justine Olshan <jolshan@confluent.io>, Satish Duggana <satishd@apache.org>",
    "epoch": 1685016707,
    "epoch_utc": null
  },
  {
    "commit": "79351ec88ea65e0622cfd7a552bad16455b94edd",
    "author": "Proven Provenzano",
    "author_email": "93720617+pprovenzano@users.noreply.github.com",
    "date": "Wed May 24 17:01:39 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 24 17:01:39 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 156,
      "deletions": 2,
      "files": [
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationZkWriter.java"
      ]
    },
    "message": "KAFKA-14970: Fix SCRAM during migration dual-write (#13729)\n\nFixed a bug during dual write mode where if a user is updating SCRAM records and has no quotas, the SCRAM records will not be written to ZK. Add tests explicitly for this scenario.\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1684958499,
    "epoch_utc": null
  },
  {
    "commit": "916e80101067795f54a135c9634b6433d978c663",
    "author": "Sungyun Hur",
    "author_email": "ethan0311@gmail.com",
    "date": "Thu May 25 04:48:47 2023 +0900",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 24 21:48:47 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectorConfig.java"
      ]
    },
    "message": "MINOR: Fix whitespace typo in Connect Config docs (#13752)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Yash Mayya <yash.mayya@gmail.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1685000927,
    "epoch_utc": null
  },
  {
    "commit": "6cf4a2eaa7a436f0233aece49ed81bafe64262c4",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Wed May 24 17:34:01 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 24 17:34:01 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 52,
      "deletions": 55,
      "files": [
        "LICENSE-binary"
      ]
    },
    "message": "KAFKA-15016: Update LICENSE-binary file (#13749)\n\n\nReviewers: Luke Chen <showuon@gmail.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1684960441,
    "epoch_utc": null
  },
  {
    "commit": "5b3b385881d5518ef1b2c63cb55244cf80a80da2",
    "author": "Andras Katona",
    "author_email": "41361962+akatona84@users.noreply.github.com",
    "date": "Wed May 24 11:05:02 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 24 11:05:02 2023 +0200",
    "stats": {
      "files_changed": 9,
      "insertions": 217,
      "deletions": 90,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaConfigBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaOffsetBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaStatusBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaTopicBasedBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/TopicAdmin.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaConfigBackingStoreTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaOffsetBackingStoreTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaStatusBackingStoreTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/TopicAdminTest.java"
      ]
    },
    "message": "KAFKA-13504: Retry connect internal topics' creation in case of InvalidReplicationFactorException (#11565)\n\nIn case the Kafka Broker cluster and the Kafka Connect cluster is started together and Connect would want to create its topics, there's a high chance to fail the creation with InvalidReplicationFactorException.\n\n---------\n\nCo-authored-by: Daniel Urban <durban@cloudera.com>\n\nReviewers: Daniel Urban <durban@cloudera.com>, Mickael Maison <mickael.maison@gmail.com>, Viktor Somogyi-Vass <viktorsomogyi@gmail.com>, Chris Egerton <chrise@aiven.io>, Laszlo Hunyadi <laszlo.istvan.hunyady@gmail.com>",
    "epoch": 1684937102,
    "epoch_utc": null
  },
  {
    "commit": "1c5cf4e170a2eb789ac0eb9d126e77ab06376d43",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Wed May 24 10:25:28 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 24 10:25:28 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 3,
      "files": [
        "core/src/test/scala/unit/kafka/server/ListOffsetsRequestTest.scala"
      ]
    },
    "message": "MINOR: Fix ListOffsetsRequestTest.testResponseIncludesLeaderEpoch (#13747)\n\nFix flaky ListOffsetsRequestTest.testResponseIncludesLeaderEpoch. It specifically fixes failures seen [here](https://ci-builds.apache.org/blue/organizations/jenkins/Kafka%2Fkafka-pr/detail/PR-13535/33/tests/).\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1684934728,
    "epoch_utc": null
  },
  {
    "commit": "87c9fd98344cd04e811d6772651f0ae86a617e24",
    "author": "atu-sharm",
    "author_email": "131497429+atu-sharm@users.noreply.github.com",
    "date": "Wed May 24 07:02:59 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 24 09:32:59 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 1,
      "files": [
        "build.gradle"
      ]
    },
    "message": "KAFKA-15015: Explicit on reload4j version (#13745)\n\nDefining a specific version for reload4j\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1684922579,
    "epoch_utc": null
  },
  {
    "commit": "12130cfceca7c286cd6ab5f6faafd2000d8a9c84",
    "author": "Colin P. McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Thu May 4 23:57:10 2023 -0700",
    "commit_by": "Colin P. McCabe",
    "commit_by_email": "cmccabe@apache.org",
    "commit_by_date": "Tue May 23 10:11:26 2023 -0700",
    "stats": {
      "files_changed": 80,
      "insertions": 2944,
      "deletions": 1507,
      "files": [
        "checkstyle/import-control.xml",
        "metadata/src/main/java/org/apache/kafka/image/AclsImage.java",
        "metadata/src/main/java/org/apache/kafka/image/ClientQuotaImage.java",
        "metadata/src/main/java/org/apache/kafka/image/ClientQuotasImage.java",
        "metadata/src/main/java/org/apache/kafka/image/ClusterImage.java",
        "metadata/src/main/java/org/apache/kafka/image/ConfigurationDelta.java",
        "metadata/src/main/java/org/apache/kafka/image/ConfigurationImage.java",
        "metadata/src/main/java/org/apache/kafka/image/ConfigurationsDelta.java",
        "metadata/src/main/java/org/apache/kafka/image/ConfigurationsImage.java",
        "metadata/src/main/java/org/apache/kafka/image/FeaturesImage.java",
        "metadata/src/main/java/org/apache/kafka/image/MetadataImage.java",
        "metadata/src/main/java/org/apache/kafka/image/ProducerIdsDelta.java",
        "metadata/src/main/java/org/apache/kafka/image/ProducerIdsImage.java",
        "metadata/src/main/java/org/apache/kafka/image/ScramImage.java",
        "metadata/src/main/java/org/apache/kafka/image/TopicImage.java",
        "metadata/src/main/java/org/apache/kafka/image/TopicsImage.java",
        "metadata/src/main/java/org/apache/kafka/image/node/AclsImageByIdNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/AclsImageNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/ClientQuotaImageNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/ClientQuotasImageNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/ClusterImageNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/ConfigurationImageNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/ConfigurationsImageNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/FeaturesImageNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/MetadataImageNode.java",
        ".../src/main/java/org/apache/kafka/image/node/MetadataLeafNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/MetadataNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/ProducerIdsImageNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/ProvenanceNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/ScramCredentialDataNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/ScramImageNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/ScramMechanismNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/TopicImageNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/TopicsImageByIdNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/TopicsImageByNameNode.java",
        "metadata/src/main/java/org/apache/kafka/image/node/TopicsImageNode.java",
        ".../src/main/java/org/apache/kafka/image/node/printer/MetadataNodePrinter.java",
        "metadata/src/main/java/org/apache/kafka/image/node/printer/MetadataNodeRedactionCriteria.java",
        "metadata/src/main/java/org/apache/kafka/image/node/printer/NodeStringifier.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationZkWriter.java",
        "metadata/src/main/java/org/apache/kafka/metadata/util/SnapshotFileReader.java",
        "metadata/src/test/java/org/apache/kafka/image/ConfigurationsImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/node/ClientQuotasImageNodeTest.java",
        "metadata/src/test/java/org/apache/kafka/image/node/ConfigurationImageNodeTest.java",
        "metadata/src/test/java/org/apache/kafka/image/node/ConfigurationsImageNodeTest.java",
        "metadata/src/test/java/org/apache/kafka/image/node/ScramCredentialDataNodeTest.java",
        "metadata/src/test/java/org/apache/kafka/image/node/printer/MetadataNodeRedactionCriteriaTest.java",
        "metadata/src/test/java/org/apache/kafka/image/node/printer/NodeStringifierTest.java",
        "shell/src/main/java/org/apache/kafka/shell/InteractiveShell.java",
        "shell/src/main/java/org/apache/kafka/shell/MetadataNode.java",
        "shell/src/main/java/org/apache/kafka/shell/MetadataNodeManager.java",
        "shell/src/main/java/org/apache/kafka/shell/MetadataShell.java",
        "shell/src/main/java/org/apache/kafka/shell/{ => command}/CatCommandHandler.java",
        "shell/src/main/java/org/apache/kafka/shell/{ => command}/CdCommandHandler.java",
        "shell/src/main/java/org/apache/kafka/shell/{ => command}/CommandUtils.java",
        "shell/src/main/java/org/apache/kafka/shell/{ => command}/Commands.java",
        "shell/src/main/java/org/apache/kafka/shell/{ => command}/ErroneousCommandHandler.java",
        "shell/src/main/java/org/apache/kafka/shell/{ => command}/ExitCommandHandler.java",
        "shell/src/main/java/org/apache/kafka/shell/{ => command}/FindCommandHandler.java",
        "shell/src/main/java/org/apache/kafka/shell/{ => command}/HelpCommandHandler.java",
        "shell/src/main/java/org/apache/kafka/shell/{ => command}/HistoryCommandHandler.java",
        "shell/src/main/java/org/apache/kafka/shell/{ => command}/LsCommandHandler.java",
        "shell/src/main/java/org/apache/kafka/shell/{ => command}/ManCommandHandler.java",
        "shell/src/main/java/org/apache/kafka/shell/{ => command}/NoOpCommandHandler.java",
        "shell/src/main/java/org/apache/kafka/shell/{ => command}/PwdCommandHandler.java",
        "shell/src/main/java/org/apache/kafka/shell/command/TreeCommandHandler.java",
        "shell/src/main/java/org/apache/kafka/shell/{ => glob}/GlobComponent.java",
        "shell/src/main/java/org/apache/kafka/shell/{ => glob}/GlobVisitor.java",
        "shell/src/main/java/org/apache/kafka/shell/node/LocalShellNode.java",
        "shell/src/main/java/org/apache/kafka/shell/node/RootShellNode.java",
        "shell/src/main/java/org/apache/kafka/shell/node/printer/ShellNodePrinter.java",
        "shell/src/main/java/org/apache/kafka/shell/state/MetadataShellPublisher.java",
        "shell/src/main/java/org/apache/kafka/shell/state/MetadataShellState.java",
        "shell/src/test/java/org/apache/kafka/shell/GlobComponentTest.java",
        "shell/src/test/java/org/apache/kafka/shell/MetadataNodeManagerTest.java",
        "shell/src/test/java/org/apache/kafka/shell/MetadataNodeTest.java",
        "shell/src/test/java/org/apache/kafka/shell/{ => command}/CommandTest.java",
        "shell/src/test/java/org/apache/kafka/shell/{ => command}/CommandUtilsTest.java",
        "shell/src/test/java/org/apache/kafka/shell/{ => command}/LsCommandHandlerTest.java",
        "shell/src/test/java/org/apache/kafka/shell/{ => glob}/GlobVisitorTest.java"
      ]
    },
    "message": "MINOR: Create the MetadataNode classes to introspect MetadataImage\n\nMetadata image classes such as MetadataImage, ClusterImage, FeaturesImage, and so forth contain\nnumerous sub-images. This PR adds a structured way of traversing those sub-images. This is useful\nfor the metadata shell, and also for implementing toString functions.\n\nIn both cases, the previous solution was suboptimal. The metadata shell was previously implemented\nin an ad-hoc way by mutating text-based tree nodes when records were replayed. This was difficult\nto keep in sync with changes to the record types (for example, we forgot to do this for SCRAM). It\nwas also pretty low-level, being done at a level below that of the image classes. For toString, it\nwas difficult to keep the implementations consistent previously, and also support both redacted and\nnon-redacted output.\n\nThe metadata shell directory was getting crowded since we never had submodules for it. This PR\ncreates glob/, command/, node/, and state/ directories to keep things better organized.\n\nReviewers: David Arthur <mumrah@gmail.com>, Ron Dagostino <rdagostino@confluent.io>",
    "epoch": 1683255430,
    "epoch_utc": null
  },
  {
    "commit": "ea6ce3bf82e72565b53db6df7cd1e583ea132eb9",
    "author": "Akhilesh C",
    "author_email": "akhileshchg@users.noreply.github.com",
    "date": "Tue May 23 07:43:02 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue May 23 10:43:02 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 90,
      "deletions": 5,
      "files": [
        "core/src/test/scala/unit/kafka/zk/migration/ZkAclMigrationClientTest.scala",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationZkWriter.java"
      ]
    },
    "message": "KAFKA-15009: Handle new ACLs in KRaft snapshot during migration (#13741)\n\nWhen loading a snapshot during dual-write mode, we were missing the logic to detect new ACLs that\nhad been added on the KRaft side. This patch adds support for finding those new ACLs as well as tests\nto verify the correct behavior.\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1684838582,
    "epoch_utc": null
  },
  {
    "commit": "15f8705246e094f7825b76a38d9f12f95d626ee5",
    "author": "Jeff Kim",
    "author_email": "kimkb2011@gmail.com",
    "date": "Tue May 23 04:43:59 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue May 23 10:43:59 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 43,
      "deletions": 0,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/Timer.java"
      ]
    },
    "message": "KAFKA-14500; [4/N] Add Timer interface (#13708)\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1684827839,
    "epoch_utc": null
  },
  {
    "commit": "c98c1ed41cfb2fdede4e6ec874d4c581f27b4508",
    "author": "Jeff Kim",
    "author_email": "kimkb2011@gmail.com",
    "date": "Tue May 23 04:42:13 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue May 23 10:42:13 2023 +0200",
    "stats": {
      "files_changed": 5,
      "insertions": 329,
      "deletions": 1,
      "files": [
        "checkstyle/suppressions.xml",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/RecordHelpers.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/RecordHelpersTest.java",
        "server-common/src/main/java/org/apache/kafka/server/common/MetadataVersion.java",
        "server-common/src/test/java/org/apache/kafka/server/common/MetadataVersionTest.java"
      ]
    },
    "message": "KAFKA-14500; [3/N] add GroupMetadataKey/Value record helpers (#13704)\n\nThis path enables the new group metadata manager to generate GroupMetadataKey/Value records.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1684827733,
    "epoch_utc": null
  },
  {
    "commit": "6b955818672de7ce4643ab90f2f37961c4003ca8",
    "author": "Akhilesh C",
    "author_email": "akhileshchg@users.noreply.github.com",
    "date": "Mon May 22 11:46:53 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon May 22 14:46:53 2023 -0400",
    "stats": {
      "files_changed": 4,
      "insertions": 1,
      "deletions": 19,
      "files": [
        "core/src/main/scala/kafka/migration/MigrationPropagator.scala",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/LegacyPropagator.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationDriverTest.java"
      ]
    },
    "message": "KAFKA-15007: Use the correct MetadataVersion in MetadataPropagator (#13732)\n\nUse the MetadataVersion from the MetadataImage passed to MetadataPropagator. The ensures the propagator\nsends the right versions of UMR, LISR and StopReplica requests when the migration is in DUAL_WRITE mode.\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1684766813,
    "epoch_utc": null
  },
  {
    "commit": "5a8a764307c90725a7f0acedbe7974c8e8fd0bf9",
    "author": "Jim Galasyn",
    "author_email": "jim.galasyn@confluent.io",
    "date": "Mon May 22 06:11:54 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon May 22 15:11:54 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 9,
      "deletions": 0,
      "files": [
        "docs/streams/developer-guide/manage-topics.html"
      ]
    },
    "message": "MINOR: Add default configs for internal Kafka Streams topics (#13728)\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1684746714,
    "epoch_utc": null
  },
  {
    "commit": "e96a463561ca8974fca37562b8675ae8ae4aff29",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Sun May 21 14:39:12 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun May 21 14:39:12 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamImplJoin.java"
      ]
    },
    "message": "KAFKA-14862 (HOTFIX): Fix ConcurrentModificationException (#13734)\n\nReviewers: Walker Carlson <<wcarlson@confluent.io>",
    "epoch": 1684690752,
    "epoch_utc": null
  },
  {
    "commit": "600e014c245c01dcc0a12c1baf35dc8e50b24af0",
    "author": "Manikumar Reddy",
    "author_email": "manikumar.reddy@gmail.com",
    "date": "Sat May 20 21:53:44 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat May 20 21:53:44 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 19,
      "deletions": 0,
      "files": [
        "docs/configuration.html",
        "docs/toc.html"
      ]
    },
    "message": "MINOR: Add System Properties to config documentation section (#13737)\n\nReviewers: Josep Prat <josep.prat@aiven.io>",
    "epoch": 1684630424,
    "epoch_utc": null
  },
  {
    "commit": "a14e73a0361556d86dc18aac865536c6a485bb0a",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Fri May 19 05:45:01 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri May 19 14:45:01 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 6,
      "deletions": 3,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorConfigTest.java"
      ]
    },
    "message": "KAFKA-14980: Fix MirrorSourceConnector source consumer configuration (#13723)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Josep Prat <josep.prat@aiven.io>",
    "epoch": 1684485901,
    "epoch_utc": null
  },
  {
    "commit": "c90a08c37e7568b6e348320450e76db291283edb",
    "author": "Aaron Ai",
    "author_email": "yangkun.ayk@gmail.com",
    "date": "Fri May 19 13:00:20 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri May 19 13:00:20 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 9,
      "deletions": 6,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/config/ConfigDef.java"
      ]
    },
    "message": "MINOR: Fix the outdated comments of ConfigDef (#13710)\n\nFix the outdated comments of ConfigDef since the signature of the corresponding method has been updated.\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1684512020,
    "epoch_utc": null
  },
  {
    "commit": "6f197301646135e0bb39a461ca0a07c09c3185fb",
    "author": "Satish Duggana",
    "author_email": "satishd@apache.org",
    "date": "Thu May 18 06:37:37 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu May 18 06:37:37 2023 +0530",
    "stats": {
      "files_changed": 20,
      "insertions": 1107,
      "deletions": 109,
      "files": [
        "checkstyle/suppressions.xml",
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/main/java/kafka/log/remote/RemoteLogReader.java",
        "core/src/main/java/kafka/server/builders/ReplicaManagerBuilder.java",
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/DelayedFetch.scala",
        "core/src/main/scala/kafka/server/DelayedRemoteFetch.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java",
        "core/src/test/java/kafka/log/remote/RemoteLogReaderTest.java",
        "core/src/test/scala/integration/kafka/server/DelayedFetchTest.scala",
        "core/src/test/scala/integration/kafka/server/DelayedRemoteFetchTest.scala",
        "core/src/test/scala/unit/kafka/server/ListOffsetsRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerQuotasTest.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/FetchDataInfo.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/RemoteLogReadResult.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/RemoteStorageFetchInfo.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/RemoteStorageThreadPool.java"
      ]
    },
    "message": "KAFKA-9579 Fetch implementation for records in the remote storage through a specific purgatory. (#13535)\n\nThis change includes\n- Recognize the fetch requests with out of range local log offsets\n- Add fetch implementation for the data lying in the range of [logStartOffset, localLogStartOffset]\n- Add a new purgatory for async remote read requests which are served through a specific thread pool\n\nWe have an extended version of remote fetch that can fetch from multiple remote partitions in parallel, which we will raise as a followup PR.\n\nA few tests for the newly introduced changes are added in this PR. There are some tests available for these scenarios in 2.8.x, refactoring with the trunk changes, will add them in followup PRs.\n\nOther contributors:\nKamal Chandraprakash <kchandraprakash@uber.com> - Further improvements and adding a few tests\nLuke Chen <showuon@gmail.com> - Added a few test cases for these changes.\n\nPS: This functionality is pulled out from internal branches with other functionalities related to the feature in 2.8.x. The reason for not pulling all the changes as it makes the PR huge, and burdensome to review and it also needs other metrics, minor enhancements(including perf), and minor changes done for tests. So, we will try to have followup PRs to cover all those.\n\nReviewers: Jun Rao <junrao@gmail.com>, Alexandre Dupriez <alexandre.dupriez@gmail.com>, Divij Vaidya <diviv@amazon.com>,  Jorge Esteban Quilcate Otoya <quilcate.jorge@gmail.com>",
    "epoch": 1684402657,
    "epoch_utc": null
  },
  {
    "commit": "d944ef1efbdb577e4c7c847b790df884ba2b58d2",
    "author": "David Mao",
    "author_email": "dmao@confluent.io",
    "date": "Wed May 17 09:57:24 2023 -0700",
    "commit_by": "Colin P. McCabe",
    "commit_by_email": "cmccabe@apache.org",
    "commit_by_date": "Wed May 17 09:57:24 2023 -0700",
    "stats": {
      "files_changed": 15,
      "insertions": 34,
      "deletions": 34,
      "files": [
        "core/src/main/scala/kafka/server/metadata/OffsetTrackingListener.scala",
        "core/src/main/scala/kafka/tools/TestRaftServer.scala",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/image/loader/MetadataLoader.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationZkWriter.java",
        "metadata/src/test/java/org/apache/kafka/image/loader/MetadataLoaderTest.java",
        "metadata/src/test/java/org/apache/kafka/metalog/LocalLogManager.java",
        "metadata/src/test/java/org/apache/kafka/metalog/MockMetaLogManagerListener.java",
        "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
        "raft/src/main/java/org/apache/kafka/raft/RaftClient.java",
        "raft/src/main/java/org/apache/kafka/raft/ReplicatedCounter.java",
        "raft/src/test/java/org/apache/kafka/raft/RaftClientTestContext.java",
        "raft/src/test/java/org/apache/kafka/raft/RaftEventSimulationTest.java",
        "shell/src/main/java/org/apache/kafka/shell/MetadataNodeManager.java"
      ]
    },
    "message": "MINOR: Rename handleSnapshot to handleLoadSnapshot (#13727)\n\nRename handleSnapshot to handleLoadSnapshot to make it explicit that it is handling snapshot load,\nnot generation.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1684328244,
    "epoch_utc": null
  },
  {
    "commit": "3c8665025acd67949e3ce189188c54060f16a185",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Wed May 17 21:26:02 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 17 18:56:02 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 0,
      "deletions": 0,
      "files": [
        "raft/src/test/java/org/apache/kafka/{ => raft}/ControlRecordTest.java"
      ]
    },
    "message": "MINOR: move ControlRecordTest to correct directory (#13718)\n\nReviewers: Kamal Chandraprakash<kamal.chandraprakash@gmail.com>, hudeqi<1217150961@qq.com>, Satish Duggana<satishd@apache.org>",
    "epoch": 1684369562,
    "epoch_utc": null
  },
  {
    "commit": "ac9d11b426f755a97acbda259928131cde8c1fec",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Tue May 16 04:31:32 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue May 16 10:31:32 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 16,
      "deletions": 17,
      "files": [
        "tools/src/test/java/org/apache/kafka/tools/JmxToolTest.java"
      ]
    },
    "message": "KAFKA-14997: Fix JmxToolTest failing on CI server (#13720)\n\nThis test was reported as flaky on CI server.\n\nWhen connecting to a multi-homed machine using RMI, the wrong address may be returned by the RMI registry to the client, causing the connection to the RMI server to timeout.\n\nThis change explicitly set the hostname returned to the the clients in the remote stub object.\n\nReviewers: Luke Chen <showuon@gmail.com>, vamossagar12 <sagarmeansocean@gmail.com>, Kamal Chandraprakash <kamal.chandraprakash@gmail.com>, hudeqi <16120374@bjtu.edu.cn>, Christo Lolov <christololov@gmail.com>",
    "epoch": 1684222292,
    "epoch_utc": null
  },
  {
    "commit": "f6c5ccc3183b14b72f8e247fd750a0de589b008c",
    "author": "John Roesler",
    "author_email": "vvcephei@users.noreply.github.com",
    "date": "Mon May 15 14:24:57 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon May 15 14:24:57 2023 -0500",
    "stats": {
      "files_changed": 1,
      "insertions": 4,
      "deletions": 20,
      "files": [
        ".asf.yaml"
      ]
    },
    "message": "MINOR: Fix .asf.yaml (#13722)\n\nDespite the documentation, these collections are limited to 10.\n\nReviewers: Josep Prat <josep.prat@aiven.io>, Kamal Chandraprakash <kamal.chandraprakash@gmail.com>",
    "epoch": 1684171497,
    "epoch_utc": null
  },
  {
    "commit": "6684889413b72d2acb1f30c85c044caabae7826b",
    "author": "John Roesler",
    "author_email": "vvcephei@users.noreply.github.com",
    "date": "Mon May 15 09:59:26 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon May 15 09:59:26 2023 -0500",
    "stats": {
      "files_changed": 1,
      "insertions": 43,
      "deletions": 3,
      "files": [
        ".asf.yaml"
      ]
    },
    "message": "MINOR: Update collaborators (#13713)\n\nUpdating the Collaborators and Jenkins PR Whitelist in accordance with apache/kafka-site#510 .\n\nReviewers: Josep Prat <josep.prat@aiven.io>",
    "epoch": 1684155566,
    "epoch_utc": null
  },
  {
    "commit": "fa7818dff5a28048401654a7497e56dbc988b755",
    "author": "atu-sharm",
    "author_email": "131497429+atu-sharm@users.noreply.github.com",
    "date": "Sat May 13 12:42:57 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat May 13 12:42:57 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 3,
      "deletions": 3,
      "files": [
        "LICENSE-binary",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "KAFKA-14994: jose4j is vulnerable to CVE- Improper Cryptographic Algorithm (#13717)\n\nReviewers: Manikumar Reddy <manikumar.reddy@gmail.com>",
    "epoch": 1683992577,
    "epoch_utc": null
  },
  {
    "commit": "3598f12242224983b487ff077e79c9dfecbbac59",
    "author": "atu-sharm",
    "author_email": "131497429+atu-sharm@users.noreply.github.com",
    "date": "Sat May 13 07:02:11 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri May 12 18:32:11 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 1,
      "files": [
        "build.gradle"
      ]
    },
    "message": "KAFKA-14839: Exclude protected variable from JavaDocs (#13633)\n\nReviewers: Manyanda Chitimbo <manyanda.chitimbo@gmail.com>, John Roesler <john@confluent.io>, Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1683972131,
    "epoch_utc": null
  },
  {
    "commit": "bb10ae4273451468b26fad755bfa41001ac6849c",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Fri May 12 20:21:00 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri May 12 23:51:00 2023 +0530",
    "stats": {
      "files_changed": 5,
      "insertions": 33,
      "deletions": 12,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/config/AbstractConfig.java",
        "clients/src/test/java/org/apache/kafka/common/config/AbstractConfigTest.java",
        "core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala",
        "core/src/test/scala/unit/kafka/security/authorizer/AuthorizerTest.scala",
        "metadata/src/main/java/org/apache/kafka/metadata/authorizer/StandardAuthorizer.java"
      ]
    },
    "message": "KAFKA-14962: Trim whitespace from ACL configuration (#13670)\n\nReviewers: Manikumar Reddy <manikumar.reddy@gmail.com>, Christo Lolov <lolovc@amazon.com>",
    "epoch": 1683933660,
    "epoch_utc": null
  },
  {
    "commit": "f578b38f31ad548ad24976d4784ece967052e802",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Fri May 12 11:47:50 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri May 12 17:47:50 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 16,
      "deletions": 16,
      "files": [
        "gradle/dependencies.gradle"
      ]
    },
    "message": "MINOR: Update dependencies (minor versions only) (#13673)\n\nAll dependency upgrades in the PR are minor upgrades with backward compatible changes. Note that no major version for dependencies have been changed to make it a low risk change. No code changes are required for any of these dependencies.\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1683902870,
    "epoch_utc": null
  },
  {
    "commit": "cc011f77aaeecb64e1a18ea403b866b66e37ec2c",
    "author": "Jeff Kim",
    "author_email": "kimkb2011@gmail.com",
    "date": "Fri May 12 05:22:29 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri May 12 11:22:29 2023 +0200",
    "stats": {
      "files_changed": 4,
      "insertions": 2114,
      "deletions": 0,
      "files": [
        "checkstyle/import-control.xml",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/generic/GenericGroup.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/generic/GenericGroupState.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/generic/GenericGroupTest.java"
      ]
    },
    "message": "KAFKA-14500; [2/N] Rewrite GroupMetadata in Java (#13663)\n\nThis patch introduces `GenericGroup` which rewrite the `GroupMetadata` in Java. The `GenericGroup` is basically a group using the current rebalance protocol in the new group coordinator.\n\nReviewers: Ritika Reddy <rreddy@confluent.io>, Christo Lolov <lolovc@amazon.com>, David Jacot <djacot@confluent.io>",
    "epoch": 1683879749,
    "epoch_utc": null
  },
  {
    "commit": "440bed2391338dc10fe4d36ab17dc104b61b85e8",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Fri May 12 14:03:17 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri May 12 14:03:17 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 2,
      "deletions": 15,
      "files": [
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java"
      ]
    },
    "message": "MINOR:code optimization in QuorumController (#13697)\n\n1. add hint in switch item \"BROKER_LOGGER\" in ConfigResourceExistenceChecker, otherwise, it will be classified as default break and deleted directly. I don\u2019t know if adding hint is better than deleting directly.\n2. delete some unused variables and methods.\n3. add the \"@test\" mark to a method in unit test that is forgotten.\n\nReviewers: dengziming <dengziming1993@gmail.com>",
    "epoch": 1683910997,
    "epoch_utc": null
  },
  {
    "commit": "a7c9842f709c5985ea41a5811e479551ea0fb7f2",
    "author": "dengziming",
    "author_email": "dengziming1993@gmail.com",
    "date": "Fri May 12 13:46:06 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri May 12 13:46:06 2023 +0800",
    "stats": {
      "files_changed": 21,
      "insertions": 179,
      "deletions": 92,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/ApiVersionsResponse.java",
        "clients/src/test/java/org/apache/kafka/clients/NetworkClientTest.java",
        "clients/src/test/java/org/apache/kafka/clients/NodeApiVersionsTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetcherTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/SenderTest.java",
        "clients/src/test/java/org/apache/kafka/common/network/NioEchoServer.java",
        "clients/src/test/java/org/apache/kafka/common/network/SaslChannelBuilderTest.java",
        "clients/src/test/java/org/apache/kafka/common/network/SslTransportLayerTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/ApiVersionsResponseTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/RequestResponseTest.java",
        "clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslAuthenticatorTest.java",
        "clients/src/test/java/org/apache/kafka/common/security/authenticator/SaslServerAuthenticatorTest.java",
        "clients/src/test/java/org/apache/kafka/test/TestUtils.java",
        "core/src/main/scala/kafka/server/ApiVersionManager.scala",
        "core/src/main/scala/kafka/server/ControllerApis.scala",
        "core/src/main/scala/kafka/tools/TestRaftRequestHandler.scala",
        "core/src/test/scala/integration/kafka/server/GssapiAuthenticationTest.scala",
        "core/src/test/scala/unit/kafka/server/AbstractApiVersionsRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/ApiVersionsRequestTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/metadata/FinalizedControllerFeatures.java"
      ]
    },
    "message": "KAFKA-14291: KRaft controller should return right finalized features in ApiVersionResponse (#13679)\n\nThe KRaft controller return empty finalized features in `ApiVersionResponse`, the brokers are not infected by this, so this problem doesn't have any impact currently, but it's worth fixing it to avoid unexpected problems.\n\nAnd there is a bunch of of confusing methods in `ApiVersionResponse` which are only used in test code, I moved them to TestUtils to make the code more clear, and force everyone to pass in the correct parameters instead of the default zero parameters, for example, empty supported features and empty finalized features.\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1683909966,
    "epoch_utc": null
  },
  {
    "commit": "c757af5f7c630d532bfee5f6dc45aec603ad8a29",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Fri May 12 04:39:12 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri May 12 10:39:12 2023 +0800",
    "stats": {
      "files_changed": 6,
      "insertions": 121,
      "deletions": 188,
      "files": [
        "build.gradle",
        "checkstyle/import-control-core.xml",
        "examples/README",
        "examples/README.md",
        "examples/src/main/java/kafka/examples/KafkaConsumerProducerDemo.java",
        "examples/src/main/java/kafka/examples/KafkaExactlyOnceDemo.java"
      ]
    },
    "message": "KAFKA-14752: Kafka examples improvements - demo changes (#13517)\n\nKAFKA-14752: Kafka examples improvements - demo changes\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1683877152,
    "epoch_utc": null
  },
  {
    "commit": "54a4067f81e1434d956ef797274f7b437fe49ea1",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Thu May 11 21:49:21 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu May 11 21:49:21 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 153,
      "deletions": 21,
      "files": [
        "tools/src/main/java/org/apache/kafka/tools/JmxTool.java",
        "tools/src/test/java/org/apache/kafka/tools/JmxToolTest.java"
      ]
    },
    "message": "KAFKA-14559: Fix JMX tool to handle the object names with wildcard and optional attributes (#13060)\n\nReviewers: Federico Valeri <fedevaleri@gmail.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1683852561,
    "epoch_utc": null
  },
  {
    "commit": "bd65db82b4bad623b0bb31398979e466978148da",
    "author": "Josep Prat",
    "author_email": "josep.prat@aiven.io",
    "date": "Thu May 11 17:55:26 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu May 11 17:55:26 2023 +0200",
    "stats": {
      "files_changed": 4,
      "insertions": 7,
      "deletions": 21,
      "files": [
        "core/src/main/scala/kafka/utils/PasswordEncoder.scala",
        "core/src/main/scala/kafka/utils/Pool.scala",
        "core/src/main/scala/kafka/utils/VerifiableProperties.scala",
        "core/src/test/scala/unit/kafka/utils/PasswordEncoderTest.scala"
      ]
    },
    "message": "MINOR: clean up unused methods in core utils (#13706)\n\nReviewers: Manyanda Chitimbo <manyanda.chitimbo@gmail.com>, Mickael Maison <mimaison@apache.org>",
    "epoch": 1683838526,
    "epoch_utc": null
  },
  {
    "commit": "38adb3956979d7025d148612975cc0b82200b2e1",
    "author": "Jeff Kim",
    "author_email": "kimkb2011@gmail.com",
    "date": "Thu May 11 07:51:41 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu May 11 13:51:41 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 0,
      "files": [
        "core/src/test/scala/unit/kafka/coordinator/group/GroupMetadataTest.scala"
      ]
    },
    "message": "MINOR: add test tag for testDeadToDeadIllegalTransition (#13694)\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1683802301,
    "epoch_utc": null
  },
  {
    "commit": "ee4132863553fb4fd2df715b2fbd77f349f978b8",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Thu May 11 11:19:32 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu May 11 17:19:32 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 120,
      "deletions": 106,
      "files": [
        "examples/src/main/java/kafka/examples/ExactlyOnceMessageProcessor.java",
        "examples/src/main/java/kafka/examples/KafkaExactlyOnceDemo.java"
      ]
    },
    "message": "KAFKA-14752: Kafka examples improvements - processor changes (#13516)\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1683814772,
    "epoch_utc": null
  },
  {
    "commit": "a263627adb75f1ca5c87f1482cc70b994ba49d63",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Thu May 11 11:02:45 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu May 11 11:02:45 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 7,
      "deletions": 66,
      "files": [
        "core/src/main/scala/kafka/utils/CoreUtils.scala",
        "core/src/test/scala/unit/kafka/utils/CoreUtilsTest.scala"
      ]
    },
    "message": "MINOR: Remove unused methods in CoreUtils (#13170)\n\n\nReviewers: Josep Prat <josep.prat@aiven.io>, Christo Lolov <christololov@gmail.com>",
    "epoch": 1683813765,
    "epoch_utc": null
  },
  {
    "commit": "920a3601ffa7266edf12f3559cfe97c8a5929d03",
    "author": "Manyanda Chitimbo",
    "author_email": "manyanda.chitimbo@gmail.com",
    "date": "Thu May 11 04:13:29 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu May 11 10:13:29 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 6,
      "deletions": 6,
      "files": [
        "core/src/main/scala/kafka/server/SharedServer.scala"
      ]
    },
    "message": "MINOR: fix a small typo in SharedServer.scala (#13693)\n\nDiabled -> Disabled",
    "epoch": 1683789209,
    "epoch_utc": null
  },
  {
    "commit": "6d2ad4a38340176184e3f19027b5e0e024c1f2cc",
    "author": "A. Sophie Blee-Goldman",
    "author_email": "sophie@confluent.io",
    "date": "Wed May 10 13:39:15 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 10 13:39:15 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/state/internals/VersionedKeyValueToBytesStoreAdapter.java"
      ]
    },
    "message": "HOTFIX: fix the VersionedKeyValueToBytesStoreAdapter#isOpen API (#13695)\n\nThe VersionedKeyValueToBytesStoreAdapter#isOpen API accidentally returns the value of inner.persistent() when it should be returning inner.isOpen()\n\nReviewers: Matthias J. Sax <mjsax@apache.org>, Luke Chen <showuon@gmail.com>, Bruno Cadonna <cadonna@apache.org>, Victoria Xia <victoria.xia@confluent.io>",
    "epoch": 1683736755,
    "epoch_utc": null
  },
  {
    "commit": "f17fb75b2de32512f14cb94a7d1bfb0f37485780",
    "author": "D\u00e1niel Urb\u00e1n",
    "author_email": "48119872+urbandan@users.noreply.github.com",
    "date": "Wed May 10 16:41:52 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 10 16:41:52 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 21,
      "deletions": 0,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ExactlyOnceWorkerSourceTask.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/ExactlyOnceWorkerSourceTaskTest.java"
      ]
    },
    "message": "KAFKA-14978 ExactlyOnceWorkerSourceTask should remove parent metrics (#13690)\n\nReviewers: Chris Egerton <chrise@aiven.io>, Viktor Somogyi-Vass <viktorsomogyi@gmail.com>",
    "epoch": 1683747712,
    "epoch_utc": null
  },
  {
    "commit": "4653507926a42dccda5c086fcae6278afcfc53ca",
    "author": "Ritika Reddy",
    "author_email": "98577846+rreddy-22@users.noreply.github.com",
    "date": "Wed May 10 05:09:12 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 10 14:09:12 2023 +0200",
    "stats": {
      "files_changed": 8,
      "insertions": 806,
      "deletions": 12,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/assignor/RangeAssignor.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/{consumer => }/AssignmentTestUtil.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/RecordHelpersTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/assignor/RangeAssignorTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/consumer/AssignmentTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroupMemberTest.java",
        ".../src/test/java/org/apache/kafka/coordinator/group/consumer/CurrentAssignmentBuilderTest.java",
        ".../src/test/java/org/apache/kafka/coordinator/group/consumer/TargetAssignmentBuilderTest.java"
      ]
    },
    "message": "KAFKA-14514; Add Range Assignor on the Server (KIP-848) (#13443)\n\nThis patch adds the RangeAssignor on the server for KIP-848. This range assignor is very different from the old client side implementation. We added functionality to make these assignments sticky while also inheriting crucial properties of the range assignor such as facilitating joins and distributing partitions of a topic somewhat equally amongst its subscribers.\n\nReviewers: Philip Nee <philipnee@gmail.com>, Jeff Kim <jeff.kim@confluent.io>, David Jacot <djacot@confluent.io>",
    "epoch": 1683706152,
    "epoch_utc": null
  },
  {
    "commit": "625ef176ee5f167786003c2d88498632b0b7014b",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Wed May 10 16:40:20 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 10 16:40:20 2023 +0800",
    "stats": {
      "files_changed": 5,
      "insertions": 5,
      "deletions": 5,
      "files": [
        "config/kraft/broker.properties",
        "config/kraft/controller.properties",
        "config/kraft/server.properties",
        "docs/upgrade.html",
        "raft/README.md"
      ]
    },
    "message": "MINOR: remove kraft readme link (#13691)\n\nThe config/kraft/README.md is already removed. We should also remove the link.\n\nReviewers: dengziming <dengziming1993@gmail.com>",
    "epoch": 1683747620,
    "epoch_utc": null
  },
  {
    "commit": "228434d23583189cdcaa7f4a90ebb178ccc17c73",
    "author": "Jeff Kim",
    "author_email": "kimkb2011@gmail.com",
    "date": "Tue May 9 10:49:27 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue May 9 16:49:27 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 751,
      "deletions": 0,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/generic/GenericGroupMember.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/generic/Protocol.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/generic/GenericGroupMemberTest.java"
      ]
    },
    "message": "KAFKA-14500; [1/N] Rewrite MemberMetadata in Java (#13644)\n\nThis patch adds GenericGroupMember which is a rewrite of MemberMetadata in Java.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1683640167,
    "epoch_utc": null
  },
  {
    "commit": "59ba9dbbc927ddc8660d0d98d9422909fd306758",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Tue May 9 17:58:45 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue May 9 07:28:45 2023 -0500",
    "stats": {
      "files_changed": 3,
      "insertions": 40,
      "deletions": 11,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaConfigBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaConfigBackingStoreTest.java"
      ]
    },
    "message": "KAFKA-14974: Restore backward compatibility in KafkaBasedLog (#13688)\n\n`KafkaBasedLog` is a widely used utility class that provides a generic implementation of a shared, compacted log of records in a Kafka topic. It isn't in Connect's public API, but has been used outside of Connect and we try to preserve backward compatibility whenever possible. KAFKA-14455 modified the two overloaded void `KafkaBasedLog::send` methods to return a `Future`. While this change is source compatible, it isn't binary compatible. We can restore backward compatibility simply by renaming the new Future returning send methods, and reinstating the older send methods to delegate to the newer methods.\n\nThis refactoring changes no functionality other than restoring the older methods.\n\nReviewers: Randall Hauch <rhauch@gmail.com>",
    "epoch": 1683665925,
    "epoch_utc": null
  },
  {
    "commit": "b40a7fc037bb1543c3355fad9c71570f770f5177",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Mon May 8 14:24:11 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon May 8 14:24:11 2023 -0700",
    "stats": {
      "files_changed": 11,
      "insertions": 19,
      "deletions": 27,
      "files": [
        "streams/upgrade-system-tests-24/src/test/java/org/apache/kafka/streams/tests/StreamsUpgradeTest.java",
        "streams/upgrade-system-tests-25/src/test/java/org/apache/kafka/streams/tests/StreamsUpgradeTest.java",
        "streams/upgrade-system-tests-26/src/test/java/org/apache/kafka/streams/tests/StreamsUpgradeTest.java",
        "streams/upgrade-system-tests-27/src/test/java/org/apache/kafka/streams/tests/StreamsUpgradeTest.java",
        "streams/upgrade-system-tests-28/src/test/java/org/apache/kafka/streams/tests/StreamsUpgradeTest.java",
        "streams/upgrade-system-tests-30/src/test/java/org/apache/kafka/streams/tests/StreamsUpgradeTest.java",
        "streams/upgrade-system-tests-31/src/test/java/org/apache/kafka/streams/tests/StreamsUpgradeTest.java",
        "streams/upgrade-system-tests-32/src/test/java/org/apache/kafka/streams/tests/StreamsUpgradeTest.java",
        "streams/upgrade-system-tests-33/src/test/java/org/apache/kafka/streams/tests/StreamsUpgradeTest.java",
        "tests/kafkatest/tests/streams/streams_upgrade_test.py",
        "tests/kafkatest/version.py"
      ]
    },
    "message": "HOTFIX: fix broken Streams upgrade system test (#13654)\n\nReviewers: Victoria Xia <victoria.xia@confluent.io>, John Roesler <john@confluent.io>",
    "epoch": 1683566651,
    "epoch_utc": null
  },
  {
    "commit": "7634eee2627da39937e3112ffc58bd7cfedc98f2",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Mon May 8 20:46:07 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon May 8 20:46:07 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 1007,
      "deletions": 0,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroupMember.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/CurrentAssignmentBuilder.java",
        ".../src/test/java/org/apache/kafka/coordinator/group/consumer/CurrentAssignmentBuilderTest.java"
      ]
    },
    "message": "KAFKA-14462; [11/N] Add CurrentAssignmentBuilder (#13638)\n\nThis patch adds the `CurrentAssignmentBuilder` class which encapsulates the reconciliation engine of the consumer group protocol. Given the current state of a member and a desired or target assignment state, the state machine takes the necessary steps to converge the member to its desired state.\n\nReviewers: Ritika Reddy <rreddy@confluent.io>, Calvin Liu <caliu@confluent.io>, Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1683589567,
    "epoch_utc": null
  },
  {
    "commit": "86daf8ce6573eb79d6e78381dbab738055f914c4",
    "author": "vamossagar12",
    "author_email": "sagarmeansocean@gmail.com",
    "date": "Mon May 8 20:09:47 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon May 8 16:39:47 2023 +0200",
    "stats": {
      "files_changed": 7,
      "insertions": 29,
      "deletions": 62,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/utils/ThreadUtils.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/SourceTaskOffsetCommitter.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Worker.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/MemoryOffsetBackingStore.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/SourceTaskOffsetCommitterTest.java"
      ]
    },
    "message": "KAFKA-14913: Using ThreadUtils.shutdownExecutorServiceQuietly to close executors in Connect Runtime (#13594)\n\n#13557 introduced a utils method to close executors silently. This PR leverages that method to close executors in connect runtime. There was duplicate code while closing the executors which isn't the case with this PR.\n\nNote that there are a few more executors used in Connect runtime but their close methods don't follow this pattern of shutdown, await and shutdown. Some of them have some logic like executor like Worker, so not changing at such places.\n\n---------\n\nCo-authored-by: Sagar Rao <sagarrao@Sagars-MacBook-Pro.local>\n\nReviewers: Daniel Urban <durban@cloudera.com>, Yash Mayya <yash.mayya@gmail.com>, Viktor Somogyi-Vass <viktorsomogyi@gmail.com>",
    "epoch": 1683587387,
    "epoch_utc": null
  },
  {
    "commit": "2b98f8553ba12ab5d8cb88f5cd0d1198cb424df6",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Mon May 8 15:24:52 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon May 8 16:24:52 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 116,
      "deletions": 134,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java"
      ]
    },
    "message": "KAFKA-14133: Migrate ChangeLogReader mock in TaskManagerTest to Mockito (#13621)\n\nMigrates ChangeLogReader mock in TaskManagerTest to mockito.\n\nReviewer: Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1683570292,
    "epoch_utc": null
  },
  {
    "commit": "347238948b86882a47faee4a2916d1b01333d95f",
    "author": "Gantigmaa Selenge",
    "author_email": "39860586+tinaselenge@users.noreply.github.com",
    "date": "Mon May 8 07:36:36 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon May 8 14:36:36 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 126,
      "deletions": 0,
      "files": [
        "docs/security.html"
      ]
    },
    "message": "KAFKA-14662: Update the ACL list in the doc (#13660)\n\nAdded the missing ACLs to the doc.\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1683542196,
    "epoch_utc": null
  },
  {
    "commit": "a556def5724efb1dc96bd2d389411a8d2f802f53",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Mon May 8 08:35:14 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon May 8 14:35:14 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 18,
      "deletions": 7,
      "files": [
        "core/src/test/scala/integration/kafka/api/PlaintextAdminIntegrationTest.scala"
      ]
    },
    "message": "MINOR: Print the cause of failure for test (#13672)\n\n\nMotivation\n\nPlaintextAdminIntegrationTest fails in a flaky manner with the follow trace (e.g. in this build):\n\norg.opentest4j.AssertionFailedError: expected: <false> but was: <true>\nat org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)\nat org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)\nat org.junit.jupiter.api.AssertFalse.failNotFalse(AssertFalse.java:63)\nat org.junit.jupiter.api.AssertFalse.assertFalse(AssertFalse.java:36)\nat org.junit.jupiter.api.AssertFalse.assertFalse(AssertFalse.java:31)\nat org.junit.jupiter.api.Assertions.assertFalse(Assertions.java:228)\nat kafka.api.PlaintextAdminIntegrationTest.testElectUncleanLeadersForOnePartition(PlaintextAdminIntegrationTest.scala:1583)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\nThe std output doesn't contain useful information that we could use to debug the cause of failure. This is because the test, currently, validates if there is an exception and fails when one is present. It does not print what the exception is.\nChange\n\n1. Make the test a bit more robust by waiting for server startup.\n2. Fail the test with the actual unexpected exception which will help in debugging the cause of failure.\n\nReviewers: Luke Chen <showuon@gmail.com>, Chia-Ping Tsai <chia7712@gmail.com>",
    "epoch": 1683545714,
    "epoch_utc": null
  },
  {
    "commit": "2607e0edb7c165bf2c340e81c2a39d7bb3b63fbf",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Mon May 8 08:33:31 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon May 8 14:33:31 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 14,
      "deletions": 14,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/producer/Callback.java"
      ]
    },
    "message": "MINOR: Fix producer Callback comment (#13669)\n\nFixes the wrong exception name: OffsetMetadataTooLargeException.\n\nReviewers: Manyanda Chitimbo <manyanda.chitimbo@gmail.com>, Luke Chen <showuon@gmail.com>",
    "epoch": 1683545611,
    "epoch_utc": null
  },
  {
    "commit": "78090bb4cdd2494f0b720d34e17ee0cc645fc399",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Mon May 8 04:15:52 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon May 8 10:15:52 2023 +0800",
    "stats": {
      "files_changed": 4,
      "insertions": 131,
      "deletions": 95,
      "files": [
        "examples/src/main/java/kafka/examples/ExactlyOnceMessageProcessor.java",
        "examples/src/main/java/kafka/examples/KafkaConsumerProducerDemo.java",
        "examples/src/main/java/kafka/examples/KafkaExactlyOnceDemo.java",
        "examples/src/main/java/kafka/examples/Producer.java"
      ]
    },
    "message": "KAFKA-14752: Kafka examples improvements - producer changes (#13515)\n\nKAFKA-14752: Kafka examples improvements - producer changes\n\nReviewers: Luke Chen <showuon@gmail.com>, Christo Lolov <christololov@gmail.com>",
    "epoch": 1683530152,
    "epoch_utc": null
  },
  {
    "commit": "6e7144ac24973afdb71ef59a63c6bacbbb1d2714",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Sat May 6 02:56:26 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat May 6 02:56:26 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 27,
      "deletions": 2,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerPartitionAssignor.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/ConsumerPartitionAssignorTest.java"
      ]
    },
    "message": "MINOR: add docs to remind reader that impl of ConsumerPartitionAssign\u2026 (#13659)\n\nReviewers: David Jacot <djacot@confluent.io>, Kirk True <kirk@kirktrue.pro>",
    "epoch": 1683352586,
    "epoch_utc": null
  },
  {
    "commit": "6bcc497c36a1aef19204b1bfe3b17a8c1c84c059",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Fri May 5 14:05:20 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri May 5 20:05:20 2023 +0800",
    "stats": {
      "files_changed": 4,
      "insertions": 772,
      "deletions": 65,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/utils/ByteUtils.java",
        "clients/src/test/java/org/apache/kafka/common/utils/ByteUtilsTest.java",
        "gradle/spotbugs-exclude.xml",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/util/ByteUtilsBenchmark.java"
      ]
    },
    "message": "KAFKA-14766: Improve performance of VarInt encoding and decoding (#13312)\n\nMotivation\n\nReading/writing the protocol buffer varInt32 and varInt64 (also called varLong in our code base) is in the hot path of data plane code in Apache Kafka. We read multiple varInt in a record and in long. Hence, even a minor change in performance could extrapolate to larger performance benefit.\n\nIn this PR, we only update varInt32 encoding/decoding.\nChanges\n\nThis change uses loop unrolling and reduces the amount of repetition of calculations. Based on the empirical results from the benchmark, the code has been modified to pick up the best implementation.\nResults\n\nPerformance has been evaluated using JMH benchmarks on JDK 17.0.6. Various implementations have been added in the benchmark and benchmarking has been done for different sizes of varints and varlongs. The benchmark for various implementations have been added at ByteUtilsBenchmark.java\n\nReviewers: Ismael Juma <mlists@juma.me.uk>, Luke Chen <showuon@gmail.com>, Alexandre Dupriez <alexandre.dupriez@gmail.com>",
    "epoch": 1683306320,
    "epoch_utc": null
  },
  {
    "commit": "e34f88403159cc8381da23dafdf7e3d7403114a2",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Fri May 5 13:55:17 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri May 5 13:55:17 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 61,
      "deletions": 12,
      "files": [
        "core/src/main/scala/kafka/log/LogCleaner.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerTest.scala"
      ]
    },
    "message": "KAFKA-14926: Remove metrics on Log Cleaner shutdown (#13623)\n\nWhen Log cleaning is shutdown, it doesn't remove metrics that were registered to `KafkaYammerMetrics.defaultRegistry()` which has one instance per server. Log cleaner's lifecycle is associated with lifecycle of `LogManager` and hence, there is no possibility where log cleaner will be shutdown but the broker won't. Broker shutdown will close the `jmxReporter` and hence, there is no current metric leak here. The motivation for this code change is to \"do the right thing\" from a code hygiene perspective.\n\nReviewers: Manyanda Chitimbo <manyanda.chitimbo@gmail.com>, Kirk True <kirk@mustardgrain.com>, David Jacot <djacot@confluent.io>",
    "epoch": 1683305717,
    "epoch_utc": null
  },
  {
    "commit": "0822ce0ed1a106a510930bc9ac53a266f54684d7",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Fri May 5 04:35:26 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri May 5 01:35:26 2023 -0700",
    "stats": {
      "files_changed": 29,
      "insertions": 2725,
      "deletions": 1394,
      "files": [
        "checkstyle/suppressions.xml",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/zk/ZkMigrationClient.scala",
        "core/src/main/scala/kafka/zk/migration/ZkAclMigrationClient.scala",
        "core/src/main/scala/kafka/zk/migration/ZkConfigMigrationClient.scala",
        "core/src/main/scala/kafka/zk/migration/ZkTopicMigrationClient.scala",
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/zk/ZkMigrationClientTest.scala",
        "core/src/test/scala/unit/kafka/zk/migration/ZkAclMigrationClientTest.scala",
        "core/src/test/scala/unit/kafka/zk/migration/ZkConfigMigrationClientTest.scala",
        "core/src/test/scala/unit/kafka/zk/migration/ZkMigrationClientTest.scala",
        "core/src/test/scala/unit/kafka/zk/migration/ZkMigrationTestHarness.scala",
        "metadata/src/main/java/org/apache/kafka/image/AclsDelta.java",
        "metadata/src/main/java/org/apache/kafka/image/ConfigurationsImage.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/AclMigrationClient.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/ConfigMigrationClient.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationOperation.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationZkWriter.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/MigrationClient.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/TopicMigrationClient.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/ZkMigrationLeadershipState.java",
        "metadata/src/test/java/org/apache/kafka/image/TopicsImageTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/CapturingAclMigrationClient.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/CapturingConfigMigrationClient.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/CapturingMigrationClient.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/CapturingTopicMigrationClient.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationDriverTest.java",
        "tests/kafkatest/tests/core/zookeeper_migration_test.py"
      ]
    },
    "message": "KAFKA-14840: Support for snapshots during ZK migration (#13461)\n\nThis patch adds support for handling metadata snapshots while in dual-write mode. Prior to this change, if the active\ncontroller loaded a snapshot, it would get out of sync with the ZK state.\n\nIn order to reconcile the snapshot state with ZK, several methods were added to scan through the metadata in ZK to\ncompute differences with the MetadataImage. Since this introduced a lot of code, I opted to split out a lot of methods\nfrom ZkMigrationClient into their own client interfaces, such as TopicMigrationClient, ConfigMigrationClient, and\nAclMigrationClient. Each of these has some iterator method that lets the caller examine the ZK state in a single pass\nand without using too much memory.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>, Luke Chen <showuon@gmail.com>",
    "epoch": 1683272126,
    "epoch_utc": null
  },
  {
    "commit": "97c36f3f3142580325daa1a6aadb662893390561",
    "author": "Colin P. McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Thu May 4 12:20:33 2023 -0700",
    "commit_by": "Colin P. McCabe",
    "commit_by_email": "cmccabe@apache.org",
    "commit_by_date": "Thu May 4 12:20:33 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 0,
      "deletions": 2,
      "files": [
        "metadata/src/main/java/org/apache/kafka/metadata/util/RecordRedactor.java",
        "metadata/src/main/java/org/apache/kafka/metadata/util/SnapshotReason.java",
        "metadata/src/test/java/org/apache/kafka/metadata/util/SnapshotReasonTest.java"
      ]
    },
    "message": "HOTFIX: fix file deletions left out of MINOR: improve QuorumController logging #13540",
    "epoch": 1683213633,
    "epoch_utc": null
  },
  {
    "commit": "63f9f23ec0aaa62f0da93ebc42934f5fce743ddb",
    "author": "Colin P. McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Thu May 4 11:18:03 2023 -0700",
    "commit_by": "Colin P. McCabe",
    "commit_by_email": "cmccabe@apache.org",
    "commit_by_date": "Thu May 4 11:18:03 2023 -0700",
    "stats": {
      "files_changed": 8,
      "insertions": 228,
      "deletions": 177,
      "files": [
        "metadata/src/main/java/org/apache/kafka/controller/FeatureControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/metadata/util/RecordRedactor.java",
        "metadata/src/main/java/org/apache/kafka/metadata/util/SnapshotReason.java",
        "metadata/src/test/java/org/apache/kafka/metadata/util/RecordRedactorTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/util/SnapshotReasonTest.java",
        "server-common/src/main/java/org/apache/kafka/deferred/DeferredEventQueue.java",
        "server-common/src/test/java/org/apache/kafka/deferred/DeferredEventQueueTest.java"
      ]
    },
    "message": "MINOR: improve QuorumController logging #13540\n\nWhen creating the QuorumController, log whether ZK migration is enabled.\n\nWhen applying a feature level record which sets the metadata version, log the metadata version enum\nrather than the numeric feature level.\n\nImprove the logging when we replay snapshots in QuorumController. Log both the beginning and the\nend of replay.\n\nWhen TRACE is enabled, log every record that is replayed in QuorumController. Since some records\nmay contain sensitive information, create RecordRedactor to assist in logging only what is safe to\nput in the log4j file.\n\nAdd logging to ControllerPurgatory. Successful completions are logged at DEBUG; failures are logged\nat INFO, and additions are logged at TRACE.\n\nRemove SnapshotReason.java, SnapshotReasonTest.java, and\nQuorumController#generateSnapshotScheduled. They are deadcode now that snapshot generation moved to\norg.apache.kafka.image.publisher.SnapshotGenerator.\n\nReviewers: David Arthur <mumrah@gmail.com>, Jos\u00e9 Armando Garc\u00eda Sancio <jsancio@apache.org>",
    "epoch": 1683209883,
    "epoch_utc": null
  },
  {
    "commit": "ffd814d25fb97f2ee0b73000788c93ec1d5b9bff",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Thu May 4 09:55:45 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu May 4 09:55:45 2023 -0700",
    "stats": {
      "files_changed": 4,
      "insertions": 105,
      "deletions": 15,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/ProduceRequest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/ProduceRequestTest.java",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala"
      ]
    },
    "message": "KAFKA-14916: Fix code that assumes transactional ID implies all records are transactional (#13607)\n\nAlso modifies verification to only add a partition to verify if it is transactional.\n\nWhen verifying we look at all the transactional producer IDs and throw INVALID_RECORD on the request if one is different.\n\nReviewers: Kirk True <ktrue@confluent.io>, Artem Livshits <alivshits@confluent.io>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1683204945,
    "epoch_utc": null
  },
  {
    "commit": "ea81e99e5980c807414651034a8c60426a158ca4",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Thu May 4 09:20:01 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu May 4 09:20:01 2023 -0700",
    "stats": {
      "files_changed": 7,
      "insertions": 143,
      "deletions": 26,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/Sender.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/TransactionManager.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/SenderTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java",
        "core/src/test/scala/integration/kafka/api/AuthorizerIntegrationTest.scala"
      ]
    },
    "message": "KAFKA-13668: Retry upon missing initProducerId due to authorization error (#12149)\n\nProducers used to throw a fatal error upon failing initProducerId, which can be caused by authorization errors. In this case, the user will need to instantiate a producer.\n\nThis PR makes authorization errors non-fatal so that the user can retry until the permission is fixed by an admin.\n\nHere we first transition the producer to the ABORTABLE state, then to the UNINITIALIZED state (so that the producer is recoverable). Upon the subsequent send, the producer will transition to INITIALIZING and attempt to send another InitProducerIdRequest.\n\nReviewers: Kirk True <ktrue@confluent.io>, David Jacot <djacot@confluent.io>, Jason Gustafson <jason@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1683202801,
    "epoch_utc": null
  },
  {
    "commit": "dc7819d7f1fe6b0160cd95246420ab10c335410b",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Thu May 4 11:00:33 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu May 4 12:00:33 2023 +0200",
    "stats": {
      "files_changed": 7,
      "insertions": 367,
      "deletions": 211,
      "files": [
        "bin/kafka-log-dirs.sh",
        "bin/windows/kafka-log-dirs.bat",
        "clients/src/test/java/org/apache/kafka/clients/admin/MockAdminClient.java",
        "core/src/main/scala/kafka/admin/LogDirsCommand.scala",
        "core/src/test/scala/unit/kafka/admin/LogDirsCommandTest.scala",
        "tools/src/main/java/org/apache/kafka/tools/LogDirsCommand.java",
        "tools/src/test/java/org/apache/kafka/tools/LogDirsCommandTest.java"
      ]
    },
    "message": "KAFKA-14594: Move LogDirsCommand to tools module (#13122)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1683208833,
    "epoch_utc": null
  },
  {
    "commit": "d46c3f259cce25c43f20fba3943d5cb34ed909ea",
    "author": "David Mao",
    "author_email": "47232755+splett2@users.noreply.github.com",
    "date": "Wed May 3 17:09:43 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 3 17:09:43 2023 -0700",
    "stats": {
      "files_changed": 5,
      "insertions": 8,
      "deletions": 13,
      "files": [
        "clients/src/test/java/org/apache/kafka/test/TestUtils.java",
        "core/src/test/scala/integration/kafka/network/DynamicNumNetworkThreadsTest.scala",
        "core/src/test/scala/unit/kafka/network/SocketServerTest.scala",
        "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala"
      ]
    },
    "message": "MINOR: Reduce number of threads created for integration test brokers (#13655)\n\nThe integration tests seem to create an unnecessarily large number of threads. This reduces the number of threads created per integration test harness broker.\n\nReviewers: Luke Chen <showuon@gmail.com>. Justine Olshan <jolshan@confluent.io>",
    "epoch": 1683144583,
    "epoch_utc": null
  },
  {
    "commit": "c08120f83f7318f15dcf14d525876d18caf6afd0",
    "author": "Jason Gustafson",
    "author_email": "jason@confluent.io",
    "date": "Wed May 3 15:25:32 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 3 15:25:32 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 30,
      "deletions": 4,
      "files": [
        "clients/src/test/java/org/apache/kafka/common/message/SimpleExampleMessageTest.java",
        "clients/src/test/resources/common/message/SimpleExampleMessage.json",
        "generator/src/main/java/org/apache/kafka/message/MessageDataGenerator.java"
      ]
    },
    "message": "MINOR: Allow tagged fields with version subset of flexible version range (#13551)\n\nThe generated message types are missing a range check for the case when the tagged version range is a subset of\nthe flexible version range. This causes the tagged field count, which is computed correctly, to conflict with the\nnumber of tags serialized.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1683138332,
    "epoch_utc": null
  },
  {
    "commit": "b620c03ccf48d6d92b219cba35bb1e5e248d2547",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Thu May 4 01:08:25 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed May 3 10:08:25 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 29,
      "deletions": 0,
      "files": [
        "server-common/src/main/java/org/apache/kafka/timeline/SnapshottableHashTable.java",
        "server-common/src/test/java/org/apache/kafka/timeline/SnapshottableHashTableTest.java"
      ]
    },
    "message": "KAFKA-14946: fix NPE when merging the deltatable (#13653)\n\nFix NPE while merging the deltatable. Because it's possible that hashTier is\nnot null but deltatable is null (ex: removing data), we should have null check\nwhile merging for deltatable like other places did. Also added tests that will\nfail without this change.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1683173305,
    "epoch_utc": null
  },
  {
    "commit": "4a0b6ebf60ed7614f042443460b490971e8662a4",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Tue May 2 23:16:46 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue May 2 13:46:46 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 2,
      "files": [
        "docs/connect.html"
      ]
    },
    "message": "KAFKA-14876: Document the new 'PUT /connectors/{name}/stop' REST API for Connect (#13657)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1683080206,
    "epoch_utc": null
  },
  {
    "commit": "16fc8e1cfff6f0ac29209704a079b0ddcbd0625e",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Tue May 2 18:04:50 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue May 2 18:04:50 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 1027,
      "deletions": 3,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroupMember.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/TargetAssignmentBuilder.java",
        ".../src/test/java/org/apache/kafka/coordinator/group/consumer/TargetAssignmentBuilderTest.java"
      ]
    },
    "message": "KAFKA-14462; [10/N] Add TargetAssignmentBuilder (#13637)\n\nThis patch adds TargetAssignmentBuilder. It is responsible for computing a target assignment for a given group.\n\nReviewers: Ritika Reddy <rreddy@confluent.io>, Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1683061490,
    "epoch_utc": null
  },
  {
    "commit": "f44ee4fab7ef7adf715ecf2b96defa5cc8311949",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Tue May 2 16:39:31 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue May 2 17:39:31 2023 +0200",
    "stats": {
      "files_changed": 14,
      "insertions": 0,
      "deletions": 66,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AsyncClient.java",
        "clients/src/main/java/org/apache/kafka/common/protocol/types/TaggedFields.java",
        "clients/src/main/java/org/apache/kafka/common/record/AbstractLegacyRecordBatch.java",
        "clients/src/main/java/org/apache/kafka/common/record/DefaultRecordBatch.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/DefaultConfigPropertyFilter.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/DefaultGroupFilter.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/DefaultTopicFilter.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorHeartbeatConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceConfig.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorSourceConnectorTest.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/InternalSinkRecord.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/SourceConnectorConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSinkTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/tools/MockSinkTask.java"
      ]
    },
    "message": "MINOR: Remove unnecessary code in client/connect (#13259)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1683056371,
    "epoch_utc": null
  },
  {
    "commit": "33012b5ec34305a5133eb6e9e2fb6e8c3178f3b3",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Tue May 2 14:28:42 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue May 2 20:28:42 2023 +0800",
    "stats": {
      "files_changed": 5,
      "insertions": 220,
      "deletions": 62,
      "files": [
        "examples/src/main/java/kafka/examples/Consumer.java",
        "examples/src/main/java/kafka/examples/ExactlyOnceMessageProcessor.java",
        "examples/src/main/java/kafka/examples/KafkaConsumerProducerDemo.java",
        "examples/src/main/java/kafka/examples/KafkaExactlyOnceDemo.java",
        "examples/src/main/java/kafka/examples/Utils.java"
      ]
    },
    "message": "KAFKA-14752: Kafka examples improvements - consumer changes (#13514)\n\nKAFKA-14752: Kafka examples improvements - consumer changes\n\nThis is extracted from the original PR for better review.\nhttps://github.com/apache/kafka/pull/13492\n\nSigned-off-by: Federico Valeri <fedevaleri@gmail.com>\n\nReviewers: Christo Lolov <christololov@gmail.com>, Luke Chen <showuon@gmail.com>",
    "epoch": 1683048522,
    "epoch_utc": null
  },
  {
    "commit": "141c76a2c904705f2cd484e96767fcb217c5db25",
    "author": "Bruno Cadonna",
    "author_email": "cadonna@apache.org",
    "date": "Tue May 2 14:00:34 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue May 2 14:00:34 2023 +0200",
    "stats": {
      "files_changed": 5,
      "insertions": 50,
      "deletions": 73,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TopologyMetadata.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java",
        "streams/src/test/java/org/apache/kafka/test/StreamsTestUtils.java"
      ]
    },
    "message": "KAFKA-14133: Migrate topology builder mock in TaskManagerTest to mockito (#13529)\n\n1. Migrates topology builder mock in TaskManagerTest to mockito.\n\n2. Replaces the unit test to verify if subscribed partitions are added\nto topology metadata.\n\n3. Modifies signatures of methods for adding subscribed partitions to\ntopology metadata to use sets instead of lists. This makes the\nintent of the methods clearer and makes the tests more portable.\n\nReviewers: Christo Lolov <lolovc@amazon.com>, Matthias J. Sax <mjsax@apache.org>",
    "epoch": 1683046834,
    "epoch_utc": null
  },
  {
    "commit": "21af1918eafa30812a955c3c0295b9e968841cd3",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Tue May 2 09:54:12 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue May 2 09:54:12 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 5,
      "deletions": 5,
      "files": [
        "server-common/src/main/java/org/apache/kafka/queue/KafkaEventQueue.java"
      ]
    },
    "message": "MINOR: Add reason to exceptions in QuorumController (#13648)\n\nSaw this error message in log:\n\nERROR [QuorumController id=1] writeNoOpRecord: unable to start processing because of RejectedExecutionException. Reason: null (org.apache.kafka.controller.QuorumController)\n\nThe null reason is not helpful with only RejectedExecutionException. Adding the reason to it.\n\nReviewers: David Arthur <mumrah@gmail.com>, Divij Vaidya <diviv@amazon.com>, Manyanda Chitimbo <manyanda.chitimbo@gmail.com>",
    "epoch": 1683032052,
    "epoch_utc": null
  },
  {
    "commit": "4773961a44d1f0d1e11d662c7e0fc955027bced2",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Mon May 1 21:51:09 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon May 1 12:21:09 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/RestServer.java"
      ]
    },
    "message": "MINOR: Fix Javadoc for configureAdminResources  in Connect's RestServer (#13635)\n\nReviewers: Manyanda Chitimbo <manyanda.chitimbo@gmail.com>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1682988669,
    "epoch_utc": null
  },
  {
    "commit": "e29942347acc70aa85d47e84e2021f9c24cd7c80",
    "author": "Proven Provenzano",
    "author_email": "93720617+pprovenzano@users.noreply.github.com",
    "date": "Mon May 1 09:56:04 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon May 1 09:56:04 2023 -0400",
    "stats": {
      "files_changed": 6,
      "insertions": 124,
      "deletions": 8,
      "files": [
        "checkstyle/import-control-metadata.xml",
        "core/src/main/scala/kafka/zk/ZkMigrationClient.scala",
        "core/src/test/scala/unit/kafka/zk/ZkMigrationClientTest.scala",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/MigrationClient.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationDriverTest.java"
      ]
    },
    "message": "KAFKA-14859: SCRAM ZK to KRaft migration with dual write (#13628)\n\nHandle migrating SCRAM records in ZK when migrating from ZK to KRaft.\n\nThis includes handling writing back SCRAM records to ZK while in dual write mode where metadata updates are written to both the KRaft metadata log and to ZK. This allows for rollback of migration to include SCRAM metadata changes.\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1682945764,
    "epoch_utc": null
  },
  {
    "commit": "64ebbc577de757830b2f26ee3c8c7b1ddf10f86c",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Fri Apr 28 08:46:40 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 28 17:46:40 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 6,
      "deletions": 6,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.java"
      ]
    },
    "message": "MINOR: Fixing typos in the ConsumerCoordinator (#13618)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Christo Lolov <lolovc@amazon.com>, David Jacot <djacot@confluent.io>",
    "epoch": 1682682400,
    "epoch_utc": null
  },
  {
    "commit": "e55fbceb6667cc1455f7fb2e96421c85741fa7df",
    "author": "Anton Agestam",
    "author_email": "anton.agestam@aiven.io",
    "date": "Fri Apr 28 11:54:28 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 28 12:54:28 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "clients/src/main/resources/common/message/SaslAuthenticateResponse.json"
      ]
    },
    "message": "MINOR: Fix incorrect description of SessionLifetimeMs (#13649)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1682693668,
    "epoch_utc": null
  },
  {
    "commit": "c6ad151ac3bac0d8d1d6985d230eacaa170b8984",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Fri Apr 28 02:08:32 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 28 11:08:32 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 130,
      "deletions": 32,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignorTest.java"
      ]
    },
    "message": "KAFKA-14639: A single partition may be revoked and assign during a single round of rebalance (#13550)\n\nThis is a really long story, but the incident started in KAFKA-13419 when we observed a member sending out a topic partition owned from the previous generation when a member missed a rebalance cycle due to REBALANCE_IN_PROGRESS.\n\nThis patch changes the AbstractStickyAssignor.AllSubscriptionsEqual method.  In short, it should no long check and validate only the highest generation.  Instead, we consider 3 cases:\n1. Member will continue to hold on to its partition if there are no other owners\n2. If there are 1+ owners to the same partition. One with the highest generation will win.\n3. If two members of the same generation hold on to the same partition.  We will log an error but remove both from the assignment. (Same with the current logic)\n\nHere are some important notes that lead to the patch:\n- If a member is kicked out of the group, and `UNKNOWN_MEMBER_ID` will be thrown.\n- It seems to be a common situation that members are late to joinGroup and therefore get `REBALANCE_IN_PROGRESS` error.  This is why we don't want to reset generation because it might cause lots of revocations and can be disruptive\n\nTo summarize the current behavior of different errors:\n`REBALANCE_IN_PROGRESS`\n- heartbeat: requestRejoin if member state is stable\n- joinGroup: rejoin immediately\n- syncGroup: rejoin immediately\n- commit: requestRejoin and fail the commit. Raise this exception if the generation is staled, i.e. another rebalance is already in progress.\n\n`UNKNOWN_MEMBER_ID`\n- heartbeat: resetStateAndRejoinif generation hasn't changed. otherwise, ignore\n- joinGroup: resetStateAndRejoin if generation unchanged, otherwise rejoin immediately\n- syncGroup:  resetStateAndRejoin if generation unchanged, otherwise rejoin immediately\n\n`ILLEGAL_GENERATION`\n- heartbeat: resetStateAndRejoinif generation hasn't changed. otherwise, ignore\n- syncGroup: raised the exception if generation has been resetted or the member hasn't completed rebalancing.  then resetStateAndRejoin if generation unchanged, otherwise rejoin immediately\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1682658512,
    "epoch_utc": null
  },
  {
    "commit": "10b3e667132934084a2d275a204a1a782c2df94e",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Fri Apr 28 10:32:11 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 28 10:32:11 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 3,
      "files": [
        "core/src/main/scala/kafka/tools/StateChangeLogMerger.scala"
      ]
    },
    "message": "KAFKA-14584: Deprecate StateChangeLogMerger tool (#13171)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1682688731,
    "epoch_utc": null
  },
  {
    "commit": "d796480fe87fd819fc0ac560ca318759180d4644",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Fri Apr 28 14:35:12 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 28 14:35:12 2023 +0800",
    "stats": {
      "files_changed": 20,
      "insertions": 310,
      "deletions": 106,
      "files": [
        "checkstyle/import-control-metadata.xml",
        "clients/src/main/java/org/apache/kafka/clients/NetworkClient.java",
        "clients/src/main/java/org/apache/kafka/clients/NodeApiVersions.java",
        "clients/src/main/java/org/apache/kafka/common/requests/ApiVersionsResponse.java",
        "clients/src/test/java/org/apache/kafka/clients/NodeApiVersionsTest.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/ApiVersionsResponseTest.java",
        "core/src/main/scala/kafka/admin/BrokerApiVersionsCommand.scala",
        "core/src/main/scala/kafka/server/ApiVersionManager.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/tools/TestRaftServer.scala",
        "core/src/test/scala/unit/kafka/network/SocketServerTest.scala",
        "core/src/test/scala/unit/kafka/server/ControllerApisTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/metadata/KRaftMetadataRequestBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/metadata/MetadataRequestBenchmark.java",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumFeatures.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumFeaturesTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationDriverTest.java"
      ]
    },
    "message": "KAFKA-14909: check zkMigrationReady tag before migration (#13631)\n\n1. add ZkMigrationReady in apiVersionsResponse\n2. check all nodes if ZkMigrationReady are ready before moving to next migration state\n\nReviewers: David Arthur <mumrah@gmail.com>, dengziming <dengziming1993@gmail.com>",
    "epoch": 1682703312,
    "epoch_utc": null
  },
  {
    "commit": "c708f7ba5f4f449920cec57a5b69e84e92128b54",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Thu Apr 27 19:15:26 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 28 10:15:26 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 13,
      "deletions": 8,
      "files": [
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java"
      ]
    },
    "message": "MINOR: remove spurious call to fatalFaultHandler (#13651)\n\nRemove a spurious call to fatalFaultHandler accidentally introduced by KAFKA-14805.  We should only\ninvoke the fatal fault handller if we are unable to generate the activation records. If we are\nunable to write the activation records, a controller failover should be sufficient to remedy the\nsituation.\n\nCo-authored-by: Luke Chen showuon@gmail.com\n\nReviewers: Luke Chen <showuon@gmail.com>, David Arthur <mumrah@gmail.com>",
    "epoch": 1682633726,
    "epoch_utc": null
  },
  {
    "commit": "056657d84d84e116ffc9460872945b4d2b479ff3",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Thu Apr 27 17:04:56 2023 -0400",
    "commit_by": "David Arthur",
    "commit_by_email": "mumrah@gmail.com",
    "commit_by_date": "Thu Apr 27 17:04:56 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 18,
      "deletions": 0,
      "files": [
        "reviewers.py"
      ]
    },
    "message": "MINOR add license to reviewers.py",
    "epoch": 1682625896,
    "epoch_utc": null
  },
  {
    "commit": "a08f31ecfefca1a51d64137a344e62a236740e62",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Thu Apr 27 14:32:19 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 27 14:32:19 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 76,
      "deletions": 0,
      "files": [
        "reviewers.py"
      ]
    },
    "message": "MINOR: Adding reviewers.py (#11096)\n\nThis script can be used to help build the \"Reviewers: \" string we include in commit messages.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>, Luke Chen <showuon@gmail.com>, Jos\u00e9 Armando Garc\u00eda Sancio <jsancio@apache.org>",
    "epoch": 1682616739,
    "epoch_utc": null
  },
  {
    "commit": "70493336171363cfa95237a0fe14ef57090553e4",
    "author": "Colin P. McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Wed Apr 26 16:10:46 2023 -0700",
    "commit_by": "Colin P. McCabe",
    "commit_by_email": "cmccabe@apache.org",
    "commit_by_date": "Thu Apr 27 10:42:32 2023 -0700",
    "stats": {
      "files_changed": 4,
      "insertions": 240,
      "deletions": 43,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/config/internals/QuotaConfigs.java",
        "core/src/main/scala/kafka/server/DynamicConfig.scala",
        "metadata/src/main/java/org/apache/kafka/controller/ClientQuotaControlManager.java",
        "metadata/src/test/java/org/apache/kafka/controller/ClientQuotaControlManagerTest.java"
      ]
    },
    "message": "KAFKA-14943: Fix ClientQuotaControlManager validation\n\nDon't allow setting negative or zero values for quotas. Don't allow SCRAM mechanism names to be\nused as client quota names. SCRAM mechanisms are not client quotas. (The confusion arose because of\ninternal ZK representation details that treated them both as \"client configs.\")\n\nAdd unit tests for ClientQuotaControlManager.isValidIpEntity and\nClientQuotaControlManager.configKeysForEntityType.\n\nThis change doesn't affect metadata record application, only input validation. If there are bad\nclient quotas that are set currently, this change will not alter the current behavior (of throwing\nan exception and ignoring the bad quota).",
    "epoch": 1682536246,
    "epoch_utc": null
  },
  {
    "commit": "8bde4e79cdeea7761b54e24516a7d2cc9f52e051",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Thu Apr 27 14:05:41 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 27 14:05:41 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 757,
      "deletions": 0,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/RecordHelpers.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/RecordHelpersTest.java"
      ]
    },
    "message": "KAFKA-14462; [9/N] Add RecordHelpers (#13544)\n\nThis patch adds RecordHelpers.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1682615141,
    "epoch_utc": null
  },
  {
    "commit": "dd6690a7a0a565a681c52dbfe0c7c89875bdf8c9",
    "author": "LinShunKang",
    "author_email": "linshunkang.chn@gmail.com",
    "date": "Thu Apr 27 10:44:08 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 27 10:44:08 2023 +0800",
    "stats": {
      "files_changed": 15,
      "insertions": 243,
      "deletions": 18,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CompletedFetch.java",
        "clients/src/main/java/org/apache/kafka/common/serialization/BooleanDeserializer.java",
        "clients/src/main/java/org/apache/kafka/common/serialization/ByteBufferDeserializer.java",
        "clients/src/main/java/org/apache/kafka/common/serialization/Deserializer.java",
        "clients/src/main/java/org/apache/kafka/common/serialization/DoubleDeserializer.java",
        "clients/src/main/java/org/apache/kafka/common/serialization/FloatDeserializer.java",
        "clients/src/main/java/org/apache/kafka/common/serialization/IntegerDeserializer.java",
        "clients/src/main/java/org/apache/kafka/common/serialization/LongDeserializer.java",
        "clients/src/main/java/org/apache/kafka/common/serialization/ShortDeserializer.java",
        "clients/src/main/java/org/apache/kafka/common/serialization/StringDeserializer.java",
        "clients/src/main/java/org/apache/kafka/common/serialization/UUIDDeserializer.java",
        "clients/src/main/java/org/apache/kafka/common/serialization/VoidDeserializer.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java",
        "clients/src/test/java/org/apache/kafka/common/serialization/SerializationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/SerdeThatDoesntHandleNull.java"
      ]
    },
    "message": "KAFKA-14944: Reduce CompletedFetch#parseRecord() memory copy (#12545)\n\nThis implements KIP-863: https://cwiki.apache.org/confluence/pages/viewpage.action?pageId=225152035\nDirect use ByteBuffer instead of byte[] to deserialize.\n\nReviewers: Luke Chen <showuon@gmail.com>, Kirk True <kirk@kirktrue.pro>",
    "epoch": 1682603048,
    "epoch_utc": null
  },
  {
    "commit": "c1b5c75d9271638776392822a094e9e7ef37f490",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Wed Apr 26 10:20:30 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 26 10:20:30 2023 -0400",
    "stats": {
      "files_changed": 28,
      "insertions": 1049,
      "deletions": 251,
      "files": [
        "checkstyle/suppressions.xml",
        "core/src/test/java/kafka/test/junit/RaftClusterInvocationContext.java",
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/server/BrokerRegistrationRequestTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/ClusterControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/FeatureControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/MigrationControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/ProducerIdControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/controller/ReplicationControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/metrics/ControllerMetadataMetrics.java",
        "metadata/src/main/java/org/apache/kafka/controller/metrics/ControllerMetadataMetricsPublisher.java",
        "metadata/src/main/java/org/apache/kafka/image/FeaturesDelta.java",
        "metadata/src/main/java/org/apache/kafka/image/FeaturesImage.java",
        "metadata/src/main/java/org/apache/kafka/image/MetadataDelta.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/ZkMigrationState.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/ZkRecordConsumer.java",
        "metadata/src/main/resources/common/metadata/ZkMigrationRecord.json",
        "metadata/src/test/java/org/apache/kafka/controller/FeatureControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/metrics/ControllerMetadataMetricsTest.java",
        "metadata/src/test/java/org/apache/kafka/image/FeaturesImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/publisher/SnapshotGeneratorTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/RecordTestUtils.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationDriverTest.java",
        "tests/docker/Dockerfile",
        "tests/kafkatest/tests/core/zookeeper_migration_test.py"
      ]
    },
    "message": "KAFKA-14805 KRaft controller supports pre-migration mode (#13407)\n\nThis patch adds the concept of pre-migration mode to the KRaft controller. While in this mode,\nthe controller will only allow certain write operations. The purpose of this is to disallow metadata\nchanges when the controller is waiting for the ZK migration records to be committed.\n\nThe following ControllerWriteEvent operations are permitted in pre-migration mode\n\n* completeActivation\n* maybeFenceReplicas\n* writeNoOpRecord\n* processBrokerHeartbeat\n* registerBroker (only for migrating ZK brokers)\n* unregisterBroker\n\nRaft events and other controller events do not follow the same code path as ControllerWriteEvent,\nso they are not affected by this new behavior.\n\nThis patch also add a new metric as defined in KIP-868: kafka.controller:type=KafkaController,name=ZkMigrationState\n\nIn order to support upgrades from 3.4.0, this patch also redefines the enum value of value 1 to mean\nMIGRATION rather than PRE_MIGRATION.\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>, Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1682515230,
    "epoch_utc": null
  },
  {
    "commit": "007c0d375a6e70aefb65f58f9f096016c4cbea16",
    "author": "vamossagar12",
    "author_email": "sagarmeansocean@gmail.com",
    "date": "Wed Apr 26 17:53:56 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 26 14:23:56 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaStatusBackingStoreFormatTest.java"
      ]
    },
    "message": "KAFKA-14929: Fixing flaky test putTopicStateRetriableFailure (#13634)\n\nCo-authored-by: Sagar Rao <sagarrao@Sagars-MacBook-Pro.local>\n\nReviewers: Daniel Urban <durban@cloudera.com>, Justine Olshan <jolshan@confluent.io>, Manyanda Chitimbo <manyanda.chitimbo@gmail.com>, Viktor Somogyi-Vass <viktorsomogyi@gmail.com>",
    "epoch": 1682542436,
    "epoch_utc": null
  },
  {
    "commit": "baf127a6633161cb52747467880b006d2f54d3bd",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Wed Apr 26 00:30:13 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 26 03:30:13 2023 -0400",
    "stats": {
      "files_changed": 5,
      "insertions": 516,
      "deletions": 50,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointTask.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/OffsetSyncStore.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorCheckpointTaskTest.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/OffsetSyncStoreTest.java",
        ".../src/test/java/org/apache/kafka/connect/mirror/integration/MirrorConnectorsIntegrationBaseTest.java"
      ]
    },
    "message": "KAFKA-14666: Add MM2 in-memory offset translation index for offsets behind replication (#13429)\n\nReviewers: Daniel Urban <durban@cloudera.com>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1682479813,
    "epoch_utc": null
  },
  {
    "commit": "ced1f62c1b1cc0d547dc31fbce538885c29ed1ef",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Tue Apr 25 22:39:23 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Apr 25 19:39:23 2023 -0700",
    "stats": {
      "files_changed": 5,
      "insertions": 81,
      "deletions": 8,
      "files": [
        "docs/streams/core-concepts.html",
        "docs/streams/developer-guide/dsl-api.html",
        "docs/streams/developer-guide/processor-api.html",
        "docs/streams/upgrade-guide.html",
        "docs/upgrade.html"
      ]
    },
    "message": "KAFKA-14834: [13/N] Docs updates for versioned store semantics (#13622)\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1682473163,
    "epoch_utc": null
  },
  {
    "commit": "a7d0b3f753708a93aea92e614833f6f6e7443234",
    "author": "Said Boudjelda",
    "author_email": "bmscomp@gmail.com",
    "date": "Tue Apr 25 23:31:04 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Apr 25 14:31:04 2023 -0700",
    "stats": {
      "files_changed": 4,
      "insertions": 10,
      "deletions": 9,
      "files": [
        "build.gradle",
        "gradle/dependencies.gradle",
        "gradle/wrapper/gradle-wrapper.properties",
        "gradlew"
      ]
    },
    "message": "MINOR: Upgrade gradle to 8.1.1 (#13625)\n\nAlso upgrade gradle plugins:\n- `org.owasp.dependencycheck` gradle plugin to version `8.2.1`\n- `com.github.johnrengelman.shadow gradle` plugin to version `8.1.1`\n\nGradle release notes:\n* https://docs.gradle.org/8.1.1/release-notes.html\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1682476264,
    "epoch_utc": null
  },
  {
    "commit": "9a36da12b7359b7158332c541655716312efb5b3",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Tue Apr 25 18:50:51 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Apr 25 18:50:51 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 924,
      "deletions": 0,
      "files": [
        "checkstyle/suppressions.xml",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroupMember.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/consumer/ConsumerGroupMemberTest.java"
      ]
    },
    "message": "KAFKA-14462; [8/N] Add ConsumerGroupMember (#13538)\n\nThis patch adds ConsumerGroupMember.\n\nReviewers: Christo Lolov <lolovc@amazon.com>, Jeff Kim <jeff.kim@confluent.io>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1682459451,
    "epoch_utc": null
  },
  {
    "commit": "4780dc773f2cd5a20fa5be38d20137745690a888",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Tue Apr 25 21:20:35 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Apr 25 17:50:35 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 20,
      "deletions": 2,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/resources/LoggingResource.java",
        "docs/connect.html"
      ]
    },
    "message": "KAFKA-14933: Document Connect's log level REST APIs from KIP-495 (#13636)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Manyanda Chitimbo <manyanda.chitimbo@gmail.com>",
    "epoch": 1682468435,
    "epoch_utc": null
  },
  {
    "commit": "ea540fa40042c5e2d808cc4dfc71c71f7466fbe4",
    "author": "Gantigmaa Selenge",
    "author_email": "39860586+tinaselenge@users.noreply.github.com",
    "date": "Tue Apr 25 13:28:37 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Apr 25 20:28:37 2023 +0800",
    "stats": {
      "files_changed": 8,
      "insertions": 653,
      "deletions": 627,
      "files": [
        "bin/kafka-features.sh",
        "bin/windows/kafka-features.bat",
        "checkstyle/import-control.xml",
        "core/src/main/scala/kafka/admin/FeatureCommand.scala",
        "core/src/test/scala/unit/kafka/admin/FeatureCommandTest.scala",
        "tools/src/main/java/org/apache/kafka/tools/FeatureCommand.java",
        "tools/src/test/java/org/apache/kafka/tools/FeatureCommandTest.java",
        "tools/src/test/java/org/apache/kafka/tools/ToolsTestUtils.java"
      ]
    },
    "message": "KAFKA-14592: Move FeatureCommand to tools (#13459)\n\nKAFKA-14592: Move FeatureCommand to tools\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1682440117,
    "epoch_utc": null
  },
  {
    "commit": "d83a734c41c43a03aa571e602cf8535f0893fd79",
    "author": "Manyanda Chitimbo",
    "author_email": "manyanda.chitimbo@gmail.com",
    "date": "Tue Apr 25 12:02:24 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Apr 25 15:32:24 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 0,
      "deletions": 1,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/security/ssl/DefaultSslEngineFactory.java"
      ]
    },
    "message": "MINOR: only set sslEngine#setUseClientMode to false once when ssl mode is server (#13626)\n\nThe sslEngine.setUseClientMode(false) was duplicated when ssl mode is server during SSLEngine creation\nin DefaultSslEngineFactory.java. The patch attemps to remove the duplicated call.\n\nReviewers:   maulin-vasavada <maulin.vasavada@gmail.com>, Divij Vaidya <diviv@amazon.com>, Manikumar Reddy <manikumar.reddy@gmail.com>",
    "epoch": 1682434944,
    "epoch_utc": null
  },
  {
    "commit": "2557a4b842b07ac796193bd9a3ef6b724dc995cf",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Mon Apr 24 15:29:57 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 24 15:29:57 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 103,
      "deletions": 80,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/ChangedDeserializer.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/ChangedSerializer.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/ChangedSerdeTest.java"
      ]
    },
    "message": "KAFKA-12446: update change encoding to use varint (#13533)\n\nKIP-904 had the goal in mind to save space when encoding the size on a byte array. However, using UINT32 does not achieve this goal. This PR changes the encoding to VARINT instead.\n\nReviewers: Victoria Xia <victoria.xia@confluent.io>,  Farooq Qaiser <fqaiser94@gmail.com>, Walker Carlson <wcarlson@confluent.io>",
    "epoch": 1682360997,
    "epoch_utc": null
  },
  {
    "commit": "ab8f2850973b1e9fd548d5b7b8eae458fdd26402",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Mon Apr 24 17:06:26 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 24 14:06:26 2023 -0700",
    "stats": {
      "files_changed": 9,
      "insertions": 280,
      "deletions": 255,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableRepartitionMap.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableTransformValues.java",
        "streams/src/main/java/org/apache/kafka/streams/state/KeyValueStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/ReadOnlyKeyValueStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/VersionedKeyValueStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/WindowStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredVersionedKeyValueStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBVersionedStore.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/TableTableJoinIntegrationTest.java"
      ]
    },
    "message": "KAFKA-14834: [12/N] Minor code cleanups relating to versioned stores (#13615)\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1682366786,
    "epoch_utc": null
  },
  {
    "commit": "6dcdb017327587a6943fa868595fa3488c7f7ef7",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Mon Apr 24 12:40:25 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 24 12:40:25 2023 -0700",
    "stats": {
      "files_changed": 5,
      "insertions": 217,
      "deletions": 15,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamImplJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamSelfJoin.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/KStreamKStreamIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamKStreamJoinTest.java"
      ]
    },
    "message": "KAFKA-14862: Outer stream-stream join does not output all results with multiple input partitions (#13592)\n\nStream-stream outer join, uses a \"shared time tracker\" to track stream-time progress for left and right input in a single place. This time tracker is incorrectly shared across tasks.\n\nThis PR introduces a supplier to create a \"shared time tracker\" object per task, to be shared between the left and right join processors.\n\nReviewers: Victoria Xia <victoria.xia@confluent.io>, Bruno Cadonna <bruno@confluent.io>, Walker Carlson <wcarlson@confluent.io>",
    "epoch": 1682350825,
    "epoch_utc": null
  },
  {
    "commit": "2271e748a11919d07698ebce759dca2e3075596a",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Mon Apr 24 17:21:19 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 24 17:21:19 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 3,
      "files": [
        "tests/kafkatest/tests/core/zookeeper_migration_test.py"
      ]
    },
    "message": "MINOR: fix zookeeper_migration_test.py (#13620)\n\nReviewers: Mickael Maison <mimaison@users.noreply.github.com>",
    "epoch": 1682367679,
    "epoch_utc": null
  },
  {
    "commit": "c3241236296f9aaee103e475f242e32f04d4c256",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Mon Apr 24 14:06:20 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 24 10:36:20 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 0,
      "files": [
        "docs/connect.html"
      ]
    },
    "message": "KAFKA-14876: Document the new 'GET /connectors/{name}/offsets' REST API for Connect (#13587)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1682355980,
    "epoch_utc": null
  },
  {
    "commit": "7061475445cb6314e7cf4f9848384224b14f4395",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Fri Apr 21 12:55:41 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 21 21:55:41 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 24,
      "deletions": 38,
      "files": [
        ".../src/test/java/org/apache/kafka/connect/mirror/clients/admin/FakeForwardingAdminWithLocalMetadata.java"
      ]
    },
    "message": "KAFKA-14905: Reduce flakiness in MM2 ForwardingAdmin test due to admin timeouts (#13575)\n\nReduce flakiness of `MirrorConnectorsWithCustomForwardingAdminIntegrationTest`\n\nReviewers: Josep Prat <jlprat@apache.org>",
    "epoch": 1682092541,
    "epoch_utc": null
  },
  {
    "commit": "ecdef88f744410039b88e90a5979078d5735aa06",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Fri Apr 21 12:48:05 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 21 12:48:05 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 51,
      "deletions": 15,
      "files": [
        "docs/streams/upgrade-guide.html",
        "docs/upgrade.html"
      ]
    },
    "message": "MINOR: updated KS release notes for 3.5 (#13577)\n\nReviewers: Walker Carlson <wcarlson@confluent.io>",
    "epoch": 1682092085,
    "epoch_utc": null
  },
  {
    "commit": "dd63d88ac3ea7a9a55a6dacf9c5473e939322a55",
    "author": "Manyanda Chitimbo",
    "author_email": "manyanda.chitimbo@gmail.com",
    "date": "Fri Apr 21 15:02:06 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 21 15:02:06 2023 +0200",
    "stats": {
      "files_changed": 10,
      "insertions": 13,
      "deletions": 13,
      "files": [
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/image/writer/ImageWriter.java",
        "raft/src/main/java/org/apache/kafka/raft/Batch.java",
        "raft/src/main/java/org/apache/kafka/raft/CandidateState.java",
        "raft/src/main/java/org/apache/kafka/raft/ExpirationService.java",
        "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
        "raft/src/main/java/org/apache/kafka/raft/RaftClient.java",
        "raft/src/main/java/org/apache/kafka/raft/ReplicatedLog.java",
        "raft/src/main/java/org/apache/kafka/snapshot/RawSnapshotReader.java",
        "raft/src/main/java/org/apache/kafka/snapshot/Snapshots.java"
      ]
    },
    "message": "MINOR: fix noticed typo in raft and metadata projects (#13612)\n\nReviewers: Josep Prat <jlprat@apache.org>",
    "epoch": 1682100126,
    "epoch_utc": null
  },
  {
    "commit": "c39bf714bbaf2a632be4c2a7e446553fe40ba129",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Fri Apr 21 11:22:16 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 21 11:22:16 2023 +0200",
    "stats": {
      "files_changed": 9,
      "insertions": 985,
      "deletions": 0,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/Assignment.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/ClientAssignor.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/TopicMetadata.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/consumer/VersionedMetadata.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/consumer/AssignmentTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/consumer/AssignmentTestUtil.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/consumer/ClientAssignorTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/consumer/TopicMetadataTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/consumer/VersionedMetadataTest.java"
      ]
    },
    "message": "KAFKA-14462; [7/N] Add ClientAssignor, Assignment, TopicMetadata and VersionedMetadata (#13537)\n\nThis patch adds ClientAssignor, Assignment, TopicMetadata and VersionedMetadata classes.\n\nReviewers: Christo Lolov <lolovc@amazon.com>, Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1682086936,
    "epoch_utc": null
  },
  {
    "commit": "2d0b816150c79057c813387bd126523b6326a1fc",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Fri Apr 21 11:19:04 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 21 11:19:04 2023 +0200",
    "stats": {
      "files_changed": 5,
      "insertions": 48,
      "deletions": 45,
      "files": [
        "checkstyle/import-control-metadata.xml",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        ".../java/org/apache/kafka/controller => server-common/src/main/java/org/apache/kafka/deferred}/DeferredEvent.java",
        ".../ControllerPurgatory.java => server-common/src/main/java/org/apache/kafka/deferred/DeferredEventQueue.java",
        ".../ControllerPurgatoryTest.java => server-common/src/test/java/org/apache/kafka/deferred/DeferredEventQueueTest.java"
      ]
    },
    "message": "MINOR: Move `ControllerPurgatory` to `server-common` (#13555)\n\nThis patch renames from `ControllerPurgatory` to `DeferredEventQueue` and moves it from the `metadata` module to `server-common` module.\n\nReviewers: Alexandre Dupriez <alexandre.dupriez@gmail.com>, Ziming Deng <dengziming1993@gmail.com>, Jos\u00e9 Armando Garc\u00eda Sancio <jsancio@apache.org>",
    "epoch": 1682086744,
    "epoch_utc": null
  },
  {
    "commit": "df137752542c005c6998c37c03222ffbeca0f349",
    "author": "Purshotam Chauhan",
    "author_email": "pchauhan@confluent.io",
    "date": "Fri Apr 21 14:08:23 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 21 14:08:23 2023 +0530",
    "stats": {
      "files_changed": 11,
      "insertions": 1154,
      "deletions": 234,
      "files": [
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/acl/StandardAuthorizerUpdateBenchmark.java",
        "metadata/src/main/java/org/apache/kafka/metadata/authorizer/AclCache.java",
        "metadata/src/main/java/org/apache/kafka/metadata/authorizer/StandardAuthorizer.java",
        "metadata/src/main/java/org/apache/kafka/metadata/authorizer/StandardAuthorizerData.java",
        "server-common/src/main/java/org/apache/kafka/server/immutable/ImmutableNavigableSet.java",
        ".../src/main/java/org/apache/kafka/server/immutable/pcollections/PCollectionsImmutableNavigableSet.java",
        "server-common/src/main/java/org/apache/kafka/server/immutable/pcollections/PCollectionsImmutableSet.java",
        "server-common/src/test/java/org/apache/kafka/server/immutable/DelegationChecker.java",
        ".../src/test/java/org/apache/kafka/server/immutable/pcollections/PCollectionsImmutableMapTest.java",
        ".../test/java/org/apache/kafka/server/immutable/pcollections/PCollectionsImmutableNavigableSetTest.java",
        ".../src/test/java/org/apache/kafka/server/immutable/pcollections/PCollectionsImmutableSetTest.java"
      ]
    },
    "message": "KAFKA-14828: Remove R/W locks using persistent data structures (#13437)\n\nCurrently, StandardAuthorizer uses a R/W lock for maintaining the consistency of data. For the clusters with very high traffic, we will typically see an increase in latencies whenever a write operation comes. The intent of this PR is to get rid of the R/W lock with the help of immutable or persistent collections. Basically, new object references are used to hold the intermediate state of the write operation. After the completion of the operation, the main reference to the cache is changed to point to the new object. Also, for the read operation, the code is changed such that all accesses to the cache for a single read operation are done to a particular cache object only.\n\nIn the PR description, you can find the performance of various libraries at the time of both read and write. Read performance is checked with the existing AuthorizerBenchmark. For write performance, a new AuthorizerUpdateBenchmark has been added which evaluates the performance of the addAcl operation.\n\n\nReviewers:  Ron Dagostino <rndgstn@gmail.com>, Manikumar Reddy <manikumar.reddy@gmail.com>,  Divij Vaidya <diviv@amazon.com>",
    "epoch": 1682096903,
    "epoch_utc": null
  },
  {
    "commit": "2ee770ac7e576c85a911ccb307339be3d58a8942",
    "author": "Colin P. McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Thu Apr 20 10:21:26 2023 -0700",
    "commit_by": "Colin P. McCabe",
    "commit_by_email": "cmccabe@apache.org",
    "commit_by_date": "Thu Apr 20 10:21:26 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 1,
      "deletions": 41,
      "files": [
        "core/src/main/scala/kafka/network/SocketServer.scala",
        "core/src/test/scala/unit/kafka/network/SocketServerTest.scala"
      ]
    },
    "message": "Revert \"KAFKA-14908: Set setReuseAddress on the kafka server socket (#13572)\"\n\nThis reverts commit d04c3e56c29fc6cb876a1074b1108db2c0f37afc.",
    "epoch": 1681996886,
    "epoch_utc": null
  },
  {
    "commit": "ef09a2e3fc11a738f6681fd57fb84ad109593fd3",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Thu Apr 20 09:30:11 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 20 09:30:11 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 112,
      "deletions": 48,
      "files": [
        "core/src/main/scala/kafka/coordinator/transaction/TransactionCoordinator.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionCoordinatorTest.scala"
      ]
    },
    "message": "KAFKA-14904: Pending state blocked verification of transactions (#13579)\n\nKAFKA-14561 added verification to transactional produce requests to confirm an ongoing transaction.\n\nThere is an edge case where the transaction is added, but the coordinator is writing to the log for another partition. In this case, when verifying, we return CONCURRENT_TRANSACTIONS and retry. However, the next inflight batch is often successful because the write completes.\n\nWhen a partition has no entry in the PSM, it will allow any sequence number. This means if we retry the first write to the partition (or first write in a while) we will never be able to write it and get OutOfOrderSequence exceptions. This is a known issue. Since the verification makes this more common, I propose allowing verification on pending ongoing state since the pending state doesn't prevent us from checking the already added partitions.\n\nThe good news is part 2 of KIP-890 will allow us to enforce that the first write for a transaction is sequence 0 and this issue will go away entirely.\n\nThis PR also adds the locking back into the addPartitions/verify path that was incorrectly removed.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>, Artem Livshits <alivshits@confluent.io>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1681993811,
    "epoch_utc": null
  },
  {
    "commit": "7f175feacaba4187bbb3631dff3a1330060f191e",
    "author": "vamossagar12",
    "author_email": "sagarmeansocean@gmail.com",
    "date": "Thu Apr 20 13:50:29 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 20 10:20:29 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 32,
      "deletions": 0,
      "files": [
        "core/src/main/scala/kafka/tools/StreamsResetter.java"
      ]
    },
    "message": "KAFKA-14586: Adding redirection for StreamsResetter (#13614)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Federico Valeri <fedevaleri@gmail.com>",
    "epoch": 1682009429,
    "epoch_utc": null
  },
  {
    "commit": "e14dd8024adae746c50c8b7d9cd268e859669576",
    "author": "Dimitar Dimitrov",
    "author_email": "30328539+dimitarndimitrov@users.noreply.github.com",
    "date": "Thu Apr 20 05:29:27 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 20 11:29:27 2023 +0800",
    "stats": {
      "files_changed": 12,
      "insertions": 771,
      "deletions": 483,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/internals/AdminApiDriver.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/internals/AdminApiHandler.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/internals/AdminApiLookupStrategy.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/internals/ListOffsetsHandler.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/internals/MetadataOperationContext.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/AdminClientTestUtils.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/internals/AdminApiDriverTest.java",
        "clients/src/test/java/org/apache/kafka/clients/admin/internals/ListOffsetsHandlerTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/TopicAdminTest.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/admin/GetListOffsetsCallsBenchmark.java"
      ]
    },
    "message": "KAFKA-14821 Implement the listOffsets API with AdminApiDriver (#13432)\n\nWe are handling complex workflows ListOffsets by chaining together MetadataCall instances and ListOffsetsCall instances, there are many complex and error-prone logic. In this PR we rewrote it with the `AdminApiDriver` infra, notable changes better than old logic:\n1. Retry lookup stage on receiving `NOT_LEADER_OR_FOLLOWER` and `LEADER_NOT_AVAILABLE`, whereas in the past we failed the partition directly without retry.\n2. Removing class field `supportsMaxTimestamp` and calculating it on the fly to avoid the mutable state, this won't change any behavior of  the client.\n3. Retry fulfillment stage on `RetriableException`, whereas in the past we just retry fulfillment stage on `InvalidMetadataException`, this means we will retry on `TimeoutException` and other `RetriableException`.\n\nWe also `handleUnsupportedVersionException` to `AdminApiHandler` and `AdminApiLookupStrategy`, they are used to keep consistency with old logic, and we can continue improvise them.\n\nReviewers: Ziming Deng <dengziming1993@gmail.com>, David Jacot <djacot@confluent.io>",
    "epoch": 1681979367,
    "epoch_utc": null
  },
  {
    "commit": "f5de4daa71f0ad31aa64443c5ff43c59712feea5",
    "author": "Ron Dagostino",
    "author_email": "rndgstn@gmail.com",
    "date": "Wed Apr 19 19:45:26 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 19 16:45:26 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 6,
      "deletions": 4,
      "files": [
        "core/src/main/scala/kafka/server/FinalizedFeatureChangeListener.scala"
      ]
    },
    "message": "KAFKA-14887: FinalizedFeatureChangeListener should not shut down when ZK session expires\n\nFinalizedFeatureChangeListener shuts the broker down when it encounters an issue trying to process feature change\nevents. However, it does not distinguish between issues related to feature changes actually failing and other\nexceptions like ZooKeeper session expiration. This introduces the possibility that Zookeeper session expiration\ncould cause the broker to shutdown, which is not intended. This patch updates the code to distinguish between\nthese two types of exceptions. In the case of something like a ZK session expiration it logs a warning and continues.\nWe shutdown the broker only for FeatureCacheUpdateException.\n\nReviewers: Kamal Chandraprakash <kamal.chandraprakash@gmail.com>, Christo Lolov <christololov@gmail.com>, Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1681944326,
    "epoch_utc": null
  },
  {
    "commit": "11c8bf4826197533807b2132cfc6599ba70de1c1",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Wed Apr 19 19:34:36 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 19 16:34:36 2023 -0700",
    "stats": {
      "files_changed": 25,
      "insertions": 730,
      "deletions": 743,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/InternalStreamsBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableAbstractJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableRightJoin.java",
        ".../java/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/ForeignTableJoinProcessorSupplier.java",
        ".../java/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionJoinProcessorSupplier.java",
        ".../org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionReceiveProcessorSupplier.java",
        ".../java/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionSendProcessorSupplier.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/BaseJoinProcessorNode.java",
        ".../src/main/java/org/apache/kafka/streams/kstream/internals/graph/ForeignJoinSubscriptionSendNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/ForeignTableJoinNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/TableFilterNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/TableRepartitionMapNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/VersionedSemanticsGraphNode.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/AbstractJoinIntegrationTest.java",
        ".../java/org/apache/kafka/streams/integration/KTableKTableForeignKeyVersionedJoinIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/StreamStreamJoinIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/StreamTableJoinIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/TableTableJoinIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/InternalStreamsBuilderTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java"
      ]
    },
    "message": "KAFKA-14834: [11/N] Update table joins to identify out-of-order records with `isLatest` (#13609)\n\nThis PR fixes a bug in the table-table join handling of out-of-order records in versioned tables where if the latest value for a particular key is a tombstone, by using the isLatest value from the Change object instead of calling get(key) on the state store to fetch timestamps to compare against. As part of this fix, this PR also updates table-table joins to determine whether upstream tables are versioned by using the GraphNode mechanism, instead of checking the table's value getter.\n\nPart of KIP-914.\n\nReviewer: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1681943676,
    "epoch_utc": null
  },
  {
    "commit": "809966a9a06664e0b521c2298fa0de834e443607",
    "author": "Matthew de Detrich",
    "author_email": "matthew.dedetrich@aiven.io",
    "date": "Wed Apr 19 20:54:07 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 19 20:54:07 2023 +0200",
    "stats": {
      "files_changed": 6,
      "insertions": 116,
      "deletions": 8,
      "files": [
        "build.gradle",
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/main/scala/kafka/utils/CoreUtils.scala",
        "core/src/test/scala/unit/kafka/server/KafkaConfigTest.scala",
        "docs/upgrade.html",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "KAFKA-13299: Accept duplicate listener on port for IPv4/IPv6 (#11478)\n\nLoosens the validation so that Kafka can accept duplicate listeners on the same port but if and only if the listeners are valid IP addresses with one address being an IPv4 address and the other being an IPv6 address.\n\nReviewers: Josep Prat <jlprat@apache.org>, Luke Chen <showuon@apache.org>",
    "epoch": 1681948447,
    "epoch_utc": null
  },
  {
    "commit": "750cfd86bf36ac7c71c5670e50eb8668f97b4246",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Wed Apr 19 14:19:13 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 19 14:19:13 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 118,
      "deletions": 9,
      "files": [
        "core/src/main/scala/kafka/migration/MigrationPropagator.scala",
        "core/src/test/scala/unit/kafka/migration/MigrationPropagatorTest.scala"
      ]
    },
    "message": "KAFKA-14918 Only send controller RPCs to migrating ZK brokers (#13606)\n\nThis patch fixes an issue where the KRaft controller could incorrectly send ZK controller RPCs to KRaft brokers.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1681924753,
    "epoch_utc": null
  },
  {
    "commit": "b10716e72370c4e128bddb17bcc107ccab221e47",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Thu Apr 20 00:49:08 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 19 18:49:08 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 44,
      "deletions": 2,
      "files": [
        "build.gradle",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala"
      ]
    },
    "message": "KAFKA-14868: Remove all ReplicaManager metrics when it is closed (#13471)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1681962548,
    "epoch_utc": null
  },
  {
    "commit": "d04c3e56c29fc6cb876a1074b1108db2c0f37afc",
    "author": "Keith Wall",
    "author_email": "kwall@redhat.com",
    "date": "Wed Apr 19 03:58:29 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 19 10:58:29 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 41,
      "deletions": 1,
      "files": [
        "core/src/main/scala/kafka/network/SocketServer.scala",
        "core/src/test/scala/unit/kafka/network/SocketServerTest.scala"
      ]
    },
    "message": "KAFKA-14908: Set setReuseAddress on the kafka server socket (#13572)\n\nChanges SocketServer to set the setReuseAddress(true) socket option.\n\nThis aids use-cases where kafka is started/stopped on the same port in rapid succession. Examples are: where a kafka cluster is embedded in an integration test suite that starts/stops a cluster before/after each test.\n\nReviewers: Luke Chen <showuon@gmail.com>, Tom Bentley <tbentley@redhat.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1681887509,
    "epoch_utc": null
  },
  {
    "commit": "f905a5a45d87c94d369cde9d1326e6d18b95cf7e",
    "author": "vamossagar12",
    "author_email": "sagarmeansocean@gmail.com",
    "date": "Wed Apr 19 00:46:03 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 19 03:16:03 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java"
      ]
    },
    "message": "MINOR: Fixing gradle build during compileScala and compileTestScala (#13588)\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>",
    "epoch": 1681875963,
    "epoch_utc": null
  },
  {
    "commit": "3388adf1b52f545e2d69edd30cdd53241b2887f3",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Tue Apr 18 11:32:27 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Apr 18 11:32:27 2023 -0700",
    "stats": {
      "files_changed": 10,
      "insertions": 80,
      "deletions": 81,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableImpl.java",
        ".../{ForeignJoinSubscriptionProcessorSupplier.java => ForeignTableJoinProcessorSupplier.java}",
        ".../foreignkeyjoin/{SubscriptionResolverJoinProcessorSupplier.java => ResponseJoinProcessorSupplier.java}",
        ".../{SubscriptionJoinForeignProcessorSupplier.java => SubscriptionJoinProcessorSupplier.java}",
        ".../{SubscriptionStoreReceiveProcessorSupplier.java => SubscriptionReceiveProcessorSupplier.java}",
        ".../{ForeignJoinSubscriptionSendProcessorSupplier.java => SubscriptionSendProcessorSupplier.java}",
        "streams/src/test/java/org/apache/kafka/streams/integration/ForeignKeyJoinSuite.java",
        ".../{ForeignJoinSubscriptionProcessorSupplierTest.java => ForeignTableJoinProcessorSupplierTest.java}",
        ".../{SubscriptionResolverJoinProcessorSupplierTest.java => ResponseJoinProcessorSupplierTest.java}",
        ".../{SubscriptionStoreReceiveProcessorSupplierTest.java => SubscriptionReceiveProcessorSupplierTest.java}"
      ]
    },
    "message": "MINOR: rename internal FK-join processor classes (#13589)\n\nReviewers: John Roesler <john@confluent.io>, Bill Bejeck <bill@confluent.io>",
    "epoch": 1681828347,
    "epoch_utc": null
  },
  {
    "commit": "abca86511ecc9e081d676976ff6d3b845308f444",
    "author": "Proven Provenzano",
    "author_email": "93720617+pprovenzano@users.noreply.github.com",
    "date": "Tue Apr 18 12:41:38 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Apr 18 09:41:38 2023 -0700",
    "stats": {
      "files_changed": 15,
      "insertions": 223,
      "deletions": 76,
      "files": [
        "checkstyle/suppressions.xml",
        "core/src/main/scala/kafka/tools/StorageTool.scala",
        "core/src/test/java/kafka/test/ClusterTestExtensionsTest.java",
        "core/src/test/java/kafka/test/annotation/ClusterTest.java",
        "core/src/test/scala/unit/kafka/admin/FeatureCommandTest.scala",
        "core/src/test/scala/unit/kafka/tools/StorageToolTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/ScramControlManager.java",
        "metadata/src/main/java/org/apache/kafka/image/ScramDelta.java",
        "metadata/src/main/java/org/apache/kafka/image/ScramImage.java",
        "metadata/src/main/java/org/apache/kafka/{image => metadata}/ScramCredentialData.java",
        "metadata/src/main/resources/common/metadata/UserScramCredentialRecord.json",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "metadata/src/test/java/org/apache/kafka/image/ScramImageTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/ScramCredentialDataTest.java",
        "server-common/src/main/java/org/apache/kafka/server/common/MetadataVersion.java"
      ]
    },
    "message": "KAFKA-14881: Rework UserScramCredentialRecord (#13513)\n\nRework UserScramCredentialRecord to store serverKey and StoredKey rather than saltedPassword. This\nis necessary to support migration from ZK, since those are the fields we stored in ZK.  Update\nlatest MetadataVersion to IBP_3_5_IV2 and make SCRAM support conditional on this version.  Moved\nScramCredentialData.java from org.apache.kafka.image to org.apache.kafka.metadata, which seems more\nappropriate.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1681832498,
    "epoch_utc": null
  },
  {
    "commit": "61530d68ce83467de6190a52da37b3c0af84f0ef",
    "author": "Jeff Kim",
    "author_email": "kimkb2011@gmail.com",
    "date": "Tue Apr 18 09:37:04 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Apr 18 15:37:04 2023 +0200",
    "stats": {
      "files_changed": 7,
      "insertions": 368,
      "deletions": 20,
      "files": [
        "core/src/main/resources/common/message/TransactionLogValue.json",
        "core/src/main/scala/kafka/coordinator/group/GroupMetadataManager.scala",
        "core/src/main/scala/kafka/coordinator/transaction/TransactionLog.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupMetadataManagerTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionLogTest.scala",
        "group-coordinator/src/main/resources/common/message/GroupMetadataValue.json",
        "group-coordinator/src/main/resources/common/message/OffsetCommitValue.json"
      ]
    },
    "message": "KAFKA-14869: Bump coordinator value records to flexible versions (KIP-915, Part-2) (#13526)\n\nThis patch implemented the second part of KIP-915. It bumps the versions of the value records used by the group coordinator and the transaction coordinator to make them flexible versions. The new versions are not used when writing to the partitions but only when reading from the partitions. This allows downgrades from future versions that will include tagged fields.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1681821424,
    "epoch_utc": null
  },
  {
    "commit": "b36a170aa3b2738177d7229859db765e0115385b",
    "author": "Manyanda Chitimbo",
    "author_email": "manyanda.chitimbo@gmail.com",
    "date": "Tue Apr 18 13:36:56 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Apr 18 19:36:56 2023 +0800",
    "stats": {
      "files_changed": 4,
      "insertions": 4,
      "deletions": 4,
      "files": [
        "metadata/src/main/java/org/apache/kafka/metadata/KafkaConfigSchema.java",
        "metadata/src/main/java/org/apache/kafka/metadata/authorizer/StandardAuthorizer.java",
        "metadata/src/main/java/org/apache/kafka/metadata/authorizer/StandardAuthorizerData.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/MigrationClient.java"
      ]
    },
    "message": "MINOR: fix typos in MigrationClient, StandardAuthorizer, StandardAuthorizerData and KafkaConfigSchema files (#13593)\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1681835816,
    "epoch_utc": null
  },
  {
    "commit": "5e9d4de748dff7b91043a9b799716ab4becdae7e",
    "author": "Jeff Kim",
    "author_email": "kimkb2011@gmail.com",
    "date": "Tue Apr 18 04:41:54 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Apr 18 10:41:54 2023 +0200",
    "stats": {
      "files_changed": 6,
      "insertions": 186,
      "deletions": 48,
      "files": [
        "core/src/main/scala/kafka/coordinator/group/GroupMetadataManager.scala",
        "core/src/main/scala/kafka/coordinator/transaction/TransactionLog.scala",
        "core/src/main/scala/kafka/coordinator/transaction/TransactionStateManager.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupMetadataManagerTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionLogTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionStateManagerTest.scala"
      ]
    },
    "message": "KAFKA-14869: Ignore unknown record types for coordinators (KIP-915, Part-1) (#13511)\n\nThis patch implemented the first part of KIP-915. It updates the group coordinator and the transaction coordinator to ignores unknown record types while loading their respective state from the partitions. This allows downgrades from future versions that will include new record types.\n\nReviewers: Alexandre Dupriez <alexandre.dupriez@gmail.com>, David Jacot <djacot@confluent.io>",
    "epoch": 1681803714,
    "epoch_utc": null
  },
  {
    "commit": "454b72161a76b1687a1263157d7cc30a1bdb2506",
    "author": "D\u00e1niel Urb\u00e1n",
    "author_email": "48119872+urbandan@users.noreply.github.com",
    "date": "Tue Apr 18 09:40:14 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Apr 18 09:40:14 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 34,
      "deletions": 2,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/utils/ThreadUtils.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaStatusBackingStore.java"
      ]
    },
    "message": "KAFKA-14902: KafkaStatusBackingStore retries on a dedicated background thread to avoid stack overflows (#13557)\n\nKafkaStatusBackingStore uses an infinite retry logic on producer send, which can lead to a stack overflow.\nTo avoid the problem, a background thread was added, and the callback submits the retry onto the background thread.",
    "epoch": 1681821614,
    "epoch_utc": null
  },
  {
    "commit": "e27926f92b1f6b34ed6731f33c712a5d0d594275",
    "author": "Ron Dagostino",
    "author_email": "rndgstn@gmail.com",
    "date": "Mon Apr 17 17:52:28 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 17 17:52:28 2023 -0400",
    "stats": {
      "files_changed": 24,
      "insertions": 2148,
      "deletions": 183,
      "files": [
        "LICENSE-binary",
        "build.gradle",
        "checkstyle/import-control-jmh-benchmarks.xml",
        "checkstyle/import-control-metadata.xml",
        "checkstyle/import-control-server-common.xml",
        "checkstyle/import-control.xml",
        "core/src/test/scala/unit/kafka/server/metadata/BrokerMetadataPublisherTest.scala",
        "gradle/dependencies.gradle",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/metadata/KRaftMetadataRequestBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/metadata/TopicsImageSingleRecordChangeBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/metadata/TopicsImageSnapshotLoadBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/metadata/TopicsImageZonalOutageBenchmark.java",
        "licenses/pcollections-MIT",
        "metadata/src/main/java/org/apache/kafka/image/TopicsDelta.java",
        "metadata/src/main/java/org/apache/kafka/image/TopicsImage.java",
        "metadata/src/test/java/org/apache/kafka/controller/metrics/ControllerMetricsTestUtils.java",
        "metadata/src/test/java/org/apache/kafka/image/TopicsImageTest.java",
        "server-common/src/main/java/org/apache/kafka/server/immutable/ImmutableMap.java",
        "server-common/src/main/java/org/apache/kafka/server/immutable/ImmutableSet.java",
        "server-common/src/main/java/org/apache/kafka/server/immutable/pcollections/PCollectionsImmutableMap.java",
        "server-common/src/main/java/org/apache/kafka/server/immutable/pcollections/PCollectionsImmutableSet.java",
        "server-common/src/test/java/org/apache/kafka/server/immutable/DelegationChecker.java",
        ".../src/test/java/org/apache/kafka/server/immutable/pcollections/PCollectionsImmutableMapTest.java",
        ".../src/test/java/org/apache/kafka/server/immutable/pcollections/PCollectionsImmutableSetTest.java"
      ]
    },
    "message": "KAFKA-14735: Improve KRaft metadata image change performance at high \u2026 (#13280)\n\ntopic counts.\n\nIntroduces the use of persistent data structures in the KRaft metadata image to avoid copying the entire TopicsImage upon every change.  Performance that was O(<number of topics in the cluster>) is now O(<number of topics changing>), which has dramatic time and GC improvements for the most common topic-related metadata events.  We abstract away the chosen underlying persistent collection library via ImmutableMap<> and ImmutableSet<> interfaces and static factory methods.\n\nReviewers: Luke Chen <showuon@gmail.com>, Colin P. McCabe <cmccabe@apache.org>, Ismael Juma <ismael@juma.me.uk>, Purshotam Chauhan <pchauhan@confluent.io>",
    "epoch": 1681764748,
    "epoch_utc": null
  },
  {
    "commit": "7159f6c1a81ead277030f55f293943270346ad4e",
    "author": "Alyssa Huang",
    "author_email": "ahuang@confluent.io",
    "date": "Mon Apr 17 11:03:45 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 17 11:03:45 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 62,
      "deletions": 1,
      "files": [
        "core/src/main/scala/kafka/server/metadata/KRaftMetadataCache.scala",
        "core/src/test/scala/unit/kafka/server/MetadataCacheTest.scala"
      ]
    },
    "message": "MINOR: KRaftMetadataCache.getPartitionInfo must set all relevant fields\n\nFix a case where KRaftMetadataCache.getPartitionInfo was not setting all the PartitionInfo fields it\nshould have been. Add a regression test.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1681740225,
    "epoch_utc": null
  },
  {
    "commit": "2c1cf03a8997e874fd7bb7f4babad98efb522832",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Mon Apr 17 16:09:56 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 17 16:09:56 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 47,
      "deletions": 1,
      "files": [
        "bin/windows/kafka-cluster.bat",
        "core/src/main/scala/kafka/tools/ClusterTool.scala",
        "docs/upgrade.html"
      ]
    },
    "message": "MINOR: Add ClusterTool wrapper scripts and redirection (KIP-906) (#13560)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1681758596,
    "epoch_utc": null
  },
  {
    "commit": "6ad236a8bdea35a47667c85796007532a5a01cef",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Mon Apr 17 15:55:21 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 17 15:55:21 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "docs/upgrade.html"
      ]
    },
    "message": "MINOR: Add ConsumerPerformance tool migration note (#13559)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1681757721,
    "epoch_utc": null
  },
  {
    "commit": "3d4a4d28e1cd4712c514eab0b70a4e14c1813397",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Mon Apr 17 15:49:36 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 17 15:49:36 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "docs/upgrade.html"
      ]
    },
    "message": "MINOR: Add StreamsResetter tool migration note (#13586)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1681757376,
    "epoch_utc": null
  },
  {
    "commit": "ac38fd9db92cc2d37f21308994216f54683d362a",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Mon Apr 17 15:31:50 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 17 15:31:50 2023 +0200",
    "stats": {
      "files_changed": 4,
      "insertions": 65,
      "deletions": 1,
      "files": [
        "bin/kafka-e2e-latency.sh",
        "bin/windows/kafka-e2e-latency.bat",
        "core/src/main/scala/kafka/tools/EndToEndLatency.scala",
        "docs/upgrade.html"
      ]
    },
    "message": "MINOR: Add EndToEndLatency wrapper scripts and redirection (KIP-906) (#13556)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1681756310,
    "epoch_utc": null
  },
  {
    "commit": "57d6a881ca00afc81f6df104e2c51161cf7de44a",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Mon Apr 17 14:59:35 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 17 14:59:35 2023 +0200",
    "stats": {
      "files_changed": 4,
      "insertions": 83,
      "deletions": 14,
      "files": [
        "bin/kafka-jmx.sh",
        "bin/windows/kafka-jmx.bat",
        "core/src/main/scala/kafka/tools/JmxTool.scala",
        "docs/upgrade.html"
      ]
    },
    "message": "MINOR: Add JmxTool wrapper scripts and redirection (KIP-906) (#13195)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1681754375,
    "epoch_utc": null
  },
  {
    "commit": "6ca8f0d5f0dbcca72a7bbbc619d882d3eb990b38",
    "author": "Anton Agestam",
    "author_email": "anton.agestam@aiven.io",
    "date": "Mon Apr 17 14:22:36 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 17 20:22:36 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "docs/implementation.html"
      ]
    },
    "message": "MINOR: Correct type of record batch CRC field (#13583)\n\nThe CRC field of Record Batch was incorrectly documented as int32 while in reality it's an unsigned uint32 field.\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1681752156,
    "epoch_utc": null
  },
  {
    "commit": "639bd654499db80f236d81d6b476ca95ef8a3a86",
    "author": "Gantigmaa Selenge",
    "author_email": "39860586+tinaselenge@users.noreply.github.com",
    "date": "Mon Apr 17 08:27:16 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 17 15:27:16 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 5,
      "deletions": 0,
      "files": [
        "docs/upgrade.html"
      ]
    },
    "message": "MINOR: Add note for KIP-894 (#13547)\n\nAdd release note for KIP-894\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1681730836,
    "epoch_utc": null
  },
  {
    "commit": "9c12e462106343fbc6af5873074d48f98687af39",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Sat Apr 15 12:30:22 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Apr 15 12:30:22 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "gradle/dependencies.gradle"
      ]
    },
    "message": "Update zstd to 1.5.5 (#13567)\n\n1.5.4 is a large release that offers significant performance improvements across\nmultiple scenarios, as well as new features.\n\n1.5.5 is a smaller release that corrects a rare corruption bug and improves performance\nin some scenarios.\n\nIt looks like 1.5.3 was retracted or never released.\n\nZstandard release notes:\n* 1.5.4: https://github.com/facebook/zstd/releases/tag/v1.5.4\n* 1.5.5: https://github.com/facebook/zstd/releases/tag/v1.5.5\n\nzstd-jni diff: https://github.com/luben/zstd-jni/compare/v1.5.2-1...v1.5.5-1\n\nReviewers: Rajini Sivaram <rajinisivaram@googlemail.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1681572622,
    "epoch_utc": null
  },
  {
    "commit": "fe375dce54717f0699e9ab860c4a33669d017f22",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Sat Apr 15 12:21:56 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Apr 15 12:21:56 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 7,
      "deletions": 3,
      "files": [
        "trogdor/src/main/java/org/apache/kafka/trogdor/rest/JsonRestServer.java"
      ]
    },
    "message": "KAFKA-8115: Reduce flakiness in Trogdor JsonRestServer shutdown (#12830)\n\nThe GRACEFUL_SHUTDOWN_TIMEOUT_MS for the Trogdor JsonRestServer is 100ms.\nIn heavily loaded CI environments, this timeout can be exceeded. When this happens,\nit causes the jettyServer.stop() and jettyServer.destroy() calls to throw exceptions, which\nprevents shutdownExecutor.shutdown() from running. This has the effect of causing the JsonRestServer::waitForShutdown method to block for 1 day, which exceeds the 120s\ntimeout on the CoordinatorTest (and any other test relying on MiniTrogdorCluster).\n\nThis change makes it such that the graceful shutdown timeout is less likely to be exceeded,\nand when it is, the timeout does not cause the waitForShutdown method to block for much\nlonger than the graceful shutdown timeout.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1681572116,
    "epoch_utc": null
  },
  {
    "commit": "bf3a5a3e0479c10ae10d202669c6a3c42ed8e70d",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Fri Apr 14 14:37:40 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 14 14:37:40 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 5,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoin.java"
      ]
    },
    "message": "MINOR: remove unnecessary `KeyValueMapper` (#13545)\n\nReviewers: Christo Lolov (@clolov), Bill Bejeck <bill@confluent.io>",
    "epoch": 1681493860,
    "epoch_utc": null
  },
  {
    "commit": "fc9df51be5704de9b9e7dce04a1cbdee4f836c94",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Fri Apr 14 13:03:45 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 14 13:03:45 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 0,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordCollectorTest.java"
      ]
    },
    "message": "MINOR: improve ProductionExceptionHandler test (#13576)\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1681488225,
    "epoch_utc": null
  },
  {
    "commit": "c958d8719dc2588bd27958b54a65dea514808796",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Fri Apr 14 12:08:49 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 14 12:08:49 2023 -0700",
    "stats": {
      "files_changed": 11,
      "insertions": 84,
      "deletions": 198,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.java",
        "streams/src/test/java/org/apache/kafka/streams/StreamsConfigTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/AssignmentTestUtils.java",
        ".../src/test/java/org/apache/kafka/streams/processor/internals/assignment/AssignorConfigurationTest.java",
        ".../org/apache/kafka/streams/processor/internals/assignment/ClientTagAwareStandbyTaskAssignorTest.java",
        ".../test/java/org/apache/kafka/streams/processor/internals/assignment/FallbackPriorTaskAssignorTest.java",
        ".../java/org/apache/kafka/streams/processor/internals/assignment/HighAvailabilityTaskAssignorTest.java",
        ".../test/java/org/apache/kafka/streams/processor/internals/assignment/StandbyTaskAssignorFactoryTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/StickyTaskAssignorTest.java",
        ".../test/java/org/apache/kafka/streams/processor/internals/assignment/TaskAssignorConvergenceTest.java"
      ]
    },
    "message": "Revert \"KAFKA-14318: KIP-878, Introduce partition autoscaling configs (#12962)\" (#13527)\n\nThis reverts commit d9b139220ee253da673af44d58dc87bd184188f1.\n\nKIP-878 implementation did not make any progress, so we need to revert\nthe public API changes which are not functional right now.\n\nReviewers: Bill Bejeck <bill@confluent.io>",
    "epoch": 1681484929,
    "epoch_utc": null
  },
  {
    "commit": "cfd0503006127b58bb181076bffaccb947fdd2bd",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Fri Apr 14 10:39:08 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 14 13:39:08 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 19,
      "deletions": 18,
      "files": [
        "core/src/main/scala/kafka/server/SharedServer.scala",
        "server-common/src/test/java/org/apache/kafka/queue/KafkaEventQueueTest.java"
      ]
    },
    "message": "MINOR: fix some flaky KRaft-related tests (#13543) (#13543)\n\nIn SharedServer, fix some cases where a volatile variable could change to null while we were using\nit, during shutdown. This is mainly a junit test issue, although it could also cause ugly error\nmessages during shutdown when running the server in a production context.\n\nFix a race in KafkaEventQueueTest.testSize.\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1681479548,
    "epoch_utc": null
  },
  {
    "commit": "1f1900b3806f41fc4e4b548fa03ef0abd778865c",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Fri Apr 14 10:05:22 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 14 10:05:22 2023 -0700",
    "stats": {
      "files_changed": 4,
      "insertions": 57,
      "deletions": 26,
      "files": [
        "core/src/main/scala/kafka/raft/KafkaMetadataLog.scala",
        "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
        "raft/src/main/java/org/apache/kafka/raft/LeaderState.java",
        "raft/src/main/java/org/apache/kafka/raft/QuorumState.java"
      ]
    },
    "message": "MINOR: Improve raft log4j messages a bit (#13553)\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1681477522,
    "epoch_utc": null
  },
  {
    "commit": "20028e24cca91422b8f02fdbf45d2cd9ef24c901",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Fri Apr 14 09:43:53 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 14 09:43:53 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 5,
      "deletions": 7,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java"
      ]
    },
    "message": "KAFKA-14054: Handle TimeoutException gracefully (#13534)\n\nWe incorrectly assumed, that `consumer.position()` should always be\nserved by the consumer locally set position.\n\nHowever, within `commitNeeded()` we check if first `if(commitNeeded)`\nand thus go into the else only if we have not processed data (otherwise,\n`commitNeeded` would be true). For this reason, we actually don't know\nif the consumer has a valid position or not.\n\nWe should just swallow a timeout if the consumer cannot get the position\nfrom the broker, and try the next partition. If any position advances, we\ncan return true, and if we timeout for all partitions we can return\nfalse.\n\nReviewers: Michal Cabak (@miccab), John Roesler <john@confluent.io>, Guozhang Wang <guozhand@confluent.io>",
    "epoch": 1681476233,
    "epoch_utc": null
  },
  {
    "commit": "cbf360b37dc422e1b6db6b315cb099bf85115c98",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Fri Apr 14 09:35:45 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 14 09:35:45 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 110,
      "deletions": 0,
      "files": [
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala"
      ]
    },
    "message": "KAFKA-14790: Add more AddPartitionsToTxn tests in KafkaApis and Authorizer tests (#13502)\n\nAdded AddPartitionsToTxn tests to KafkaApis.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1681475745,
    "epoch_utc": null
  },
  {
    "commit": "5767d129634094ffcc8e7d546c581af57b9ca70d",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Fri Apr 14 07:14:10 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 14 07:14:10 2023 -0700",
    "stats": {
      "files_changed": 8,
      "insertions": 52,
      "deletions": 30,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/state/internals/ChangeLoggingKeyValueBytesStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/ChangeLoggingListValueBytesStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/ChangeLoggingTimestampedKeyValueBytesStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/ChangeLoggingTimestampedWindowBytesStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/ChangeLoggingVersionedKeyValueBytesStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/KeyValueToTimestampedKeyValueByteStoreAdapter.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/ValueAndTimestampDeserializer.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/WindowToTimestampedWindowByteStoreAdapter.java"
      ]
    },
    "message": "MINOR: Refactor changelogger to accept timestamp (#13563)\n\nReviewers: Bill Bejeck <bill@confluent.io>",
    "epoch": 1681467250,
    "epoch_utc": null
  },
  {
    "commit": "6d5df1ce76b1a78441ad30958f383eadb3cae95d",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Fri Apr 14 10:02:46 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 14 10:02:46 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 1,
      "files": [
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala"
      ]
    },
    "message": "MINOR: Disable the dual write integration test until KAFKA-14840 (#13573)\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1681477366,
    "epoch_utc": null
  },
  {
    "commit": "741a27351e4bb3cd72ae4a4dd64af0ac65653eed",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Fri Apr 14 14:25:33 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 14 14:25:33 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 25,
      "deletions": 8,
      "files": [
        "group-coordinator/src/main/resources/common/message/ConsumerGroupCurrentMemberAssignmentValue.json",
        "group-coordinator/src/main/resources/common/message/ConsumerGroupMemberMetadataValue.json",
        "group-coordinator/src/main/resources/common/message/ConsumerGroupPartitionMetadataValue.json"
      ]
    },
    "message": "KAFKA-14462; [6/N] Update Records (#13536)\n\nThis patch updates the KIP-848's records.\n\nReviewers: Christo Lolov <lolovc@amazon.com>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1681493133,
    "epoch_utc": null
  },
  {
    "commit": "f1e7a64bf60c4af4d8f5b3bf09402a52a1a5d0a0",
    "author": "Ritika Reddy",
    "author_email": "98577846+rreddy-22@users.noreply.github.com",
    "date": "Fri Apr 14 05:22:51 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 14 14:22:51 2023 +0200",
    "stats": {
      "files_changed": 5,
      "insertions": 98,
      "deletions": 58,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/assignor/AssignmentMemberSpec.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/assignor/AssignmentSpec.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/assignor/AssignmentTopicMetadata.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/assignor/GroupAssignment.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/assignor/MemberAssignment.java"
      ]
    },
    "message": "MINOR: Refine `PartitionAssignor` server-side interface (#13524)\n\nThis patch updates the `PartitionAssignor` server-side interface used in the new group coordinator for the new consumer group protocol as follow:\n- It switches subscription from topic names to topic ids in order to be closer to the server side implementation.\n- It switches assignment from Set to Map<Integer, Set> to be closer to the server side implementation.\n- It adds getters for all attributes.\n- It makes all attributes final private.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, Alexandre Dupriez <alexandre.dupriez@gmail.com>, David Jacot <djacot@confluent.io>",
    "epoch": 1681460571,
    "epoch_utc": null
  },
  {
    "commit": "dc1ede8d89d0964783302e0da9ead7fa1d76fbe4",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Fri Apr 14 14:17:07 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 14 14:17:07 2023 +0200",
    "stats": {
      "files_changed": 8,
      "insertions": 14,
      "deletions": 10,
      "files": [
        "docs/js/templateData.js",
        "gradle.properties",
        "kafka-merge-pr.py",
        "streams/quickstart/java/pom.xml",
        "streams/quickstart/java/src/main/resources/archetype-resources/pom.xml",
        "streams/quickstart/pom.xml",
        "tests/kafkatest/__init__.py",
        "tests/kafkatest/version.py"
      ]
    },
    "message": "MINOR: Bump trunk to 3.6.0-SNAPSHOT (#13570)\n\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1681492627,
    "epoch_utc": null
  },
  {
    "commit": "b1830e4aa2d83d2f213faf5f7432a119742df80c",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Fri Apr 14 02:43:54 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 14 11:43:54 2023 +0200",
    "stats": {
      "files_changed": 11,
      "insertions": 134,
      "deletions": 104,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/StreamsBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/KTable.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/InternalStreamsBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/TableSuppressNode.java",
        "streams/src/test/java/org/apache/kafka/streams/StreamsBuilderTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/VersionedKeyValueStoreIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/InternalStreamsBuilderTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamGlobalKTableJoinTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamGlobalKTableLeftJoinTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/SuppressTopologyTest.java"
      ]
    },
    "message": "KAFKA-14834: [9/N] Disable versioned-stores for unsupported operations (#13565)\n\nUsing versioned-stores for global-KTables is not allowed, because a\nglobal-table is bootstrapped on startup, and a stream-globalTable join\ndoes not support temporal semantics.\n\nFurthermore, `suppress()` does not support temporal semantics and thus\ncannot be applied to an versioned-KTable.\n\nThis PR disallows both use-cases explicitely.\n\nPart of KIP-914.\n\nReviewers: Bill Bejeck <bbejeck@gmail.com>, Victoria Xia <victoria.xia@confluent.io>",
    "epoch": 1681451034,
    "epoch_utc": null
  },
  {
    "commit": "b8d8fcdd6295af1f8de1531772353dbaa2c7b0a6",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Thu Apr 13 23:36:26 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 13 23:36:26 2023 -0700",
    "stats": {
      "files_changed": 4,
      "insertions": 138,
      "deletions": 17,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/errors/ProductionExceptionHandler.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/RecordCollectorImpl.java",
        "streams/src/test/java/org/apache/kafka/streams/errors/AlwaysContinueProductionExceptionHandler.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/RecordCollectorTest.java"
      ]
    },
    "message": "KAFKA-7499: Handle serialization error in ProductionExceptionHandler (#13477)\n\nImplements KIP-399.\n\nExtends ProductionExceptionHandler to handle serialization errors, and to allow users to continue processing and dropping the corresponding record on the floor.\n\nReviewers: Bill Bejeck <bill@confluent.io>, Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1681439786,
    "epoch_utc": null
  },
  {
    "commit": "f1eb260fea75de9b861a35678e8c8233fb948e1a",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Fri Apr 14 00:56:36 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 13 21:56:36 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 114,
      "deletions": 6,
      "files": [
        "docs/streams/developer-guide/dsl-api.html",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/ChangedDeserializer.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/ChangedSerdeTest.java"
      ]
    },
    "message": "KAFKA-14834: [10/N] Reserve repartition topic formats to include isLatest (#13566)\n\nKIP-914 introduced a new boolean isLatest into Change to indicate whether a change update represents the latest for the key. Even though Change is serialized into the table repartition topic, the new boolean does not need to be serialized in, because the table repartition map processor performs an optimization to drop records for which isLatest = false. If not for this optimization, the downstream table aggregate would have to drop such records instead, and isLatest would need to be serialized into the repartition topic.\n\nIn light of the possibility that isLatest may need to be serialized into the repartition topic in the future, e.g., if other downstream processors are added which need to distinguish between records for which isLatest = true vs isLatest = false, this PR reserves repartition topic formats which include isLatest. Reserving these formats now comes at no additional cost to users since a rolling bounce is already required for the upcoming release due to KIP-904. If we don't reserve them now and instead have to add them later, then another bounce would be required at that time. Reserving formats is cheap, so we choose to do it now.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1681444596,
    "epoch_utc": null
  },
  {
    "commit": "a87edf13d5fed66cc4f26144a93e4d0a6afd8aed",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Fri Apr 14 00:20:05 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 13 21:20:05 2023 -0700",
    "stats": {
      "files_changed": 26,
      "insertions": 301,
      "deletions": 84,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/Change.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamAggregate.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamReduce.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableAggregate.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableFilter.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableJoinMerger.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableRightJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableMapValues.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableReduce.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableRepartitionMap.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableSource.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableTransformValues.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/TimestampedCacheFlushListener.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/TimestampedTupleForwarder.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/KeyValueStoreWrapper.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredKeyValueStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredSessionStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredWindowStore.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableFilterTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/TimestampedTupleForwarderTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/CacheFlushListenerStub.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/KeyValueStoreWrapperTest.java"
      ]
    },
    "message": "KAFKA-14834: [8/N] Propagate `isLatest` as part of `Change` (#13564)\n\nPart of KIP-914.\n\nThis PR adds an additional boolean isLatest into Change which specifies whether the new value is the latest for its key. For un-versioned stores, isLatest is always true. For versioned stores, isLatest is true if the value has the latest timestamp seen for the key, else false. This boolean will be used by processors such as the table repartition map processor to determine when a record is out-of-order and should be dropped (when processing a versioned table).  This PR updates the table repartition map processor accordingly, and also adds test coverage for table filter.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1681442405,
    "epoch_utc": null
  },
  {
    "commit": "9217c7e151a85079fd1e5dd8bb196d651fb2f56e",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Thu Apr 13 23:19:42 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 13 20:19:42 2023 -0700",
    "stats": {
      "files_changed": 18,
      "insertions": 281,
      "deletions": 536,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractReadOnlyDecorator.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractReadWriteDecorator.java",
        "streams/src/main/java/org/apache/kafka/streams/state/VersionedBytesStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/VersionedKeyValueStore.java",
        ".../src/main/java/org/apache/kafka/streams/state/internals/ChangeLoggingVersionedKeyValueBytesStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredKeyValueStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredVersionedKeyValueStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/NullableValueAndTimestampDeserializer.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/NullableValueAndTimestampSerde.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/NullableValueAndTimestampSerializer.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBVersionedStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/VersionedKeyValueStoreBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/VersionedKeyValueToBytesStoreAdapter.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/VersionedKeyValueStoreIntegrationTest.java",
        ".../test/java/org/apache/kafka/streams/state/internals/ChangeLoggingVersionedKeyValueBytesStoreTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredVersionedKeyValueStoreTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/NullableValueAndTimestampSerdeTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBVersionedStoreTest.java"
      ]
    },
    "message": "KAFKA-14834: [7/N] Update VersionedKeyValueStore#put() to return validTo (#13554)\n\nPart of KIP-914.\n\nThis PR updates the return type of VersionedKeyValueStore#put(...) from void to long, where the long is the validTo timestamp of the newly put record, with two special values to indicate either that no such timestamp exists (because the record is the latest for its key) or that the put did not take place (because grace period has elapsed).\n\nAs part of making this change, VersionedBytesStore introduces its own put(key, value, timestamp) method to avoid method signature conflicts with the existing put(key, value) method from KeyValueStore<Bytes, byte[]> which has void return type. As a result, the previously added NullableValueAndTimestampSerde class is no longer needed so it's also been removed in this PR as cleanup.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1681438782,
    "epoch_utc": null
  },
  {
    "commit": "7d580dc7a2ae0517032f28fe7ef62e0b96355527",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Thu Apr 13 17:21:28 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 13 14:21:28 2023 -0700",
    "stats": {
      "files_changed": 19,
      "insertions": 571,
      "deletions": 20,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/CogroupedStreamAggregateBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/GroupedStreamAggregateBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/InternalStreamsBuilder.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KGroupedStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableFilter.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableRepartitionMap.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/SessionWindowedKStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/SlidingWindowedKStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/TimeWindowedKStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/GraphNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/TableFilterNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/TableProcessorNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/TableRepartitionMapNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/VersionedSemanticsGraphNode.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/InternalStreamsBuilderTest.java"
      ]
    },
    "message": "KAFKA-14834: [6/N] Add tracking of versioned tables into graph nodes (#13552)\n\nThis PR adds a method into GraphNode to assist in tracking whether tables are materialized as versioned or unversioned stores. This is needed in order to allow processors which have different behavior on versioned vs unversioned tables to use the correct semantics. Part of KIP-914.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1681417288,
    "epoch_utc": null
  },
  {
    "commit": "1f196963099d353741c8ced3a4b930d00c88d2f5",
    "author": "Spacrocket",
    "author_email": "95596717+SpacRocket@users.noreply.github.com",
    "date": "Thu Apr 13 22:37:42 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 13 15:37:42 2023 -0500",
    "stats": {
      "files_changed": 1,
      "insertions": 5,
      "deletions": 0,
      "files": [
        "docs/streams/upgrade-guide.html"
      ]
    },
    "message": "KAFKA-14722: Make BooleanSerde public (an addition of upgrade.html changes) (#13491)\n\nMoved the information about the BooleanSerde addition from general upgrade notes to notes in Streams.\n\nReviewers: Walker Carlson <wcarlson@confluent.io>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1681436262,
    "epoch_utc": null
  },
  {
    "commit": "f252c75bf3f2db93bf062bc7e49d3c79a06e9568",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Thu Apr 13 06:50:02 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 13 09:50:02 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java"
      ]
    },
    "message": "MINOR: Fix regression in MM2 task forwarding introduced by KAFKA-14783 (#13548)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1681379402,
    "epoch_utc": null
  },
  {
    "commit": "440a53099d6aed34bc9f407b5fb3d74484f1e167",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Thu Apr 13 08:33:40 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 13 08:33:40 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 489,
      "deletions": 0,
      "files": [
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/runtime/EventAccumulator.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/runtime/EventAccumulatorTest.java"
      ]
    },
    "message": "KAFKA-14462; [5/N] Add EventAccumulator (#13505)\n\nThis patch adds the `EventAccumulator` which will be used in the runtime of the new group coordinator. The aim of this accumulator is to basically have a queue per __consumer_group partitions and to ensure that events addressed to the same partitions are not processed concurrently. The accumulator is generic so we could reuse it in different context.\n\nReviewers: Alexandre Dupriez <alexandre.dupriez@gmail.com>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1681385620,
    "epoch_utc": null
  },
  {
    "commit": "571841fed3eed7cb3e76a8fec4477750b7533060",
    "author": "Paolo Patierno",
    "author_email": "ppatierno@live.com",
    "date": "Thu Apr 13 06:55:57 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 13 12:55:57 2023 +0800",
    "stats": {
      "files_changed": 3,
      "insertions": 9,
      "deletions": 4,
      "files": [
        "docs/ops.html",
        "raft/src/main/java/org/apache/kafka/raft/internals/KafkaRaftMetrics.java",
        "raft/src/test/java/org/apache/kafka/raft/internals/KafkaRaftMetricsTest.java"
      ]
    },
    "message": "KAFKA-14883: Expose `observer` state in KRaft metrics (#13525)\n\nCurrently, the current-state KRaft related metric reports follower state for a broker while technically it should be reported as an observer as the kafka-metadata-quorum tool does.\n\nReviewers: Luke Chen <showuon@gmail.com>, dengziming <dengziming1993@gmail.com>",
    "epoch": 1681379757,
    "epoch_utc": null
  },
  {
    "commit": "1d5d003ff48097c17464ebadee58182114ee1a7f",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Wed Apr 12 22:05:10 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 12 19:05:10 2023 -0700",
    "stats": {
      "files_changed": 7,
      "insertions": 534,
      "deletions": 147,
      "files": [
        "checkstyle/suppressions.xml",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableImpl.java",
        ".../apache/kafka/streams/kstream/internals/foreignkeyjoin/ForeignJoinSubscriptionProcessorSupplier.java",
        ".../kafka/streams/kstream/internals/foreignkeyjoin/ForeignJoinSubscriptionSendProcessorSupplier.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/KTableKTableForeignKeyJoinIntegrationTest.java",
        ".../java/org/apache/kafka/streams/integration/KTableKTableForeignKeyVersionedJoinIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java"
      ]
    },
    "message": "KAFKA-14834: [5/N] Drop out-of-order records from FK join with versioned tables (#13522)\n\nThis PR updates foreign-key table-table join processors to ignore out-of-order records from versioned tables, as specified in KIP-914.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1681347910,
    "epoch_utc": null
  },
  {
    "commit": "951894d2ffc0fe260fbede92500e5b86114411c1",
    "author": "Gantigmaa Selenge",
    "author_email": "39860586+tinaselenge@users.noreply.github.com",
    "date": "Thu Apr 13 02:30:56 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 13 09:30:56 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "tests/docker/Dockerfile"
      ]
    },
    "message": "MINOR: Install missing iputils-ping for system tests (#13500)\n\nSome system tests from kafkatest.tests.core.network_degrade_test are failing due to missing utility iputils-ping.\n\n[DEBUG - 2023-02-04 01:34:56,322 - network_degrade_test - test_latency -\nlineno:67]: Ping output: bash: line 1: ping: command not found\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1681363856,
    "epoch_utc": null
  },
  {
    "commit": "1395ad6497a43077a68baa5521b7c6e6ee581f11",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Wed Apr 12 20:06:28 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 12 17:06:28 2023 -0700",
    "stats": {
      "files_changed": 9,
      "insertions": 487,
      "deletions": 39,
      "files": [
        "checkstyle/suppressions.xml",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableAbstractJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableRightJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/TableTableJoinIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java"
      ]
    },
    "message": "KAFKA-14834: [4/N] Drop out-of-order records from table-table join with versioned tables (#13510)\n\nThis PR updates primary-key table-table join processors to ignore out-of-order records from versioned tables, as specified in KIP-914.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1681340788,
    "epoch_utc": null
  },
  {
    "commit": "56dcb837a2f1c1d8c016cfccf8268a910bb77a36",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Wed Apr 12 17:04:51 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 12 17:04:51 2023 -0700",
    "stats": {
      "files_changed": 24,
      "insertions": 1275,
      "deletions": 76,
      "files": [
        "clients/src/main/resources/common/message/AddPartitionsToTxnRequest.json",
        "core/src/main/java/kafka/server/NetworkUtils.java",
        "core/src/main/java/kafka/server/builders/ReplicaManagerBuilder.java",
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/network/RequestChannel.scala",
        "core/src/main/scala/kafka/server/AddPartitionsToTxnManager.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/main/scala/kafka/server/KafkaRequestHandler.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/kafka/server/KafkaRequestHandlerTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/AbstractCoordinatorConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupMetadataManagerTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionStateManagerTest.scala",
        "core/src/test/scala/unit/kafka/network/SocketServerTest.scala",
        "core/src/test/scala/unit/kafka/server/AddPartitionsToTxnManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/AddPartitionsToTxnRequestServerTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala"
      ]
    },
    "message": "KAFKA-14561: Improve transactions experience for older clients by ensuring ongoing transaction (#13391)\n\nAdded check for ongoing transaction\nThread to send and receive verify only add partition to txn requests\nCode to send on request thread courtesy of @artemlivshits\n\nReviewers: Artem Livshits <alivshits@confluent.io>, Jun Rao <junrao@gmail.com>",
    "epoch": 1681329891,
    "epoch_utc": null
  },
  {
    "commit": "88e2d6b8c23c548ebd4146b447c80fcda85f5102",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Wed Apr 12 19:54:15 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 12 16:54:15 2023 -0700",
    "stats": {
      "files_changed": 4,
      "insertions": 212,
      "deletions": 44,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamKTableJoinProcessor.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/StreamTableJoinIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamGlobalKTableJoinTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamGlobalKTableLeftJoinTest.java"
      ]
    },
    "message": "KAFKA-14834: [3/N] Timestamped lookups for stream-table joins (#13509)\n\nThis PR updates the stream-table join processors, including both KStream-KTable and KStream-GlobalKTable joins, to perform timestamped lookups when the (global) table is versioned, as specified in KIP-914.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1681340055,
    "epoch_utc": null
  },
  {
    "commit": "750a3893081fbe1e01f8c6eadf84726ace1eb47a",
    "author": "Guozhang Wang",
    "author_email": "wangguoz@gmail.com",
    "date": "Wed Apr 12 14:57:02 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 12 14:57:02 2023 -0700",
    "stats": {
      "files_changed": 14,
      "insertions": 103,
      "deletions": 57,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/ReadOnlyTask.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StandbyTask.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StateUpdater.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/Task.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/PauseResumeIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/DefaultStateUpdaterTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StandbyTaskTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StoreChangelogReaderTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/TaskMetricsTest.java"
      ]
    },
    "message": "MINOR: Follow-up on failing streams test, and fix StoreChangelogReader (#13523)\n\n1. I've verified and made sure the only case that task would be null and not stream task would be in testing code only, with pausing / resuming topologies; I've revamped the restoration recording func, mainly to make just one method on the Task interface, to make sure we would never get task == null and do not need to cast to StreamTask.\n2. Use numRecords directly to avoid calling records.size() that triggers concurrent modifications.\n3. Rewrite the TaskMetricsTest to not use the removed impl functions.\n4. Found an issue while fixing 1) above, turns out it's related to pausing tasks: if the tasks are paused due to instance / named-topologies are paused while they need restoration, the restoration would never finish, and hence the instance's state would not transit to RUNNING. Similarly, if user paused just one of the named-topology right at the beginning, since the state would not transit to RUNNING, every tasks across all named-topologies would not make progress. We keep the behavior as is to be consistent with and without state-updater.\n\nReviewers: Matthias J. Sax <mjsax@apache.org>, Lucas Brutschy <lbrutschy@confluent.io>",
    "epoch": 1681322222,
    "epoch_utc": null
  },
  {
    "commit": "c4ad09e47d79a4ca89769caa496a7ba58a0c7fbb",
    "author": "andymg3",
    "author_email": "97484553+andymg3@users.noreply.github.com",
    "date": "Wed Apr 12 15:00:35 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 12 12:00:35 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 209,
      "deletions": 0,
      "files": [
        "metadata/src/test/java/org/apache/kafka/controller/PartitionChangeBuilderTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/ReplicationControlManagerTest.java"
      ]
    },
    "message": "MINOR: Add more KRaft reassignment tests (#13521)\n\nAlthough KAFKA-14808 did not affect KRaft mode, it is important to ensure that we have regression\ntests in KRaft mode to prevent a similar bug from appearing there in the future. This PR adds two\ntests. First, it adds a test that makes sure we handle what happens when a reassignment completes\nand none of the new replicas can be made leader. It's important that we dont keep an old replica as\nleader. Second, it adds a test that makes sure we handle new reassignments that don't include a\nprevious assignment replica that was leader.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1681322435,
    "epoch_utc": null
  },
  {
    "commit": "7c74f3983b1cdbca59bb17e9070c8b4386c563f8",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Wed Apr 12 14:31:27 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 12 11:31:27 2023 -0700",
    "stats": {
      "files_changed": 7,
      "insertions": 134,
      "deletions": 10,
      "files": [
        "docs/streams/developer-guide/dsl-api.html",
        "docs/streams/developer-guide/interactive-queries.html",
        "docs/streams/developer-guide/memory-mgmt.html",
        "docs/streams/developer-guide/processor-api.html",
        "docs/streams/upgrade-guide.html",
        "docs/upgrade.html",
        "streams/src/main/java/org/apache/kafka/streams/state/Stores.java"
      ]
    },
    "message": "KAFKA-14491: [21/N] Docs updates for versioned state stores (#13444)\n\nAdd docs for KIP-889.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1681320687,
    "epoch_utc": null
  },
  {
    "commit": "9c0caca6600cd18c161f7be48a7745a98ff091dd",
    "author": "dorwi",
    "author_email": "vidor.kanalas@gmail.com",
    "date": "Wed Apr 12 18:08:07 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 12 12:08:07 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectMetricsRegistry.java"
      ]
    },
    "message": "MINOR: update the connect task metrics documentation (#13494)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1681333687,
    "epoch_utc": null
  },
  {
    "commit": "e1e3900ba1980ca774b927df4a8713a0328eeb86",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Wed Apr 12 13:16:49 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 12 13:16:49 2023 +0200",
    "stats": {
      "files_changed": 6,
      "insertions": 343,
      "deletions": 0,
      "files": [
        "checkstyle/import-control.xml",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/Group.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/Record.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/Result.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/RecordTest.java",
        "group-coordinator/src/test/java/org/apache/kafka/coordinator/group/ResultTest.java"
      ]
    },
    "message": "KAFKA-14462; [4/N] Add Group, Record and Result (#13520)\n\nThis patch adds Group, Record and Result.\n\nReviewers: Jason Gustafson <jason@confluent.io>, Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1681316209,
    "epoch_utc": null
  },
  {
    "commit": "b64ac94a8c6410db113f92e53e4a3d66869823f5",
    "author": "Rajini Sivaram",
    "author_email": "rajinisivaram@googlemail.com",
    "date": "Wed Apr 12 08:35:03 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 12 08:35:03 2023 +0100",
    "stats": {
      "files_changed": 2,
      "insertions": 29,
      "deletions": 3,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/RangeAssignor.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/RangeAssignorTest.java"
      ]
    },
    "message": "KAFKA-14891: Fix rack-aware range assignor to assign co-partitioned subsets (#13539)\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1681299303,
    "epoch_utc": null
  },
  {
    "commit": "e99984248da3042fd7fd6ed5f951f7222a4a3ccd",
    "author": "Satish Duggana",
    "author_email": "satishd@apache.org",
    "date": "Wed Apr 12 11:25:36 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 12 13:55:36 2023 +0800",
    "stats": {
      "files_changed": 14,
      "insertions": 1365,
      "deletions": 611,
      "files": [
        "checkstyle/import-control-core.xml",
        "core/src/main/java/kafka/log/remote/RemoteLogManager.java",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/log/remote/RemoteLogManager.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/java/kafka/log/remote/RemoteLogManagerTest.java",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/log/remote/RemoteLogManagerTest.scala",
        "server-common/src/main/java/org/apache/kafka/server/common/CheckpointFile.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/checkpoint/InMemoryLeaderEpochCheckpoint.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/epoch/LeaderEpochFileCache.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/ProducerStateManager.java"
      ]
    },
    "message": "KAFKA-9550 Copying log segments to tiered storage in RemoteLogManager (#13487)\n\nAdded functionality to copy log segments, indexes to the target remote storage for each topic partition enabled with tiered storage. This involves creating scheduled tasks for all leader partition replicas to copy their log segments in sequence to tiered storage.\n\nReviewers: Jun Rao <junrao@gmail.com>, Luke Chen <showuon@gmail.com>",
    "epoch": 1681309536,
    "epoch_utc": null
  },
  {
    "commit": "17b4569d706ff2cdf63b1f2daa4521703dda387e",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Tue Apr 11 23:42:55 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Apr 11 20:42:55 2023 -0700",
    "stats": {
      "files_changed": 5,
      "insertions": 454,
      "deletions": 58,
      "files": [
        "checkstyle/suppressions.xml",
        "streams/src/test/java/org/apache/kafka/streams/integration/AbstractJoinIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/StreamStreamJoinIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/StreamTableJoinIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/TableTableJoinIntegrationTest.java"
      ]
    },
    "message": "KAFKA-14834: [2/N] Test coverage for out-of-order data in joins (#13497)\n\nIn preparation for updating DSL join processors to have updated semantics when versioned stores are used (cf KIP-914), this PR adds test coverage for out-of-order data in joins to the existing integration tests for stream-table joins and primary-key table-table joins. Follow-up PRs will build on top of this change by adding new tests for versioned stores, and the out-of-order data will produce different results in those settings.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1681267375,
    "epoch_utc": null
  },
  {
    "commit": "cb7d0833ee02e190a194cc5bd28fd2b3ac31cccb",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Tue Apr 11 23:40:11 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Apr 11 20:40:11 2023 -0700",
    "stats": {
      "files_changed": 21,
      "insertions": 198,
      "deletions": 13,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamAggregate.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamReduce.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamSessionWindowAggregate.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregate.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamWindowAggregate.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableFilter.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableInnerJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableLeftJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableOuterJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableRightJoin.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableMapValues.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableMaterializedValueGetterSupplier.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTablePassThrough.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableRepartitionMap.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableSourceValueGetterSupplier.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableTransformValues.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableValueGetter.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/suppress/KTableSuppressProcessorSupplier.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/KeyValueStoreWrapper.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/ForeignJoinSubscriptionProcessorSupplierTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResolverJoinProcessorSupplierTest.java"
      ]
    },
    "message": "KAFKA-14834: [1/N] Add timestamped get to KTableValueGetter (#13496)\n\nIn preparation for updating DSL processors to use versioned stores (cf KIP-914), this PR adds two new methods to KTableValueGetter: isVersioned() and get(key, asOfTimestamp) and updates all existing implementations accordingly.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1681267211,
    "epoch_utc": null
  },
  {
    "commit": "f1f35ef1a87154c84623132207b54c1491497452",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Tue Apr 11 15:02:33 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Apr 11 15:02:33 2023 -0700",
    "stats": {
      "files_changed": 4,
      "insertions": 84,
      "deletions": 1,
      "files": [
        "metadata/src/main/java/org/apache/kafka/image/loader/MetadataLoader.java",
        "metadata/src/main/java/org/apache/kafka/image/writer/ImageReWriter.java",
        "metadata/src/test/java/org/apache/kafka/image/loader/MetadataLoaderTest.java",
        "metadata/src/test/java/org/apache/kafka/image/writer/ImageReWriterTest.java"
      ]
    },
    "message": "KAFKA-14894: MetadataLoader must call finishSnapshot after loading a snapshot (#13541)\n\nThe MetadataLoader must call finishSnapshot after loading a snapshot. This function removes\nwhatever was in the old snapshot that is not in the new snapshot that was just loaded. While this\nis not significant when the old snapshot was the empty snapshot, it is important to do when we are\nloading a snapshot on top of an existing non-empty image.\n\nIn initializeNewPublishers, the newly installed publishers should be given a MetadataDelta based on\nMetadataImage.EMPTY, reflecting the fact that they are seeing everything for the first time.\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1681236153,
    "epoch_utc": null
  },
  {
    "commit": "e49a5a265fd2d60d197b940b7c2a6867f7b90cb1",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Tue Apr 11 06:37:26 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Apr 11 09:37:26 2023 -0400",
    "stats": {
      "files_changed": 25,
      "insertions": 1037,
      "deletions": 118,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractStatus.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectorStatus.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Herder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/StateTracker.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/TargetState.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerConnector.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerMetricsGroup.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResource.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaConfigBackingStore.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/ConnectWorkerIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/ConnectorTopicsIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/ErrorHandlingIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/MonitorableSourceConnector.java",
        ".../src/test/java/org/apache/kafka/connect/integration/RebalanceSourceConnectorsIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerConnectorTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaConfigBackingStoreTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectCluster.java",
        ".../runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectClusterAssertions.java",
        "gradle/spotbugs-exclude.xml"
      ]
    },
    "message": "KAFKA-14783 (KIP-875): New STOPPED state for connectors (#13424)\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Yash Mayya <yash.mayya@gmail.com>, Greg Harris <gharris1727@gmail.com>",
    "epoch": 1681205846,
    "epoch_utc": null
  },
  {
    "commit": "396536bb5aa1ba78c71ea824d736640b615bda8a",
    "author": "Farooq Qaiser",
    "author_email": "fqaiser94@gmail.com",
    "date": "Mon Apr 10 16:27:04 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 10 13:27:04 2023 -0700",
    "stats": {
      "files_changed": 9,
      "insertions": 467,
      "deletions": 53,
      "files": [
        "docs/streams/developer-guide/dsl-api.html",
        "docs/streams/upgrade-guide.html",
        "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/ChangedDeserializer.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/ChangedSerializer.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableRepartitionMap.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/ChangedSerdeTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableAggregateTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableTransformValuesTest.java"
      ]
    },
    "message": "KAFKA-12446: Call subtractor before adder if key is the same (#10747)\n\nImplements KIP-904.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1681154824,
    "epoch_utc": null
  },
  {
    "commit": "751a8af1f0f01b199d4d8e23f0c90edb7b38bd8c",
    "author": "Gantigmaa Selenge",
    "author_email": "39860586+tinaselenge@users.noreply.github.com",
    "date": "Mon Apr 10 16:55:49 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 10 11:55:49 2023 -0400",
    "stats": {
      "files_changed": 8,
      "insertions": 516,
      "deletions": 22,
      "files": [
        "clients/src/test/java/org/apache/kafka/clients/admin/AdminClientTestUtils.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/ConfigPropertyFilter.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/DefaultConfigPropertyFilter.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceConnector.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorSourceConnectorTest.java",
        ".../src/test/java/org/apache/kafka/connect/mirror/integration/MirrorConnectorsIntegrationBaseTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedKafkaCluster.java"
      ]
    },
    "message": "KAFKA-14420: Use incrementalAlterConfigs API for syncing topic configurations in MirrorMaker 2 (KIP-894) (#13373)\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1681156549,
    "epoch_utc": null
  },
  {
    "commit": "17435484e4c49eef440ee412a711a88fed08bf50",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Fri Apr 7 14:15:17 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 7 11:15:17 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 236,
      "deletions": 0,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/integration/VersionedKeyValueStoreIntegrationTest.java"
      ]
    },
    "message": "KAFKA-14491: [22/N] Add test for manual upgrade to versioned store (#13449)\n\nAdds an integration test for the manual upgrade scenario to upgrade a non-versioned store to a versioned store. The procedure is outlined in KIP-889 and also in the docs.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1680887717,
    "epoch_utc": null
  },
  {
    "commit": "672dd3ab6aea413eaa8170236f351a0f2a35a89c",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Fri Apr 7 09:25:54 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 7 09:25:54 2023 -0700",
    "stats": {
      "files_changed": 17,
      "insertions": 482,
      "deletions": 102,
      "files": [
        "checkstyle/import-control.xml",
        "clients/src/main/java/org/apache/kafka/common/record/ControlRecordUtils.java",
        "core/src/main/scala/kafka/raft/KafkaMetadataLog.scala",
        "core/src/main/scala/kafka/raft/RaftManager.scala",
        "core/src/main/scala/kafka/tools/DumpLogSegments.scala",
        "core/src/test/scala/kafka/raft/KafkaMetadataLogTest.scala",
        "core/src/test/scala/unit/kafka/tools/DumpLogSegmentsTest.scala",
        "metadata/src/test/java/org/apache/kafka/image/loader/MetadataLoaderTest.java",
        "raft/src/main/java/org/apache/kafka/raft/Batch.java",
        "raft/src/main/java/org/apache/kafka/raft/ControlRecord.java",
        "raft/src/main/java/org/apache/kafka/raft/internals/RecordsIterator.java",
        "raft/src/main/java/org/apache/kafka/snapshot/RecordsSnapshotReader.java",
        "raft/src/main/java/org/apache/kafka/snapshot/RecordsSnapshotWriter.java",
        "raft/src/test/java/org/apache/kafka/ControlRecordTest.java",
        "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientSnapshotTest.java",
        "raft/src/test/java/org/apache/kafka/raft/internals/RecordsIteratorTest.java",
        "raft/src/test/java/org/apache/kafka/snapshot/SnapshotWriterReaderTest.java"
      ]
    },
    "message": "KAFKA-13020; Implement reading Snapshot log append timestamp (#13345)\n\nThe SnapshotReader exposes the \"last contained log time\". This is mainly used during snapshot cleanup. The previous implementation used the append time of the snapshot record. This is not accurate as this is the time when the snapshot was created and not the log append time of the last record included in the snapshot.\n\nThe log append time of the last record included in the snapshot is store in the header control record of the snapshot. The header control record is the first record of the snapshot.\n\nTo be able to read this record, this change extends the RecordsIterator to decode and expose the control records in the Records type.\n\nReviewers: Colin Patrick McCabe <cmccabe@apache.org>",
    "epoch": 1680870354,
    "epoch_utc": null
  },
  {
    "commit": "d5e216d6183a2aae109324652d92a3355690b9d6",
    "author": "Calvin Liu",
    "author_email": "83986057+CalvinConfluent@users.noreply.github.com",
    "date": "Fri Apr 7 09:09:29 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 7 09:09:29 2023 -0700",
    "stats": {
      "files_changed": 19,
      "insertions": 400,
      "deletions": 75,
      "files": [
        "core/src/main/scala/kafka/api/LeaderAndIsr.scala",
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/main/scala/kafka/cluster/Replica.scala",
        "core/src/main/scala/kafka/server/AlterPartitionManager.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/main/scala/kafka/server/metadata/KRaftMetadataCache.scala",
        "core/src/main/scala/kafka/zk/ZkMigrationClient.scala",
        "core/src/test/scala/unit/kafka/cluster/AbstractPartitionTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionLockTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/cluster/ReplicaTest.scala",
        "core/src/test/scala/unit/kafka/server/AlterPartitionManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/IsrExpirationTest.scala",
        "core/src/test/scala/unit/kafka/server/MetadataCacheTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/zk/ZkMigrationClientTest.scala",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/fetcher/ReplicaFetcherThreadBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/partition/PartitionMakeFollowerBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/partition/UpdateFollowerFetchStateBenchmark.java"
      ]
    },
    "message": "KAFKA-14617: Fill broker epochs to the AlterPartitionRequest (#13489)\n\nAs the third part of the KIP-903, it fills the broker epochs from the Fetch request into the AlterPartitionRequest. Also, before generating the alterPartitionRequest, the partition will check whether the broker epoch from the FetchRequest matches with the broker epoch recorded in the metadata cache. If not, the ISR change will be delayed.\n\nReviewers: Jun Rao <junrao@gmail.com>",
    "epoch": 1680869369,
    "epoch_utc": null
  },
  {
    "commit": "ef453dd1ad4d6388bd7a74dcb0c2d2573ee945a6",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Fri Apr 7 02:18:40 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 7 11:18:40 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 76,
      "deletions": 9,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java"
      ]
    },
    "message": "KAFKA-12634 enforce checkpoint after restoration (#13269)\n\nUnder at-least-once, we want to ensure checkpointing the progress after completing the restoration to prevent losing the progress and needing to restore from scratch.\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>, Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1680844720,
    "epoch_utc": null
  },
  {
    "commit": "637bc92ba1b8704577425d5e636068206df8d639",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Fri Apr 7 00:20:56 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Apr 7 00:20:56 2023 +0800",
    "stats": {
      "files_changed": 8,
      "insertions": 118,
      "deletions": 5,
      "files": [
        "build.gradle",
        "core/src/main/scala/kafka/common/MessageReader.scala",
        "core/src/main/scala/kafka/tools/ConsoleProducer.scala",
        "core/src/test/scala/unit/kafka/tools/ConsoleProducerTest.scala",
        "settings.gradle",
        ".../org/apache/kafka/tools => tools/tools-api/src/main/java/org/apache/kafka/tools/api}/RecordReader.java",
        "tools/tools-api/src/main/java/org/apache/kafka/tools/api/package-info.java",
        "tools/tools-api/src/test/java/org/apache/kafka/tools/api/RecordReaderTest.java"
      ]
    },
    "message": "MINOR: move RecordReader from org.apache.kafka.tools (client module) to org.apache.kafka.tools.api (tools-api module) (#13454)\n\nReviewers: Jun Rao <junrao@gmail.com>",
    "epoch": 1680837656,
    "epoch_utc": null
  },
  {
    "commit": "f02f5f8c8a8b1f196a1904fe2bd78f228980e1d6",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Fri Apr 7 00:00:10 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 6 09:00:10 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 6,
      "deletions": 11,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/metrics/TaskMetricsTest.java"
      ]
    },
    "message": "MINOR: fix stream failing tests (#13512)\n\nReviewers: Lucas Brutschy <lbrutschy@confluent.io>, Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1680836410,
    "epoch_utc": null
  },
  {
    "commit": "2117c4bce8f6ac9853756699bb79f24bba0fec86",
    "author": "Lucas Brutschy",
    "author_email": "lucasbru@users.noreply.github.com",
    "date": "Thu Apr 6 17:56:07 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 6 08:56:07 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 4,
      "deletions": 0,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/ReadOnlyTaskTest.java"
      ]
    },
    "message": "Minor: fix ReadOnlyTaskTest (#13519)\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1680814567,
    "epoch_utc": null
  },
  {
    "commit": "4f34ce1b49199c151795551876c61fec48627c47",
    "author": "Roman Schmitz",
    "author_email": "Schm1tz1@users.noreply.github.com",
    "date": "Thu Apr 6 17:22:12 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 6 17:22:12 2023 +0200",
    "stats": {
      "files_changed": 3,
      "insertions": 236,
      "deletions": 0,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/config/provider/EnvVarConfigProvider.java",
        "clients/src/main/resources/META-INF/services/org.apache.kafka.common.config.provider.ConfigProvider",
        "clients/src/test/java/org/apache/kafka/common/config/provider/EnvVarConfigProviderTest.java"
      ]
    },
    "message": "KAFKA-14376: Add ConfigProvider to make use of environment variables KIP-887 (#12992)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Viktor Somogyi-Vass <viktorsomogyi@gmail.com>, Jordan Moore <crikket.007@gmail.com>, Chris Egerton <fearthecellos@gmail.com>",
    "epoch": 1680812532,
    "epoch_utc": null
  },
  {
    "commit": "3bbff167fa2aa0400d4e24fb7693ca60a67b4553",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Thu Apr 6 16:01:14 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 6 16:01:14 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 4,
      "deletions": 4,
      "files": [
        "server-common/src/main/java/org/apache/kafka/server/util/Scheduler.java",
        "streams/src/main/java/org/apache/kafka/streams/query/Position.java"
      ]
    },
    "message": "MINOR: fix invalid usage in java docs (#13506)\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1680807674,
    "epoch_utc": null
  },
  {
    "commit": "eb0819c2026d093cb2ec3cce4fa8526b54469771",
    "author": "stejani-cflt",
    "author_email": "110068914+stejani-cflt@users.noreply.github.com",
    "date": "Thu Apr 6 00:04:48 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 6 15:04:48 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 4,
      "deletions": 2,
      "files": [
        "core/src/main/scala/kafka/cluster/Partition.scala"
      ]
    },
    "message": "MINOR: add under-min-isr string to log messages (#13508)\n\nWhenever there are changes to the ISR, add an extra string to the existing log message in case the partition is under min ISR. This makes it easier to search the log when partitions go under min-ISR.\n\nReviewers: Luke Chen <showuon@gmail.com>, Colin Patrick McCabe <colin@cmccabe.xyz>",
    "epoch": 1680750288,
    "epoch_utc": null
  },
  {
    "commit": "290eeed7bab144eedd648ae6735b2c9285c1f697",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Thu Apr 6 08:45:16 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Apr 6 08:45:16 2023 +0200",
    "stats": {
      "files_changed": 2,
      "insertions": 53,
      "deletions": 1,
      "files": [
        "core/src/main/scala/kafka/coordinator/transaction/TransactionMetadata.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionStateManagerTest.scala"
      ]
    },
    "message": "KAFKA-14880; TransactionMetadata with producer epoch -1 should be expirable (#13499)\n\nWe have seen the following error in logs:\n\n```\n\"Mar 22, 2019 @ 21:57:56.655\",Error,\"kafka-0-0\",\"transaction-log-manager-0\",\"Uncaught exception in scheduled task 'transactionalId-expiration'\",\"java.lang.IllegalArgumentException: Illegal new producer epoch -1\n```\n\nInvestigations showed that it is actually possible for a transaction metadata object to still have -1 as producer epoch when it transitions to Dead.\n\nWhen a transaction metadata is created for the first time (in handleInitProducerId), it has -1 as its producer epoch. Then a producer epoch is attributed and the transaction coordinator tries to persist the change. If the write fail for instance because there is an under min isr, the transaction metadata remains with its epoch as -1 forever or until the init producer id is retried.\n\nThis means that it is possible for transaction metadata to remain with -1 as producer epoch until it gets expired. At the moment, this is not allowed because we enforce a producer epoch greater or equals to 0 in prepareTransitionTo.\n\nReviewers: Luke Chen <showuon@gmail.com>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1680781516,
    "epoch_utc": null
  },
  {
    "commit": "b2ee6df1c4cfee921deb4e8b9ea48ee0939d85dc",
    "author": "Guozhang Wang",
    "author_email": "wangguoz@gmail.com",
    "date": "Wed Apr 5 16:05:11 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 5 16:05:11 2023 -0700",
    "stats": {
      "files_changed": 14,
      "insertions": 411,
      "deletions": 6,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/ActiveTaskCreator.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorStateManager.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StandbyTaskCreator.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/CachedStateStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/CachingKeyValueStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/CachingSessionStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/CachingWindowStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/NamedCache.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/ThreadCache.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/TimeOrderedCachingWindowStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/WrappedStateStore.java",
        ".../src/test/java/org/apache/kafka/streams/integration/StandbyTaskEOSMultiRebalanceIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorStateManagerTest.java"
      ]
    },
    "message": "KAFKA-14172: Should clear cache when active recycled from standby (#13369)\n\nThis fix is inspired by #12540.\n\n1. Added a clearCache function for CachedStateStore, which would be triggered upon recycling a state manager.\n2. Added the integration test inherited from #12540 .\n3. Improved some log4j entries.\n4. Found and fixed a minor issue with log4j prefix.\n\nReviewers: Lucas Brutschy <lbrutschy@confluent.io>, Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1680721511,
    "epoch_utc": null
  },
  {
    "commit": "653baa669486cca928a7bafba8ec47626624fbdc",
    "author": "Guozhang Wang",
    "author_email": "wangguoz@gmail.com",
    "date": "Wed Apr 5 11:49:08 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 5 11:49:08 2023 -0700",
    "stats": {
      "files_changed": 17,
      "insertions": 300,
      "deletions": 156,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/ReadOnlyTask.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StandbyTask.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/Task.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/ProcessorNodeMetrics.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/TaskMetrics.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/ThreadMetrics.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/metrics/RocksDBMetrics.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/metrics/StateStoreMetrics.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/DefaultStateUpdaterTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StandbyTaskTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/metrics/StateStoreMetricsTest.java"
      ]
    },
    "message": "KAFKA-10199: Add task updater metrics, part 2 (#13300)\n\nPart of KIP-869\n\nReviewers: Lucas Brutschy <lbrutschy@confluent.io>, Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1680706148,
    "epoch_utc": null
  },
  {
    "commit": "df59cc1a0151accb82082baaa56543ea157830d2",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Wed Apr 5 12:27:53 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 5 09:27:53 2023 -0700",
    "stats": {
      "files_changed": 8,
      "insertions": 284,
      "deletions": 42,
      "files": [
        "checkstyle/suppressions.xml",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KeyValueStoreMaterializer.java",
        "streams/src/main/java/org/apache/kafka/streams/state/Stores.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/VersionedKeyValueStoreIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/StoresTest.java",
        "streams/test-utils/src/main/java/org/apache/kafka/streams/TopologyTestDriver.java",
        "streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java"
      ]
    },
    "message": "KAFKA-14491: [20/N] Add public-facing methods for versioned stores (#13442)\n\nUntil this PR, all the code added for KIP-889 for introducing versioned stores to Kafka Streams has been accessible from internal packages only. This PR exposes the stores via public Stores.java methods, and also updates the TopologyTestDriver.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1680708473,
    "epoch_utc": null
  },
  {
    "commit": "31f9a54cba38fbdc015590bd82c1f1d62839f09f",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Wed Apr 5 20:11:32 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Apr 5 20:11:32 2023 +0800",
    "stats": {
      "files_changed": 4,
      "insertions": 163,
      "deletions": 2,
      "files": [
        "core/src/test/scala/unit/kafka/server/checkpoints/InMemoryLeaderEpochCheckpointTest.scala",
        "server-common/src/main/java/org/apache/kafka/server/common/CheckpointFile.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/checkpoint/InMemoryLeaderEpochCheckpoint.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/epoch/LeaderEpochFileCache.java"
      ]
    },
    "message": "KAFKA-14850: introduce InMemoryLeaderEpochCheckpoint (#13456)\n\nThe motivation for introducing InMemoryLeaderEpochCheckpoint is to allow remote log manager to create the RemoteLogSegmentMetadata(RLSM) with the correct leader epoch info for a specific segment. To do that, we need to rely on the LeaderEpochCheckpointCache to truncate from start and end, to get the epoch info. However, we don't really want to truncate the epochs in cache (and write to checkpoint file in the end). So, we introduce this InMemoryLeaderEpochCheckpoint to feed into LeaderEpochCheckpointCache, and when we truncate the epoch for RLSM, we can do them in memory without affecting the checkpoint file, and without interacting with file system.\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1680736292,
    "epoch_utc": null
  },
  {
    "commit": "beb0be5fe45d08ff45d6cdddfd86feac8500a7d7",
    "author": "Guozhang Wang",
    "author_email": "wangguoz@gmail.com",
    "date": "Tue Apr 4 15:29:00 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Apr 4 15:29:00 2023 -0700",
    "stats": {
      "files_changed": 10,
      "insertions": 112,
      "deletions": 117,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/ClientUtils.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/SmokeTestDriverIntegrationTest.java",
        ".../java/org/apache/kafka/streams/processor/internals/HighAvailabilityStreamsPartitionAssignorTest.java",
        ".../test/java/org/apache/kafka/streams/processor/internals/RackAwarenessStreamsPartitionAssignorTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/AssignmentTestUtils.java"
      ]
    },
    "message": "KAFKA-14533: Do not interrupt state-updater thread during shutdown (#13318)\n\n1. Fix the StateUpdater shutdown procedure: a) in shutdown, we first set the running flag, then notify the condition; b) in the thread's waitIfAllChangelogsCompletelyRead block, we collapse the if condition together with the while condition so that we always check all four conditions once the thread is notified inside the while loop. As a result, shutdown procedure would not involve any thread interruptions anymore.\n2. Print fine-grained streams exception when list-offset fails, this is a byproduct of the debugging procedure but I think it's worth keeping since it has better operational visibilities.\n3. Some nit logging improvements (including moving logger from the inner thread into the outer class to also add some more logging).\n4. Re-enable state-updater in SmokeTestDriverIntegrationTest.\n\nReviewers: Lucas Brutschy <lbrutschy@confluent.io>, Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1680632940,
    "epoch_utc": null
  },
  {
    "commit": "6d36db1c78ff28ed3e6134e271e72a5c2ff1c276",
    "author": "Proven Provenzano",
    "author_email": "93720617+pprovenzano@users.noreply.github.com",
    "date": "Tue Apr 4 11:34:09 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Apr 4 08:34:09 2023 -0700",
    "stats": {
      "files_changed": 15,
      "insertions": 456,
      "deletions": 131,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/admin/ScramMechanism.java",
        "clients/src/main/java/org/apache/kafka/common/security/scram/internals/ScramMechanism.java",
        "core/src/main/scala/kafka/tools/StorageTool.scala",
        "core/src/test/scala/integration/kafka/api/CustomQuotaCallbackTest.scala",
        "core/src/test/scala/integration/kafka/api/DelegationTokenEndToEndAuthorizationTest.scala",
        "core/src/test/scala/integration/kafka/api/DescribeAuthorizedOperationsTest.scala",
        "core/src/test/scala/integration/kafka/api/SaslClientsWithInvalidCredentialsTest.scala",
        "core/src/test/scala/integration/kafka/api/SaslScramSslEndToEndAuthorizationTest.scala",
        "core/src/test/scala/integration/kafka/api/SaslSetup.scala",
        "core/src/test/scala/integration/kafka/api/SaslSslAdminIntegrationTest.scala",
        "core/src/test/scala/integration/kafka/server/QuorumTestHarness.scala",
        "core/src/test/scala/integration/kafka/server/ScramServerStartupTest.scala",
        "core/src/test/scala/unit/kafka/admin/UserScramCredentialsCommandTest.scala",
        "core/src/test/scala/unit/kafka/integration/KafkaServerTestHarness.scala",
        "core/src/test/scala/unit/kafka/tools/StorageToolTest.scala"
      ]
    },
    "message": "KAFKA-14765 and KAFKA-14776: Support for SCRAM at bootstrap with integration tests (#13374)\n\nImplement KIP-900\n\nUpdate kafka-storage to be able to add SCRAM records to the bootstrap metadata file at format time so that SCRAM is enabled at initial start (bootstrap) of KRaft cluster. Includes unit tests.\n\nUpdate ./core/src/test/scala/integration/kafka/api/SaslScramSslEndToEndAuthorizationTest.scala to use bootstrap and\nenable the test to run with both ZK and KRaft quorum.\n\nMoved the one test from ScramServerStartupTest.scala into SaslScramSslEndToEndAuthorizationTest.scala. This test is really small, so there was no point in recreating all the bootstrap startup just for a 5 line test when it could easily be run elsewhere.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>, Manikumar Reddy <manikumar.reddy@gmail.com>",
    "epoch": 1680618849,
    "epoch_utc": null
  },
  {
    "commit": "5e820571de11d7157262c8bc6bbb59402a700ca5",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Tue Apr 4 02:57:42 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Apr 4 11:57:42 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractHerder.java"
      ]
    },
    "message": "MINOR: Fix base ConfigDef in AbstractHerder::connectorPluginConfig (#13466)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Greg Harris <gharris1727@gmail.com>",
    "epoch": 1680587862,
    "epoch_utc": null
  },
  {
    "commit": "babfb1778b1fd57d86261adab72ee42bc04caa8b",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Tue Apr 4 00:29:40 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 3 21:29:40 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 22,
      "deletions": 18,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/AbstractKStreamTimeWindowAggregateProcessor.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamSlidingWindowAggregate.java"
      ]
    },
    "message": "KAFKA-14864: Close iterator in KStream windowed aggregation emit on window close (#13470)\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1680578980,
    "epoch_utc": null
  },
  {
    "commit": "63fee01366e6ce98b9dfafd279a45d40b80e282d",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Tue Apr 4 00:27:19 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 3 21:27:19 2023 -0700",
    "stats": {
      "files_changed": 8,
      "insertions": 440,
      "deletions": 104,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/state/internals/LogicalKeyValueSegment.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/LogicalKeyValueSegments.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBTimestampedStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBVersionedStore.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/LogicalKeyValueSegmentTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/LogicalKeyValueSegmentsTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBStoreTest.java"
      ]
    },
    "message": "KAFKA-14491: [19/N] Combine versioned store RocksDB instances into one (#13431)\n\nThe RocksDB-based versioned store implementation introduced in KIP-889 currently uses two physical RocksDB instances per store instance: one for the \"latest value store\" and another for the \"segments store.\" This PR combines those two RocksDB instances into one by representing the latest value store as a special \"reserved\" segment within the segments store. This reserved segment has segment ID -1, is never expired, and is not included in the regular Segments methods for getting or creating segments, but is represented in the physical RocksDB instance the same way as any other segment.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1680578839,
    "epoch_utc": null
  },
  {
    "commit": "f503aa3ab4963149b854c9af8832e0dca46e3ba4",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Tue Apr 4 00:23:48 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 3 21:23:48 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 322,
      "deletions": 153,
      "files": [
        ".../main/java/org/apache/kafka/streams/state/internals/RocksDBVersionedStoreSegmentValueFormatter.java",
        ".../java/org/apache/kafka/streams/state/internals/RocksDBVersionedStoreSegmentValueFormatterTest.java"
      ]
    },
    "message": "KAFKA-14491: [16/N] Add recovery logic for store inconsistency due to failed write (#13364)\n\nThe RocksDB-based implementation of versioned stores introduced via KIP-889 consists of a \"latest value store\" and separate (logical) \"segments stores.\" A single put operation may need to modify multiple (two) segments, or both a segment and the latest value store, which opens the possibility to store inconsistencies if the first write succeeds while the later one fails. When this happens, Streams will error out, but the store still needs to be able to recover upon restart. This PR adds the necessary repair logic into RocksDBVersionedStore to effectively undo the earlier failed write when a store inconsistency is encountered.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1680578628,
    "epoch_utc": null
  },
  {
    "commit": "15e896a5b36bc6074830aa5900ab9e466e920082",
    "author": "Andreas Maechler",
    "author_email": "amaechler@gmail.com",
    "date": "Mon Apr 3 15:28:25 2023 -0600",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 3 14:28:25 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 3,
      "files": [
        "docs/security.html"
      ]
    },
    "message": "Fix typos in security.html (#13480)\n\nReviewers: Divij Vaidya <diviv@amazon.com>,  Jun Rao <junrao@gmail.com>",
    "epoch": 1680546505,
    "epoch_utc": null
  },
  {
    "commit": "4e1fcf18475d44721d90de00c7ce8b345394d956",
    "author": "Pierangelo Di Pilato",
    "author_email": "pierangelodipilato@gmail.com",
    "date": "Mon Apr 3 12:35:13 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 3 12:35:13 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 6,
      "deletions": 2,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java"
      ]
    },
    "message": "KAFKA-14771: Include threads info in ConcurrentModificationException message (#13325)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1680536113,
    "epoch_utc": null
  },
  {
    "commit": "1f0ae71fb328288152a938aa2a259f9646783f60",
    "author": "Rajini Sivaram",
    "author_email": "rajinisivaram@googlemail.com",
    "date": "Mon Apr 3 09:22:47 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Apr 3 09:22:47 2023 +0100",
    "stats": {
      "files_changed": 7,
      "insertions": 1014,
      "deletions": 479,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/CooperativeStickyAssignor.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/StickyAssignor.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/CooperativeStickyAssignorTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/StickyAssignorTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractPartitionAssignorTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignorTest.java"
      ]
    },
    "message": "KAFKA-14452: Make sticky assignors rack-aware if client rack is configured (KIP-881) (#13350)\n\nBest-effort rack alignment for sticky assignors when both consumer racks and partition racks are available with the protocol changes introduced in KIP-881. Rack-aware assignment is enabled by configuring client.rack for consumers. The assignment builders attempt to align on racks on a best-effort basis, but prioritize balanced assignment over rack alignment.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1680524567,
    "epoch_utc": null
  },
  {
    "commit": "970dea60e8674ca54a1458fd20c685704cc01f7c",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Sun Apr 2 22:39:33 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Apr 2 13:09:33 2023 -0400",
    "stats": {
      "files_changed": 33,
      "insertions": 1564,
      "deletions": 157,
      "files": [
        "checkstyle/import-control.xml",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorMaker.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/cli/ConnectDistributed.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/cli/ConnectStandalone.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Herder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Worker.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/HerderRequestHandler.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/entities/ConnectorOffset.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/entities/ConnectorOffsets.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResource.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/ConnectorOffsetBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/FileOffsetBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaConfigBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaOffsetBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/MemoryOffsetBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/OffsetBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/OffsetUtils.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/ConnectUtils.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/SinkUtils.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/MonitorableSourceConnector.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/OffsetsApiIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/AbstractHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/FileOffsetBackingStoreTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaOffsetBackingStoreTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/OffsetUtilsTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/SinkUtilsTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectCluster.java"
      ]
    },
    "message": "KAFKA-14785 (KIP-875): Connect offset read REST API (#13434)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1680485973,
    "epoch_utc": null
  },
  {
    "commit": "145ef2d1e06abd3e4f4f9220b74c07da51e8bf79",
    "author": "Colin P. McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Thu Mar 30 16:35:24 2023 -0700",
    "commit_by": "Colin P. McCabe",
    "commit_by_email": "cmccabe@apache.org",
    "commit_by_date": "Fri Mar 31 10:15:52 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 3,
      "deletions": 2,
      "files": [
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/test/scala/unit/kafka/server/metadata/BrokerMetadataPublisherTest.scala"
      ]
    },
    "message": "MINOR: fix BrokerMetadataPublisherTest.testExceptionInUpdateCoordinator\n\nFix a case where we were getting an exception because we removed a publisher, but left it in\nBrokerServer.metadataPublishers (resulting in us trying to remove it during broker shutdown.)",
    "epoch": 1680204924,
    "epoch_utc": null
  },
  {
    "commit": "372b0f1c589a804446b3bbc9766f9561dd18567a",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Fri Mar 31 23:20:35 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Mar 31 11:20:35 2023 -0400",
    "stats": {
      "files_changed": 2,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala"
      ]
    },
    "message": "Suppress exception in testExceptionInUpdateCoordinator (#13486)\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1680315635,
    "epoch_utc": null
  },
  {
    "commit": "0aa365add881428815c3d71fd5ce575fb8fb8089",
    "author": "D\u00e1niel Urb\u00e1n",
    "author_email": "48119872+urbandan@users.noreply.github.com",
    "date": "Fri Mar 31 16:50:11 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Mar 31 10:50:11 2023 -0400",
    "stats": {
      "files_changed": 20,
      "insertions": 172,
      "deletions": 59,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointConnector.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointTask.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointTaskConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorHeartbeatConnector.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorMaker.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorMakerConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceConnector.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceTask.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceTaskConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/Scheduler.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorCheckpointConfigTest.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorConfigTest.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorMakerConfigTest.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorSourceConfigTest.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorSourceMetricsTest.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/TestUtils.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java"
      ]
    },
    "message": "KAFKA-14838: Add flow/connector/task/role information to MM2 Kafka client.id configs (#13458)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1680292211,
    "epoch_utc": null
  },
  {
    "commit": "3c4472d701a7e9d9b8714a0b9d87ae190d1679fb",
    "author": "Rajini Sivaram",
    "author_email": "rajinisivaram@googlemail.com",
    "date": "Fri Mar 31 15:01:07 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Mar 31 15:01:07 2023 +0100",
    "stats": {
      "files_changed": 3,
      "insertions": 224,
      "deletions": 31,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinatorTest.java",
        "core/src/test/scala/integration/kafka/server/FetchFromFollowerIntegrationTest.scala"
      ]
    },
    "message": "KAFKA-14867: Trigger rebalance when replica racks change if client.rack is configured (KIP-881) (#13474)\n\nWhen `client.rack` is configured for consumers, we perform rack-aware consumer partition assignment to improve locality. After/during reassignments, replica racks may change, so to ensure optimal consumer assignment, trigger rebalance from the leader when set of racks of any partition changes.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1680285667,
    "epoch_utc": null
  },
  {
    "commit": "d849d667171103d2403c4da0cb3852c11b8aa4b8",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Fri Mar 31 20:33:29 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Mar 31 18:03:29 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 3,
      "files": [
        "storage/src/main/java/org/apache/kafka/storage/internals/epoch/LeaderEpochFileCache.java"
      ]
    },
    "message": "Use readlock for reading epochs in LeaderEpochFIleCache (#13483)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1680305609,
    "epoch_utc": null
  },
  {
    "commit": "8c88cdb7186b1d594f991eb324356dcfcabdf18a",
    "author": "Calvin Liu",
    "author_email": "83986057+CalvinConfluent@users.noreply.github.com",
    "date": "Fri Mar 31 02:27:42 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Mar 31 11:27:42 2023 +0200",
    "stats": {
      "files_changed": 14,
      "insertions": 326,
      "deletions": 81,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/AlterPartitionRequest.java",
        "clients/src/main/resources/common/message/AlterPartitionRequest.json",
        "clients/src/main/resources/common/message/AlterPartitionResponse.json",
        "clients/src/test/java/org/apache/kafka/common/requests/AlterPartitionRequestTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/RequestResponseTest.java",
        "core/src/main/scala/kafka/controller/KafkaController.scala",
        "core/src/main/scala/kafka/server/AlterPartitionManager.scala",
        "core/src/test/scala/unit/kafka/controller/ControllerIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/server/AlterPartitionManagerTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/PartitionChangeBuilder.java",
        "metadata/src/main/java/org/apache/kafka/controller/ReplicationControlManager.java",
        "metadata/src/test/java/org/apache/kafka/controller/PartitionChangeBuilderTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/ReplicationControlManagerTest.java"
      ]
    },
    "message": "KAFKA-14617: Update AlterPartitionRequest and enable Kraft controller to reject stale request. (#13408)\n\nSecond part of the [KIP-903](https://cwiki.apache.org/confluence/display/KAFKA/KIP-903%3A+Replicas+with+stale+broker+epoch+should+not+be+allowed+to+join+the+ISR), it updates the AlterPartitionRequest:\n- Deprecate the NewIsr field\n- Create a new field BrokerState with BrokerId and BrokerEpoch\n- Bump the AlterPartition version to 3\n\nWith this change, the Quorum Controller is enabled to reject stale AlterPartition request.\n\nReviewers: Jun Rao <junrao@gmail.com>, David Jacot <djacot@confluent.io>",
    "epoch": 1680240462,
    "epoch_utc": null
  },
  {
    "commit": "2b26db0d38f7245505812e4cb3fa622fc07ba6c8",
    "author": "Robert Young",
    "author_email": "robertyoungnz@gmail.com",
    "date": "Fri Mar 31 19:52:10 2023 +1300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Mar 31 14:52:10 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 8,
      "deletions": 7,
      "files": [
        "tools/src/main/java/org/apache/kafka/tools/ProducerPerformance.java",
        "tools/src/test/java/org/apache/kafka/tools/ProducerPerformanceTest.java"
      ]
    },
    "message": "Switch to SplittableRandom in ProducerPerformance utility (#13482)\n\nWhy:\nUsing java.util.Random to generate every byte sent from the ProducerPerformance\nappears to be a limiting factor. Throughput of the ProducerPerformance script is\nhigher with a file of records as compared to randomly generated records.\n\nOn my machine a single thread can generate ~100MB/second of uppercase letters using\njava.util.Random and ~300MB/sec using java.util.SplittableRandom. This is a limit on\nthroughput.\n\nNote: you can optimise further by expanding it from 26 letters to 32 letter generated\nas it is more efficient to generate a nicely distributed int when the bound is a\npower of two.\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1680303130,
    "epoch_utc": null
  },
  {
    "commit": "b77b7a6f6f6d39f8064fc5fb11f25b09c58c4228",
    "author": "andymg3",
    "author_email": "97484553+andymg3@users.noreply.github.com",
    "date": "Thu Mar 30 18:25:15 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 30 15:25:15 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala"
      ]
    },
    "message": "MINOR: Deflake some tests in TopicCommandIntegrationTest (#13479)\n\nA couple tests in TopicCommandIntegrationTest look flaky, such as testTopicDeletion and testTopicWithCollidingCharDeletionAndCreateAgain.\n\nI also updated part of a comment that implies the code only runs in ZK mode but thats not the case so I removed it.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1680211515,
    "epoch_utc": null
  },
  {
    "commit": "6d9d65e6664153f8a7557ec31b5983eb0ac26782",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Thu Mar 30 09:23:55 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 30 09:23:55 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 9,
      "deletions": 3,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/Metadata.java"
      ]
    },
    "message": "MINOR: Change ordering of checks to prevent log spam on metadata updates (#13447)\n\nOn startup, we always update the metadata. The topic ID also goes from null to defined. Move the epoch is null check to before the topic ID check to prevent log spam.\n\nReviewers: David Jacot <djacot@confluent.io>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1680179035,
    "epoch_utc": null
  },
  {
    "commit": "887d05559f36fee94389988405724b509a84c46c",
    "author": "andymg3",
    "author_email": "97484553+andymg3@users.noreply.github.com",
    "date": "Wed Mar 29 22:10:03 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 29 19:10:03 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 11,
      "deletions": 16,
      "files": [
        "metadata/src/test/java/org/apache/kafka/controller/ReplicationControlManagerTest.java"
      ]
    },
    "message": "MINOR: Create only one FeatureControlManager instance in ReplicationControlManagerTest (#13468)\n\nThis is a small patch to make it so we only create one FeatureControlManager instance in ReplicationControlManagerTest. Currently we create two, which isn't needed. Its also a bit confusing because the ReplicationControlTestContext objects ends up having a different FeatureControlManager reference that the one its own ReplicationControlManager instance has a reference to.\n\nReviewers: Jos\u00e9 Armando Garc\u00eda Sancio <jsancio@apache.org>, dengziming <dengziming1993@gmail.com>",
    "epoch": 1680138603,
    "epoch_utc": null
  },
  {
    "commit": "5c0e4aa67642ac0df1bbb79be84ef579b04194c2",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Wed Mar 29 16:09:52 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 29 16:09:52 2023 -0700",
    "stats": {
      "files_changed": 9,
      "insertions": 781,
      "deletions": 124,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CommitRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThread.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEventProcessor.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/OffsetFetchApplicationEvent.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CommitRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumerTest.java",
        "core/src/test/scala/integration/kafka/api/BaseAsyncConsumerTest.scala"
      ]
    },
    "message": "KAFKA-14468: Committed API (#13380)\n\nIn this PR, I implemented the committed API. Here are the specifics:\n\n* the CommitRequestManager handles committed() request.\n* I implemented a UnsentOffsetFetchRequestState to handle deduping the request: because we don't want to send the exact requests repeatedly.\n* I implemented the retry mechanism: Some retriable errors will be retried automatically\n* ClientResponse errors are handled in the handlers.\n* Some of the top-level APIs were refactored lightly.\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1680116992,
    "epoch_utc": null
  },
  {
    "commit": "f8d0fc835bf952f7a2ea24a8abb7e750533705c2",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Wed Mar 29 14:02:47 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 29 14:02:47 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "core/src/test/scala/unit/kafka/zk/ZkMigrationClientTest.scala"
      ]
    },
    "message": "MINOR: Remove addOne to fix build (#13469)\n\nRemoved addOne method that broke scala 2.12 build\n\n---------\n\nCo-authored-by: David Arthur <mumrah@gmail.com>\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1680109367,
    "epoch_utc": null
  },
  {
    "commit": "09e59bc7761a6b9ec1437b3decdfcd7b5fff868e",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Wed Mar 29 12:30:12 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 29 12:30:12 2023 -0700",
    "stats": {
      "files_changed": 7,
      "insertions": 157,
      "deletions": 83,
      "files": [
        "core/src/main/scala/kafka/server/BrokerLifecycleManager.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/test/scala/integration/kafka/server/KRaftClusterTest.scala",
        "metadata/src/main/java/org/apache/kafka/image/loader/MetadataLoader.java",
        "metadata/src/test/java/org/apache/kafka/image/loader/MetadataLoaderTest.java",
        "metadata/src/test/java/org/apache/kafka/image/publisher/SnapshotGeneratorTest.java",
        "server-common/src/main/java/org/apache/kafka/queue/KafkaEventQueue.java"
      ]
    },
    "message": "KAFKA-14857: Fix some MetadataLoader bugs (#13462)\n\nThe MetadataLoader is not supposed to publish metadata updates until we have loaded up to the high\nwater mark. Previously, this logic was broken, and we published updates immediately. This PR fixes\nthat and adds a junit test.\n\nAnother issue is that the MetadataLoader previously assumed that we would periodically get\ncallbacks from the Raft layer even if nothing had happened. We relied on this to install new\npublishers in a timely fashion, for example. However, in older MetadataVersions that don't include\nNoOpRecord, this is not a safe assumption.\n\nAside from the above changes, also fix a deadlock in SnapshotGeneratorTest, fix the log prefix for\nBrokerLifecycleManager, and remove metadata publishers on brokerserver shutdown (like we do for\ncontrollers).\n\nReviewers: David Arthur <mumrah@gmail.com>, dengziming <dengziming1993@gmail.com>",
    "epoch": 1680103812,
    "epoch_utc": null
  },
  {
    "commit": "379b6978a04c171bcc64331a095f1c97eb4e1830",
    "author": "andymg3",
    "author_email": "97484553+andymg3@users.noreply.github.com",
    "date": "Wed Mar 29 13:12:40 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 29 10:12:40 2023 -0700",
    "stats": {
      "files_changed": 7,
      "insertions": 243,
      "deletions": 66,
      "files": [
        "metadata/src/main/java/org/apache/kafka/controller/PartitionChangeBuilder.java",
        "metadata/src/main/java/org/apache/kafka/controller/PartitionReassignmentReplicas.java",
        "metadata/src/main/java/org/apache/kafka/controller/PartitionReassignmentRevert.java",
        "metadata/src/main/java/org/apache/kafka/controller/ReplicationControlManager.java",
        "metadata/src/main/java/org/apache/kafka/metadata/PartitionRegistration.java",
        "metadata/src/test/java/org/apache/kafka/controller/PartitionReassignmentReplicasTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/PartitionRegistrationTest.java"
      ]
    },
    "message": "KAFKA-14829: Consolidate reassignment logic into PartitionReassignmentReplicas (#13440)\n\nCurrently, we have various bits of reassignment logic spread across different classes. For example, ReplicationControlManager contains logic for when a reassignment is in progress, which is duplication in PartitionChangeBuilder. Another example is PartitionReassignmentRevert which contains logic for how to undo/revert a reassignment. The idea here is to move the logic to PartitionReassignmentReplicas so it's more testable and easier to reason about.\n\nReviewers: Jos\u00e9 Armando Garc\u00eda Sancio <jsancio@apache.org>",
    "epoch": 1680106360,
    "epoch_utc": null
  },
  {
    "commit": "6e8d0d9850b05fc1de0ceaf77834e68939f782c1",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Wed Mar 29 16:02:04 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 29 16:02:04 2023 +0800",
    "stats": {
      "files_changed": 3,
      "insertions": 49,
      "deletions": 6,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java",
        "core/src/test/scala/integration/kafka/api/BaseConsumerTest.scala"
      ]
    },
    "message": "KAFKA-14853 the serializer/deserialize which extends ClusterResourceListener is not added to Metadata (#13460)\n\nReviewers: dengziming <dengziming1993@gmail.com>",
    "epoch": 1680116524,
    "epoch_utc": null
  },
  {
    "commit": "5afedd9ac37c4d740f47867cfd31eaed15dc542f",
    "author": "Jorge Esteban Quilcate Otoya",
    "author_email": "quilcate.jorge@gmail.com",
    "date": "Tue Mar 28 18:26:23 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 28 11:26:23 2023 -0400",
    "stats": {
      "files_changed": 4,
      "insertions": 100,
      "deletions": 16,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractHerder.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/AbstractHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/SampleSinkConnector.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/SampleSourceConnector.java"
      ]
    },
    "message": "KAFKA-14843: Include Connect framework properties when retrieving connector config definitions (#13445)\n\nReviewers: Yash Mayya <yash.mayya@gmail.com>, Greg Harris <greg.harris@aiven.io>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1680038783,
    "epoch_utc": null
  },
  {
    "commit": "f7ea9cfb50cbd0d2f295df9ec07240581aa1046f",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Tue Mar 28 21:19:52 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 28 09:19:52 2023 -0400",
    "stats": {
      "files_changed": 3,
      "insertions": 91,
      "deletions": 6,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointConnector.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointTask.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorCheckpointConnectorTest.java"
      ]
    },
    "message": "KAFKA-14837/14842:Avoid the rebalance caused by the addition and deletion of irrelevant groups for MirrorCheckPointConnector (#13446)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1680049192,
    "epoch_utc": null
  },
  {
    "commit": "c14f56b48461f01743146d58987bc8661ba0d459",
    "author": "vamossagar12",
    "author_email": "sagarmeansocean@gmail.com",
    "date": "Tue Mar 28 18:13:22 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 28 14:43:22 2023 +0200",
    "stats": {
      "files_changed": 10,
      "insertions": 13,
      "deletions": 9,
      "files": [
        "bin/kafka-streams-application-reset.sh",
        "bin/windows/kafka-streams-application-reset.bat",
        "build.gradle",
        "checkstyle/import-control.xml",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/InternalTopicManager.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/AbstractResetIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/ResetIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/tools/StreamsResetterTest.java",
        "tests/kafkatest/services/streams.py",
        "{core/src/main/scala => tools/src/main/java/org/apache}/kafka/tools/StreamsResetter.java"
      ]
    },
    "message": "KAFKA-14586: Moving StreamResetter to tools (#13127)\n\nMoves StreamResetter to tools project.\n\nReviewers: Federico Valeri <fedevaleri@gmail.com>, Christo Lolov <lolovc@amazon.com>, Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1680038002,
    "epoch_utc": null
  },
  {
    "commit": "f3e4dd922933bf28b2c091e846cbc4e5255dd1d5",
    "author": "Purshotam Chauhan",
    "author_email": "pchauhan@confluent.io",
    "date": "Tue Mar 28 14:14:50 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 28 14:14:50 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 58,
      "deletions": 12,
      "files": [
        ".../src/main/java/org/apache/kafka/jmh/acl/{AclAuthorizerBenchmark.java => AuthorizerBenchmark.java}"
      ]
    },
    "message": "KAFKA-14827: Support for StandardAuthorizer benchmark (#13423)\n\n* KAFKA-14827: Support for StandardAuthorizer benchmark\n\nCo-authored-by: Purshotam Chauhan <purshotam.r.chauhan@gmail.com>\n\n* reverting unintentional change\n\n---------\n\nCo-authored-by: David Arthur <mumrah@gmail.com>\n\nReviewers: Manikumar Reddy <manikumar.reddy@gmail.com>",
    "epoch": 1680023690,
    "epoch_utc": null
  },
  {
    "commit": "f1b3732fa64372327377834954561d2e63e7d2ce",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Mon Mar 27 19:12:02 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Mar 27 16:12:02 2023 -0700",
    "stats": {
      "files_changed": 9,
      "insertions": 400,
      "deletions": 70,
      "files": [
        "checkstyle/import-control.xml",
        "core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala",
        "core/src/main/scala/kafka/zk/ZkMigrationClient.scala",
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/zk/ZkMigrationClientTest.scala",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/MigrationClient.java",
        "metadata/src/main/resources/common/metadata/AccessControlRecord.json",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationDriverTest.java"
      ]
    },
    "message": "KAFKA-14796 Migrate ACLs from AclAuthorizor to KRaft (#13368)\n\nThis patch refactors the loadCache method in AclAuthorizer to make it reusable by ZkMigrationClient.\nThe loaded ACLs are converted to AccessControlEntryRecord. I noticed we still have the defunct\nAccessControlRecord, so I've deleted it.\n\nAlso included here are the methods to write ACL changes back to ZK while in dual-write mode.\n\nReviewers: Rajini Sivaram <rajinisivaram@googlemail.com>, Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1679955122,
    "epoch_utc": null
  },
  {
    "commit": "31440b00f3ed8de65f368d41d6cf2efb07ca4a5c",
    "author": "Kirk True",
    "author_email": "kirk@kirktrue.pro",
    "date": "Mon Mar 27 09:53:12 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Mar 27 09:53:12 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 102,
      "deletions": 5,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/FetchConfig.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetchConfigTest.java"
      ]
    },
    "message": "KAFKA-14848: KafkaConsumer incorrectly passes locally-scoped serializers to FetchConfig (#13452)\n\nFix for a NPE bug that was caused by referring to a local variable and not the instance variable of the deserializers.\n\nCo-authored-by: Robert Yokota <1761488+rayokota@users.noreply.github.com>\n\nReviewers: Robert Yokota <1761488+rayokota@users.noreply.github.com>, Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1679921592,
    "epoch_utc": null
  },
  {
    "commit": "7438f100cf409a1ca178b15b6b7bcfd99e541098",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Mon Mar 27 18:48:31 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Mar 27 18:48:31 2023 +0800",
    "stats": {
      "files_changed": 3,
      "insertions": 34,
      "deletions": 3,
      "files": [
        "core/src/main/scala/kafka/network/SocketServer.scala",
        "core/src/main/scala/kafka/server/DynamicBrokerConfig.scala",
        "core/src/test/scala/integration/kafka/server/DynamicBrokerReconfigurationTest.scala"
      ]
    },
    "message": "KAFKA-14774 the removed listeners should not be reconfigurable (#13326)\n\nReviewers: Mickael Maison <mimaison@users.noreply.github.com>",
    "epoch": 1679953711,
    "epoch_utc": null
  },
  {
    "commit": "139f7709bd3f5926901a21e55043388728ccca78",
    "author": "egyedt",
    "author_email": "81372484+egyedt@users.noreply.github.com",
    "date": "Mon Mar 27 10:48:47 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Mar 27 10:48:47 2023 +0200",
    "stats": {
      "files_changed": 1,
      "insertions": 4,
      "deletions": 6,
      "files": [
        "clients/src/test/java/org/apache/kafka/common/utils/UtilsTest.java"
      ]
    },
    "message": "Fix log DateTime format unit test (#13441)\n\nReviewers: Viktor Somogyi-Vass <viktorsomogyi@gmail.com>",
    "epoch": 1679924927,
    "epoch_utc": null
  },
  {
    "commit": "e4af074b4c6a5ff45fecb6957e484bcbf1c2c767",
    "author": "Iblis Lin",
    "author_email": "iblislin@gmail.com",
    "date": "Sun Mar 26 00:00:53 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Mar 26 00:00:53 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "docs/streams/developer-guide/config-streams.html"
      ]
    },
    "message": "MINOR: doc: fix typo in config-streams (#13450)\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>",
    "epoch": 1679799653,
    "epoch_utc": null
  },
  {
    "commit": "18fba41946690aace6863f5114b7453383b0228a",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Sat Mar 25 21:27:02 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Mar 25 21:27:02 2023 +0800",
    "stats": {
      "files_changed": 5,
      "insertions": 258,
      "deletions": 78,
      "files": [
        "clients/src/main/java/org/apache/kafka/tools/RecordReader.java",
        "core/src/main/scala/kafka/common/MessageReader.scala",
        "core/src/main/scala/kafka/tools/ConsoleProducer.scala",
        "core/src/test/scala/unit/kafka/tools/ConsoleProducerTest.scala",
        "core/src/test/scala/unit/kafka/tools/LineMessageReaderTest.scala"
      ]
    },
    "message": "KAFKA-10244 An new java interface to replace 'kafka.common.MessageReader' (#13393)\n\nReviewers: Mickael Maison <mimaison@users.noreply.github.com>",
    "epoch": 1679790422,
    "epoch_utc": null
  },
  {
    "commit": "a3252629a37344be1f1f86a77cf685f9c147be4d",
    "author": "Kirk True",
    "author_email": "kirk@kirktrue.pro",
    "date": "Fri Mar 24 14:33:13 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Mar 24 14:33:13 2023 -0700",
    "stats": {
      "files_changed": 13,
      "insertions": 1042,
      "deletions": 821,
      "files": [
        "checkstyle/suppressions.xml",
        "clients/src/main/java/org/apache/kafka/clients/CommonClientConfigs.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractFetch.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CompletedFetch.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/FetchConfig.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/FetchMetricsManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CompletedFetchTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetcherTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/OffsetFetcherTest.java"
      ]
    },
    "message": "KAFKA-14365: Extract common logic from Fetcher (#13425)\n\n* KAFKA-14365: Extract common logic from Fetcher\n\nExtract logic from Fetcher into AbstractFetcher.\n\nAlso introduce FetchConfig as a more concise way to delineate state from\nincoming configuration.\n\nFormalized the defaults in CommonClientConfigs and ConsumerConfig to be\naccessible elsewhere.\n\n* Removed overridden methods in favor of synchronizing where needed\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1679679193,
    "epoch_utc": null
  },
  {
    "commit": "ed400e4c0d779dcb0b6fe438594328e81b1a49db",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Fri Mar 24 11:26:53 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Mar 24 11:26:53 2023 -0700",
    "stats": {
      "files_changed": 20,
      "insertions": 1492,
      "deletions": 1474,
      "files": [
        "checkstyle/import-control.xml",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/SharedServer.scala",
        "metadata/src/main/java/org/apache/kafka/controller/ControllerMetrics.java",
        "metadata/src/main/java/org/apache/kafka/controller/ControllerMetricsManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumControllerMetrics.java",
        "metadata/src/main/java/org/apache/kafka/controller/metrics/ControllerMetadataMetrics.java",
        "metadata/src/main/java/org/apache/kafka/controller/metrics/ControllerMetadataMetricsPublisher.java",
        "metadata/src/main/java/org/apache/kafka/controller/metrics/ControllerMetricsChanges.java",
        "metadata/src/main/java/org/apache/kafka/controller/metrics/QuorumControllerMetrics.java",
        "metadata/src/test/java/org/apache/kafka/controller/ControllerMetricsManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/MockControllerMetrics.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerMetricsTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/metrics/ControllerMetadataMetricsPublisherTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/metrics/ControllerMetadataMetricsTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/metrics/ControllerMetricsChangesTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/metrics/ControllerMetricsTestUtils.java",
        "metadata/src/test/java/org/apache/kafka/controller/metrics/QuorumControllerMetricsTest.java"
      ]
    },
    "message": "KAFKA-14835: Create ControllerMetadataMetricsPublisher (#13438)\n\nSeparate out KRaft controller metrics into two groups: metrics directly managed by the\nQuorumController, and metrics handled by an external publisher. This separation of concerns makes\nthe code easier to reason about, by clarifying what metrics can be changed where.\n\nThe external publisher, ControllerServerMetricsPublisher, handles all metrics which are related to\nthe content of metadata. For example, metrics about number of topics or number of partitions, etc.\netc. It fits into the MetadataLoader metadata publishing framework as another publisher.  Since\nControllerServerMetricsPublisher operates off of a MetadataImage, we don't have to create\n(essentially) another copy of the metadata in memory, as ControllerMetricsManager. This reduces\nmemory consumption. Another benefit of operating off of the MetadataImage is that we don't have to\nhave special handling for each record type, like we do now in ControllerMetricsManager.\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1679668013,
    "epoch_utc": null
  },
  {
    "commit": "797c28cb7c1f3f23da807a4370c672473bff6050",
    "author": "Shay Elkin",
    "author_email": "2046772+shayelkin@users.noreply.github.com",
    "date": "Fri Mar 24 10:40:27 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Mar 24 10:40:27 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "tests/kafkatest/tests/core/security_test.py"
      ]
    },
    "message": "MINOR: Rename remote_controller_quorum to isolated_controller_quorum (#13448)\n\nSimilar to https://github.com/apache/kafka/pull/13439:\n\nddd652c standardized on \"isolated\" as the name for all the isolated\nmodes, and renamed remote_controller_quorum to\nkafkatest.services.kafka.quorum.remote_kraft to\nisolated_controller_quorum. This broke\nSecurityTest.test_quorum_ssl_endpoint_validation_failure, which should\nbe fixed by this simple rename.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1679665227,
    "epoch_utc": null
  },
  {
    "commit": "71ca8ef4ecd8522ac6dbf86daf4a3a9540482950",
    "author": "Spacrocket",
    "author_email": "95596717+SpacRocket@users.noreply.github.com",
    "date": "Fri Mar 24 16:41:51 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Mar 24 10:41:51 2023 -0500",
    "stats": {
      "files_changed": 9,
      "insertions": 129,
      "deletions": 45,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/serialization/BooleanDeserializer.java",
        "clients/src/main/java/org/apache/kafka/common/serialization/BooleanSerializer.java",
        "clients/src/main/java/org/apache/kafka/common/serialization/Serdes.java",
        "clients/src/test/java/org/apache/kafka/common/serialization/SerializationTest.java",
        "docs/streams/developer-guide/datatypes.html",
        "gradle/spotbugs-exclude.xml",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/NullableValueAndTimestampDeserializer.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/NullableValueAndTimestampSerde.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/NullableValueAndTimestampSerializer.java"
      ]
    },
    "message": "KAFKA-14722: Make BooleanSerde public (#13382)\n\nKAFKA-14722: Make BooleanSerde public (#13328)\n\nAddition of boolean serde\nhttps://cwiki.apache.org/confluence/display/KAFKA/KIP-907%3A+Add+Boolean+Serde+to+public+interface\n\nDuring the task KAFKA-14491 Victoria added BooleanSerde class, It will be useful to have such class in public package.\n\nReviewers: Walker Carlson <wcarlson@confluent.io>, Lucas Brutschy <lbrutschy@confluent.io>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1679686911,
    "epoch_utc": null
  },
  {
    "commit": "2092153d7f7e96b65d887816faf4ed729aca10a1",
    "author": "Juan Jos\u00e9 Ramos",
    "author_email": "jujoramos@users.noreply.github.com",
    "date": "Fri Mar 24 15:27:06 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Mar 24 16:27:06 2023 +0100",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "gradle/dependencies.gradle"
      ]
    },
    "message": "KAFKA-14800: Bump snappy-java version to 1.1.9.1 (#13385)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1679682426,
    "epoch_utc": 1679671626
  },
  {
    "commit": "3c4fb01ba8385afe0d9d4bb69be5c54653ed5524",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Fri Mar 24 08:18:26 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Mar 24 16:18:26 2023 +0100",
    "stats": {
      "files_changed": 3,
      "insertions": 96,
      "deletions": 285,
      "files": [
        ".../src/test/java/org/apache/kafka/connect/mirror/integration/IdentityReplicationIntegrationTest.java",
        ".../src/test/java/org/apache/kafka/connect/mirror/integration/MirrorConnectorsIntegrationBaseTest.java",
        ".../apache/kafka/connect/mirror/integration/MirrorConnectorsWithCustomForwardingAdminIntegrationTest.java"
      ]
    },
    "message": "MINOR: Refactor Mirror integration tests to reduce duplication (#13428)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1679656706,
    "epoch_utc": null
  },
  {
    "commit": "f79c2a6e04129832eacec60bbc180173ecc37549",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Fri Mar 24 00:36:35 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 23 09:36:35 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 3,
      "deletions": 3,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/admin/AdminClientConfig.java",
        "streams/src/test/java/org/apache/kafka/streams/StreamsConfigTest.java"
      ]
    },
    "message": "MINOR:Incorrect/canonical use of constants in AdminClientConfig and StreamsConfigTest (#13427)\n\nCo-authored-by: Deqi Hu <deqi.hu@shopee.com>\n\nReviewers: Ziming Deng <dengziming1993@gmail.com>, Guozhang Wang <guozhang.wang.us@gmail.com>",
    "epoch": 1679628995,
    "epoch_utc": null
  },
  {
    "commit": "e07cc127e124b215e178821a13c7250b269876dc",
    "author": "Shay Elkin",
    "author_email": "2046772+shayelkin@users.noreply.github.com",
    "date": "Thu Mar 23 09:33:59 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 23 09:33:59 2023 -0700",
    "stats": {
      "files_changed": 14,
      "insertions": 27,
      "deletions": 27,
      "files": [
        "tests/kafkatest/sanity_checks/test_verifiable_producer.py",
        "tests/kafkatest/tests/connect/connect_test.py",
        "tests/kafkatest/tests/core/authorizer_test.py",
        "tests/kafkatest/tests/core/round_trip_fault_test.py",
        "tests/kafkatest/tests/core/security_test.py",
        "tests/kafkatest/tests/streams/streams_broker_bounce_test.py",
        "tests/kafkatest/tests/streams/streams_broker_down_resilience_test.py",
        "tests/kafkatest/tests/streams/streams_eos_test.py",
        "tests/kafkatest/tests/streams/streams_named_repartition_topic_test.py",
        "tests/kafkatest/tests/streams/streams_optimized_test.py",
        "tests/kafkatest/tests/streams/streams_relational_smoke_test.py",
        "tests/kafkatest/tests/streams/streams_shutdown_deadlock_test.py",
        "tests/kafkatest/tests/streams/streams_standby_replica_test.py",
        "tests/kafkatest/tests/streams/streams_static_membership_test.py"
      ]
    },
    "message": "MINOR: Fix remote_kraft -> isolated_kraft in kafkatest (#13439)\n\nddd652c6 standardized on \"isolated\" as the name for all the isolated\nmodes, and renamed kafkatest.services.kafka.quorum.remote_kraft to\nisolated_kraft. However, the tests using remote_kraft weren't\nupdated, and are broken as a result. This is a simple search and\nreplace to fix those.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1679574839,
    "epoch_utc": null
  },
  {
    "commit": "3c25b311cbe5c6c77b764bd9dbac28ee2c0b4f94",
    "author": "Chaitanya Mukka",
    "author_email": "chaitanya.mvs2007@gmail.com",
    "date": "Thu Mar 23 20:53:38 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 23 11:23:38 2023 -0400",
    "stats": {
      "files_changed": 3,
      "insertions": 55,
      "deletions": 3,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaConfigBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/MemoryConfigBackingStore.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaConfigBackingStoreTest.java"
      ]
    },
    "message": "KAFKA-14814: Skip Connect target state updates when the configs store has same state (#13426)\n\nReviewers: Yash\u00a0Mayya <yash.mayya@gmail.com>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1679615618,
    "epoch_utc": null
  },
  {
    "commit": "45ecae6a28fe820eb2698c8a375c83ee15036f5c",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Wed Mar 22 13:26:06 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 22 10:26:06 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 686,
      "deletions": 1,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StateManagerUtil.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/WrappedStateStore.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/VersionedKeyValueStoreIntegrationTest.java"
      ]
    },
    "message": "KAFKA-14491: [15/N] Add integration tests for versioned stores (#13340)\n\nAdds integration tests for the new versioned stores introduced in KIP-889.\n\nThis PR also contains a small bugfix for the restore record converter, required to get the tests above to pass: even though versioned stores are timestamped stores, we do not want to use the record converter for prepending timestamps when restoring a versioned store.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1679502366,
    "epoch_utc": null
  },
  {
    "commit": "6939445ae9d906144726ad08ea826f7ed6074adc",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Wed Mar 22 20:14:40 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 22 10:44:40 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 0,
      "files": [
        "docs/toc.html"
      ]
    },
    "message": "MINOR: Add Exactly-once support for connectors to the docs table of contents (#13436)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1679526880,
    "epoch_utc": null
  },
  {
    "commit": "1560c5bd7e556ca6c0f49934b5ad3542ed6208fb",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Tue Mar 21 20:12:05 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 21 17:12:05 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 86,
      "deletions": 8,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/state/VersionedKeyValueStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBVersionedStore.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBVersionedStoreTest.java"
      ]
    },
    "message": "KAFKA-14491: [18/N] Update versioned store to check latest value on timestamped get (#13409)\n\nPart of KIP-889.\n\nPrior to this PR, versioned stores always returned null for get(key, timestamp) calls where the timestamp has exceeded the store's history retention, even if the latest value for the key (i.e., the one returned from get(key)) satisfies the timestamp bound. This was an oversight from the earlier implementation -- get(key, timestamp) should still return a record in this situation since the record exists in the store. This PR updates both the javadocs and the implementation accordingly.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1679440325,
    "epoch_utc": null
  },
  {
    "commit": "bfd15299b1f31b1f5ba0f2c9145d4abc3042405c",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Tue Mar 21 20:08:10 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 21 17:08:10 2023 -0700",
    "stats": {
      "files_changed": 10,
      "insertions": 360,
      "deletions": 65,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/InternalTopicManager.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.java",
        ".../internals/{UnwindowedChangelogTopicConfig.java => UnwindowedUnversionedChangelogTopicConfig.java}",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/VersionedChangelogTopicConfig.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/WindowedChangelogTopicConfig.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/VersionedKeyValueStoreBuilder.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/ChangelogTopicsTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopicConfigTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopicManagerTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilderTest.java"
      ]
    },
    "message": "KAFKA-14491: [14/N] Set changelog topic configs for versioned stores (#13292)\n\nSets the correct topic configs for changelog topics for versioned stores introduced in KIP-889. Changelog topics for versioned stores differ from those for non-versioned stores only in that min.compaction.lag.ms needs to be set in order to prevent version history from being compacted prematurely.\n\nThe value for min.compaction.lag.ms is equal to the store's history retention plus some buffer to account for the broker's use of wall-clock time in performing compactions. This buffer is analogous to the windowstore.changelog.additional.retention.ms value for window store changelog topic retention time, and uses the same default of 24 hours. In the future, we can propose a KIP to expose a config such as versionedstore.changelog.additional.compaction.lag.ms to allow users to tune this value.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1679440090,
    "epoch_utc": null
  },
  {
    "commit": "d604534cc34f640e1baf36085bac9911b47a8914",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Tue Mar 21 17:02:38 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 21 17:02:38 2023 -0700",
    "stats": {
      "files_changed": 3,
      "insertions": 7,
      "deletions": 4,
      "files": [
        "raft/src/main/java/org/apache/kafka/raft/CandidateState.java",
        "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
        "raft/src/main/java/org/apache/kafka/raft/QuorumState.java"
      ]
    },
    "message": "MINOR; Increase log level of some rare events (#13430)\n\nTo help debug KRaft's behavior this change increases the log level of\nsome rare messages to INFO level.\n\nReviewers: Jason Gustafson <jason@confluent.io>",
    "epoch": 1679428958,
    "epoch_utc": null
  },
  {
    "commit": "1d8f79964e9578f3769fd13c2535988bfc803696",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Tue Mar 21 19:16:04 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 21 19:16:04 2023 +0100",
    "stats": {
      "files_changed": 3,
      "insertions": 193,
      "deletions": 50,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceMetrics.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorSourceMetricsTest.java"
      ]
    },
    "message": "KAFKA-14740: Add source tag to MirrorSourceMetrics - KIP-911 (#13420)\n\nNew add.source.alias.to.metrics setting to add the source cluster alias to the MirrorSourceConnector metrics\n\nReviewers: Chris Egerton <fearthecellos@gmail.com>",
    "epoch": 1679436964,
    "epoch_utc": null
  },
  {
    "commit": "1b278c4e555c14d93b13c92a8ab633094820dde1",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Tue Mar 21 17:57:28 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 21 17:57:28 2023 +0100",
    "stats": {
      "files_changed": 3,
      "insertions": 77,
      "deletions": 24,
      "files": [
        "connect/json/src/main/java/org/apache/kafka/connect/json/JsonConverter.java",
        "connect/json/src/main/java/org/apache/kafka/connect/json/JsonConverterConfig.java",
        "connect/json/src/test/java/org/apache/kafka/connect/json/JsonConverterTest.java"
      ]
    },
    "message": "KAFKA-8713: Allow using null for field in JsonConverter (KIP-581) (#13419)\n\nAdd a new configuration replace.null.with.default to allow using null instead of the default value.\n\nReviewers: Chris Egerton <fearthecellos@gmail.com>",
    "epoch": 1679432248,
    "epoch_utc": null
  },
  {
    "commit": "897ced12eebe7cea7a5ed9227f463107d858fbc2",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Tue Mar 21 06:31:08 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 21 09:31:08 2023 -0400",
    "stats": {
      "files_changed": 4,
      "insertions": 52,
      "deletions": 41,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceTask.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorSourceTaskTest.java",
        ".../mirror/src/test/java/org/apache/kafka/connect/mirror/integration/IdentityReplicationIntegrationTest.java",
        ".../mirror/src/test/java/org/apache/kafka/connect/mirror/integration/MirrorConnectorsIntegrationBaseTest.java"
      ]
    },
    "message": "KAFKA-14797: Emit offset sync when offset translation lag would exceed max.offset.lag (#13367)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1679391068,
    "epoch_utc": null
  },
  {
    "commit": "52a4917988a2466ed8f6adf0f17517df4164e93b",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Tue Mar 21 10:16:24 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 21 10:16:24 2023 +0100",
    "stats": {
      "files_changed": 5,
      "insertions": 17,
      "deletions": 24,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/config/AbstractConfig.java",
        "clients/src/main/java/org/apache/kafka/common/config/ConfigDef.java",
        "clients/src/main/java/org/apache/kafka/common/config/ConfigTransformerResult.java",
        "clients/src/main/java/org/apache/kafka/common/config/ConfigValue.java",
        "clients/src/main/java/org/apache/kafka/common/config/SaslConfigs.java"
      ]
    },
    "message": "MINOR: Cleanups in clients common.config (#13422)\n\n\nReviewers: Guozhang Wang <guozhang.wang.us@gmail.com>",
    "epoch": 1679404584,
    "epoch_utc": null
  },
  {
    "commit": "aef004edeec36ac958dbb5499522115b7e99803b",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Tue Mar 21 16:59:18 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 21 16:59:18 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 107,
      "deletions": 13,
      "files": [
        "tools/src/main/java/org/apache/kafka/tools/ProducerPerformance.java",
        "tools/src/test/java/org/apache/kafka/tools/ProducerPerformanceTest.java"
      ]
    },
    "message": "KAFKA-14812:ProducerPerformance still counting successful sending in console when sending failed (#13404)\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>",
    "epoch": 1679428758,
    "epoch_utc": null
  },
  {
    "commit": "ccda370e9537056d1dc46202ccc8db4105acad56",
    "author": "Zheng-Xian Li",
    "author_email": "garyparrottt@gmail.com",
    "date": "Tue Mar 21 16:45:40 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 21 16:45:40 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 12,
      "deletions": 2,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedConfig.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedConfigTest.java"
      ]
    },
    "message": "KAFKA-6891: send.buffer.bytes should be allowed to set -1 in KafkaConnect (#13398)\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>",
    "epoch": 1679427940,
    "epoch_utc": null
  },
  {
    "commit": "dc1cd001be551615528a506c747bbdc90687c8fe",
    "author": "Ivan Yurchenko",
    "author_email": "ivanyu@aiven.io",
    "date": "Tue Mar 21 08:35:49 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 21 14:35:49 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 82,
      "deletions": 0,
      "files": [
        ".../java/org/apache/kafka/server/log/remote/metadata/storage/serialization/RemoteLogMetadataSerde.java",
        ".../src/test/java/org/apache/kafka/server/log/remote/metadata/storage/RemoteLogMetadataFormatterTest.java"
      ]
    },
    "message": "KAFKA-14795: Provide message formatter for RemoteLogMetadata (#13362)\n\n* KAFKA-14795: Provide message formatter for RemoteLogMetadata\n\nThis commit introduces a formatter for `RemoteLogMetadata`.\n\nExample usage:\n```bash\nbin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic __remote_log_metadata --from-beginning --formatter 'org.apache.kafka.server.log.remote.metadata.storage.serialization.RemoteLogMetadataSerde$RemoteLogMetadataFormatter'\n\nRemoteLogSegmentMetadata{remoteLogSegmentId=RemoteLogSegmentId{topicIdPartition=M1z1YtfhQ5i7oqLNve_0UQ:topic1-0, id=iWtc1Z6xQu2_DJXTklzKxQ}, startOffset=97990, endOffset=98467, brokerId=0, maxTimestampMs=1678292889855, eventTimestampMs=1678292938280, segmentLeaderEpochs={0=97990}, segmentSizeInBytes=511460, state=COPY_SEGMENT_STARTED}\n```\n\nReviewers: Luke Chen <showuon@gmail.com>, Divij Vaidya <diviv@amazon.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1679398549,
    "epoch_utc": null
  },
  {
    "commit": "361095a1a755d789b9b690a3f55ac5c29f7f1e64",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Mon Mar 20 23:03:50 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Mar 20 20:03:50 2023 -0700",
    "stats": {
      "files_changed": 6,
      "insertions": 32,
      "deletions": 9,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/state/internals/AbstractSegments.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/KeyValueSegments.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/LogicalKeyValueSegments.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBVersionedStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/TimestampedSegments.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/LogicalKeyValueSegmentsTest.java"
      ]
    },
    "message": "KAFKA-14491: [17/N] Refactor segments cleanup logic\n\nPart of KIP-899.\n\nAbstractSegments automatically calls the helper method to clean up expired segments as part of getOrCreateSegmentIfLive(). This works fine for windowed store implementations which call getOrCreateSegmentIfLive() exactly once per put() call, but is inefficient and difficult to reason about for the new RocksDBVersionedStore implementation (cf. #13188) which makes potentially multiple calls to getOrCreateSegmentIfLive() for different segments for a single put() call. This PR addresses this by refactoring the call to clean up expired segments out of getOrCreateSegmentIfLive(), opting to have the different segments implementations specify when cleanup should occur instead. After this PR, RocksDBVersionedStore only cleans up expired segments once per call to put().\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1679364230,
    "epoch_utc": null
  },
  {
    "commit": "6fae237638e908cbe9c81de44ed73280107a4faa",
    "author": "Lucas Brutschy",
    "author_email": "lucasbru@users.noreply.github.com",
    "date": "Mon Mar 20 21:49:35 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Mar 20 13:49:35 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 7,
      "deletions": 0,
      "files": [
        "build.gradle",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorderTest.java"
      ]
    },
    "message": "MINOR: Use JUnit-5 extension to enforce strict stubbing (#13347)\n\nA privious change disabled strict stubbing for the `RocksDBMetricsRecorderTest`. To re-enable the behavior in JUnit-5, we need to pull in a new dependency in the `streams` gradle project.\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1679359775,
    "epoch_utc": null
  },
  {
    "commit": "df5850274d3f9186cdb4a2288193c8977a4552bf",
    "author": "andymg3",
    "author_email": "97484553+andymg3@users.noreply.github.com",
    "date": "Mon Mar 20 16:44:54 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Mar 20 13:44:54 2023 -0700",
    "stats": {
      "files_changed": 5,
      "insertions": 60,
      "deletions": 46,
      "files": [
        "metadata/src/main/java/org/apache/kafka/controller/PartitionReassignmentReplicas.java",
        "metadata/src/main/java/org/apache/kafka/controller/ReplicationControlManager.java",
        "metadata/src/test/java/org/apache/kafka/controller/PartitionChangeBuilderTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/PartitionReassignmentReplicasTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/ReplicationControlManagerTest.java"
      ]
    },
    "message": "MINOR: Expand use of PartitionAssignment (#13402)\n\nUpdates ReplicationControlManager and PartitionReassignmentReplicas to use PartitionAssignment.\n\nReviewers: Jos\u00e9 Armando Garc\u00eda Sancio <jsancio@apache.org>",
    "epoch": 1679341494,
    "epoch_utc": null
  },
  {
    "commit": "e427897c67c83ada340f731dc952bfd49d6cc32e",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Mon Mar 20 11:32:01 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Mar 20 08:32:01 2023 -0700",
    "stats": {
      "files_changed": 2,
      "insertions": 39,
      "deletions": 13,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/RestClient.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/RestClientTest.java"
      ]
    },
    "message": "KAFKA-14816: Only load SSL properties when issuing cross-worker requests to HTTPS URLs (#13415)\n\nThis fixes a regression introduced in #12828, which caused workers to start unconditionally loading (and therefore validating) SSL-related properties when issuing REST requests to other workers. That was fine for the most part, but caused unnecessary failures when workers were configured with invalid SSL-related properties and their REST API used HTTP instead of HTTPS.\n\nReviewers: Ian\u00a0McDonald <imcdonald@confluent.io>, Greg\u00a0Harris <greg.harris@aiven.io>, Yash\u00a0Mayya <yash.mayya@gmail.com>, Justine\u00a0Olshan <jolshan@confluent.io>",
    "epoch": 1679322721,
    "epoch_utc": null
  },
  {
    "commit": "a57e31e2071938fb86d190c12dee0277d3d1c6ad",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Mon Mar 20 19:40:28 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Mar 20 19:40:28 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 5,
      "deletions": 17,
      "files": [
        "core/src/main/scala/kafka/admin/TopicCommand.scala"
      ]
    },
    "message": "MINOR:Fix hint about alter in TopicCommand (#13403)\n\nSince TopicCommand does not support updating the configuration of an existing topic, \"and/or configuration for the topic.\" should be removed from the description of --alter, otherwise it will cause misunderstandings for those users of the old kafka version.\n\nReviewers: dengziming <dengziming1993@gmail.com>",
    "epoch": 1679352028,
    "epoch_utc": null
  },
  {
    "commit": "a375777d8063cda087c77e520fcfd4e035e14f6f",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Sat Mar 18 18:53:22 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Mar 18 18:53:22 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "bin/kafka-delegation-tokens.sh",
        "bin/windows/kafka-delegation-tokens.bat"
      ]
    },
    "message": "MINOR: correct the class name for delegation token script (#13411)\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1679176402,
    "epoch_utc": null
  },
  {
    "commit": "55c238b177ed2a4bec7b6595303212e455c3137a",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Fri Mar 17 22:09:26 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Mar 17 10:09:26 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 0,
      "files": [
        "core/src/test/scala/unit/kafka/KafkaConfigTest.scala"
      ]
    },
    "message": "MINOR: fix KafkaTest#testIsKRaftCombinedMode (#13413)\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1679101766,
    "epoch_utc": null
  },
  {
    "commit": "ddd652c672b503de52b6cb2be20c29c7a5e6816f",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Thu Mar 16 15:33:03 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 16 15:33:03 2023 -0700",
    "stats": {
      "files_changed": 29,
      "insertions": 224,
      "deletions": 205,
      "files": [
        "core/src/main/scala/kafka/Kafka.scala",
        "core/src/main/scala/kafka/raft/RaftManager.scala",
        "core/src/main/scala/kafka/server/AlterPartitionManager.scala",
        "core/src/main/scala/kafka/server/BrokerLifecycleManager.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/BrokerToControllerChannelManager.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/main/scala/kafka/server/KafkaRaftServer.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/server/SharedServer.scala",
        "core/src/test/java/kafka/test/junit/RaftClusterInvocationContext.java",
        "core/src/test/java/kafka/testkit/KafkaClusterTestKit.java",
        "core/src/test/java/kafka/testkit/TestKitNodes.java",
        "core/src/test/scala/integration/kafka/server/KRaftClusterTest.scala",
        "core/src/test/scala/integration/kafka/server/QuorumTestHarness.scala",
        "core/src/test/scala/unit/kafka/KafkaConfigTest.scala",
        "core/src/test/scala/unit/kafka/server/BrokerLifecycleManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/BrokerRegistrationRequestTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/image/loader/MetadataLoader.java",
        "metadata/src/main/java/org/apache/kafka/image/publisher/SnapshotGenerator.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "server-common/src/main/java/org/apache/kafka/queue/KafkaEventQueue.java",
        "tests/kafkatest/sanity_checks/test_bounce.py",
        "tests/kafkatest/services/kafka/kafka.py",
        "tests/kafkatest/services/kafka/quorum.py",
        "tests/kafkatest/tests/core/kraft_upgrade_test.py",
        "tests/kafkatest/tests/core/snapshot_test.py"
      ]
    },
    "message": "MINOR: Standardize KRaft logging, thread names, and terminology (#13390)\n\nStandardize KRaft thread names.\n\n- Always use kebab case. That is, \"my-thread-name\".\n\n- Thread prefixes are just strings, not Option[String] or Optional<String>.\nIf you don't want a prefix, use the empty string.\n\n- Thread prefixes end in a dash (except the empty prefix). Then you can\ncalculate thread names as $prefix + \"my-thread-name\"\n\n- Broker-only components get \"broker-$id-\" as a thread name prefix. For example, \"broker-1-\"\n\n- Controller-only components get \"controller-$id-\" as a thread name prefix. For example, \"controller-1-\"\n\n- Shared components get \"kafka-$id-\" as a thread name prefix. For example, \"kafka-0-\"\n\n- Always pass a prefix to KafkaEventQueue, so that threads have names like\n\"broker-0-metadata-loader-event-handler\" rather than \"event-handler\". Prior to this PR, we had\nseveral threads just named \"EventHandler\" which was not helpful for debugging.\n\n- QuorumController thread name is \"quorum-controller-123-event-handler\"\n\n- Don't set a thread prefix for replication threads started by ReplicaManager. They run only on the\nbroker, and already include the broker ID.\n\nStandardize KRaft slf4j log prefixes.\n\n- Names should be of the form \"[ComponentName id=$id] \". So for a ControllerServer with ID 123, we\nwill have \"[ControllerServer id=123] \"\n\n- For the QuorumController class, use the prefix \"[QuorumController id=$id] \" rather than\n\"[Controller <nodeId] \", to make it clearer that this is a KRaft controller.\n\n- In BrokerLifecycleManager, add isZkBroker=true to the log prefix for the migration case.\n\nStandardize KRaft terminology.\n\n- All synonyms of combined mode (colocated, coresident, etc.) should be replaced by \"combined\"\n\n- All synonyms of isolated mode (remote, non-colocated, distributed, etc.) should be replaced by\n\"isolated\".",
    "epoch": 1678991583,
    "epoch_utc": null
  },
  {
    "commit": "5dcdf71dec4124b67f13fcd1561faef3dac38d55",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Thu Mar 16 17:21:18 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 16 14:21:18 2023 -0700",
    "stats": {
      "files_changed": 7,
      "insertions": 288,
      "deletions": 115,
      "files": [
        "core/src/main/scala/kafka/zk/ZkMigrationClient.scala",
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/MigrationClient.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/MigrationClientAuthException.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/MigrationClientException.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationDriverTest.java"
      ]
    },
    "message": "MINOR: Improved error handling in ZK migration (#13372)\n\nThis patch fixes many small issues to improve error handling and logging during the ZK migration. A test was added\nto simulate a ZK session expiration to ensure the correctness of the migration driver.\n\nWith this change, ZK errors thrown during the migration will not hit the fault handler registered with with\nKRaftMigrationDriver, but they will be logged.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1678998078,
    "epoch_utc": null
  },
  {
    "commit": "d16b9682e832185ce9221bc5723ab90c5a456f8e",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Thu Mar 16 09:37:07 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 16 09:37:07 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 0,
      "deletions": 37,
      "files": [
        "core/src/main/scala/kafka/server/metadata/MetadataSnapshotter.scala"
      ]
    },
    "message": "MINOR: Remove unused MetadataSnapshotter.scala file (#13394)\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>",
    "epoch": 1678970227,
    "epoch_utc": null
  },
  {
    "commit": "279c237632878347f0a7bbb5f09a5f9924829419",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Thu Mar 16 21:26:01 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 16 21:26:01 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 6,
      "deletions": 67,
      "files": [
        "tools/src/main/java/org/apache/kafka/tools/ProducerPerformance.java",
        "tools/src/test/java/org/apache/kafka/tools/ProducerPerformanceTest.java"
      ]
    },
    "message": "Revert \"MINOR: Fixed ProducerPerformance still counting successful sending when sending failed (#13348)\" (#13401)\n\nThis reverts commit 8e4c0d0b04580cde1e15e7b4793bae747d38999c.\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1679012761,
    "epoch_utc": null
  },
  {
    "commit": "34ec6bdef8d619e56b4e024c0385c4b0b8a37746",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Thu Mar 16 14:22:36 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 16 14:22:36 2023 +0100",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 0,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointTask.java"
      ]
    },
    "message": "MINOR: Log consumer groups mirrored by checkpoint tasks (#13389)\n\n\nReviewers: Chris Egerton <fearthecellos@gmail.com>",
    "epoch": 1678987356,
    "epoch_utc": null
  },
  {
    "commit": "79b5f7f1ce2791fcebf70a447e5530c60b768702",
    "author": "Calvin Liu",
    "author_email": "83986057+CalvinConfluent@users.noreply.github.com",
    "date": "Thu Mar 16 06:04:34 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 16 14:04:34 2023 +0100",
    "stats": {
      "files_changed": 43,
      "insertions": 294,
      "deletions": 82,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/FetchRequest.java",
        "clients/src/main/resources/common/message/FetchRequest.json",
        "clients/src/main/resources/common/message/FetchResponse.json",
        "clients/src/test/java/org/apache/kafka/common/requests/FetchRequestTest.java",
        "core/src/main/java/kafka/server/builders/ReplicaManagerBuilder.java",
        "core/src/main/scala/kafka/raft/KafkaNetworkChannel.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/server/LocalLeaderEndPoint.scala",
        "core/src/main/scala/kafka/server/RemoteLeaderEndPoint.scala",
        "core/src/main/scala/kafka/server/ReplicaFetcherManager.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/main/scala/kafka/tools/ReplicaVerificationTool.scala",
        "core/src/test/java/kafka/test/ClusterTestExtensionsTest.java",
        "core/src/test/java/kafka/test/annotation/ClusterTest.java",
        "core/src/test/scala/integration/kafka/api/AuthorizerIntegrationTest.scala",
        "core/src/test/scala/integration/kafka/server/DelayedFetchTest.scala",
        "core/src/test/scala/integration/kafka/server/MetadataVersionIntegrationTest.scala",
        "core/src/test/scala/kafka/server/RemoteLeaderEndPointTest.scala",
        "core/src/test/scala/unit/kafka/admin/FeatureCommandTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionLockTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/raft/KafkaNetworkChannelTest.scala",
        "core/src/test/scala/unit/kafka/server/AbstractFetcherThreadTest.scala",
        "core/src/test/scala/unit/kafka/server/FetchRequestDownConversionConfigTest.scala",
        "core/src/test/scala/unit/kafka/server/FetchRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/FetchSessionTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaAlterLogDirsThreadTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaFetcherThreadTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerQuotasTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/common/FetchRequestBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/fetcher/ReplicaFetcherThreadBenchmark.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
        "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientTest.java",
        "raft/src/test/java/org/apache/kafka/raft/RaftClientTestContext.java",
        "server-common/src/main/java/org/apache/kafka/server/common/MetadataVersion.java",
        "server-common/src/test/java/org/apache/kafka/server/common/MetadataVersionTest.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/FetchParams.java"
      ]
    },
    "message": "KAFKA-14617: Add ReplicaState to FetchRequest (KIP-903) (#13323)\n\nThis patch is the first part of KIP-903. It updates the FetchRequest to include the new tagged ReplicaState field which replaces the now deprecated ReplicaId field. The FetchRequest version is bumped to version 15 and the MetadataVersion to 3.5-IV1.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1678957474,
    "epoch_utc": null
  },
  {
    "commit": "7bf1906132b84b3350bba0569da2d6fe94c75dbd",
    "author": "Hector Geraldino",
    "author_email": "hgeraldino@gmail.com",
    "date": "Thu Mar 16 08:39:31 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 16 08:39:31 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 7,
      "deletions": 7,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSourceTask.java"
      ]
    },
    "message": "KAFKA-14809 Fix logging conditional on WorkerSourceTask (#13386)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1678966771,
    "epoch_utc": null
  },
  {
    "commit": "3137b75d40c1857a7bc5191093142ab0fa1e6582",
    "author": "Akhilesh C",
    "author_email": "akhileshchg@users.noreply.github.com",
    "date": "Wed Mar 15 15:24:22 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 15 15:24:22 2023 -0700",
    "stats": {
      "files_changed": 4,
      "insertions": 88,
      "deletions": 14,
      "files": [
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/zk/ZkMigrationClient.scala",
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/zk/ZkMigrationClientTest.scala"
      ]
    },
    "message": "KAFKA-14801: Encoded configs are not decoded before ZK migration (#13384)\n\nEncoded configurations need to be decoded during ZK migration.\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1678904662,
    "epoch_utc": null
  },
  {
    "commit": "44e613c4cd1a2b7303da7dd30d47bbe87090131f",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Wed Mar 15 12:06:41 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 15 12:06:41 2023 -0700",
    "stats": {
      "files_changed": 7,
      "insertions": 60,
      "deletions": 28,
      "files": [
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/raft/KafkaMetadataLog.scala",
        "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
        "raft/src/main/java/org/apache/kafka/raft/ReplicatedLog.java",
        "raft/src/test/java/org/apache/kafka/raft/KafkaRaftClientTest.java",
        "raft/src/test/java/org/apache/kafka/raft/MockLog.java",
        "raft/src/test/java/org/apache/kafka/raft/RaftClientTestContext.java"
      ]
    },
    "message": "KAFKA-13884; Only voters flush on Fetch response (#13396)\n\nThe leader only requires that voters have flushed their log up to the fetch offset before sending a fetch request.\n\nThis change only flushes the log when handling the fetch response, if the follower is a voter. This should improve the disk performance on observers (brokers).\n\nReviewers: Jason Gustafson <jason@confluent.io>",
    "epoch": 1678892801,
    "epoch_utc": null
  },
  {
    "commit": "8e4c0d0b04580cde1e15e7b4793bae747d38999c",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Wed Mar 15 21:30:51 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 15 21:30:51 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 67,
      "deletions": 6,
      "files": [
        "tools/src/main/java/org/apache/kafka/tools/ProducerPerformance.java",
        "tools/src/test/java/org/apache/kafka/tools/ProducerPerformanceTest.java"
      ]
    },
    "message": "MINOR: Fixed ProducerPerformance still counting successful sending when sending failed (#13348)\n\nReviewers: Luke Chen <showuon@gmail.com>, Chia-Ping Tsai <chia7712@gmail.com>",
    "epoch": 1678926651,
    "epoch_utc": null
  },
  {
    "commit": "d01662fb0f7bbb43e6a2d22f5ea88b5bf136057c",
    "author": "Alexandre Dupriez",
    "author_email": "alexandre.dupriez@gmail.com",
    "date": "Wed Mar 15 11:20:26 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 15 12:20:26 2023 +0100",
    "stats": {
      "files_changed": 9,
      "insertions": 654,
      "deletions": 480,
      "files": [
        "core/src/main/scala/kafka/coordinator/group/GroupCoordinator.scala",
        "core/src/main/scala/kafka/coordinator/group/GroupCoordinatorAdapter.scala",
        "core/src/main/scala/kafka/coordinator/group/GroupMetadata.scala",
        "core/src/main/scala/kafka/coordinator/group/GroupMetadataManager.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorAdapterTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupMetadataManagerTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupMetadataTest.scala"
      ]
    },
    "message": "KAFKA-14793: Propagate Topic Ids to the Group Coordinator during Offsets Commit (#13378)\n\nThis patch refactors the GroupCoordinator to use TopicIdPartition on the offsets commit paths. This change is required by https://github.com/apache/kafka/pull/13240 in order to correctly handle topic ids.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1678890026,
    "epoch_utc": 1678879226
  },
  {
    "commit": "404a833df7de9a7d5efe35beb5bafb7c6972601e",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Tue Mar 14 15:10:29 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 14 15:10:29 2023 -0400",
    "stats": {
      "files_changed": 4,
      "insertions": 160,
      "deletions": 9,
      "files": [
        "connect/api/src/main/java/org/apache/kafka/connect/source/TransactionContext.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractWorkerSourceTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ExactlyOnceWorkerSourceTask.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/ExactlyOnceWorkerSourceTaskTest.java"
      ]
    },
    "message": "KAFKA-14799: Ignore source task requests to abort empty transactions (#13379)\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>",
    "epoch": 1678817429,
    "epoch_utc": null
  },
  {
    "commit": "5d597b0fc81a1e77905d57666069b336eba8805c",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Tue Mar 14 10:24:37 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 14 10:24:37 2023 -0700",
    "stats": {
      "files_changed": 11,
      "insertions": 105,
      "deletions": 1234,
      "files": [
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/SharedServer.scala",
        "core/src/main/scala/kafka/server/metadata/BrokerMetadataListener.scala",
        "core/src/main/scala/kafka/server/metadata/BrokerMetadataPublisher.scala",
        "core/src/main/scala/kafka/server/metadata/BrokerMetadataSnapshotter.scala",
        "core/src/main/scala/kafka/server/metadata/MetadataPublisher.scala",
        "core/src/test/scala/unit/kafka/server/metadata/BrokerMetadataListenerTest.scala",
        "core/src/test/scala/unit/kafka/server/metadata/BrokerMetadataPublisherTest.scala",
        "core/src/test/scala/unit/kafka/server/metadata/BrokerMetadataSnapshotterTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala"
      ]
    },
    "message": "MINOR: Replace BrokerMetadataListener with MetadataLoader (#13344)\n\nReplace BrokerMetadataListener with MetadataLoader. BrokerMetadataListener was, in a sense, an\nearly prototype of MetadataLoader. It constructed a MetadataImage object from records supplied by\nthe Raft layer.\n\nMetadataLoader is a rewrite of this code with several improvements.\n\n- It is in Java, and not part of the core gradle module.\n\n- It is not broker-specific. This is especially useful in combined mode where it means we do not\nhave to have a separate, controller-specific code path for creating MetadataImage objects.\n\n- It supports multiple publishers rather than a single publisher. The publishers can be dynamically\nadded and removed.\n\nThis PR also removes BrokerMetadataSnapshotter in favor of the code path which the controller is\nalready using, org.apache.kafka.image.publisher.SnapshotGenerator. This means we only have to\nmaintain one snapshotter, rather than two.\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1678800277,
    "epoch_utc": null
  },
  {
    "commit": "4608070db1546e9a0e3f5c544370b17d4e5bc4f8",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Tue Mar 14 21:39:52 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 14 12:09:52 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Worker.java"
      ]
    },
    "message": "MINOR: Fix error check in Connect Worker zombie fencing (#13392)",
    "epoch": 1678840792,
    "epoch_utc": null
  },
  {
    "commit": "ccfc389a638a126c3769bdd72725bae532ca4d01",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Tue Mar 14 12:06:12 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 14 12:06:12 2023 +0100",
    "stats": {
      "files_changed": 2,
      "insertions": 3,
      "deletions": 3,
      "files": [
        "build.gradle",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "KAFKA-14804: Update swagger plugin/dependencies to 2.2.8 (#13388)\n\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1678806372,
    "epoch_utc": null
  },
  {
    "commit": "df86228aaffb315f22ca3f19511b344b0e0bb4b1",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Mon Mar 13 10:51:32 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Mar 13 10:51:32 2023 -0700",
    "stats": {
      "files_changed": 1,
      "insertions": 0,
      "deletions": 0,
      "files": [
        "bin/windows/{kafka-metatada-quorum.bat => kafka-metadata-quorum.bat}"
      ]
    },
    "message": "MINOR; Fix command name kafka-metadata-quorum (#13381)\n\nThe name of the command should be kafka-metadata-quorum not\nkafka-metatada-quorum.\n\nReviewers: Ron Dagostino <rdagostino@confluent.io>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1678715492,
    "epoch_utc": null
  },
  {
    "commit": "4f990dcd40f430dde57efa5782904c87e62f2499",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Mon Mar 13 13:44:40 2023 -0400",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Mar 13 13:44:40 2023 -0400",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "build.gradle"
      ]
    },
    "message": "Revert swagger plugin to 2.2.0 (#13387)\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1678725880,
    "epoch_utc": null
  },
  {
    "commit": "1401769d92f4fa071b3245604e243ed000143907",
    "author": "Rajini Sivaram",
    "author_email": "rajinisivaram@googlemail.com",
    "date": "Mon Mar 13 08:59:03 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Mar 13 08:59:03 2023 +0000",
    "stats": {
      "files_changed": 1,
      "insertions": 911,
      "deletions": 890,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java"
      ]
    },
    "message": "KAFKA-14452: Refactor AbstractStickyAssignor to prepare for rack-aware assignment (#13349)\n\nThis commit refactors AbstractStickyAssignor without changing any logic to make it easier to add rack-awareness. The class currently consists of a lot of collections that are passed around various methods, with some methods updating some collections. Addition of rack-awareness makes this class with very large methods even more complex and harder to read. The new code moves the two assignment methods into their own classes so that the state can be maintained as instance fields rather than local variables.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1678708743,
    "epoch_utc": 1678697943
  },
  {
    "commit": "20e05695f950ea7d07d4fd69be356d81c3d21519",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Sat Mar 11 04:26:25 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Mar 10 15:26:25 2023 -0500",
    "stats": {
      "files_changed": 1,
      "insertions": 0,
      "deletions": 2,
      "files": [
        "core/src/main/scala/kafka/server/KafkaServer.scala"
      ]
    },
    "message": "KAFKA-14447: remove stale TODO comment (#13258)\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1678519585,
    "epoch_utc": null
  },
  {
    "commit": "c74c0f2facde2b392ab745144d6ad520575ab9ef",
    "author": "Kirk True",
    "author_email": "kirk@kirktrue.pro",
    "date": "Fri Mar 10 10:17:14 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Mar 10 10:17:14 2023 -0800",
    "stats": {
      "files_changed": 12,
      "insertions": 1300,
      "deletions": 532,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CompletedFetch.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerMetrics.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/FetchMetricsAggregator.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/FetchMetricsManager.java",
        ".../apache/kafka/clients/consumer/internals/{FetcherMetricsRegistry.java => FetchMetricsRegistry.java}",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/SensorBuilder.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CompletedFetchTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetchMetricsManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetcherTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/OffsetFetcherTest.java"
      ]
    },
    "message": "KAFKA-14758: Extract inner classes from Fetcher for reuse in refactoring (#13301)\n\nThe Fetcher class is used internally by the KafkaConsumer to fetch records from the brokers. There is ongoing work to create a new consumer implementation with a significantly refactored threading model. The threading refactor work requires a similarly refactored Fetcher.\n\nThis task includes refactoring Fetcher by extracting out the inner classes into top-level (though still in internal) so that those classes can be referenced by forthcoming refactored fetch logic.\n\nReviewers: Philip Nee <philipnee@gmail.com>, Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1678454234,
    "epoch_utc": null
  },
  {
    "commit": "5f6a050bfee09b634497f9ba35e2964289be1e4d",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Thu Mar 9 15:15:39 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 9 15:15:39 2023 -0800",
    "stats": {
      "files_changed": 3,
      "insertions": 7,
      "deletions": 3,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/record/ControlRecordType.java",
        "clients/src/test/java/org/apache/kafka/common/record/ControlRecordTypeTest.java",
        "clients/src/test/java/org/apache/kafka/common/record/ControlRecordUtilsTest.java"
      ]
    },
    "message": "MINOR; Export control record type value (#13366)\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1678385739,
    "epoch_utc": null
  },
  {
    "commit": "aaa976a3409f61e1e65ed49742567c08a502d9e1",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Thu Mar 9 14:52:40 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 9 14:52:40 2023 -0800",
    "stats": {
      "files_changed": 20,
      "insertions": 329,
      "deletions": 196,
      "files": [
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/KafkaRaftServer.scala",
        "core/src/main/scala/kafka/server/metadata/BrokerMetadataPublisher.scala",
        "core/src/main/scala/kafka/server/metadata/DynamicClientQuotaPublisher.scala",
        "core/src/main/scala/kafka/server/metadata/DynamicConfigPublisher.scala",
        "core/src/main/scala/kafka/server/metadata/ScramPublisher.scala",
        "core/src/test/scala/unit/kafka/server/metadata/BrokerMetadataPublisherTest.scala",
        "metadata/src/main/java/org/apache/kafka/image/loader/LoaderManifest.java",
        "metadata/src/main/java/org/apache/kafka/image/loader/LoaderManifestType.java",
        "metadata/src/main/java/org/apache/kafka/image/loader/LogDeltaManifest.java",
        "metadata/src/main/java/org/apache/kafka/image/loader/MetadataLoader.java",
        "metadata/src/main/java/org/apache/kafka/image/loader/SnapshotManifest.java",
        "metadata/src/main/java/org/apache/kafka/image/publisher/MetadataPublisher.java",
        "metadata/src/main/java/org/apache/kafka/image/publisher/SnapshotGenerator.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/test/java/org/apache/kafka/image/loader/MetadataLoaderTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationDriverTest.java",
        "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
        "server-common/src/test/java/org/apache/kafka/server/util/FutureUtilsTest.java"
      ]
    },
    "message": "MINOR: Some metadata publishing fixes and refactors (#13337)\n\nThis PR refactors MetadataPublisher's interface a bit. There is now an onControllerChange\ncallback. This is something that some publishers might want. A good example is ZkMigrationClient.\nInstead of two different publish functions (one for snapshots, one for log deltas), we now have a single onMetadataUpdate function. Most publishers didn't want to do anything different in those two cases.\nThe ones that do want to do something different for snapshots can always check the manifest type.\nThe close function now has a default empty implementation, since most publishers didn't need to do\nanything there.\n\nMove the SCRAM logic out of BrokerMetadataPublisher and run it on the controller as well.\n\nOn the broker, simply use dynamicClientQuotaPublisher to handle dynamic client quotas changes.\nThat is what the controller already does, and the code is exactly the same in both cases.\n\nFix the logging in FutureUtils.waitWithLogging a bit. Previously, when invoked from BrokerServer\nor ControllerServer, it did not include the standard \"[Controller 123] \" style prefix indicating server\nname and ID. This was confusing, especially when debugging junit tests.\n\nReviewers: Ron Dagostino <rdagostino@confluent.io>, David Arthur <mumrah@gmail.com>",
    "epoch": 1678384360,
    "epoch_utc": null
  },
  {
    "commit": "139467590074599a814c55f4907a042b68ea50d7",
    "author": "andymg3",
    "author_email": "97484553+andymg3@users.noreply.github.com",
    "date": "Thu Mar 9 13:26:41 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 9 10:26:41 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 5,
      "deletions": 3,
      "files": [
        "metadata/src/main/java/org/apache/kafka/controller/PartitionReassignmentRevert.java"
      ]
    },
    "message": "MINOR: Add unclean field of PartitionReassignmentRevert to hashCode Equals and toString (#13370)\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1678379201,
    "epoch_utc": null
  },
  {
    "commit": "2c8d9577601a0967df6c411c0b9276fafa971911",
    "author": "Bill Bejeck",
    "author_email": "bbejeck@gmail.com",
    "date": "Thu Mar 9 12:05:40 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 9 12:05:40 2023 -0500",
    "stats": {
      "files_changed": 1,
      "insertions": 4,
      "deletions": 4,
      "files": [
        "docs/streams/index.html"
      ]
    },
    "message": "Updating video links to ASF YouTube (#13371)\n\nMirror PR for apache/kafka-site#495 in site docs update Kafka Stream videos to point to ASF YouTube\n\nReviewers: Mickael Maison <mimaison@apache.org>",
    "epoch": 1678374340,
    "epoch_utc": null
  },
  {
    "commit": "c5240c0390892fe9ecbe5285185c370e7be8b2aa",
    "author": "Kirk True",
    "author_email": "kirk@kirktrue.pro",
    "date": "Thu Mar 9 01:04:07 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 9 10:04:07 2023 +0100",
    "stats": {
      "files_changed": 4,
      "insertions": 164,
      "deletions": 33,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/ClientResponse.java",
        "clients/src/main/java/org/apache/kafka/clients/NetworkClient.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/Sender.java",
        "clients/src/test/java/org/apache/kafka/clients/NetworkClientTest.java"
      ]
    },
    "message": "KAFKA-14317: ProduceRequest timeouts are logged as network exceptions (#12813)\n\nMinor changes to `Sender` and `NetworkClient` so that we can log timeouts during `ProduceRequest` with a more precise error message, denoting a timeout vs. \"generic\" network error.\n\nReviewers: Philip Nee <pnee@confluent.io>, Guozhang Wang <guozhang@apache.org>, David Jacot <djacot@confluent.io>",
    "epoch": 1678334647,
    "epoch_utc": null
  },
  {
    "commit": "00c7a018b8b1f8676290cd3bc41cbf6a2527bb89",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Wed Mar 8 18:40:29 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 8 18:40:29 2023 -0800",
    "stats": {
      "files_changed": 2,
      "insertions": 45,
      "deletions": 9,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/protocol/MessageUtil.java",
        "clients/src/test/java/org/apache/kafka/common/protocol/MessageUtilTest.java"
      ]
    },
    "message": "KAFKA-14794; Decode base64 JSON string (#13363)\n\nA binary value (array of bytes) can be a BinaryNode or a TextNode. When it is a BinaryNode, the method binaryValue() always returns non-null. When it is a TextNode, the method binaryValue() will return non-null if the value is a base64 string. For all other JSON nodes binaryValue() returns null.\n\nReviewers: Colin Patrick McCabe <cmccabe@apache.org>",
    "epoch": 1678311629,
    "epoch_utc": null
  },
  {
    "commit": "c66c412862f9c83d2210a0c07258415de808566b",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Wed Mar 8 14:14:52 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 8 14:14:52 2023 -0800",
    "stats": {
      "files_changed": 2,
      "insertions": 115,
      "deletions": 6,
      "files": [
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/test/scala/integration/kafka/server/KRaftClusterTest.scala"
      ]
    },
    "message": "MINOR: fix authorizer reconfiguration in KRaft mode (#13360)\n\nFix a bug with authorizer reconfiguration in KRaft mode. The bug\nhappened because we were invoking DynamicBrokerConfig.addReconfigurables\nbefore initializing BrokerServer.authorizer. Add a test of reconfiguring\nthe Authorizer. Also, in testReconfigureControllerClientQuotas, test\nboth combined and isolated mode.\n\nReviewers: Ron Dagostino <rdagostino@confluent.io>, Chia-Ping Tsai <chia7712@gmail.com>",
    "epoch": 1678295692,
    "epoch_utc": null
  },
  {
    "commit": "27548707dd8f2324d27335edc922ae88d78d86ed",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Wed Mar 8 10:37:01 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 8 10:37:01 2023 -0500",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "docs/connect.html"
      ]
    },
    "message": "MINOR: Fix anchor link in Connect docs (#13358)\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Chia-Ping Tsai <chia7712@gmail.com>",
    "epoch": 1678282621,
    "epoch_utc": null
  },
  {
    "commit": "39d41e5aac4e8cf303040b0bb12c122832be5ea1",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Wed Mar 8 10:25:55 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 8 10:25:55 2023 -0500",
    "stats": {
      "files_changed": 3,
      "insertions": 94,
      "deletions": 5,
      "files": [
        "build.gradle",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceConnector.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorSourceConnectorTest.java"
      ]
    },
    "message": "KAFKA-14781: Downgrade MM2 log message severity when no ACL authorizer is configured on source broker (#13351)\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1678281955,
    "epoch_utc": null
  },
  {
    "commit": "e28e0bf0f2c21206abccfffb280605dd02404678",
    "author": "Ivan Yurchenko",
    "author_email": "ivanyu@aiven.io",
    "date": "Wed Mar 8 10:29:51 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 8 15:59:51 2023 +0530",
    "stats": {
      "files_changed": 44,
      "insertions": 555,
      "deletions": 436,
      "files": [
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/main/scala/kafka/controller/ControllerChannelManager.scala",
        "core/src/main/scala/kafka/controller/ControllerEventManager.scala",
        "core/src/main/scala/kafka/controller/KafkaController.scala",
        "core/src/main/scala/kafka/coordinator/group/GroupMetadataManager.scala",
        "core/src/main/scala/kafka/coordinator/transaction/TransactionMarkerChannelManager.scala",
        "core/src/main/scala/kafka/log/LocalLog.scala",
        "core/src/main/scala/kafka/log/LogCleaner.scala",
        "core/src/main/scala/kafka/log/LogCleanerManager.scala",
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/main/scala/kafka/log/LogSegment.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/log/remote/RemoteLogManager.scala",
        "core/src/main/scala/kafka/metrics/KafkaMetricsGroup.scala",
        "core/src/main/scala/kafka/network/RequestChannel.scala",
        "core/src/main/scala/kafka/network/SocketServer.scala",
        "core/src/main/scala/kafka/server/AbstractFetcherManager.scala",
        "core/src/main/scala/kafka/server/AbstractFetcherThread.scala",
        "core/src/main/scala/kafka/server/AlterPartitionManager.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/DelayedDeleteRecords.scala",
        "core/src/main/scala/kafka/server/DelayedFetch.scala",
        "core/src/main/scala/kafka/server/DelayedOperation.scala",
        "core/src/main/scala/kafka/server/DelayedProduce.scala",
        "core/src/main/scala/kafka/server/DelegationTokenManager.scala",
        "core/src/main/scala/kafka/server/FetchSession.scala",
        "core/src/main/scala/kafka/server/KafkaBroker.scala",
        "core/src/main/scala/kafka/server/KafkaRequestHandler.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/main/scala/kafka/server/ZkAdminManager.scala",
        "core/src/main/scala/kafka/server/metadata/BrokerMetadataListener.scala",
        "core/src/main/scala/kafka/server/metadata/BrokerServerMetrics.scala",
        "core/src/main/scala/kafka/tools/MirrorMaker.scala",
        "core/src/main/scala/kafka/utils/Throttler.scala",
        "core/src/main/scala/kafka/zk/KafkaZkClient.scala",
        "core/src/main/scala/kafka/zookeeper/ZooKeeperClient.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupMetadataManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogManagerTest.scala",
        "core/src/test/scala/unit/kafka/metrics/KafkaMetricsGroupTest.scala",
        "core/src/test/scala/unit/kafka/metrics/MetricsTest.scala",
        "core/src/test/scala/unit/kafka/network/ConnectionQuotasTest.scala",
        "server-common/src/main/java/org/apache/kafka/server/metrics/KafkaMetricsGroup.java"
      ]
    },
    "message": "KAFKA-14524: Rewrite KafkaMetricsGroup in Java (#13067)\n\n* KAFKA-14524: Rewrite KafkaMetricsGroup in Java\n\nInstead of being a base trait for classes, `KafkaMetricsGroup` is now an independent object. User classes could override methods in it to adjust its behavior like they used to with the trait model.\n\nSome classes were extending the `KafkaMetricsGroup` trait, but it wasn't actually used.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>, lbownik <lukasz.bownik@gmail.com>, Satish Duggana <satishd@pache.org>",
    "epoch": 1678282191,
    "epoch_utc": 1678271391
  },
  {
    "commit": "788cc11f4554f515e4002992936c36b68c989f2d",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Wed Mar 8 08:52:01 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 8 08:52:01 2023 +0100",
    "stats": {
      "files_changed": 6,
      "insertions": 95,
      "deletions": 21,
      "files": [
        "build.gradle",
        "checkstyle/import-control.xml",
        "core/src/main/scala/kafka/coordinator/group/GroupCoordinatorAdapter.scala",
        "core/src/main/scala/kafka/server/metadata/BrokerMetadataPublisher.scala",
        "core/src/test/scala/unit/kafka/server/metadata/BrokerMetadataPublisherTest.scala",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinator.java"
      ]
    },
    "message": "KAFKA-14462; [3/N] Add `onNewMetadataImage` to `GroupCoordinator` interface (#13357)\n\nThe new group coordinator needs to access cluster metadata (e.g. topics, partitions, etc.) and it needs a mechanism to be notified when the metadata changes (e.g. to trigger a rebalance). In KRaft clusters, the easiest is to subscribe to metadata changes via the MetadataPublisher.\n\nReviewers: Justine Olshan <jolshan@confluent.io>",
    "epoch": 1678276321,
    "epoch_utc": null
  },
  {
    "commit": "4527e54647a0b8457f7f2b5d804eb65dc4d9d817",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Tue Mar 7 16:25:49 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 7 16:25:49 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 44,
      "deletions": 21,
      "files": [
        "examples/src/main/java/kafka/examples/Producer.java"
      ]
    },
    "message": "KAFKA-14753: Improve kafka producer example (#13354)\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1678217149,
    "epoch_utc": null
  },
  {
    "commit": "b19ae7857b004509bffec736421d23af1691fe58",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Tue Mar 7 16:24:38 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 7 16:24:38 2023 -0800",
    "stats": {
      "files_changed": 2,
      "insertions": 26,
      "deletions": 5,
      "files": [
        "examples/src/main/java/kafka/examples/Consumer.java",
        "examples/src/main/java/kafka/examples/Producer.java"
      ]
    },
    "message": "KAFKA-14752: Improving the existing consumer examples (#13353)\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1678217078,
    "epoch_utc": null
  },
  {
    "commit": "6fbe4d85a22872b97ec45614cc219d3a1da42f20",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Tue Mar 7 16:15:59 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 7 16:15:59 2023 -0800",
    "stats": {
      "files_changed": 11,
      "insertions": 234,
      "deletions": 85,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultEventHandler.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/NetworkClientDelegate.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEventProcessor.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/EventHandler.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumerTest.java",
        "core/src/test/scala/integration/kafka/api/AbstractConsumerTest.scala",
        "core/src/test/scala/integration/kafka/api/BaseAsyncConsumerTest.scala",
        "core/src/test/scala/integration/kafka/api/ConsumerBounceTest.scala",
        "core/src/test/scala/integration/kafka/api/IntegrationTestHarness.scala",
        "core/src/test/scala/integration/kafka/api/PlaintextConsumerTest.scala"
      ]
    },
    "message": "KAFKA-14761 Adding integration test for the prototype consumer (#13303)\n\nThe goal of this PR is to add more tests to the PrototypeAsyncConsumer to test\n\n* Successful startup and shutdown.\n* Commit.\n\nI also added integration tests:\n\n* Test commitAsync()\n* Test commitSync()\nNote that I still need to implement committed() to test if commitSync() has been successfully committed.\nAdditional things:\n\nChange KafkaConsumer<K, V> to Consumer<K, V> to use different implementations\n\nReviewers: Rajini Sivaram <rajinisivaram@googlemail.com>, Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1678216559,
    "epoch_utc": null
  },
  {
    "commit": "77215eded7b23aa06f3a4919233df175d5aa3359",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Tue Mar 7 15:56:24 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 7 15:56:24 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 14,
      "deletions": 9,
      "files": [
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LazyIndex.java"
      ]
    },
    "message": "KAFKA-14792: Race condition in LazyIndex.get() (#13359)\n\n`LazyIndex.get()` has a race condition that can result in a ClassCastException being thrown in some cases.\n\nThis was introduced when `LazyIndex` was rewritten from Scala to Java.\n\nI didn't include a test since it's a bit overkill to add a concurrent test for this.\n\nReviewers: Jun Rao <junrao@gmail.com>",
    "epoch": 1678215384,
    "epoch_utc": null
  },
  {
    "commit": "e3817cac894140e0b26c09050b10ce653f7c3d97",
    "author": "Ron Dagostino",
    "author_email": "rndgstn@gmail.com",
    "date": "Tue Mar 7 14:25:34 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 7 11:25:34 2023 -0800",
    "stats": {
      "files_changed": 15,
      "insertions": 1040,
      "deletions": 155,
      "files": [
        "core/src/main/scala/kafka/server/ControllerApis.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/DynamicBrokerConfig.scala",
        "core/src/main/scala/kafka/server/metadata/DynamicClientQuotaPublisher.scala",
        "core/src/main/scala/kafka/server/metadata/DynamicConfigPublisher.scala",
        "core/src/test/java/kafka/test/MockController.java",
        "core/src/test/scala/integration/kafka/server/KRaftClusterTest.scala",
        "core/src/test/scala/unit/kafka/server/ControllerApisTest.scala",
        "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/ControllerRequestContext.java",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/controller/ReplicationControlManager.java",
        "metadata/src/test/java/org/apache/kafka/controller/ControllerRequestContextUtil.java",
        "metadata/src/test/java/org/apache/kafka/controller/ReplicationControlManagerTest.java",
        "tests/kafkatest/tests/core/controller_mutation_quota_test.py"
      ]
    },
    "message": "KAFKA-14351: Controller Mutation Quota for KRaft (#13116)\n\nImplement KIP-599 controller mutation quotas for the KRaft controller. These quotas apply to create\ntopics, create partitions, and delete topic operations. They are specified in terms of number of\npartitions.\n\nThe approach taken here is to reuse the ControllerMutationQuotaManager that is also used in ZK\nmode. The quotas are implemented as Sensor objects and Sensor.checkQuotas enforces the quota,\nwhereas Sensor.record notes that new partitions have been modified. While ControllerApis handles\nfetching the Sensor objects, we must make the final callback to check the quotas from within\nQuorumController. The reason is because only QuorumController knows the final number of partitions\nthat must be modified. (As one example, up-to-date information about the number of partitions that\nwill be deleted when a topic is deleted is really only available in QuorumController.)\n\nFor quota enforcement, the logic is already in place. The KRaft controller is expected to set the\nthrottle time in the response that is embedded in EnvelopeResponse, but it does not actually apply\nthe throttle because there is no client connection to throttle. Instead, the broker that forwarded\nthe request is expected to return the throttle value from the controller and to throttle the client\nconnection. It also applies its own request quota, so the enforced/returned quota is the maximum of\nthe two.\n\nThis PR also installs a DynamicConfigPublisher in ControllerServer. This allows dynamic\nconfigurations to be published on the controller. Previously, they could be set, but they were not\napplied. Note that we still don't have a good way to set node-level configurations for isolatied\ncontrollers. However, this will allow us to set cluster configs (aka default node configs) and have\nthem take effect on the controllers.\n\nIn a similar vein, this PR separates out the dynamic client quota publisher logic used on the\nbroker into DynamicClientQuotaPublisher. We can now install this on both BrokerServer and\nControllerServer. This makes dynamically configuring quotas (such as controller mutation quotas)\npossible.\n\nAlso add a ducktape test, controller_mutation_quota_test.py.\n\nReviewers: David Jacot <djacot@confluent.io>, Ismael Juma <ismael@juma.me.uk>, Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1678209934,
    "epoch_utc": null
  },
  {
    "commit": "29a1a16668d76a1cc04ec9e39ea13026f2dce1de",
    "author": "Justine Olshan",
    "author_email": "jolshan@confluent.io",
    "date": "Tue Mar 7 09:20:16 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 7 09:20:16 2023 -0800",
    "stats": {
      "files_changed": 20,
      "insertions": 955,
      "deletions": 272,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/producer/internals/TransactionManager.java",
        "clients/src/main/java/org/apache/kafka/common/requests/AddPartitionsToTxnRequest.java",
        "clients/src/main/java/org/apache/kafka/common/requests/AddPartitionsToTxnResponse.java",
        "clients/src/main/resources/common/message/AddPartitionsToTxnRequest.json",
        "clients/src/main/resources/common/message/AddPartitionsToTxnResponse.json",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/SenderTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/TransactionManagerTest.java",
        "clients/src/test/java/org/apache/kafka/common/message/MessageTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/AddPartitionsToTxnRequestTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/AddPartitionsToTxnResponseTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/RequestResponseTest.java",
        "core/src/main/scala/kafka/coordinator/transaction/TransactionCoordinator.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/test/scala/integration/kafka/api/AuthorizerIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionCoordinatorConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionCoordinatorTest.scala",
        "core/src/test/scala/unit/kafka/server/AddPartitionsToTxnRequestServerTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "core/src/test/scala/unit/kafka/server/RequestQuotaTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala"
      ]
    },
    "message": "KAFKA-14402: Update AddPartitionsToTxn protocol to batch and handle verifyOnly requests (#13231)\n\nPart 1 of KIP-890\n\nI've updated the API spec and related classes.\n\nClients should only be able to send up to version 3 requests and that is enforced by using a client builder.\n\nRequests > 4 only require cluster permissions as they are initiated from other brokers. API version 4 is marked as unstable for now.\n\nI've added tests for the batched requests and for the verifyOnly mode.\n\nAlso -- minor change to the KafkaApis method to properly match the request name.\n\nReviewers: Jason Gustafson <jason@confluent.io>, Jeff Kim <jeff.kim@confluent.io>, Guozhang Wang <wangguoz@gmail.com>, David Jacot <djacot@confluent.io>",
    "epoch": 1678191616,
    "epoch_utc": null
  },
  {
    "commit": "4d43abf1e09e01fc5e7af52f65e3fbae02cf9771",
    "author": "Rajini Sivaram",
    "author_email": "rajinisivaram@googlemail.com",
    "date": "Tue Mar 7 09:41:01 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 7 09:41:01 2023 +0000",
    "stats": {
      "files_changed": 3,
      "insertions": 62,
      "deletions": 3,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/security/ssl/SslFactory.java",
        "clients/src/test/java/org/apache/kafka/common/security/ssl/SslFactoryTest.java",
        "clients/src/test/java/org/apache/kafka/test/TestSslUtils.java"
      ]
    },
    "message": "KAFKA-14770: Allow dynamic keystore update for brokers if string representation of DN matches even if canonical DNs don't match (#13346)\n\nTo avoid mistakes during dynamic broker config updates that could potentially affect clients, we restrict changes that can be performed dynamically without broker restart. For broker keystore updates, we require the DN to be the same for the old and new certificates since this could potentially contain host names used for host name verification by clients. DNs are compared using standard Java implementation of X500Principal.equals() which compares canonical names. If tags of fields change from one with a printable string representation and one without or vice-versa, canonical name check fails even if the actual name is the same since canonical representation converts to hex for some tags only. We can relax the verification to allow dynamic updates in this case by enabling dynamic update if either the canonical name or the RFC2253 string representation of the DN matches.\n\nReviewers: Manikumar Reddy <manikumar.reddy@gmail.com>, Kalpesh Patel <kpatel@confluent.io>",
    "epoch": 1678192861,
    "epoch_utc": 1678182061
  },
  {
    "commit": "6d37b0f07ff56ede7b4e066cf873f8b67ca449d1",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Tue Mar 7 09:20:03 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Mar 7 09:20:03 2023 +0100",
    "stats": {
      "files_changed": 7,
      "insertions": 159,
      "deletions": 12,
      "files": [
        "core/src/main/scala/kafka/coordinator/group/GroupCoordinatorAdapter.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorAdapterTest.scala",
        "core/src/test/scala/unit/kafka/server/ConsumerGroupHeartbeatRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinator.java",
        "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java"
      ]
    },
    "message": "KAFKA-14462; [2/N] Add ConsumerGroupHeartbeart to GroupCoordinator interface (#13329)\n\nThis patch adds ConsumerGroupHeartbeat to the GroupCoordinator interface and implements the API in KafkaApis.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1678191603,
    "epoch_utc": null
  },
  {
    "commit": "c13b49f2d1e80b69e4e86aa4a3c24aa3d0280adf",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Mon Mar 6 18:09:21 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Mar 6 18:09:21 2023 -0800",
    "stats": {
      "files_changed": 2,
      "insertions": 2,
      "deletions": 48,
      "files": [
        "raft/src/main/resources/common/message/QuorumStateData.json",
        "raft/src/test/java/org/apache/kafka/raft/FileBasedStateStoreTest.java"
      ]
    },
    "message": "Revert \"KAFKA-14371: Remove unused clusterId field from quorum-state file (#13102)\" (#13355)\n\nThis reverts commit 0927049a617fa2937a211aab895f6590403130fb.\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1678136961,
    "epoch_utc": null
  },
  {
    "commit": "84351efd51adb6d4dbd50431a464a9d7ad475b9f",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Mon Mar 6 17:13:33 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Mar 6 17:13:33 2023 -0800",
    "stats": {
      "files_changed": 15,
      "insertions": 611,
      "deletions": 158,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/CogroupedKStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KGroupedStreamImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KGroupedTableImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableImpl.java",
        ".../kstream/internals/{TimestampedKeyValueStoreMaterializer.java => KeyValueStoreMaterializer.java}",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/StreamToTableNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/TableSourceNode.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractReadOnlyDecorator.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractReadWriteDecorator.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/VersionedKeyValueStoreBuilder.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/GlobalStreamThreadTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/KeyValueStoreMaterializerTest.java",
        ".../test/java/org/apache/kafka/streams/processor/internals/TimestampedKeyValueStoreMaterializerTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/TimestampedKeyValueStoreBuilderTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/VersionedKeyValueStoreBuilderTest.java"
      ]
    },
    "message": "KAFKA-14491: [13/N] Add versioned store builder and materializer (#13274)\n\nThis PR introduces VersionedKeyValueStoreBuilder for building the new versioned stores introduced in KIP-889, analogous to the existing TimestampedKeyValueStoreBuilder for building timestamped stores. This PR also updates the existing KTable store materializer class to materialize versioned stores in addition to timestamped stores. As part of this change, the materializer is renamed from TimestampedKeyValueStoreMaterializer to simply KeyValueStoreMaterializer.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>, John Roesler <john@confluent.io>",
    "epoch": 1678133613,
    "epoch_utc": null
  },
  {
    "commit": "9407b842bd69a47e54776581932950039d5df4fc",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Mon Mar 6 11:23:37 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Mar 6 11:23:37 2023 -0800",
    "stats": {
      "files_changed": 4,
      "insertions": 15,
      "deletions": 3,
      "files": [
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/server/SharedServer.scala",
        "core/src/test/scala/integration/kafka/server/KRaftClusterTest.scala"
      ]
    },
    "message": "MINOR: fix fault handling in ControllerServer and KafkaServer (#13331)\n\nThis PR has two fixes for fault handling. One makes fault handling more\nstrict on the controller; the other makes it a bit less strict on the\n(ZK-based) broker.\n\nIn ControllerServer, invoke a fatal fault handler in the catch block of\nthe ControllerServer.startup() function. This will protect us from cases\nwhere unwinding startup would otherwise encounter a deadlock, or be too\nslow.  This is the same reason why we made controller fault handlers\ncall halt() instead of exit() in KAFKA-14693.  In a sense, this JIRA is\na continuation of that fix since it turns some cases that would\npreviously have been handled by calling shutdown() into cases where we\ninvoke a fault handler which will call halt() directly.\n\nIn KafkaServer,  when we are in migration-from-zk mode and we create a\nRaftManager, it should have a fault handler which simply calls\nshutdown() on the broker rather than invoking\nProcessTerminatingFaultHandler. This fixes the bug where we could invoke\nthe process terminating fault handler from junit tests.\n\nReviewers: Ron Dagostino <rndgstn@gmail.com>",
    "epoch": 1678112617,
    "epoch_utc": null
  },
  {
    "commit": "5b295293c06f80accb86df5c46f78c1e5629f86a",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Mon Mar 6 17:39:04 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Mar 6 18:39:04 2023 +0100",
    "stats": {
      "files_changed": 25,
      "insertions": 29,
      "deletions": 25,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/admin/AlterClientQuotasOptions.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/AlterClientQuotasResult.java",
        "clients/src/main/java/org/apache/kafka/clients/admin/DescribeConsumerGroupsResult.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java",
        "clients/src/main/java/org/apache/kafka/common/metrics/Metrics.java",
        "clients/src/main/java/org/apache/kafka/common/network/TransportLayer.java",
        "clients/src/main/java/org/apache/kafka/common/security/oauthbearer/internals/unsecured/OAuthBearerValidationUtils.java",
        "clients/src/test/java/org/apache/kafka/common/protocol/types/ProtocolSerializationTest.java",
        "generator/src/main/java/org/apache/kafka/message/EntityType.java",
        "generator/src/main/java/org/apache/kafka/message/FieldSpec.java",
        "generator/src/main/java/org/apache/kafka/message/MessageDataGenerator.java",
        "generator/src/main/java/org/apache/kafka/message/SchemaGenerator.java",
        "metadata/src/main/java/org/apache/kafka/controller/ReplicationControlManager.java",
        "raft/src/main/java/org/apache/kafka/raft/QuorumState.java",
        "server-common/src/main/java/org/apache/kafka/server/common/CheckpointFile.java",
        "shell/src/main/java/org/apache/kafka/shell/LsCommandHandler.java",
        "shell/src/main/java/org/apache/kafka/shell/MetadataShell.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateManagerImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/CompositeReadOnlySessionStore.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredKeyValueStoreTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredSessionStoreTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredTimestampedKeyValueStoreTest.java",
        "trogdor/src/main/java/org/apache/kafka/trogdor/workload/ConsumeBenchWorker.java",
        "trogdor/src/test/java/org/apache/kafka/trogdor/coordinator/CoordinatorTest.java"
      ]
    },
    "message": "MINOR: Remove unnecessary toString(); fix comment references (#13212)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Divij Vaidya <diviv@amazon.com>, Lucas Brutschy <lbrutschy@confluent.io>",
    "epoch": 1678135144,
    "epoch_utc": 1678124344
  },
  {
    "commit": "07e2f6cd4d0ba703db510ba72354f8e500f72536",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Mon Mar 6 18:16:55 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Mar 6 18:16:55 2023 +0100",
    "stats": {
      "files_changed": 9,
      "insertions": 583,
      "deletions": 515,
      "files": [
        "bin/kafka-consumer-perf-test.sh",
        "bin/windows/kafka-consumer-perf-test.bat",
        "core/src/main/scala/kafka/tools/ConsumerPerformance.scala",
        "core/src/main/scala/kafka/tools/PerfConfig.scala",
        "core/src/test/scala/unit/kafka/tools/ConsumerPerformanceTest.scala",
        "tests/kafkatest/benchmarks/core/benchmark_test.py",
        "tests/kafkatest/services/performance/consumer_performance.py",
        "tools/src/main/java/org/apache/kafka/tools/ConsumerPerformance.java",
        "tools/src/test/java/org/apache/kafka/tools/ConsumerPerformanceTest.java"
      ]
    },
    "message": "KAFKA-14578: Move ConsumerPerformance to tools (#13215)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Alexandre Dupriez <alexandre.dupriez@gmail.com>",
    "epoch": 1678137415,
    "epoch_utc": null
  },
  {
    "commit": "3b5bb2f6a2a6b375b8eda426d8243d9dae679efe",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Mon Mar 6 10:53:49 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Mar 6 10:53:49 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 4,
      "deletions": 19,
      "files": [
        "README.md",
        "build.gradle"
      ]
    },
    "message": "MINOR: use built-in \"--rerun\" to replace \"-Prerun-tests\" (#13343)\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1678110829,
    "epoch_utc": null
  },
  {
    "commit": "1ae6405c479636bc0a4e0ffda91c82ea3bd3a761",
    "author": "hudeqi",
    "author_email": "1217150961@qq.com",
    "date": "Sun Mar 5 21:12:52 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Mar 5 21:12:52 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/network/Selector.java"
      ]
    },
    "message": "MINOR: Fix hint in selector poll (#13324)\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>",
    "epoch": 1678061572,
    "epoch_utc": null
  },
  {
    "commit": "8707e2cb6b00dbcb734c7704aba2b6b94f25660d",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Sun Mar 5 21:02:45 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Mar 5 21:02:45 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "core/src/main/scala/kafka/server/KafkaConfig.scala"
      ]
    },
    "message": "MINOR: tweak the doc of \"num.network.threads\" (#13327)\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1678060965,
    "epoch_utc": null
  },
  {
    "commit": "e348da4095e71f9bd6f6e1ce1e7bd52bfe605b5f",
    "author": "Dejan Stojadinovi\u0107",
    "author_email": "dejan2609@users.noreply.github.com",
    "date": "Sun Mar 5 07:25:00 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Mar 4 22:25:00 2023 -0800",
    "stats": {
      "files_changed": 4,
      "insertions": 12,
      "deletions": 15,
      "files": [
        "build.gradle",
        "gradle/dependencies.gradle",
        "gradle/wrapper/gradle-wrapper.properties",
        "gradlew"
      ]
    },
    "message": "MINOR: Update gradle to 8.0.2 and update several gradle plugins (#13339)\n\nAlso removed workaround from `build.gradle` that is no longer required after\nthe update to Gradle 8.0.2.\n\nRelated links:\n- zinc release notes:   https://github.com/sbt/zinc/releases/tag/v1.8.0\n- gradle release notes: https://github.com/gradle/gradle/releases/tag/v8.0.2\n- gradle diff:          https://github.com/gradle/gradle/compare/v8.0.1...v8.0.2\n\nplugins version upgrade details:\n- 'com.github.ben-manes.versions'              0.44.0 -> 0.46.0\n- 'org.owasp.dependencycheck'                     8.0.2 -> 8.1.2\n- 'io.swagger.core.v3.swagger-gradle-plugin' 2.2.0 -> 2.2.8\n- 'org.gradle.test-retry'                                    1.5.1 -> 1.5.2\n- 'com.github.johnrengelman.shadow'           7.1.2 -> 8.1.0\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1678011900,
    "epoch_utc": null
  },
  {
    "commit": "97105a8e5812135515f5a0fa4d5ff554d80df2fe",
    "author": "Satish Duggana",
    "author_email": "satishd@apache.org",
    "date": "Sat Mar 4 06:30:41 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Mar 4 06:30:41 2023 +0530",
    "stats": {
      "files_changed": 21,
      "insertions": 276,
      "deletions": 138,
      "files": [
        "core/src/main/java/kafka/server/ReplicaFetcherTierStateMachine.java",
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/raft/KafkaMetadataLog.scala",
        "core/src/main/scala/kafka/server/ReplicaAlterLogDirsThread.scala",
        "core/src/main/scala/kafka/server/ReplicaFetcherThread.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/integration/kafka/server/DelayedFetchTest.scala",
        "core/src/test/scala/kafka/raft/KafkaMetadataLogTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionLockTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogLoaderTest.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/server/LogOffsetTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerQuotasTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogOffsetSnapshot.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogReadInfo.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogStartOffsetIncrementReason.java"
      ]
    },
    "message": "KAFKA-14726 Move/rewrite of LogReadInfo, LogOffsetSnapshot, LogStartOffsetIncrementReason to storage module (#13304)\n\nReviewers: Jun Rao <junrao@gmail.com>, Luke Chen <showuon@gmail.com>, Mickael Maison <mickael.maison@gmail.com>, Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1677922241,
    "epoch_utc": null
  },
  {
    "commit": "a6d8988179d214581ee63ed48eccda5be7393f98",
    "author": "littlehorse-eng",
    "author_email": "100447728+littlehorse-eng@users.noreply.github.com",
    "date": "Fri Mar 3 11:00:51 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Mar 3 11:00:51 2023 -0800",
    "stats": {
      "files_changed": 2,
      "insertions": 19,
      "deletions": 5,
      "files": [
        "docs/streams/developer-guide/config-streams.html",
        "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java"
      ]
    },
    "message": "MINOR: Clarify docs for Streams config max.warmup.replicas. (#13082)\n\nDocumentation only\u2014Minor clarification on how max.warmup.replicas works; specifically, that one \"warmup replica\" corresponds to a Task that is restoring its state. Also clarifies how max.warmup.replicas interacts with probing.rebalance.interval.ms.\n\nReviewers: Lucas Brutschy <lbrutschy@confluent.io>, Matthias J. Sax <matthias@confluent.io>, Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1677852051,
    "epoch_utc": null
  },
  {
    "commit": "38c409cf33cad1e18e4080f04ba21f127a0c4028",
    "author": "Proven Provenzano",
    "author_email": "93720617+pprovenzano@users.noreply.github.com",
    "date": "Fri Mar 3 13:23:34 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Mar 3 10:23:34 2023 -0800",
    "stats": {
      "files_changed": 29,
      "insertions": 1274,
      "deletions": 86,
      "files": [
        "checkstyle/import-control.xml",
        "clients/src/main/resources/common/message/AlterUserScramCredentialsRequest.json",
        "clients/src/main/resources/common/message/DescribeUserScramCredentialsRequest.json",
        "core/src/main/scala/kafka/security/CredentialProvider.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/ControllerApis.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/main/scala/kafka/server/metadata/BrokerMetadataPublisher.scala",
        "core/src/main/scala/kafka/server/metadata/KRaftMetadataCache.scala",
        "core/src/test/java/kafka/test/MockController.java",
        "core/src/test/scala/unit/kafka/server/AlterUserScramCredentialsRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/DescribeUserScramCredentialsRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/MetadataCacheTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/metadata/BrokerMetadataSnapshotterTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/Controller.java",
        "metadata/src/main/java/org/apache/kafka/controller/ControllerMetricsManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/controller/ScramControlManager.java",
        "metadata/src/main/java/org/apache/kafka/image/MetadataDelta.java",
        "metadata/src/main/java/org/apache/kafka/image/MetadataImage.java",
        "metadata/src/main/java/org/apache/kafka/image/ScramCredentialData.java",
        "metadata/src/main/java/org/apache/kafka/image/ScramDelta.java",
        "metadata/src/main/java/org/apache/kafka/image/ScramImage.java",
        "metadata/src/main/resources/common/metadata/RemoveUserScramCredentialRecord.json",
        "metadata/src/main/resources/common/metadata/UserScramCredentialRecord.json",
        "metadata/src/test/java/org/apache/kafka/image/MetadataImageTest.java",
        "metadata/src/test/java/org/apache/kafka/image/ScramImageTest.java",
        "server-common/src/main/java/org/apache/kafka/server/common/MetadataVersion.java"
      ]
    },
    "message": "KAFKA-14084: SCRAM support in KRaft. (#13114)\n\nThis commit adds support to store the SCRAM credentials in a cluster with KRaft quorum servers and\nno ZK cluster backing the metadata. This includes creating ScramControlManager in the controller,\nand adding support for SCRAM to MetadataImage and MetadataDelta.\n\nChange UserScramCredentialRecord to contain only a single tuple (name, mechanism, salt, pw, iter)\nrather than a mapping between name and a list. This will avoid creating an excessively large record\nif a single user has many entries. Because record ID 11 (UserScramCredentialRecord) has not been\nused before, this is a compatible change. SCRAM will be supported in 3.5-IV0 and later.\n\nThis commit does not include KIP-900 SCRAM bootstrapping support, or updating the credential cache\non the controller (as opposed to broker). We will implement these in follow-on commits.\n\nReviewers: Manikumar Reddy <manikumar.reddy@gmail.com>, Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1677860614,
    "epoch_utc": null
  },
  {
    "commit": "47450ee064b3b421da1d2b8d9ddc5fd439cdce2a",
    "author": "Lucas Brutschy",
    "author_email": "lucasbru@users.noreply.github.com",
    "date": "Fri Mar 3 19:17:08 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Mar 3 10:17:08 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 12,
      "deletions": 8,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/state/internals/metrics/RocksDBMetricsRecorderTest.java"
      ]
    },
    "message": "MINOR: update RocksDBMetricsRecorder test to JUnit5 and fix memory leak (#13336)\n\nThe test was leaking memory via Mockito internals. Piggy-backing an update to JUnit5.\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1677881828,
    "epoch_utc": null
  },
  {
    "commit": "71fa008b4561628662cf84d895c5eb3eb5dba3d5",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Fri Mar 3 12:14:17 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Mar 3 12:14:17 2023 +0100",
    "stats": {
      "files_changed": 3,
      "insertions": 11,
      "deletions": 5,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceConfig.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorConfigTest.java"
      ]
    },
    "message": "KAFKA-14745: Cache the ReplicationPolicy instance in MirrorConnectorConfig (#13328)\n\n\nReviewers: Chris Egerton <fearthecellos@gmail.com>",
    "epoch": 1677856457,
    "epoch_utc": null
  },
  {
    "commit": "517b5d2b09ec22cf1734ba1e2d8be9ece5fb0365",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Thu Mar 2 14:14:30 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 2 14:14:30 2023 -0800",
    "stats": {
      "files_changed": 19,
      "insertions": 573,
      "deletions": 80,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamAggregate.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KStreamReduce.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableAggregate.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableFilter.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableImpl.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableKTableJoinMerger.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableMapValues.java",
        ".../src/main/java/org/apache/kafka/streams/kstream/internals/KTableMaterializedValueGetterSupplier.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTablePassThrough.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableReduce.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableSource.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableSourceValueGetterSupplier.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableTransformValues.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/StreamToTableNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/TableProcessorNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/TableSourceNode.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/KeyValueStoreWrapper.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/KeyValueStoreWrapperTest.java"
      ]
    },
    "message": "KAFKA-14491: [12/N] Relax requirement that KTable stores must be TimestampedKVStores (#13264)\n\nAs part of introducing versioned key-value stores in KIP-889, we want to lift the existing DSL restriction that KTable stores are always TimestampedKeyValueStores to allow for KTable stores which are VersionedKeyValueStores instead. This PR lifts this restriction by replacing raw usages of TimestampedKeyValueStore with a new KeyValueStoreWrapper which supports either TimestampedKeyValueStore or VersionedKeyValueStore.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1677777270,
    "epoch_utc": null
  },
  {
    "commit": "3109e9c843e33057dd5d823c50c41fb91dc1a8fc",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Thu Mar 2 12:10:01 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 2 15:10:01 2023 -0500",
    "stats": {
      "files_changed": 14,
      "insertions": 770,
      "deletions": 17,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/DelegatingClassLoader.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginsTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/TestPlugins.java",
        ".../test-plugins/bad-packaging/META-INF/services/org.apache.kafka.connect.rest.ConnectRestExtension",
        "connect/runtime/src/test/resources/test-plugins/bad-packaging/test/plugins/CoLocatedPlugin.java",
        ".../src/test/resources/test-plugins/bad-packaging/test/plugins/DefaultConstructorPrivateConnector.java",
        ".../src/test/resources/test-plugins/bad-packaging/test/plugins/DefaultConstructorThrowsConnector.java",
        ".../runtime/src/test/resources/test-plugins/bad-packaging/test/plugins/MissingSuperclassConverter.java",
        ".../runtime/src/test/resources/test-plugins/bad-packaging/test/plugins/NoDefaultConstructorConnector.java",
        "connect/runtime/src/test/resources/test-plugins/bad-packaging/test/plugins/NonExistentInterface.java",
        "connect/runtime/src/test/resources/test-plugins/bad-packaging/test/plugins/OuterClass.java",
        ".../src/test/resources/test-plugins/bad-packaging/test/plugins/StaticInitializerThrowsConnector.java",
        ".../src/test/resources/test-plugins/bad-packaging/test/plugins/StaticInitializerThrowsRestExtension.java",
        ".../runtime/src/test/resources/test-plugins/bad-packaging/test/plugins/VersionMethodThrowsConnector.java"
      ]
    },
    "message": "KAFKA-14649: Isolate failures during plugin path scanning to single plugin classes (#13182)\n\nReviewers: Christo Lolov <christo_lolov@yahoo.com>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1677769801,
    "epoch_utc": null
  },
  {
    "commit": "99e2b71fd69bc63fcf3f064267c703a049b217d6",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Thu Mar 2 20:46:50 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 2 20:46:50 2023 +0100",
    "stats": {
      "files_changed": 2,
      "insertions": 152,
      "deletions": 0,
      "files": [
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/test/scala/unit/kafka/server/KafkaConfigTest.scala"
      ]
    },
    "message": "KAFKA-14462; [1/N] Add new server configurations (KIP-848) (#13322)\n\nThis patch adds the new server configurations introduced in KIP-848. All of them are kept as internal configurations for now. We will make them public when the KIP is ready. It also adds an internal configuration named `group.coordinator.new.enable` that we will used during the development of the KIP. This one will be remove later on and replaced by IBP/feature flag.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1677800810,
    "epoch_utc": null
  },
  {
    "commit": "b0e28351ecf98f7a0ffc5008a575125d777dcc1c",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Thu Mar 2 06:53:52 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 2 09:53:52 2023 -0500",
    "stats": {
      "files_changed": 5,
      "insertions": 27,
      "deletions": 45,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/ClusterConfigState.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaConfigBackingStoreTest.java"
      ]
    },
    "message": "MINOR: Refactor task change logic to AbstractHerder, reuse for standalone mode. (#13287)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1677750832,
    "epoch_utc": null
  },
  {
    "commit": "bb3111f472f5007e47c0a01b24a4d61f44550ab9",
    "author": "vamossagar12",
    "author_email": "sagarmeansocean@gmail.com",
    "date": "Thu Mar 2 16:35:22 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 2 12:05:22 2023 +0100",
    "stats": {
      "files_changed": 6,
      "insertions": 333,
      "deletions": 182,
      "files": [
        "checkstyle/import-control.xml",
        "core/src/main/scala/kafka/tools/EndToEndLatency.scala",
        "tests/kafkatest/benchmarks/core/benchmark_test.py",
        "tests/kafkatest/services/performance/end_to_end_latency.py",
        "tools/src/main/java/org/apache/kafka/tools/EndToEndLatency.java",
        "tools/src/test/java/org/apache/kafka/tools/EndToEndLatencyTest.java"
      ]
    },
    "message": "KAFKA-14580: Moving EndToEndLatency from core to tools module (#13095)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Federico Valeri <fedevaleri@gmail.com>, Ismael Juma <mlists@juma.me.uk>",
    "epoch": 1677785722,
    "epoch_utc": null
  },
  {
    "commit": "ea30ec4b5628fed7bdea228f6bf149a23a415816",
    "author": "Gantigmaa Selenge",
    "author_email": "39860586+tinaselenge@users.noreply.github.com",
    "date": "Thu Mar 2 06:30:07 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 2 14:30:07 2023 +0800",
    "stats": {
      "files_changed": 5,
      "insertions": 501,
      "deletions": 378,
      "files": [
        "clients/src/test/java/org/apache/kafka/clients/admin/MockAdminClient.java",
        "core/src/main/scala/kafka/admin/DelegationTokenCommand.scala",
        "core/src/test/scala/unit/kafka/admin/DelegationTokenCommandTest.scala",
        "tools/src/main/java/org/apache/kafka/tools/DelegationTokenCommand.java",
        "tools/src/test/java/org/apache/kafka/tools/DelegationTokenCommandTest.java"
      ]
    },
    "message": "KAFKA-14590: Move DelegationTokenCommand to tools (#13172)\n\nKAFKA-14590: Move DelegationTokenCommand to tools\n\nReviewers: Luke Chen <showuon@gmail.com>, Christo Lolov <christo_lolov@yahoo.com>, Federico Valeri <fvaleri@redhat.com>",
    "epoch": 1677749407,
    "epoch_utc": 1677738607
  },
  {
    "commit": "9be36a4cd3615dea203c558986486bd51b38222a",
    "author": "RivenSun",
    "author_email": "91005273+RivenSun2@users.noreply.github.com",
    "date": "Thu Mar 2 11:37:33 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Mar 2 11:37:33 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 18,
      "deletions": 2,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinatorTest.java"
      ]
    },
    "message": "KAFKA-14729: The kafakConsumer pollForFetches(timer) method takes up a lot of cpu due to the abnormal exit of the heartbeat thread (#13270)\n\nthrowing an exception directly form the foreground thread's callers when the abnormal exit of the heartbeat thread\n\nReviewers: Luke Chen <showuon@gmail.com>, Philip Nee <philipnee@gmail.com>",
    "epoch": 1677767853,
    "epoch_utc": null
  },
  {
    "commit": "5842953249727b9a4d755b02fd78386681486d89",
    "author": "Guozhang Wang",
    "author_email": "wangguoz@gmail.com",
    "date": "Wed Mar 1 17:36:23 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 1 17:36:23 2023 -0800",
    "stats": {
      "files_changed": 3,
      "insertions": 17,
      "deletions": 16,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/DefaultStateUpdaterTest.java",
        "streams/src/test/java/org/apache/kafka/test/StreamsTestUtils.java"
      ]
    },
    "message": "MINOR: Fix flaky tests in DefaultStateUpdaterTest (#13319)\n\nFound a few flaky tests while reviewing another PR. The root cause seems to be with changing the return behavior of when in mockito. Fixed those without using reset and also bumped a couple debug log lines to info since they could be very helpful in debugging.\n\nReviewers: Luke Chen <showuon@gmail.com>, Lucas Brutschy <lbrutschy@confluent.io>, Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1677702983,
    "epoch_utc": null
  },
  {
    "commit": "3d9a03cfe822f61ca45881a6bfd9a86e54ca28bd",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Thu Mar 2 08:38:12 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 1 16:38:12 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 5,
      "deletions": 0,
      "files": [
        "build.gradle"
      ]
    },
    "message": "MINOR: fix rerun-tests for unit test (#13288)\n\nRelated to #11926. Let `unitTest` also process rerun-tests.\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1677757092,
    "epoch_utc": null
  },
  {
    "commit": "d479d129e0b24f2c2173f2bfd1fb261ec2be757b",
    "author": "Anastasia Vela",
    "author_email": "avela@confluent.io",
    "date": "Wed Mar 1 14:20:15 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 1 14:20:15 2023 -0800",
    "stats": {
      "files_changed": 7,
      "insertions": 137,
      "deletions": 8,
      "files": [
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/unit/kafka/server/BrokerMetricNamesTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "docs/ops.html",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/ProducerStateManager.java"
      ]
    },
    "message": "KAFKA-13999: Add ProducerCount metrics (KIP-847) (#13078)\n\nThis is the PR for the implementation of KIP-847: https://cwiki.apache.org/confluence/display/KAFKA/KIP-847%3A+Add+ProducerIdCount+metrics\nAdd ProducerIdCount metric at the broker level:\n\nkafka.server:type=ReplicaManager,name=ProducerIdCount\nAdded unit tests below to ensure the metric reported the count correctly.\n\n---------\n\nCo-authored-by: Artem Livshits <84364232+artemlivshits@users.noreply.github.com>\n\nReviewers: Ismael Juma <ismael@juma.me.uk>, Divij Vaidya <diviv@amazon.com>, Christo Lolov <christo_lolov@yahoo.com>, Alexandre Dupriez <alexandre.dupriez@gmail.com>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1677691215,
    "epoch_utc": null
  },
  {
    "commit": "98d84b17f74b0bfe65163d0ddf88976746de5f7e",
    "author": "Rajini Sivaram",
    "author_email": "rajinisivaram@googlemail.com",
    "date": "Wed Mar 1 21:01:35 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 1 21:01:35 2023 +0000",
    "stats": {
      "files_changed": 8,
      "insertions": 852,
      "deletions": 165,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/RangeAssignor.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractPartitionAssignor.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Utils.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/RangeAssignorTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/RoundRobinAssignorTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractPartitionAssignorTest.java",
        "core/src/test/scala/integration/kafka/api/PlaintextConsumerTest.scala",
        "core/src/test/scala/integration/kafka/server/FetchFromFollowerIntegrationTest.scala"
      ]
    },
    "message": "KAFKA-14451: Rack-aware consumer partition assignment for RangeAssignor (KIP-881) (#12990)\n\nBest-effort rack alignment for range assignor when both consumer racks and partition racks are available with the protocol changes introduced in KIP-881. Rack-aware assignment is enabled by configuring client.rack for consumers. Balanced assignment per topic is prioritized over rack-alignment. For topics with equal partitions and the same set of subscribers, co-partitioning is prioritized over rack-alignment.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1677715295,
    "epoch_utc": 1677704495
  },
  {
    "commit": "510e99e1a2636f9a7035020f682ab7df8530986b",
    "author": "Satish Duggana",
    "author_email": "satishd@apache.org",
    "date": "Wed Mar 1 10:58:49 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 1 10:58:49 2023 +0530",
    "stats": {
      "files_changed": 4,
      "insertions": 147,
      "deletions": 105,
      "files": [
        "core/src/main/scala/kafka/log/LocalLog.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/test/scala/unit/kafka/log/LocalLogTest.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogFileUtils.java"
      ]
    },
    "message": "MINOR Moved a few log segment util methods from LocalLog to LogFileUtils (#13309)\n\nReviewers: Jun Rao <junrao@gmail.com>, Luke Chen <showuon@gmail.com>",
    "epoch": 1677679129,
    "epoch_utc": null
  },
  {
    "commit": "0927049a617fa2937a211aab895f6590403130fb",
    "author": "Gantigmaa Selenge",
    "author_email": "39860586+tinaselenge@users.noreply.github.com",
    "date": "Wed Mar 1 02:13:38 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Mar 1 10:13:38 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 48,
      "deletions": 2,
      "files": [
        "raft/src/main/resources/common/message/QuorumStateData.json",
        "raft/src/test/java/org/apache/kafka/raft/FileBasedStateStoreTest.java"
      ]
    },
    "message": "KAFKA-14371: Remove unused clusterId field from quorum-state file (#13102)\n\nRemove clusterId field from the KRaft controller's quorum-state file $LOG_DIR/__cluster_metadata-0/quorum-state\n\nReviewers: Luke Chen <showuon@gmail.com>, dengziming <dengziming1993@gmail.com>, Christo Lolov <christololov@gmail.com>",
    "epoch": 1677647618,
    "epoch_utc": 1677636818
  },
  {
    "commit": "f7f376f6c162717e60e143b05fbd12ea2f347e3c",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Tue Feb 28 17:36:37 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 28 17:36:37 2023 -0800",
    "stats": {
      "files_changed": 3,
      "insertions": 50,
      "deletions": 4,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinatorTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinatorTest.java"
      ]
    },
    "message": "KAFKA-12639: Exit upon expired timer to prevent tight looping (#13190)\n\nIn AbstractCoordinator#joinGroupIfNeeded - joinGroup request will be retried without proper backoff, due to the expired timer. This is an uncommon scenario and possibly only appears during the testing, but I think it makes sense to enforce the client to drive the join group via poll.\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1677616597,
    "epoch_utc": null
  },
  {
    "commit": "6b89672b5e5d527cf26207d3985a24025afedb1a",
    "author": "Colin P. McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Mon Jan 30 15:10:19 2023 -0800",
    "commit_by": "Colin P. McCabe",
    "commit_by_email": "cmccabe@apache.org",
    "commit_by_date": "Tue Feb 28 13:59:07 2023 -0800",
    "stats": {
      "files_changed": 8,
      "insertions": 83,
      "deletions": 90,
      "files": [
        "core/src/main/scala/kafka/migration/MigrationPropagator.scala",
        "metadata/src/main/java/org/apache/kafka/image/ClusterDelta.java",
        "metadata/src/main/java/org/apache/kafka/image/ClusterImage.java",
        "metadata/src/main/java/org/apache/kafka/image/TopicsImage.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        ".../src/main/java/org/apache/kafka/metadata/migration/{MigrationState.java => MigrationDriverState.java}",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/ZkMigrationState.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationDriverTest.java"
      ]
    },
    "message": "MINOR: some ZK migration code cleanups.\n\nSome minor improvements to the JavaDoc for ZkMigrationState.\n\nRename MigrationState to MigrationDriverState to avoid confusion with ZkMigrationState.\n\nRemove ClusterImage#zkBrokers. This costs O(num_brokers) time to calculate, but is only ever used\nwhen in migration state. It should just be calculated in the migration code. (Additionally, the\nfunction ClusterImage.zkBrokers() returns something other than ClusterImage#zkBrokers, which is\nconfusing.)\n\nAlso remove ClusterDelta#liveZkBrokerIdChanges. This is only used in one place, and it's easy to\ncalculate it there. In general we should avoid providing expensive accessors unless absolutely\nnecessary. Expensive code should look expensive: if people want to iterate over all brokers, they\ncan write a loop to do that rather than hiding it inside an accessor.",
    "epoch": 1675102219,
    "epoch_utc": null
  },
  {
    "commit": "7322f4cd55dc08abdc6ccf51ed33f7f0d869dd0e",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Tue Feb 28 09:50:44 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 28 12:50:44 2023 -0500",
    "stats": {
      "files_changed": 2,
      "insertions": 146,
      "deletions": 39,
      "files": [
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/AbstractHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedHerderTest.java"
      ]
    },
    "message": "MINOR: reformat ClusterConfigState constructions in Abstract & DistributedHerder (#13286)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1677588644,
    "epoch_utc": null
  },
  {
    "commit": "f586fa59d3f938e04bda4e8143ddb1c4310eaf78",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Tue Feb 28 08:23:19 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 28 11:23:19 2023 -0500",
    "stats": {
      "files_changed": 10,
      "insertions": 113,
      "deletions": 118,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectorConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/TransformationChain.java",
        ".../java/org/apache/kafka/connect/runtime/{PredicatedTransformation.java => TransformationStage.java}",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Worker.java",
        ".../runtime/src/main/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorPluginsResource.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/ConnectorConfigTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/ErrorHandlingTaskTest.java",
        ".../org/apache/kafka/connect/runtime/{PredicatedTransformationTest.java => TransformationStageTest.java}",
        ".../src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorPluginsResourceTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/TopicCreationTest.java"
      ]
    },
    "message": "KAFKA-14671: Refactor PredicatedTransformation to not implement Transformation (#13184)\n\nReviewers: Christo Lolov <christololov@gmail.com>, Yash Mayya <yash.mayya@gmail.com>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1677583399,
    "epoch_utc": null
  },
  {
    "commit": "8dd697b05f36c319bd6c50d6e499168aac172e02",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Tue Feb 28 21:06:34 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 28 10:36:34 2023 -0500",
    "stats": {
      "files_changed": 2,
      "insertions": 191,
      "deletions": 13,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedHerderTest.java"
      ]
    },
    "message": "KAFKA-14732: Use an exponential backoff retry mechanism while reconfiguring connector tasks (#13276)\n\nReviewers: Chaitanya Mukka <chaitanya.mvs2007@gmail.com>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1677629194,
    "epoch_utc": null
  },
  {
    "commit": "dcc179995153c22c6248702976b60755b0b9fda8",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Tue Feb 28 07:16:09 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 28 07:16:09 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 7,
      "deletions": 0,
      "files": [
        "build.gradle"
      ]
    },
    "message": "MINOR: srcJar should depend on processMessages task (#13316)\n\nThis fixes the following `./gradlew install` issue:\n\n```text\n* What went wrong:\nA problem was found with the configuration of task ':storage:srcJar' (type 'Jar').\n- Gradle detected a problem with the following location: '/Users/ijuma/src/kafka/storage/src/generated/java'.\n\nReason: Task ':storage:srcJar' uses this output of task ':storage:processMessages' without declaring an explicit or implicit dependency. This can lead to incorrect results being produced, depending on what order the tasks are executed.\n\nPossible solutions:\n1. Declare task ':storage:processMessages' as an input of ':storage:srcJar'.\n2. Declare an explicit dependency on ':storage:processMessages' from ':storage:srcJar' using Task#dependsOn.\n3. Declare an explicit dependency on ':storage:processMessages' from ':storage:srcJar' using Task#mustRunAfter.\n\nPlease refer to https://docs.gradle.org/8.0.1/userguide/validation_problems.html#implicit_dependency for more details about this problem.\n```\n\nReviewers: David Jacot <david.jacot@gmail.com>",
    "epoch": 1677579369,
    "epoch_utc": null
  },
  {
    "commit": "a1b8586a579fd892ab47b0780322df9b43e4ef6f",
    "author": "Hector Geraldino",
    "author_email": "hgeraldino@gmail.com",
    "date": "Tue Feb 28 09:40:18 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 28 09:40:18 2023 -0500",
    "stats": {
      "files_changed": 3,
      "insertions": 18,
      "deletions": 16,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractWorkerSourceTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectMetricsRegistry.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/AbstractWorkerSourceTaskTest.java"
      ]
    },
    "message": "KAFKA-14659 source-record-write-[rate|total] metrics should exclude filtered records (#13193)\n\nReviewers: Christo Lolov <christololov@gmail.com>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1677588018,
    "epoch_utc": null
  },
  {
    "commit": "d143d349ec6b51e0d95bbc794a21f93091c876fe",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Tue Feb 28 19:57:37 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 28 09:27:37 2023 -0500",
    "stats": {
      "files_changed": 1,
      "insertions": 7,
      "deletions": 4,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/utils/ExponentialBackoff.java"
      ]
    },
    "message": "MINOR: ExponentialBackoff Javadoc improvements (#13317)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1677625057,
    "epoch_utc": null
  },
  {
    "commit": "867fb295d0b4e91d650d21594eeb515bd9accc54",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Tue Feb 28 02:21:36 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 28 10:21:36 2023 +0000",
    "stats": {
      "files_changed": 2,
      "insertions": 56,
      "deletions": 53,
      "files": [
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/ExactlyOnceSourceIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/MonitorableSourceConnector.java"
      ]
    },
    "message": "KAFKA-14742: Throttle connectors in ExactlyOnceSourceIntegrationTest to fix flakey OOMEs (#13291)\n\nKAFKA-14742: Throttle connectors in ExactlyOnceSourceIntegrationTest to fix flakey OOMEs\nfixup: rename config constant, use meaningful constant names in EOSIT\n\nSigned-off-by: Greg Harris <greg.harris@aiven.io>\n\nReviewers: Edoardo Comar <edocomar@gmail.com>",
    "epoch": 1677561696,
    "epoch_utc": null
  },
  {
    "commit": "30795674615180af43377c79d106c559102e2522",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Tue Feb 28 03:29:44 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Feb 27 11:29:44 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "core/src/main/scala/kafka/server/KafkaConfig.scala"
      ]
    },
    "message": "MINOR: update docs of 'replica.socket.receive.buffer.bytes' (#13308)\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1677565784,
    "epoch_utc": null
  },
  {
    "commit": "5f9d01668cae64b2cacd7872d82964fa78862aaf",
    "author": "Hector Geraldino",
    "author_email": "hgeraldino@gmail.com",
    "date": "Mon Feb 27 09:25:21 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Feb 27 09:25:21 2023 -0500",
    "stats": {
      "files_changed": 2,
      "insertions": 275,
      "deletions": 301,
      "files": [
        "build.gradle",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/AbstractWorkerSourceTaskTest.java"
      ]
    },
    "message": "KAFKA-14060: Replace EasyMock and PowerMock with Mockito in AbstractWorkerSourceTaskTest (#13191)\n\nReviewers: Christo Lolov <christololov@gmail.com>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1677500721,
    "epoch_utc": null
  },
  {
    "commit": "8d7d563231da433d02cb270bb799f03be2223a7c",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Mon Feb 27 14:49:12 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Feb 27 14:49:12 2023 +0100",
    "stats": {
      "files_changed": 1,
      "insertions": 0,
      "deletions": 3,
      "files": [
        "connect/api/src/main/java/org/apache/kafka/connect/storage/SimpleHeaderConverter.java"
      ]
    },
    "message": "MINOR: Remove duplicate empty string check (#13145)\n\n\nReviewers: Chris Egerton <fearthecellos@gmail.com>, Christo Lolov <christololov@gmail.com>",
    "epoch": 1677520152,
    "epoch_utc": null
  },
  {
    "commit": "461c5cfe056db0951d9b74f5adc45973670404d7",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Mon Feb 27 10:35:28 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Feb 27 10:35:28 2023 +0100",
    "stats": {
      "files_changed": 7,
      "insertions": 13,
      "deletions": 61,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/utils/CopyOnWriteMap.java",
        "clients/src/main/java/org/apache/kafka/common/utils/Exit.java",
        "clients/src/main/java/org/apache/kafka/common/utils/ImplicitLinkedHashCollection.java",
        "clients/src/main/java/org/apache/kafka/common/utils/ImplicitLinkedHashMultiCollection.java",
        "clients/src/main/java/org/apache/kafka/common/utils/Sanitizer.java",
        "clients/src/main/java/org/apache/kafka/common/utils/SecurityUtils.java",
        "clients/src/main/java/org/apache/kafka/common/utils/Utils.java"
      ]
    },
    "message": "MINOR: Various cleanups in common utils (#13174)\n\n- Remove unused methods\n- Cleanup syntax\n\nReviewers: Josep Prat <josep.prat@aiven.io>, Christo Lolov <christololov@gmail.com>",
    "epoch": 1677504928,
    "epoch_utc": null
  },
  {
    "commit": "4441a01bb0d7cd2f4c5affd13ab65c79f7e342f4",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Mon Feb 27 00:28:19 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Feb 27 00:28:19 2023 -0800",
    "stats": {
      "files_changed": 2,
      "insertions": 16,
      "deletions": 12,
      "files": [
        "Jenkinsfile",
        "build.gradle"
      ]
    },
    "message": "MINOR: Enable spotless for streams-scala when Java 11+ is used (#13311)\n\nAlso re-enable it in CI. We do this by adjusting the `Jenkinsfile`\nto use a more general task (`./gradlew check -x test`).\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>, Dejan Stojadinovi\u0107 <dejan2609@users.noreply.github.com>",
    "epoch": 1677468499,
    "epoch_utc": null
  },
  {
    "commit": "dfd8fdb859a7660c01522c4dca5269771d5491d7",
    "author": "Hoki Min",
    "author_email": "hogimn@gmail.com",
    "date": "Mon Feb 27 02:57:20 2023 +0900",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Feb 27 01:57:20 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/DefaultPartitionerTest.java"
      ]
    },
    "message": "MINOR: Replace String literal with existing String variable (#13305)\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Chia-Ping Tsai <chia7712@gmail.com>",
    "epoch": 1677477440,
    "epoch_utc": null
  },
  {
    "commit": "ae6725740651cc76280840af3a657f9bb9522e37",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Sun Feb 26 15:16:51 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Feb 26 15:16:51 2023 +0800",
    "stats": {
      "files_changed": 3,
      "insertions": 33,
      "deletions": 9,
      "files": [
        "core/src/main/scala/kafka/network/SocketServer.scala",
        "core/src/test/scala/unit/kafka/server/FetchRequestDownConversionConfigTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala"
      ]
    },
    "message": "Kafka-14743: update request metrics after callback (#13297)\n\nCurrently, the kafka.network:type=RequestMetrics,name=MessageConversionsTimeMs,request=Fetch will not get updated because the request metrics is recorded BEFORE the messageConversions metrics value updated. That means, even if we updated the messageConversions metrics value, the request metrics will never reflect the update. This patch fixes it by updating the request metric after callback completed, so that the messageConversions metric value can be updated correctly.\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1677435411,
    "epoch_utc": null
  },
  {
    "commit": "62431dca700fb2c7c3afe1a7c9eb07fe336f9b04",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Fri Feb 24 15:42:38 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Feb 24 15:42:38 2023 -0800",
    "stats": {
      "files_changed": 12,
      "insertions": 721,
      "deletions": 68,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CommitRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThread.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/GroupState.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/NetworkClientDelegate.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/PrototypeAsyncConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/RequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ApplicationEventProcessor.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/CommitApplicationEvent.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/PollApplicationEvent.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CommitRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThreadTest.java"
      ]
    },
    "message": "KAFKA-14468: Implement CommitRequestManager to manage the commit and autocommit requests (#13021)\n\nThis pull request introduces a CommitRequestManager to efficiently manage commit requests from clients and the autocommit state. The manager utilizes a \"staged\" commit queue to store commit requests made by clients. A background thread regularly polls the CommitRequestManager, which then checks the queue for any outstanding commit requests. When permitted, the CommitRequestManager generates a PollResult which contains a list of UnsentRequests that are subsequently processed by the NetworkClientDelegate.\n\nIn addition, a RequestManagerRegistry has been implemented to hold all request managers, including the new CommitRequestManager and the CoordinatorRequestManager. The registry is regularly polled by a background thread in each event loop, ensuring that all request managers are kept up to date and able to handle incoming requests\n\nReviewers: Jason Gustafson <jason@confluent.io>, Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1677264158,
    "epoch_utc": null
  },
  {
    "commit": "8d32a0f2463eaa4c0b669b8a957a7abc066c066f",
    "author": "Matthew Wong",
    "author_email": "mattwong949@gmail.com",
    "date": "Fri Feb 24 15:29:35 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Feb 24 15:29:35 2023 -0800",
    "stats": {
      "files_changed": 9,
      "insertions": 558,
      "deletions": 316,
      "files": [
        "checkstyle/import-control-core.xml",
        "core/src/main/java/kafka/server/ReplicaAlterLogDirsTierStateMachine.java",
        "core/src/main/java/kafka/server/ReplicaFetcherTierStateMachine.java",
        "core/src/main/java/kafka/server/TierStateMachine.java",
        "core/src/main/scala/kafka/server/AbstractFetcherThread.scala",
        "core/src/main/scala/kafka/server/ReplicaAlterLogDirsThread.scala",
        "core/src/main/scala/kafka/server/ReplicaFetcherThread.scala",
        "core/src/test/scala/unit/kafka/server/AbstractFetcherManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/AbstractFetcherThreadTest.scala"
      ]
    },
    "message": "[KAFKA-14685] Refactor logic to handle OFFSET_MOVED_TO_TIERED_STORAGE error (#13206)\n\nReviewers: Rittika Adhikari <rittika.adhikari@gmail.com>, Luke Chen <showuon@gmail.com>, Satish Duggana <satishd@apache.org>, Alexandre Dupriez <alexandre.dupriez@gmail.com>, Jun Rao <junrao@gmail.com>",
    "epoch": 1677263375,
    "epoch_utc": null
  },
  {
    "commit": "400ba0aeaeb6c460069d5ad12b1b3976ab447332",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Fri Feb 24 14:32:43 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Feb 24 14:32:43 2023 -0800",
    "stats": {
      "files_changed": 3,
      "insertions": 596,
      "deletions": 8,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredKeyValueStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/MeteredVersionedKeyValueStore.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredVersionedKeyValueStoreTest.java"
      ]
    },
    "message": "KAFKA-14491: [11/N] Add metered wrapper for versioned stores (#13252)\n\nIntroduces the metered store layer for the new versioned key-value store introduced in KIP-889. This outermost, metered store layer handles all serialization/deserialization from VersionedKeyValueStore to a bytes-representation (VersionedBytesStore) so that all inner stores may operate only with bytes types.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1677259963,
    "epoch_utc": null
  },
  {
    "commit": "2fad1652942226454a44038f2350642817f9f74b",
    "author": "Guozhang Wang",
    "author_email": "wangguoz@gmail.com",
    "date": "Fri Feb 24 10:25:11 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Feb 24 10:25:11 2023 -0800",
    "stats": {
      "files_changed": 9,
      "insertions": 427,
      "deletions": 82,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/ChangelogReader.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/metrics/StreamsMetricsImpl.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/DefaultStateUpdaterTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/MockChangelogReader.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java"
      ]
    },
    "message": "KAFKA-10199: Add task updater metrics, part 1 (#13228)\n\n* Moved pausing-tasks logic out of the commit-interval loop to be on the top-level loop, similar to resuming tasks.\n* Added thread-level restoration metrics.\n* Related unit tests.\n\nReviewers: Lucas Brutschy <lucasbru@users.noreply.github.com>, Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1677245111,
    "epoch_utc": null
  },
  {
    "commit": "998759344ca36c2a260b34cce8953927cdd99822",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Fri Feb 24 21:55:57 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Feb 24 21:55:57 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 0,
      "deletions": 1,
      "files": [
        "core/src/test/scala/integration/kafka/server/DynamicBrokerReconfigurationTest.scala"
      ]
    },
    "message": "MINOR: enable DynamicBrokerReconfigurationTest.testUncleanLeaderElectionEnable (#13296)\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1677286557,
    "epoch_utc": null
  },
  {
    "commit": "72dd401e51d77c495ab87008b1d47a2167d04e74",
    "author": "Dejan Stojadinovi\u0107",
    "author_email": "dejan2609@users.noreply.github.com",
    "date": "Fri Feb 24 04:13:43 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 23 19:13:43 2023 -0800",
    "stats": {
      "files_changed": 4,
      "insertions": 30,
      "deletions": 21,
      "files": [
        "build.gradle",
        "gradle/dependencies.gradle",
        "gradle/wrapper/gradle-wrapper.properties",
        "gradlew"
      ]
    },
    "message": "KAFKA-14680: Upgrade gradle version from 7.6 to 8.0.1 (#13205)\n\nDetails:\n* gradle upgrade: 7.6 -> 8.0.1\n* spotbugs plugin upgrade: 5.0.9 -> 5.0.13\n* tweaked the mechanics for `-release`/`-source`/`-target` to workaround idiosyncrasies in Gradle 8.0.1 and newer Scala 2.13 versions.\n* streams-scala `test` task no longer triggers the `spotless` task since a newer version is required for Gradle 8 support, but the newer version requires Java 11.\nNote: relates to #5479\n\nGradle upgrade highlights:\n* \"Scala Incremental Compilation for Multi-Module projects broken in 7.x\": https://github.com/gradle/gradle/issues/20101\n* \"Incremental compilation of java modules is broken with Gradle 7.6\": https://github.com/gradle/gradle/issues/23067\n\nFull release notes: https://docs.gradle.org/8.0/release-notes.html\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1677222823,
    "epoch_utc": null
  },
  {
    "commit": "ca8d0bba9144edb8ea914a31bcf9ea9e61643d63",
    "author": "Ruslan Krivoshein",
    "author_email": "krivosheinruslan@hotmail.com",
    "date": "Fri Feb 24 04:44:50 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 23 17:44:50 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 0,
      "deletions": 2,
      "files": [
        "docs/upgrade.html"
      ]
    },
    "message": "MINOR: update Stream docs with regard to `upgrad.from` config for 0.10.1.2 release (#13074)\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1677224690,
    "epoch_utc": null
  },
  {
    "commit": "9f55945270876ff9cc71472f223ff266d5400206",
    "author": "Kowshik Prakasam",
    "author_email": "kprakasam@confluent.io",
    "date": "Thu Feb 23 17:29:32 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 23 17:29:32 2023 -0800",
    "stats": {
      "files_changed": 17,
      "insertions": 154,
      "deletions": 89,
      "files": [
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/server/AbstractFetcherThread.scala",
        "core/src/main/scala/kafka/server/LeaderEndPoint.scala",
        "core/src/main/scala/kafka/server/LocalLeaderEndPoint.scala",
        "core/src/main/scala/kafka/server/RemoteLeaderEndPoint.scala",
        "core/src/main/scala/kafka/server/ReplicaAlterLogDirsThread.scala",
        "core/src/main/scala/kafka/server/ReplicaFetcherThread.scala",
        "core/src/test/scala/kafka/server/LocalLeaderEndPointTest.scala",
        "core/src/test/scala/kafka/server/RemoteLeaderEndPointTest.scala",
        "core/src/test/scala/unit/kafka/server/AbstractFetcherManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/AbstractFetcherThreadTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaAlterLogDirsThreadTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaFetcherThreadTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/epoch/OffsetsForLeaderEpochTest.scala",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/fetcher/ReplicaFetcherThreadBenchmark.java",
        "server-common/src/main/java/org/apache/kafka/server/common/OffsetAndEpoch.java"
      ]
    },
    "message": "MINOR: Introduce OffsetAndEpoch in LeaderEndpoint interface return values (#13268)\n\nReviewers: Satish Duggana <satishd@apache.org>, Alexandre Dupriez <alexandre.dupriez@gmail.com>, Jun Rao <junrao@gmail.com>",
    "epoch": 1677184172,
    "epoch_utc": null
  },
  {
    "commit": "7626a43079298e88895b6f9e2fe3f8206da0155c",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Fri Feb 24 01:50:49 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Feb 24 01:50:49 2023 +0800",
    "stats": {
      "files_changed": 4,
      "insertions": 17,
      "deletions": 1,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/network/NetworkSend.java",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/test/scala/unit/kafka/server/FetchRequestDownConversionConfigTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala"
      ]
    },
    "message": "KAFKA-14295 FetchMessageConversionsPerSec meter not recorded (#13279)\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1677214249,
    "epoch_utc": null
  },
  {
    "commit": "c55e5afb836e7f1fed749b9d02a73bc83fdf52fd",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Thu Feb 23 18:32:33 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 23 18:32:33 2023 +0100",
    "stats": {
      "files_changed": 3,
      "insertions": 138,
      "deletions": 9,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/OffsetFetchRequest.java",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "core/src/test/scala/unit/kafka/server/OffsetFetchRequestTest.scala"
      ]
    },
    "message": "KAFKA-14744; NPE while converting OffsetFetch from version < 8 to version >= 8 (#13295)\n\nWhile refactoring the OffsetFetch handling in KafkaApis, we introduced a NullPointerException (NPE). The NPE arises when the FetchOffset API is called with a client using a version older than version 8 and using null for the topics to signal that all topic-partition offsets must be returned. This means that this bug mainly impacts admin tools. The consumer does not use null.\n\nThis NPE is here: https://github.com/apache/kafka/commit/24a86423e9907b751d98fddc7196332feea2b48d#diff-0f2f19fd03e2fc5aa9618c607b432ea72e5aaa53866f07444269f38cb537f3feR237.\n\nWe missed this during the refactor because we had no tests in place to test this mode.\n\nReviewers: Chia-Ping Tsai <chia7712@gmail.com>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1677187953,
    "epoch_utc": null
  },
  {
    "commit": "97efdc65f082d72b7980e6a8b1d56ba0d70002fd",
    "author": "Dejan Stojadinovi\u0107",
    "author_email": "dejan2609@users.noreply.github.com",
    "date": "Thu Feb 23 14:46:53 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 23 05:46:53 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "Jenkinsfile"
      ]
    },
    "message": "KAFKA-14728: Don't run 'spotlessScalaCheck' in CI (#13263)\n\nBlocks #13205.\n\nRationale:\n- build works fine in trunk with Gradle 7.6 and spotless gradle plugin 6.13.0 for all currently used JDK versions (that is: JDK 8 / JDK 11 / JDK 17)\n- however, recent spotless gradle plugin versions (6.14.+) support only JDK 11+ versions: https://github.com/diffplug/spotless/blob/main/plugin-gradle/CHANGES.md#6140---2023-01-26\n- given a fact that Kafka still needs to support JDK 8 builds (until Kafka version 4.0) it is reasonable to simply remove spotless checks out of Jenkinsfile (and re-introduce them when the time comes).\n\nFor even more details see GitHub discussion here: https://github.com/apache/kafka/pull/13205#issuecomment-1431575644\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1677174413,
    "epoch_utc": null
  },
  {
    "commit": "61ece48a86263d8c4275effecd13e6f70f928c07",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Thu Feb 23 19:13:09 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 23 19:13:09 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 5,
      "deletions": 2,
      "files": [
        "core/src/test/scala/unit/kafka/server/LeaderElectionTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala"
      ]
    },
    "message": "MINOR: stabilize LeaderElectionTest#testLeaderElectionAndEpoch (#13290)\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1677190389,
    "epoch_utc": null
  },
  {
    "commit": "8c84d29c2e4f5f056a46e7453c4aa634358ee7bf",
    "author": "Lucia Cerchie",
    "author_email": "luciacerchie@gmail.com",
    "date": "Wed Feb 22 23:51:51 2023 -0700",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Feb 22 22:51:51 2023 -0800",
    "stats": {
      "files_changed": 2,
      "insertions": 71,
      "deletions": 15,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/InternalTopicManager.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopicManagerTest.java"
      ]
    },
    "message": "KAFKA-14128: Kafka Streams does not handle TimeoutException (#13161)\n\nKafka Streams is supposed to handle TimeoutException during internal topic creation gracefully. This PR fixes the exception handling code to avoid crashing on an TimeoutException returned by the admin client.\n\nReviewer: Matthias J. Sax <matthias@confluent.io>, Colin Patrick McCabe <cmccabe@apache.org>, Alexandre Dupriez (@Hangleton)",
    "epoch": 1677120711,
    "epoch_utc": null
  },
  {
    "commit": "ea08d0dd29750b0af25c6d8c3cf14f976848eb6f",
    "author": "Nikolay",
    "author_email": "nizhikov@apache.org",
    "date": "Thu Feb 23 05:23:59 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 23 10:23:59 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 2,
      "files": [
        "core/src/main/scala/kafka/zk/KafkaZkClient.scala"
      ]
    },
    "message": "MINOR: Adjust logging with ZK log format (#13281)\n\nThis PR adjust Kafka log format with ZK by printing ZK session id in hex format like ZK do.\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1677140639,
    "epoch_utc": null
  },
  {
    "commit": "3fe2f8c4427123814fdeb8e6f620fb9c79274878",
    "author": "bachmanity1",
    "author_email": "81428651+bachmanity1@users.noreply.github.com",
    "date": "Thu Feb 23 11:13:18 2023 +0900",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 23 10:13:18 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 37,
      "deletions": 8,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/protocol/types/Type.java",
        "clients/src/test/java/org/apache/kafka/common/protocol/types/ProtocolSerializationTest.java"
      ]
    },
    "message": "MINOR: after reading BYTES type it's possible to access data beyond its size (#13261)\n\nAfter reading data of type BYTES, COMPACT_BYTES, NULLABLE_BYTES or COMPACT_NULLABLE_BYTES returned ByteBuffer might have a capacity that is larger than its limit, thus these data types may access data that lies beyond its size by increasing limit of the returned ByteBuffer. I guess this is not very critical but I think it would be good to restrict increasing limit of the returned ByteBuffer by making its capacity strictly equal to its limit. I think someone might unintentionally mishandle these data types and accidentally mess up data in the ByteBuffer from which they were read.\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1677161598,
    "epoch_utc": null
  },
  {
    "commit": "db6beb9b0302ce99d0a768d90a125f6a084aa48b",
    "author": "Kowshik Prakasam",
    "author_email": "kprakasam@confluent.io",
    "date": "Wed Feb 22 13:23:14 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Feb 22 13:23:14 2023 -0800",
    "stats": {
      "files_changed": 2,
      "insertions": 91,
      "deletions": 0,
      "files": [
        "core/src/test/scala/kafka/server/LocalLeaderEndPointTest.scala",
        "core/src/test/scala/kafka/server/RemoteLeaderEndPointTest.scala"
      ]
    },
    "message": "MINOR: Add missing unit tests for {Local|Remote}LeaderEndpoint classes (#13272)\n\nReviewers: Satish Duggana <satishd@apache.org>, Jun Rao <junrao@gmail.com>",
    "epoch": 1677082994,
    "epoch_utc": null
  },
  {
    "commit": "069ce59e1e33f47c000d8cdc247851f2e0a82154",
    "author": "Satish Duggana",
    "author_email": "satishd@apache.org",
    "date": "Wed Feb 22 23:12:04 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Feb 22 23:12:04 2023 +0530",
    "stats": {
      "files_changed": 25,
      "insertions": 529,
      "deletions": 240,
      "files": [
        "checkstyle/suppressions.xml",
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/main/scala/kafka/log/LogSegment.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/raft/KafkaMetadataLog.scala",
        "core/src/main/scala/kafka/server/AbstractFetcherThread.scala",
        "core/src/main/scala/kafka/server/ReplicaAlterLogDirsThread.scala",
        "core/src/main/scala/kafka/server/ReplicaFetcherThread.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/other/kafka/StressTestLog.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionLockTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupMetadataManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerParameterizedIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogSegmentTest.scala",
        "core/src/test/scala/unit/kafka/log/LogTestUtils.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/server/AbstractFetcherManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/AbstractFetcherThreadTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaFetcherThreadTest.scala",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/fetcher/ReplicaFetcherThreadBenchmark.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LeaderHwChange.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogAppendInfo.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/RollParams.java"
      ]
    },
    "message": "KAFKA 14714: Move/Rewrite RollParams, LogAppendInfo, and LeaderHwChange to storage module. (#13255)\n\nReviewers: Jun Rao <junrao@gmail.com>, Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1677118324,
    "epoch_utc": null
  },
  {
    "commit": "56c84853ec7bcf1dda861a669518fe7f3c2c2bcd",
    "author": "Jakub Scholz",
    "author_email": "www@scholzj.com",
    "date": "Wed Feb 22 11:57:38 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Feb 22 11:57:38 2023 +0100",
    "stats": {
      "files_changed": 2,
      "insertions": 0,
      "deletions": 2,
      "files": [
        "config/connect-log4j.properties",
        "tests/kafkatest/services/templates/connect_log4j.properties"
      ]
    },
    "message": "MINOR: Remove unused ZooKeeper log level configuration from `connect-log4j.properties` (#13216)\n\nSigned-off-by: Jakub Scholz <www@scholzj.com>\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Federico Valeri <fedevaleri@gmail.com>",
    "epoch": 1677077858,
    "epoch_utc": null
  },
  {
    "commit": "30d7d3b5ce42ed7663a90193be47e30aab75537f",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Wed Feb 22 11:52:21 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Feb 22 11:52:21 2023 +0800",
    "stats": {
      "files_changed": 3,
      "insertions": 28,
      "deletions": 0,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/protocol/types/TaggedFields.java",
        "clients/src/main/java/org/apache/kafka/common/protocol/types/Type.java",
        "clients/src/test/java/org/apache/kafka/common/protocol/types/ProtocolSerializationTest.java"
      ]
    },
    "message": "MINOR: add size check for tagged fields (#13100)\n\nAdd size check for taggedFields of a tag, and add tests.\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1677077541,
    "epoch_utc": null
  },
  {
    "commit": "a2c9f421af40e0c8ace722be94aedf8dec4f2b31",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Tue Feb 21 13:27:54 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 21 13:27:54 2023 -0800",
    "stats": {
      "files_changed": 2,
      "insertions": 302,
      "deletions": 0,
      "files": [
        ".../src/main/java/org/apache/kafka/streams/state/internals/ChangeLoggingVersionedKeyValueBytesStore.java",
        ".../test/java/org/apache/kafka/streams/state/internals/ChangeLoggingVersionedKeyValueBytesStoreTest.java"
      ]
    },
    "message": "KAFKA-14491: [10/N] Add changelogging wrapper for versioned stores (#13251)\n\nIntroduces the changelogging layer for the new versioned key-value store introduced in KIP-889. The changelogging layer operate on VersionedBytesStore rather than VersionedKeyValueStore so that the outermost metered store can serialize to bytes once and then all inner stores operate only with bytes types.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1676996874,
    "epoch_utc": null
  },
  {
    "commit": "0fc029c6a47a7a930a2b078569de1173cdb547a4",
    "author": "Lucas Brutschy",
    "author_email": "lucasbru@users.noreply.github.com",
    "date": "Tue Feb 21 19:17:09 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 21 10:17:09 2023 -0800",
    "stats": {
      "files_changed": 12,
      "insertions": 189,
      "deletions": 66,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/DefaultStateUpdater.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/ReadOnlyTask.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StateUpdater.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java",
        ".../java/org/apache/kafka/streams/processor/internals/namedtopology/KafkaStreamsNamedTopologyWrapper.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/PauseResumeIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/DefaultStateUpdaterTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/ReadOnlyTaskTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java"
      ]
    },
    "message": "KAFKA-14299: Fix pause and resume with state updater (#13025)\n\n* Fixes required to make the PauseResumeIntegrationTest pass. It was not enabled and it does not pass for the state updater code path.\n\n* Make sure no progress is made on paused topologies. The state updater restored one round of polls from the restore\nconsumer before realizing that a newly added task was already in paused state when being added.\n\n* Wake up state updater when tasks are being resumed. If a task is resumed, it may be necessary to wake up the state updater from waiting on the tasksAndActions condition.\n\n* Make sure that allTasks methods also return the tasks that are currently being restored.\n\n* Enable PauseResumeIntegrationTest and upgrade it to JUnit5.\n\nReviewers: Bruno Cadonna <cadonna@apache.org>, Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1677017829,
    "epoch_utc": null
  },
  {
    "commit": "c9a42c85e2c903329b3550181d230527e90e3646",
    "author": "Kirk True",
    "author_email": "kirk@kirktrue.pro",
    "date": "Tue Feb 21 09:00:35 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 21 09:00:35 2023 -0800",
    "stats": {
      "files_changed": 9,
      "insertions": 3363,
      "deletions": 2871,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/OffsetFetcher.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/SubscriptionState.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/TopicMetadataFetcher.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetcherTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/OffsetFetcherTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/TopicMetadataFetcherTest.java"
      ]
    },
    "message": "KAFKA-14675: Extract metadata-related tasks from Fetcher into MetadataFetcher 1/4 (#13192)\n\nThe `Fetcher` class is used internally by the `KafkaConsumer`\u00a0to fetch records from the brokers. There is [ongoing work to create a new consumer implementation with a significantly refactored threading model](https://issues.apache.org/jira/browse/KAFKA-14246). The threading refactor work requires a similarly refactored `Fetcher`.\n\nThis task covers the work to extract from `Fetcher` the APIs that are related to metadata operations into two new classes: `OffsetFetcher` and `TopicMetadataFetcher`. This will allow the refactoring of `Fetcher`\u00a0and `MetadataFetcher` for the new consumer.\n\nReviewers: Philip Nee <pnee@confluent.io>, Guozhang Wang <guozhang@apache.org>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1676980835,
    "epoch_utc": null
  },
  {
    "commit": "c39123d83d996edfdc23cdd50be8e51853b6cf1d",
    "author": "Purshotam Chauhan",
    "author_email": "pchauhan@confluent.io",
    "date": "Tue Feb 21 19:21:15 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 21 19:21:15 2023 +0530",
    "stats": {
      "files_changed": 6,
      "insertions": 459,
      "deletions": 247,
      "files": [
        "core/src/test/scala/unit/kafka/security/authorizer/{AclAuthorizerTest.scala => AuthorizerTest.scala}",
        "metadata/src/main/java/org/apache/kafka/controller/AclControlManager.java",
        "metadata/src/main/java/org/apache/kafka/metadata/authorizer/StandardAuthorizerData.java",
        "metadata/src/test/java/org/apache/kafka/controller/MockAclControlManager.java",
        "metadata/src/test/java/org/apache/kafka/metadata/authorizer/MockAclMutator.java",
        "metadata/src/test/java/org/apache/kafka/metadata/authorizer/StandardAuthorizerTest.java"
      ]
    },
    "message": "KAKFA-14733: Added a few missing checks for Kraft Authorizer and updated AclAuthorizerTest to run tests for both zk and kraft (#13282)\n\nAdded the following checks -\n* In StandardAuthorizerData.authorize() to fail if `patternType` other than `LITERAL` is passed.\n* In AclControlManager.addAcl() to fail if Resource Name is null or empty.\n\nAlso, updated `AclAuthorizerTest` includes a lot of tests covering various scenarios that are missing in `StandardAuthorizerTest`. This PR changes the AclAuthorizerTest to run tests for both `zk` and `kraft` modes -\n* Rename AclAuthorizerTest -> AuthorizerTest\n* Parameterize relevant tests to run for both modes\n\nReviewers: Manikumar Reddy <manikumar.reddy@gmail.com>",
    "epoch": 1677018075,
    "epoch_utc": null
  },
  {
    "commit": "cbd46160e9f1a9327484ac2b9a5cf1c4f286bad9",
    "author": "Ron Dagostino",
    "author_email": "rndgstn@gmail.com",
    "date": "Tue Feb 21 08:37:48 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 21 08:37:48 2023 -0500",
    "stats": {
      "files_changed": 2,
      "insertions": 3,
      "deletions": 3,
      "files": [
        "LICENSE-binary",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "KAFKA-14731: Upgrade ZooKeeper to 3.6.4 (#13273)\n\nReviewers: Colin Patrick McCabe <cmccabe@apache.org>",
    "epoch": 1676979468,
    "epoch_utc": null
  },
  {
    "commit": "81b3b2fb3399ab2784eb8158564fc1c9a1299a8d",
    "author": "RivenSun",
    "author_email": "91005273+RivenSun2@users.noreply.github.com",
    "date": "Tue Feb 21 12:37:42 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 21 10:07:42 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 8,
      "deletions": 4,
      "files": [
        "core/src/main/scala/kafka/server/DelegationTokenManager.scala",
        "core/src/test/scala/unit/kafka/security/token/delegation/DelegationTokenManagerTest.scala"
      ]
    },
    "message": "KAFKA-13771: Support to explicitly delete delegationTokens that have expired but have not been automatically cleaned up (#11976)\n\nReviewers: Manikumar Reddy <manikumar.reddy@gmail.com>",
    "epoch": 1676993862,
    "epoch_utc": null
  },
  {
    "commit": "ba6989a77ec799c0875564207828c09216e36bb2",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Tue Feb 21 11:14:25 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 21 08:44:25 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 7,
      "deletions": 0,
      "files": [
        "core/src/test/scala/unit/kafka/log/remote/RemoteIndexCacheTest.scala"
      ]
    },
    "message": "[MINOR] assert the cache size for each operation in RemoteIndexCacheTest (#13244)\n\nReviewers: Satish Duggana <satishd@apache.org>",
    "epoch": 1676988865,
    "epoch_utc": null
  },
  {
    "commit": "4dd27a9f2116edfd22b4dc7368a62fedef28fe3b",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Mon Feb 20 08:26:17 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Feb 20 08:26:17 2023 +0100",
    "stats": {
      "files_changed": 8,
      "insertions": 647,
      "deletions": 25,
      "files": [
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/log/LogTestUtils.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogOffsetsListener.java"
      ]
    },
    "message": "KAFKA-14673; Add high watermark listener to Partition/Log layers (#13196)\n\nIn the context of KIP-848, we implements are new group coordinator in Java. This new coordinator follows the architecture of the new quorum controller. It is basically a replicated state machine that writes to the log and commits its internal state when the writes are committed. At the moment, the only way to know when a write is committed is to use a delayed fetch. This is not ideal in our context because a delayed fetch can be completed before the write is actually committed to the log.\n\nThis patch proposes to introduce a high watermark listener to the Partition/Log layers. This will allow the new group coordinator to simply listen to changes and commit its state based on this. This mechanism is simpler and lighter as well.\n\nReviewers: Christo Lolov <lolovc@amazon.com>, Justine Olshan <jolshan@confluent.io>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1676892377,
    "epoch_utc": null
  },
  {
    "commit": "a54a34a11c1c867ff62a7234334cad5139547fd7",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Fri Feb 17 14:25:17 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Feb 17 17:25:17 2023 -0500",
    "stats": {
      "files_changed": 11,
      "insertions": 507,
      "deletions": 159,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointTask.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/OffsetSyncStore.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorCheckpointTaskTest.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/OffsetSyncStoreTest.java",
        ".../src/test/java/org/apache/kafka/connect/mirror/integration/IdentityReplicationIntegrationTest.java",
        ".../src/test/java/org/apache/kafka/connect/mirror/integration/MirrorConnectorsIntegrationBaseTest.java",
        ".../test/java/org/apache/kafka/connect/mirror/integration/MirrorConnectorsIntegrationExactlyOnceTest.java",
        ".../java/org/apache/kafka/connect/mirror/integration/MirrorConnectorsIntegrationTransactionsTest.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/TopicAdmin.java"
      ]
    },
    "message": "KAFKA-12468, KAFKA-13659, KAFKA-12566: Fix MM2 causing negative downstream lag, syncing stale offsets, and flaky integration tests (#13178)\n\nKAFKA-12468: Fix negative lag on down consumer groups synced by MirrorMaker 2\n\nKAFKA-13659: Stop syncing consumer groups with stale offsets in MirrorMaker 2\n\nKAFKA-12566: Fix flaky MirrorMaker 2 integration tests\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1676654717,
    "epoch_utc": null
  },
  {
    "commit": "2e3bbe63c1d7a5484d0475c57e82011fada9cfa5",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Fri Feb 17 11:06:04 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Feb 17 11:06:04 2023 -0800",
    "stats": {
      "files_changed": 5,
      "insertions": 413,
      "deletions": 0,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/state/VersionedBytesStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/VersionedBytesStoreSupplier.java",
        ".../main/java/org/apache/kafka/streams/state/internals/RocksDbVersionedKeyValueBytesStoreSupplier.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/VersionedKeyValueToBytesStoreAdapter.java",
        ".../java/org/apache/kafka/streams/state/internals/RocksDbVersionedKeyValueBytesStoreSupplierTest.java"
      ]
    },
    "message": "KAFKA-14491: [9/N] Add versioned bytes store and supplier (#13250)\n\nAs part of introducing versioned key-value stores in KIP-889, we'd like a way to represent a versioned key-value store (VersionedKeyValueStore<Bytes, byte[]>) as a regular key-value store (KeyValueStore<Bytes, byte[]>) in order to be compatible with existing DSL methods for passing key-value stores, e.g., StreamsBuilder#table() and KTable methods, which are explicitly typed to accept Materialized<K, V, KeyValueStore<Bytes, byte[]>. This way, we do not need to introduce new versions of all relevant StreamsBuilder and KTable methods to relax the Materialized type to accept versioned stores.\n\nThis PR introduces the new VersionedBytesStore extends KeyValueStore<Bytes, byte[]> interface for this purpose, along with the corresponding supplier (VersionedBytesStoreSupplier) and implementation (RocksDbVersionedKeyValueBytesStoreSupplier). The RocksDbVersionedKeyValueBytesStoreSupplier implementation leverages an adapter (VersionedKeyValueToBytesStoreAdapter) to assist in converting from VersionedKeyValueStore to VersionedBytesStore.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1676642764,
    "epoch_utc": null
  },
  {
    "commit": "7e149990bdd2a0010ad8c970e46427dbb3164071",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Sat Feb 18 00:40:34 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Feb 17 08:40:34 2023 -0800",
    "stats": {
      "files_changed": 4,
      "insertions": 49,
      "deletions": 1,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java",
        "streams/src/test/java/org/apache/kafka/streams/KafkaStreamsWrapper.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/AdjustStreamThreadCountTest.java"
      ]
    },
    "message": "KAFKA-14717 KafkaStreams can' get running if the rebalance happens be\u2026 (#13248)\n\nI noticed this issue when tracing #12590.\n\nStreamThread closes the consumer before changing state to DEAD. If the partition rebalance happens quickly, the other StreamThreads can't change KafkaStream state from REBALANCING to RUNNING since there is a PENDING_SHUTDOWN StreamThread\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1676691634,
    "epoch_utc": null
  },
  {
    "commit": "38e43116222a28b4e44c75c9d41855e437801efa",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Fri Feb 17 10:31:32 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Feb 17 10:31:32 2023 -0500",
    "stats": {
      "files_changed": 1,
      "insertions": 8,
      "deletions": 6,
      "files": [
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/entities/PluginInfoTest.java"
      ]
    },
    "message": "MINOR: Fix PluginInfoTest for Connect (#13266)\n\nReviewers: Kamal Chandraprakash <kchandraprakash@uber.com>\n\nNote: Merged without committer review in order to fix the build on trunk",
    "epoch": 1676640692,
    "epoch_utc": null
  },
  {
    "commit": "322ac86ba282f35373382854cc9e790e4b7fb5fc",
    "author": "Satish Duggana",
    "author_email": "satishd@apache.org",
    "date": "Fri Feb 17 09:21:17 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Feb 17 11:51:17 2023 +0800",
    "stats": {
      "files_changed": 26,
      "insertions": 222,
      "deletions": 164,
      "files": [
        "build.gradle",
        "checkstyle/import-control-core.xml",
        "core/src/main/scala/kafka/common/InterBrokerSendThread.scala",
        "core/src/main/scala/kafka/common/ZkNodeChangeNotificationListener.scala",
        "core/src/main/scala/kafka/controller/ControllerChannelManager.scala",
        "core/src/main/scala/kafka/controller/ControllerEventManager.scala",
        "core/src/main/scala/kafka/log/LogCleaner.scala",
        "core/src/main/scala/kafka/log/remote/RemoteIndexCache.scala",
        "core/src/main/scala/kafka/raft/RaftManager.scala",
        "core/src/main/scala/kafka/raft/TimingWheelExpirationService.scala",
        "core/src/main/scala/kafka/server/AbstractFetcherThread.scala",
        "core/src/main/scala/kafka/server/ClientQuotaManager.scala",
        "core/src/main/scala/kafka/server/DelayedOperation.scala",
        "core/src/main/scala/kafka/server/FinalizedFeatureChangeListener.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/main/scala/kafka/tools/ReplicaVerificationTool.scala",
        "core/src/main/scala/kafka/tools/TestRaftServer.scala",
        "core/src/main/scala/kafka/utils/ShutdownableThread.scala",
        "core/src/test/scala/integration/kafka/api/AbstractConsumerTest.scala",
        "core/src/test/scala/integration/kafka/api/ConsumerBounceTest.scala",
        "core/src/test/scala/integration/kafka/api/TransactionsBounceTest.scala",
        "core/src/test/scala/integration/kafka/server/DynamicBrokerReconfigurationTest.scala",
        "core/src/test/scala/other/kafka/TestPurgatoryPerformance.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/utils/ShutdownableThreadTest.scala",
        "server-common/src/main/java/org/apache/kafka/server/util/ShutdownableThread.java"
      ]
    },
    "message": "KAFKA-14706: Move/rewrite ShutdownableThread to server-common module. (#13234)\n\nMove/rewrite ShutdownableThread to server-common module.\n\nReviewers: Luke Chen <showuon@gmail.com>, Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1676636477,
    "epoch_utc": null
  },
  {
    "commit": "82d5720aae78c9e17606c8345dfc208557f9a8f2",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Thu Feb 16 16:54:50 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 16 16:54:50 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 14,
      "deletions": 8,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java"
      ]
    },
    "message": "KAFKA-14253 - More informative logging (#13253)\n\nIncludes 2 requirements from the ticket:\n* Include the number of members in the group (I.e., \"15 members participating\" and \"to 15 clients as\")\n* Sort the member ids (to help compare the membership and assignment across rebalances)\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1676577290,
    "epoch_utc": null
  },
  {
    "commit": "aea6090ce479a06ea5489a54aeecf9b40233a3a1",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Thu Feb 16 15:51:34 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 16 18:51:34 2023 -0500",
    "stats": {
      "files_changed": 4,
      "insertions": 39,
      "deletions": 43,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractWorkerSourceTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ExactlyOnceWorkerSourceTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/OffsetStorageWriter.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/ExactlyOnceWorkerSourceTaskTest.java"
      ]
    },
    "message": "KAFKA-14727: Enable periodic offset commits for EOS source tasks (#13262)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1676573494,
    "epoch_utc": null
  },
  {
    "commit": "f3dc3f0dad1d781e01319847ecd2db0cde916f86",
    "author": "Terry",
    "author_email": "beardt@hotmail.com",
    "date": "Thu Feb 16 12:39:24 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 16 12:39:24 2023 -0500",
    "stats": {
      "files_changed": 6,
      "insertions": 166,
      "deletions": 40,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/config/AbstractConfig.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java",
        "clients/src/test/java/org/apache/kafka/common/config/AbstractConfigTest.java",
        "clients/src/test/java/org/apache/kafka/test/MockConsumerInterceptor.java",
        "clients/src/test/java/org/apache/kafka/test/MockProducerInterceptor.java"
      ]
    },
    "message": "Kafka 14565: On failure, close AutoCloseable objects instantiated and configured by AbstractConfig (#13168)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1676561964,
    "epoch_utc": null
  },
  {
    "commit": "ba0c5b0902d4b259505cf4a7c2a45e98182a372b",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Thu Feb 16 15:13:31 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 16 16:13:31 2023 +0100",
    "stats": {
      "files_changed": 35,
      "insertions": 155,
      "deletions": 214,
      "files": [
        "clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/ConsumerPartitionAssignorTest.java",
        "clients/src/test/java/org/apache/kafka/common/header/internals/RecordHeadersTest.java",
        "clients/src/test/java/org/apache/kafka/common/network/SelectorTest.java",
        "clients/src/test/java/org/apache/kafka/common/utils/ImplicitLinkedHashCollectionTest.java",
        "clients/src/test/java/org/apache/kafka/common/utils/ImplicitLinkedHashMultiCollectionTest.java",
        ".../src/test/java/org/apache/kafka/connect/rest/basic/auth/extension/JaasBasicAuthFilterTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/BlockingConnectorTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/AbstractWorkerSourceTaskTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/ExactlyOnceWorkerSourceTaskTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/entities/PluginInfoTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/BrokerHeartbeatManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/ReplicationControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/ResultOrErrorTest.java",
        "metadata/src/test/java/org/apache/kafka/image/TopicsImageTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/KafkaConfigSchemaTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/authorizer/StandardAuthorizerTest.java",
        "metadata/src/test/java/org/apache/kafka/metalog/LocalLogManagerTest.java",
        "server-common/src/test/java/org/apache/kafka/timeline/BaseHashTableTest.java",
        "server-common/src/test/java/org/apache/kafka/timeline/SnapshottableHashTableTest.java",
        "server-common/src/test/java/org/apache/kafka/timeline/TimelineHashMapTest.java",
        "shell/src/test/java/org/apache/kafka/shell/GlobComponentTest.java",
        "shell/src/test/java/org/apache/kafka/shell/MetadataNodeTest.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/metadata/storage/RemoteLogSegmentLifecycleTest.java",
        "streams/src/test/java/org/apache/kafka/streams/KeyValueTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/StoreUpgradeIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamNewProcessorApiTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/graph/GraphGraceSearchUtilTest.java",
        "streams/src/test/java/org/apache/kafka/streams/kstream/internals/graph/TableProcessorNodeTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/CachingInMemoryKeyValueStoreTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/MeteredTimestampedKeyValueStoreTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/ThreadCacheTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/TimeOrderedWindowStoreTest.java",
        "streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java"
      ]
    },
    "message": "MINOR: Simplify JUnit assertions in tests; remove accidental unnecessary code in tests (#13219)\n\n* assertEquals called on array\n* Method is identical to its super method\n* Simplifiable assertions\n* Unused imports\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1676571211,
    "epoch_utc": 1676560411
  },
  {
    "commit": "38662bb52dedcd0e5a48fa6c1a10229ff5863ccd",
    "author": "Satish Duggana",
    "author_email": "satishd@apache.org",
    "date": "Thu Feb 16 18:51:30 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 16 18:51:30 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 18,
      "deletions": 7,
      "files": [
        "core/src/test/scala/integration/kafka/api/TransactionsTest.scala",
        "core/src/test/scala/unit/kafka/log/ProducerStateManagerTest.scala"
      ]
    },
    "message": "MINOR Added assertion checks in tests for ProducerStateManager.activeProducers usages (#13235)\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1676584290,
    "epoch_utc": null
  },
  {
    "commit": "6d6407523044bf8f122ad12a5344071d525422db",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Wed Feb 15 19:28:32 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 16 11:28:32 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 16,
      "deletions": 15,
      "files": [
        "examples/src/main/java/kafka/examples/Consumer.java"
      ]
    },
    "message": "KAFKA-14708: Use Java thread instead of kafka library for example purpose (#13238)\n\nRemove \"kafka.examples.Consumer\" dependency on ShutdownableThread. \"examples\" module should be dependent only on public APIs but not to be dependent upon server common/internal components.\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1676500112,
    "epoch_utc": null
  },
  {
    "commit": "958bc0601c7852b8aaf28960280b1f45efd7d850",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Wed Feb 15 18:29:20 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Feb 15 21:29:20 2023 -0500",
    "stats": {
      "files_changed": 10,
      "insertions": 147,
      "deletions": 37,
      "files": [
        "checkstyle/suppressions.xml",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractWorkerSourceTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ExactlyOnceWorkerSourceTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSinkTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSourceTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/OffsetStorageWriter.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/ExactlyOnceWorkerSourceTaskTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerSinkTaskTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerSourceTaskTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/OffsetStorageWriterTest.java"
      ]
    },
    "message": "KAFKA-5756: Wait for concurrent source task offset flush to complete before starting next flush (#13208)\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1676496560,
    "epoch_utc": null
  },
  {
    "commit": "dcaf95a35f4ba7de73433aa5a5b1a33427744e45",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Wed Feb 15 18:07:47 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Feb 15 18:07:47 2023 -0800",
    "stats": {
      "files_changed": 6,
      "insertions": 378,
      "deletions": 1,
      "files": [
        "gradle/spotbugs-exclude.xml",
        "streams/src/main/java/org/apache/kafka/streams/state/ValueAndTimestamp.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/NullableValueAndTimestampDeserializer.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/NullableValueAndTimestampSerde.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/NullableValueAndTimestampSerializer.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/NullableValueAndTimestampSerdeTest.java"
      ]
    },
    "message": "KAFKA-14491: [8/N] Add serdes for ValueAndTimestamp with null value (#13249)\n\nIntroduces a new Serde, that serializes a value and timestamp as a single byte array, where the value may be null (in order to represent putting a tombstone with timestamp into the versioned store).\n\nPart of KIP-889.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1676495267,
    "epoch_utc": null
  },
  {
    "commit": "bfeef298041add5d10f4279119aff2209d51d284",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Wed Feb 15 18:02:20 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Feb 15 18:02:20 2023 -0800",
    "stats": {
      "files_changed": 3,
      "insertions": 177,
      "deletions": 25,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/state/VersionedKeyValueStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBVersionedStore.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBVersionedStoreTest.java"
      ]
    },
    "message": "KAFKA-14491: [7/N] Enforce strict grace period for versioned stores (#13243)\n\nChanges the versioned store semantics to define an explicit \"grace period\" property. Grace period will always be equal to the history retention, though in the future we could introduce a new KIP to expose options to configure grace period separately.\n\nPart of KIP-889.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1676494940,
    "epoch_utc": null
  },
  {
    "commit": "35142d43e6aa55bd11484224b8b09a83800d3a22",
    "author": "Jason Gustafson",
    "author_email": "jason@confluent.io",
    "date": "Wed Feb 15 14:40:00 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Feb 15 14:40:00 2023 -0800",
    "stats": {
      "files_changed": 5,
      "insertions": 231,
      "deletions": 31,
      "files": [
        "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java",
        "raft/src/main/java/org/apache/kafka/raft/internals/KafkaRaftMetrics.java",
        "raft/src/main/java/org/apache/kafka/raft/internals/TimeRatio.java",
        "raft/src/test/java/org/apache/kafka/raft/internals/KafkaRaftMetricsTest.java",
        "raft/src/test/java/org/apache/kafka/raft/internals/TimeRatioTest.java"
      ]
    },
    "message": "KAFKA-14664; Fix inaccurate raft idle ratio metric (#13207)\n\nThe raft idle ratio is currently computed as the average of all recorded poll durations. This tends to underestimate the actual idle ratio since it treats all measurements equally regardless how much time was spent. For example, say we poll twice with the following durations:\n\nPoll 1: 2s\nPoll 2: 0s\n\nAssume that the busy time is negligible, so 2s passes overall.\n\nIn the first measurement, 2s is spent waiting, so we compute and record a ratio of 1.0. In the second measurement, no time passes, and we record 0.0. The idle ratio is then computed as the average of these two values (1.0 + 0.0 / 2 = 0.5), which suggests that the process was busy for 1s, which overestimates the true busy time.\n\nIn this patch, we create a new `TimeRatio` class which tracks the total duration of a periodic event over a full interval of time measurement.\n\nReviewers: Jos\u00e9 Armando Garc\u00eda Sancio <jsancio@apache.org>",
    "epoch": 1676482800,
    "epoch_utc": null
  },
  {
    "commit": "b9754747d6eaa029c4bb69b073d749ff8df15908",
    "author": "D\u00e1niel Urb\u00e1n",
    "author_email": "48119872+urbandan@users.noreply.github.com",
    "date": "Tue Feb 14 22:36:34 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 14 16:36:34 2023 -0500",
    "stats": {
      "files_changed": 2,
      "insertions": 37,
      "deletions": 10,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorMakerConfig.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorMakerConfigTest.java"
      ]
    },
    "message": "KAFKA-14653: Use raw properties instead of post-resolution properties for MirrorMaker connectors(#13163)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1676424994,
    "epoch_utc": null
  },
  {
    "commit": "10164a6d2e1373c5cf57e37f63a3b10d07db6091",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Tue Feb 14 09:53:38 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 14 09:53:38 2023 -0800",
    "stats": {
      "files_changed": 7,
      "insertions": 192,
      "deletions": 63,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/utils/Exit.java",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/server/SharedServer.scala",
        "core/src/main/scala/kafka/tools/TestRaftServer.scala",
        "server-common/src/main/java/org/apache/kafka/server/fault/ProcessExitingFaultHandler.java",
        "server-common/src/main/java/org/apache/kafka/server/fault/ProcessTerminatingFaultHandler.java",
        "server-common/src/test/java/org/apache/kafka/server/fault/ProcessTerminatingFaultHandlerTest.java"
      ]
    },
    "message": "KAFKA-14693; Kafka node should halt instead of exit (#13227)\n\nExtend the implementation of ProcessTerminatingFaultHandler to support calling either Exit.halt or Exit.exit. Change the fault handler used by the Controller thread and the KRaft thread to use a halting fault handler.\n\nThose threads cannot call Exit.exit because Runtime.exit joins on the default shutdown hook thread. The shutdown hook thread joins on the controller and kraft thread terminating. This causes a deadlock.\n\nReviewers: Colin Patrick McCabe <cmccabe@apache.org>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1676379218,
    "epoch_utc": null
  },
  {
    "commit": "9584b48a2a873c692d5054dd06b66232dc25e080",
    "author": "Jason Gustafson",
    "author_email": "jason@confluent.io",
    "date": "Tue Feb 14 09:15:05 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 14 09:15:05 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 15,
      "deletions": 5,
      "files": [
        "core/src/main/scala/kafka/log/LogManager.scala"
      ]
    },
    "message": "MINOR: Better logging to distinguish clean vs unclean loading times (#13242)\n\nCurrent log loading logging makes it difficult to analyze the behavior in the case of clean and unclean shutdown. The log message looks the same either way. Additionally, the logging about unclean recovery also catches the case when a new broker is initializing from an empty log dir. This patch adds some additional information to existing log messages to make it easier to distinguish these cases.\n\nReviewers: David Jacot <djacot@confluent.io>",
    "epoch": 1676376905,
    "epoch_utc": null
  },
  {
    "commit": "fa43f1304414496523866a2e789cac11aba6d0c7",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Tue Feb 14 10:24:20 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 14 10:24:20 2023 +0100",
    "stats": {
      "files_changed": 8,
      "insertions": 53,
      "deletions": 54,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/admin/ListConsumerGroupOffsetsResult.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/Callback.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/Partitioner.java",
        "clients/src/main/java/org/apache/kafka/clients/producer/UniformStickyPartitioner.java",
        "clients/src/main/java/org/apache/kafka/common/KafkaFuture.java",
        "clients/src/main/java/org/apache/kafka/common/security/oauthbearer/OAuthBearerLoginCallbackHandler.java",
        "clients/src/main/java/org/apache/kafka/common/security/oauthbearer/secured/package-info.java"
      ]
    },
    "message": "MINOR: Various cleanups in clients javadoc (#13239)\n\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1676381060,
    "epoch_utc": null
  },
  {
    "commit": "bd32d98bd7cbd8cff35d6786bc8b00061e0fedf7",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Tue Feb 14 09:54:32 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 14 09:54:32 2023 +0100",
    "stats": {
      "files_changed": 3,
      "insertions": 187,
      "deletions": 34,
      "files": [
        "core/src/main/scala/kafka/server/AbstractFetcherThread.scala",
        "core/src/test/scala/unit/kafka/server/AbstractFetcherThreadTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaFetcherThreadTest.scala"
      ]
    },
    "message": "KAFKA-14704; Follower should truncate before incrementing high watermark (#13230)\n\nWhen a leader becomes a follower, it is likely that it has uncommitted records in its log. When it reaches out to the leader, the leader will detect that they have diverged and it will return the diverging epoch and offset. The follower truncates it log based on this.\n\nThere is a small caveat in this process. When the leader return the diverging epoch and offset, it also includes its high watermark, low watermark, start offset and end offset. The current code in the `AbstractFetcherThread` works as follow. First it process the partition data and then it checks whether there is a diverging epoch/offset. The former may accidentally expose uncommitted records as this step updates the local watermark to whatever is received from the leader. As the follower, or the former leader, may have uncommitted records, it will be able to updated the high watermark to a larger offset if the leader has a higher watermark than the current local one. This result in exposing uncommitted records until the log is finally truncated. The time window is short but a fetch requests coming at the right time to the follower could read those records. This is especially true for clients out there which uses recent versions of the fetch request but without implementing KIP-320.\n\nWhen this happens, the follower logs the following messages:\n* `Truncating XXX to offset 21434 below high watermark 21437`\n* `Non-monotonic update of high watermark from (offset=21437 segment=[20998:98390]) to (offset=21434 segment=[20998:97843])`.\n\nThis patch proposes to mitigate the issue by starting by checking on whether a diverging epoch/offset is provided by the leader and skip processing the partition data if it is. This basically means that the first fetch request will result in truncating the log and a subsequent fetch request will update the low/high watermarks.\n\nReviewers: Ritika Reddy <rreddy@confluent.io>, Justine Olshan <jolshan@confluent.io>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1676379272,
    "epoch_utc": null
  },
  {
    "commit": "1ed61e4090353bc9e4802ee09366f512dc60884f",
    "author": "Manikumar Reddy",
    "author_email": "manikumar.reddy@gmail.com",
    "date": "Fri Jan 13 23:18:02 2023 +0530",
    "commit_by": "Manikumar Reddy",
    "commit_by_email": "manikumar.reddy@gmail.com",
    "commit_by_date": "Tue Feb 14 11:18:24 2023 +0530",
    "stats": {
      "files_changed": 3,
      "insertions": 72,
      "deletions": 1,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/security/JaasContext.java",
        "clients/src/main/java/org/apache/kafka/common/security/JaasUtils.java",
        "clients/src/test/java/org/apache/kafka/common/security/JaasContextTest.java"
      ]
    },
    "message": "MINOR: Few cleanups to JaasContext/Utils classes\n\nReviewers: Rajini Sivaram <rajinisivaram@googlemail.com>",
    "epoch": 1673662682,
    "epoch_utc": null
  },
  {
    "commit": "528a777df66ab1e66544ad2a8fb3d020ff229bff",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Mon Feb 13 17:06:44 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Feb 13 17:06:44 2023 -0800",
    "stats": {
      "files_changed": 3,
      "insertions": 502,
      "deletions": 7,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBVersionedStore.java",
        ".../src/main/java/org/apache/kafka/streams/state/internals/RocksDBVersionedStoreRestoreWriteBuffer.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBVersionedStoreTest.java"
      ]
    },
    "message": "KAFKA-14491: [6/N] Support restoring RocksDB versioned store from changelog (#13189)\n\nThis PR builds on the new RocksDB-based versioned store implementation (see KIP-889) by adding code for restoring from changelog. The changelog topic format is the same as for regular timestamped key-value stores: record keys, values, and timestamps are stored in the Kafka message key, value, and timestamp, respectively. The code for actually writing to this changelog will come in a follow-up PR.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1676318804,
    "epoch_utc": null
  },
  {
    "commit": "631e6be3a02efe165611990e9f6721f7687d5457",
    "author": "Ron Dagostino",
    "author_email": "rndgstn@gmail.com",
    "date": "Mon Feb 13 18:33:20 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Feb 13 18:33:20 2023 -0500",
    "stats": {
      "files_changed": 3,
      "insertions": 28,
      "deletions": 8,
      "files": [
        "checkstyle/import-control.xml",
        "tools/src/main/java/org/apache/kafka/tools/MetadataQuorumCommand.java",
        "tools/src/test/java/org/apache/kafka/tools/MetadataQuorumCommandTest.java"
      ]
    },
    "message": "KAFKA-14711: kafaka-metadata-quorum.sh does not honor --command-confi\u2026 (#13241)\n\n\u2026g option\n\nhttps://github.com/apache/kafka/pull/12951 accidentally changed the behavior of the `kafaka-metadata-quorum.sh` CLI by making it silently ignore a `--command-config <filename>` properties file that exists. This was an undetected regression in the 3.4.0 release.  This patch fixes the issue such that any such specified file will be honored.\n\nReviewers: Jos\u00e9 Armando Garc\u00eda Sancio <jsancio@apache.org>, Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1676324000,
    "epoch_utc": null
  },
  {
    "commit": "eee2bf9686db85514c474732874d14456ae96ebc",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Mon Feb 13 09:27:55 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Feb 13 09:27:55 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 3,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/config/AbstractConfig.java"
      ]
    },
    "message": "KAFKA-6793: Unused configuration logging appears to be noisy and unnecessary  (#13225)\n\nWarnings about unused configs are most often spurious. This patch changes the current warning to an info message.\n\nReviewers: Chris Egerton <chrise@aiven.io>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1676291275,
    "epoch_utc": null
  },
  {
    "commit": "8cfafba2794562840b0f1c537e304f084b9359cf",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Mon Feb 13 10:09:14 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Feb 13 10:09:14 2023 -0500",
    "stats": {
      "files_changed": 13,
      "insertions": 351,
      "deletions": 30,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/config/AbstractConfig.java",
        "clients/src/main/java/org/apache/kafka/common/utils/Utils.java",
        "clients/src/test/java/org/apache/kafka/common/utils/UtilsTest.java",
        "connect/mirror/README.md",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorMakerConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceConnector.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorSourceConnectorTest.java",
        ".../mirror/src/test/java/org/apache/kafka/connect/mirror/integration/DedicatedMirrorIntegrationTest.java",
        ".../src/test/java/org/apache/kafka/connect/mirror/integration/IdentityReplicationIntegrationTest.java",
        ".../src/test/java/org/apache/kafka/connect/mirror/integration/MirrorConnectorsIntegrationBaseTest.java",
        ".../test/java/org/apache/kafka/connect/mirror/integration/MirrorConnectorsIntegrationExactlyOnceTest.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedConfig.java"
      ]
    },
    "message": "KAFKA-14021: Implement new KIP-618 APIs in MirrorSourceConnector (#12366)\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1676293754,
    "epoch_utc": null
  },
  {
    "commit": "959756ae9d14f434109525aa43513358a27bf75c",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Mon Feb 13 00:16:37 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Feb 13 13:46:37 2023 +0530",
    "stats": {
      "files_changed": 5,
      "insertions": 30,
      "deletions": 42,
      "files": [
        "core/src/main/scala/kafka/log/LogSegment.scala",
        "core/src/main/scala/kafka/log/remote/RemoteIndexCache.scala",
        "core/src/test/scala/unit/kafka/log/LogTestUtils.scala",
        "core/src/test/scala/unit/kafka/log/remote/RemoteIndexCacheTest.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LazyIndex.java"
      ]
    },
    "message": "MINOR: Remove unnecessary usage of `LazyIndex` (#13218)\n\nThe remote index classes use `LazyIndex`, but immediately\nforce materialization. This results in more verbose code\nand it's misleading since the indexes are not lazily\nused in practice.\n\nAlso simplify `LazyIndex.forOffset/forTime` by removing\n`writable` parameter, which is always `true`.\n\nReviewers: Satish Duggana <satishd@apache.org>",
    "epoch": 1676258197,
    "epoch_utc": null
  },
  {
    "commit": "ef9c9486dac8d6076e2897580b10a699697205ac",
    "author": "Rajini Sivaram",
    "author_email": "rajinisivaram@googlemail.com",
    "date": "Sun Feb 12 19:49:12 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Feb 12 19:49:12 2023 +0000",
    "stats": {
      "files_changed": 2,
      "insertions": 55,
      "deletions": 5,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/security/authenticator/LoginManager.java",
        "clients/src/test/java/org/apache/kafka/common/security/authenticator/LoginManagerTest.java"
      ]
    },
    "message": "KAFKA-14676: Include all SASL configs in login cache key to ensure clients in a JVM can use different OAuth configs (#13211)\n\nWe currently cache login managers in static maps for both static JAAS config using system property and for JAAS config specified using Kafka config sasl.jaas.config. In addition to the JAAS config, the login manager callback handler is included in the key, but all other configs are ignored. This implementation is based on the assumption clients that require different logins (e.g. username/password) use different JAAS configs, because login properties are included in the JAAS config rather than as separate top-level configs. The OIDC support added in KIP-768 only allows configuration of token endpoint URL as a top-level config. This results in two clients in a JVM configured with different token endpoint URLs to incorrectly share a login.\n\nThis PR includes all SASL configs prefixed with sasl. to be included in the key so that logins are only shared if all the sasl configs are identical.\n\nReviewers: Manikumar Reddy <manikumar.reddy@gmail.com>, Kirk True <kirk@mustardgrain.com>",
    "epoch": 1676242152,
    "epoch_utc": 1676231352
  },
  {
    "commit": "69f0481342b8f2dc3edd59da7ebddd249728d297",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Mon Feb 13 01:31:55 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Feb 13 01:31:55 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 18,
      "deletions": 11,
      "files": [
        "tests/kafkatest/services/monitor/jmx.py"
      ]
    },
    "message": "MINOR: the package of JmxTool is incorrect when running quota_test.py (#13233)\n\nReviewers: Federico Valeri <fedevaleri@gmail.com>, David Jacot <djacot@confluent.io>",
    "epoch": 1676262715,
    "epoch_utc": null
  },
  {
    "commit": "c576e02849b9e7ada80198de41499bcc2480bc93",
    "author": "Satish Duggana",
    "author_email": "satishd@apache.org",
    "date": "Sun Feb 12 13:00:51 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Feb 12 13:00:51 2023 +0530",
    "stats": {
      "files_changed": 38,
      "insertions": 1042,
      "deletions": 888,
      "files": [
        "core/src/main/java/kafka/server/builders/LogManagerBuilder.java",
        "core/src/main/scala/kafka/log/LocalLog.scala",
        "core/src/main/scala/kafka/log/LogCleaner.scala",
        "core/src/main/scala/kafka/log/LogLoader.scala",
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/main/scala/kafka/log/LogSegment.scala",
        "core/src/main/scala/kafka/log/ProducerStateManager.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/log/remote/RemoteIndexCache.scala",
        "core/src/main/scala/kafka/raft/KafkaMetadataLog.scala",
        "core/src/main/scala/kafka/server/DynamicBrokerConfig.scala",
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/main/scala/kafka/server/ReplicaFetcherThread.scala",
        "core/src/main/scala/kafka/tools/DumpLogSegments.scala",
        "core/src/test/scala/integration/kafka/api/TransactionsTest.scala",
        "core/src/test/scala/other/kafka/StressTestLog.scala",
        "core/src/test/scala/other/kafka/TestLinearWriteSpeed.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionLockTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/log/AbstractLogCleanerIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/BrokerCompressionTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/log/LogLoaderTest.scala",
        "core/src/test/scala/unit/kafka/log/LogManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogSegmentTest.scala",
        "core/src/test/scala/unit/kafka/log/LogTestUtils.scala",
        "core/src/test/scala/unit/kafka/log/ProducerStateManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "core/src/test/scala/unit/kafka/tools/DumpLogSegmentsTest.scala",
        "core/src/test/scala/unit/kafka/utils/SchedulerTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/LogFileUtils.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/ProducerStateManager.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/ProducerStateManagerConfig.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/log/SnapshotFile.java"
      ]
    },
    "message": "KAFKA-14480 Move/Rewrite ProducerStateManager to storage module. (#13040)\n\nKAFKA-14480 Move/Rewrite of ProducerStateManager to the storage module.\n\nReplaced `File.listFiles` with `Files.list` in ProducerStateManager.listSnapshotFiles\nUsed `Path` instead of `File` in ProducerStateManager.isSnapshotFile to check whether the given path is a file or not and has a suffix of '.snapshot'.",
    "epoch": 1676217651,
    "epoch_utc": null
  },
  {
    "commit": "df22a9d0e698203c1c1ba4bd4a4fdfa1a8920d7a",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Fri Feb 10 17:30:09 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Feb 10 17:30:09 2023 -0800",
    "stats": {
      "files_changed": 6,
      "insertions": 1441,
      "deletions": 8,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/state/VersionedKeyValueStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/VersionedRecord.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/LogicalKeyValueSegment.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBVersionedStore.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/LogicalKeyValueSegmentsTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBVersionedStoreTest.java"
      ]
    },
    "message": "KAFKA-14491: [5/N] Basic operations for RocksDB versioned store (#13188)\n\nIntroduces the VersionedKeyValueStore interface proposed in KIP-889, along with the RocksDB-based implementation of the interface. This PR includes fully functional put, get, get-with-timestamp, and delete operations, but does not include the ability to restore records from changelog or surrounding store layers (for metrics or writing to the changelog). Those pieces will come in follow-up PRs.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1676061009,
    "epoch_utc": null
  },
  {
    "commit": "b5a9b9d67e76761b8e8d62a77cf09ece0cc0b717",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Fri Feb 10 14:41:43 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Feb 10 14:41:43 2023 -0800",
    "stats": {
      "files_changed": 2,
      "insertions": 22,
      "deletions": 24,
      "files": [
        "core/src/main/scala/kafka/zk/ZkMigrationClient.scala",
        "core/src/test/scala/unit/kafka/zk/ZkMigrationClientTest.scala"
      ]
    },
    "message": "MINOR: Remove references to HIGHEST_SUPPORTED_VERSION from ZkMigrationClient (#13226)\n\nDo not use HIGHEST_SUPPORTED_VERSION in ZkMigrationClient because\nit will do the wrong thing when more MV options are added in the future.\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1676050903,
    "epoch_utc": null
  },
  {
    "commit": "39962eeeb3c91287fee49e7dc78383e4f2921503",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Fri Feb 10 08:26:00 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Feb 10 08:26:00 2023 +0100",
    "stats": {
      "files_changed": 8,
      "insertions": 429,
      "deletions": 0,
      "files": [
        "checkstyle/import-control.xml",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/assignor/AssignmentMemberSpec.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/assignor/AssignmentSpec.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/assignor/AssignmentTopicMetadata.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/assignor/GroupAssignment.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/assignor/MemberAssignment.java",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/assignor/PartitionAssignor.java",
        ".../src/main/java/org/apache/kafka/coordinator/group/assignor/PartitionAssignorException.java"
      ]
    },
    "message": "KAFKA-14513; Add broker side PartitionAssignor interface (#13202)\n\nThis patch adds the broker side `PartitionAssignor` interface as detailed in KIP-848. The interfaces differs a bit from the KIP in the following ways:\n* The POJOs are not defined within the interface because the interface is to heavy like this.\n* The interface is kept in the `group-coordinator` module for now. We don't want to have it out there until KIP-848 is ready to be released. We will move it to its final destination later.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>, Christo Lolov <lolovc@amazon.com>, Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1676028360,
    "epoch_utc": null
  },
  {
    "commit": "083e11a22ca9966ed010acdd5705351ab4300b52",
    "author": "Guozhang Wang",
    "author_email": "wangguoz@gmail.com",
    "date": "Thu Feb 9 10:33:19 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 9 10:33:19 2023 -0800",
    "stats": {
      "files_changed": 9,
      "insertions": 59,
      "deletions": 48,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/Tasks.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/namedtopology/KafkaStreamsNamedTopologyWrapper.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/StreamThreadStateStoreProvider.java",
        "streams/src/test/java/org/apache/kafka/streams/KafkaStreamsTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/StreamThreadStateStoreProviderTest.java"
      ]
    },
    "message": "KAFKA-14650: Synchronize access to tasks inside task manager (#13167)\n\n1. The major fix: synchronize access to tasks inside task manager, this is a fix of a regression introduced in #12397\n2. Clarify on func names of StreamThread that maybe triggered outside the StreamThread.\n3. Minor cleanups.\n\nReviewers: Lucas Brutschy <lucasbru@users.noreply.github.com>",
    "epoch": 1675949599,
    "epoch_utc": null
  },
  {
    "commit": "cb4d9d1abf28333196503e807603c621b2303219",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Thu Feb 9 13:24:02 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 9 13:24:02 2023 -0500",
    "stats": {
      "files_changed": 6,
      "insertions": 390,
      "deletions": 46,
      "files": [
        "checkstyle/suppressions.xml",
        "core/src/test/scala/integration/kafka/server/KafkaServerKRaftRegistrationTest.scala",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/test/java/org/apache/kafka/metadata/migration/KRaftMigrationDriverTest.java",
        "server-common/src/main/java/org/apache/kafka/queue/KafkaEventQueue.java",
        "server-common/src/test/java/org/apache/kafka/queue/KafkaEventQueueTest.java"
      ]
    },
    "message": "KAFKA-14668 Avoid unnecessary UMR during ZK migration (#13183)\n\nOnly send UMR to ZK brokers if the cluster metadata or topic metadata has changed.\n\nReviewers: Akhilesh C <akhileshchg@users.noreply.github.com>, Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1675959842,
    "epoch_utc": null
  },
  {
    "commit": "f93d5af8392e01f29b853cc44c6f78d74ead41be",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Thu Feb 9 10:50:07 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 9 10:50:07 2023 -0500",
    "stats": {
      "files_changed": 34,
      "insertions": 2014,
      "deletions": 852,
      "files": [
        "build.gradle",
        "checkstyle/import-control.xml",
        "checkstyle/suppressions.xml",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorMaker.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorMakerConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/rest/MirrorRestServer.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/rest/resources/InternalMirrorResource.java",
        ".../mirror/src/test/java/org/apache/kafka/connect/mirror/integration/DedicatedMirrorIntegrationTest.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/cli/AbstractConnectCli.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/cli/ConnectDistributed.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Connect.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/ConnectRestServer.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/HerderRequestHandler.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/RestClient.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/RestServer.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/RestServerConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResource.java",
        ".../runtime/src/main/java/org/apache/kafka/connect/runtime/rest/resources/InternalClusterResource.java",
        ".../runtime/src/main/java/org/apache/kafka/connect/runtime/rest/resources/InternalConnectResource.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/util/SSLUtils.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/RestExtensionIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/RestForwardingIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/WorkerConfigTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/isolation/PluginsTest.java",
        ".../test/java/org/apache/kafka/connect/runtime/rest/{RestServerTest.java => ConnectRestServerTest.java}",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/RestServerConfigTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java",
        ".../src/test/java/org/apache/kafka/connect/runtime/rest/resources/InternalConnectResourceTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/util/SSLUtilsTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectCluster.java"
      ]
    },
    "message": "KAFKA-15086, KAFKA-9981: Intra-cluster communication for Mirror Maker 2 (#13137)\n\nReviewers: Daniel Urban <durban@cloudera.com>, Greg Harris <greg.harris@aiven.io>, Viktor Somogyi-Vass <viktorsomogyi@gmail.com>, Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1675950607,
    "epoch_utc": null
  },
  {
    "commit": "031d0ff1bab7071f233e45cad6438237f410b57e",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Thu Feb 9 06:16:39 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 9 15:16:39 2023 +0100",
    "stats": {
      "files_changed": 2,
      "insertions": 11,
      "deletions": 11,
      "files": [
        "build.gradle",
        "gradle/dependencies.gradle"
      ]
    },
    "message": "MINOR: Update build and test dependencies for 3.5 (#13199)\n\nThe most recent version that didn't cause compiler or test errors was chosen.\n\nGradle plugin updates follow, they include minor fixes and support\nfor newer Java and Gradle versions:\n\n- spotless: 6.10.0 -> 6.13.0\n- versions: 0.42.0 -> 0.44.0\n- dependencycheck: 7.1.1 -> 8.0.2\n- rat: 0.7.1 -> 0.8.0\n- spotbugs: 5.0.9 -> 5.0.13\n- test-retry: 1.4.0 -> 1.5.1\n- scoverage: 7.0.0 -> 7.0.1\n\nTest/benchmark updates:\n\n- jmh: 1.35 -> 1.36\nGC profiler and perfasm improvements\nhttps://mail.openjdk.org/pipermail/jmh-dev/2022-November/003553.html\n\n- junit: 5.9.0 -> 5.9.2\nMinor fixes\nhttps://junit.org/junit5/docs/current/release-notes/index.html#release-notes-5.9.2\n\n- jqwik: 1.6.5 -> 1.7.2\nA number of usability improvements, bug fixes and minor breaking changes\nhttps://jqwik.net/release-notes.html#172\n\n- mockito: 4.6.1 -> 4.9.0\nUsability improvements, perf fixes and bug fixes\nhttps://github.com/mockito/mockito/releases/tag/v4.7.0\nhttps://github.com/mockito/mockito/releases/tag/v4.8.0\nhttps://github.com/mockito/mockito/releases/tag/v4.8.1\nhttps://github.com/mockito/mockito/releases/tag/v4.9.0\n\nReviewers: Stanislav Kozlovski <stanislav_kozlovski@outlook.com>, Luke Chen <showuon@gmail.com>",
    "epoch": 1675934199,
    "epoch_utc": null
  },
  {
    "commit": "e903f2cd9646639cbada753a705b49fb903e1add",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Thu Feb 9 14:53:10 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 9 14:53:10 2023 +0100",
    "stats": {
      "files_changed": 9,
      "insertions": 439,
      "deletions": 232,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/FetchSessionHandler.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java",
        "clients/src/main/java/org/apache/kafka/common/requests/FetchMetadata.java",
        "clients/src/main/java/org/apache/kafka/common/requests/FetchRequest.java",
        "clients/src/main/java/org/apache/kafka/common/utils/Utils.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetcherTest.java",
        "core/src/test/java/kafka/testkit/KafkaClusterTestKit.java"
      ]
    },
    "message": "KAFKA-7109: Close fetch sessions on close of consumer (#12590)\n\n## Problem\nWhen consumer is closed, fetch sessions associated with the consumer should notify the server about it's intention to close using a Fetch call with epoch = -1 (identified by `FINAL_EPOCH` in `FetchMetadata.java`). However, we are not sending this final fetch request in the current flow which leads to unnecessary fetch sessions on the server which are closed only after timeout.\n\n## Changes\n1. Change `close()` in `Fetcher` to add a logic to send the final Fetch request notifying close to the server.\n2. Change `close()` in `Consumer` to respect the timeout duration passed to it. Prior to this change, the timeout parameter was being ignored.\n3. Change tests to close with `Duration.zero` to reduce the execution time of the tests. Otherwise the tests will wait for default timeout to exit (close() in the tests is expected to be unsuccessful because there is no server to send the request to).\n4. Distinguish between the case of \"close existing session and create new session\" and \"close existing session\" by renaming the `nextCloseExisting` function to `nextCloseExistingAttemptNew`.\n\n## Testing\nAdded unit test which validates that the correct close request is sent to the server.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>, Kirk True <kirk@mustardgrain.com>, Philip Nee <philipnee@gmail.com>, Luke Chen <showuon@gmail.com>, David Jacot <djacot@confluent.io>",
    "epoch": 1675965190,
    "epoch_utc": null
  },
  {
    "commit": "2603033e35e8dbf57e1b50a5c0a2f1d9f48778e0",
    "author": "Paolo Patierno",
    "author_email": "ppatierno@live.com",
    "date": "Thu Feb 9 12:07:12 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 9 12:07:12 2023 +0100",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "docs/ops.html"
      ]
    },
    "message": "MINOR: Fixed typos in KRaft related metrics documentation (#13222)\n\nSigned-off-by: Paolo Patierno <ppatierno@live.com>\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1675955232,
    "epoch_utc": null
  },
  {
    "commit": "3be7f7d611d0786f2f98159d5c7492b0d94a2bb7",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Thu Feb 9 09:13:31 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 9 09:13:31 2023 +0100",
    "stats": {
      "files_changed": 35,
      "insertions": 778,
      "deletions": 79,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/errors/FencedMemberEpochException.java",
        "clients/src/main/java/org/apache/kafka/common/errors/UnreleasedInstanceIdException.java",
        "clients/src/main/java/org/apache/kafka/common/errors/UnsupportedAssignorException.java",
        "clients/src/main/java/org/apache/kafka/common/protocol/ApiKeys.java",
        "clients/src/main/java/org/apache/kafka/common/protocol/Errors.java",
        "clients/src/main/java/org/apache/kafka/common/requests/AbstractRequest.java",
        "clients/src/main/java/org/apache/kafka/common/requests/AbstractResponse.java",
        "clients/src/main/java/org/apache/kafka/common/requests/ApiVersionsResponse.java",
        "clients/src/main/java/org/apache/kafka/common/requests/ConsumerGroupHeartbeatRequest.java",
        "clients/src/main/java/org/apache/kafka/common/requests/ConsumerGroupHeartbeatResponse.java",
        "clients/src/main/resources/common/message/ConsumerGroupHeartbeatRequest.json",
        "clients/src/main/resources/common/message/ConsumerGroupHeartbeatResponse.json",
        "clients/src/test/java/org/apache/kafka/common/message/ApiMessageTypeTest.java",
        "clients/src/test/java/org/apache/kafka/common/protocol/ProtoUtilsTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/ApiVersionsResponseTest.java",
        "clients/src/test/java/org/apache/kafka/common/requests/RequestResponseTest.java",
        "core/src/main/scala/kafka/network/RequestConvertToJson.scala",
        "core/src/main/scala/kafka/network/SocketServer.scala",
        "core/src/main/scala/kafka/server/ApiVersionManager.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/main/scala/kafka/tools/TestRaftServer.scala",
        "core/src/test/scala/integration/kafka/admin/BrokerApiVersionsCommandTest.scala",
        "core/src/test/scala/unit/kafka/network/SocketServerTest.scala",
        "core/src/test/scala/unit/kafka/server/AbstractApiVersionsRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/ApiVersionManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/ApiVersionsRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/ConsumerGroupHeartbeatRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/ControllerApisTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "core/src/test/scala/unit/kafka/server/RequestQuotaTest.scala",
        "generator/src/main/java/org/apache/kafka/message/ApiMessageTypeGenerator.java",
        "generator/src/main/java/org/apache/kafka/message/MessageSpec.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/metadata/MetadataRequestBenchmark.java"
      ]
    },
    "message": "KAFKA-14391; Add ConsumerGroupHeartbeat API (#12972)\n\nThis patch does a few things:\n1) It introduces a new flag to the request spec: `latestVersionUnstable`. It signifies that the last version of the API is considered unstable (or still in development). As such, the last API version is not exposed by the server unless specified otherwise with the new internal `unstable.api.versions.enable`. This allows us to commit new APIs which are still in development.\n3) It adds the ConsumerGroupHeartbeat API, part of KIP-848, and marks it as unreleased for now.\n4) It adds the new error codes required by the new ConsumerGroupHeartbeat API.\n\nReviewers: Justine Olshan <jolshan@confluent.io>, Jeff Kim <jeff.kim@confluent.io>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1675944811,
    "epoch_utc": null
  },
  {
    "commit": "659dd2e49f6c68fcdbe4d051a7b7cb0b1487b772",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Thu Feb 9 09:10:28 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 9 09:10:28 2023 +0100",
    "stats": {
      "files_changed": 12,
      "insertions": 372,
      "deletions": 0,
      "files": [
        "group-coordinator/src/main/resources/common/message/ConsumerGroupCurrentMemberAssignmentKey.json",
        "group-coordinator/src/main/resources/common/message/ConsumerGroupCurrentMemberAssignmentValue.json",
        "group-coordinator/src/main/resources/common/message/ConsumerGroupMemberMetadataKey.json",
        "group-coordinator/src/main/resources/common/message/ConsumerGroupMemberMetadataValue.json",
        "group-coordinator/src/main/resources/common/message/ConsumerGroupMetadataKey.json",
        "group-coordinator/src/main/resources/common/message/ConsumerGroupMetadataValue.json",
        "group-coordinator/src/main/resources/common/message/ConsumerGroupPartitionMetadataKey.json",
        "group-coordinator/src/main/resources/common/message/ConsumerGroupPartitionMetadataValue.json",
        "group-coordinator/src/main/resources/common/message/ConsumerGroupTargetAssignmentMemberKey.json",
        "group-coordinator/src/main/resources/common/message/ConsumerGroupTargetAssignmentMemberValue.json",
        "group-coordinator/src/main/resources/common/message/ConsumerGroupTargetAssignmentMetadataKey.json",
        "group-coordinator/src/main/resources/common/message/ConsumerGroupTargetAssignmentMetadataValue.json"
      ]
    },
    "message": "KAFKA-14048: Add new `__consumer_offsets` records from KIP-848 (#13203)\n\nThis patch adds the new (only the new ones) `__consumer_offsets` records as described in [KIP-848](https://cwiki.apache.org/confluence/display/KAFKA/KIP-848%3A+The+Next+Generation+of+the+Consumer+Rebalance+Protocol#KIP848:TheNextGenerationoftheConsumerRebalanceProtocol-Records).\n\nReviewers: Christo Lolov <lolovc@amazon.com>, Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1675944628,
    "epoch_utc": null
  },
  {
    "commit": "087a5d8f4fcf1407ce9c2bff2328352b96c9b793",
    "author": "Alyssa Huang",
    "author_email": "ahuang@confluent.io",
    "date": "Wed Feb 8 18:19:57 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 9 10:19:57 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 3,
      "files": [
        "docs/upgrade.html"
      ]
    },
    "message": "MINOR: fix hyperlink tags (#13221)\n\nfix hyperlink tags in upgrade doc\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1675891197,
    "epoch_utc": null
  },
  {
    "commit": "1d3fb760926bf559b0c127c6bc4d462a93ac23d6",
    "author": "Satish Duggana",
    "author_email": "satishd@apache.org",
    "date": "Wed Feb 8 09:22:42 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Feb 8 09:22:42 2023 +0530",
    "stats": {
      "files_changed": 159,
      "insertions": 184,
      "deletions": 182,
      "files": [
        "build.gradle",
        "checkstyle/import-control-jmh-benchmarks.xml",
        "core/src/main/java/kafka/server/builders/LogManagerBuilder.java",
        "core/src/main/java/kafka/server/builders/ReplicaManagerBuilder.java",
        "core/src/main/scala/kafka/admin/ConfigCommand.scala",
        "core/src/main/scala/kafka/admin/ReassignPartitionsCommand.scala",
        "core/src/main/scala/kafka/admin/TopicCommand.scala",
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/main/scala/kafka/cluster/Replica.scala",
        "core/src/main/scala/kafka/coordinator/group/GroupMetadataManager.scala",
        "core/src/main/scala/kafka/coordinator/transaction/TransactionStateManager.scala",
        "core/src/main/scala/kafka/log/LocalLog.scala",
        "core/src/main/scala/kafka/log/LogCleaner.scala",
        "core/src/main/scala/kafka/log/LogCleanerManager.scala",
        "core/src/main/scala/kafka/log/LogLoader.scala",
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/main/scala/kafka/log/LogSegment.scala",
        "core/src/main/scala/kafka/log/ProducerStateManager.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/log/remote/RemoteIndexCache.scala",
        "core/src/main/scala/kafka/raft/KafkaMetadataLog.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/ConfigHandler.scala",
        "core/src/main/scala/kafka/server/ConfigHelper.scala",
        "core/src/main/scala/kafka/server/ControllerConfigurationValidator.scala",
        "core/src/main/scala/kafka/server/DelayedFetch.scala",
        "core/src/main/scala/kafka/server/DynamicBrokerConfig.scala",
        "core/src/main/scala/kafka/server/DynamicConfig.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/main/scala/kafka/server/KafkaRaftServer.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/server/LocalLeaderEndPoint.scala",
        "core/src/main/scala/kafka/server/PartitionMetadataFile.scala",
        "core/src/main/scala/kafka/server/ReplicaFetcherThread.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/main/scala/kafka/server/ZkAdminManager.scala",
        "core/src/main/scala/kafka/server/checkpoints/OffsetCheckpointFile.scala",
        "core/src/main/scala/kafka/tools/DumpLogSegments.scala",
        "core/src/main/scala/kafka/zk/AdminZkClient.scala",
        "core/src/main/scala/kafka/zk/KafkaZkClient.scala",
        "core/src/test/scala/integration/kafka/api/AdminClientWithPoliciesIntegrationTest.scala",
        "core/src/test/scala/integration/kafka/api/PlaintextAdminIntegrationTest.scala",
        "core/src/test/scala/integration/kafka/api/PlaintextProducerSendTest.scala",
        "core/src/test/scala/integration/kafka/api/SaslSslAdminIntegrationTest.scala",
        "core/src/test/scala/integration/kafka/server/DelayedFetchTest.scala",
        "core/src/test/scala/integration/kafka/server/DynamicBrokerReconfigurationTest.scala",
        "core/src/test/scala/kafka/raft/KafkaMetadataLogTest.scala",
        "core/src/test/scala/kafka/server/LocalLeaderEndPointTest.scala",
        "core/src/test/scala/other/kafka/StressTestLog.scala",
        "core/src/test/scala/other/kafka/TestLinearWriteSpeed.scala",
        "core/src/test/scala/unit/kafka/admin/ReplicationQuotaUtils.scala",
        "core/src/test/scala/unit/kafka/cluster/AbstractPartitionTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionLockTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/cluster/ReplicaTest.scala",
        "core/src/test/scala/unit/kafka/controller/PartitionStateMachineTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/AbstractCoordinatorConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupMetadataManagerTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionCoordinatorConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionStateManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/AbstractLogCleanerIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/BrokerCompressionTest.scala",
        "core/src/test/scala/unit/kafka/log/LocalLogTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerParameterizedIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/log/LogConfigTest.scala",
        "core/src/test/scala/unit/kafka/log/LogLoaderTest.scala",
        "core/src/test/scala/unit/kafka/log/LogManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogSegmentTest.scala",
        "core/src/test/scala/unit/kafka/log/LogTestUtils.scala",
        "core/src/test/scala/unit/kafka/log/LogValidatorTest.scala",
        "core/src/test/scala/unit/kafka/log/OffsetIndexTest.scala",
        "core/src/test/scala/unit/kafka/log/OffsetMapTest.scala",
        "core/src/test/scala/unit/kafka/log/ProducerStateManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/TimeIndexTest.scala",
        "core/src/test/scala/unit/kafka/log/TransactionIndexTest.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/log/remote/RemoteIndexCacheTest.scala",
        "core/src/test/scala/unit/kafka/log/remote/RemoteLogManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/AbstractFetcherThreadTest.scala",
        "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala",
        "core/src/test/scala/unit/kafka/server/DynamicConfigChangeTest.scala",
        "core/src/test/scala/unit/kafka/server/HighwatermarkPersistenceTest.scala",
        "core/src/test/scala/unit/kafka/server/IsrExpirationTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaConfigTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaAlterLogDirsThreadTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerQuotasTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicationQuotasTest.scala",
        "core/src/test/scala/unit/kafka/server/checkpoints/LeaderEpochCheckpointFileWithFailureHandlerTest.scala",
        "core/src/test/scala/unit/kafka/server/checkpoints/OffsetCheckpointFileWithFailureHandlerTest.scala",
        "core/src/test/scala/unit/kafka/server/epoch/EpochDrivenReplicationProtocolAcceptanceTest.scala",
        "core/src/test/scala/unit/kafka/server/epoch/LeaderEpochFileCacheTest.scala",
        "core/src/test/scala/unit/kafka/server/epoch/OffsetsForLeaderEpochTest.scala",
        "core/src/test/scala/unit/kafka/tools/DumpLogSegmentsTest.scala",
        "core/src/test/scala/unit/kafka/utils/SchedulerTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala",
        "core/src/test/scala/unit/kafka/zk/AdminZkClientTest.scala",
        "core/src/test/scala/unit/kafka/zk/KafkaZkClientTest.scala",
        "gradle/spotbugs-exclude.xml",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/fetcher/ReplicaFetcherThreadBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/partition/PartitionMakeFollowerBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/partition/UpdateFollowerFetchStateBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/record/BaseRecordBatchBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/record/CompressedRecordBatchValidationBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/record/UncompressedRecordBatchValidationBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/server/CheckpointBench.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/server/PartitionCreationBench.java",
        "storage/src/main/java/org/apache/kafka/server/log/remote/metadata/storage/ClassLoaderAwareRemoteLogMetadataManager.java",
        "storage/src/main/java/org/apache/kafka/server/log/remote/storage/ClassLoaderAwareRemoteStorageManager.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/checkpoint/CheckpointFileWithFailureHandler.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/checkpoint/LeaderEpochCheckpoint.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/checkpoint/LeaderEpochCheckpointFile.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/epoch/LeaderEpochFileCache.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/AbortedTxn.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/AbstractIndex.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/AppendOrigin.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/BatchMetadata.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/CleanerConfig.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/CompletedTxn.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/CorruptIndexException.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/CorruptSnapshotException.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/EpochEntry.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/FetchDataInfo.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/FetchIsolation.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/FetchParams.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/FetchPartitionData.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/IndexEntry.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/IndexOffsetOverflowException.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/IndexSearchType.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/LastRecord.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/LazyIndex.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/LoadedLogOffsets.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/LogConfig.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/LogDirFailureChannel.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/LogFileUtils.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/LogOffsetMetadata.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/LogValidator.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/OffsetIndex.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/OffsetMap.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/OffsetPosition.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/ProducerAppendInfo.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/ProducerStateEntry.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/RecordValidationException.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/SkimpyOffsetMap.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/SnapshotFile.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/StorageAction.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/ThrottledReplicaListValidator.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/TimeIndex.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/TimestampOffset.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/TransactionIndex.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/TxnIndexSearchResult.java",
        "storage/src/main/java/org/apache/kafka/{server/log/internals => storage/internals/log}/TxnMetadata.java"
      ]
    },
    "message": "KAFKA-14688 Move package org.apache.kafka.server.log.internals to org.apache.kafka.storage.internals.log (#13213)\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1675858962,
    "epoch_utc": null
  },
  {
    "commit": "788793dee6fa5d7ba5cb7d756b72c7d043dc8789",
    "author": "Guozhang Wang",
    "author_email": "wangguoz@gmail.com",
    "date": "Tue Feb 7 11:33:09 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 7 11:33:09 2023 -0800",
    "stats": {
      "files_changed": 4,
      "insertions": 173,
      "deletions": 7,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/StateRestoreListener.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StoreChangelogReaderTest.java",
        "streams/src/test/java/org/apache/kafka/test/MockStateRestoreListener.java"
      ]
    },
    "message": "KAFKA-10575: Add onRestoreSuspsnded to StateRestoreListener (#13179)\n\n1. Add the new API (default impl is empty) to StateRestoreListener.\n2. Update related unit tests\n\nReviewers: Lucas Brutschy <lucasbru@users.noreply.github.com>, Matthias J. Sax <mjsax@apache.org>",
    "epoch": 1675780389,
    "epoch_utc": null
  },
  {
    "commit": "463bb00b11c7137c35ef88bdda8c1cbe6a325273",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Tue Feb 7 11:21:58 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 7 11:21:58 2023 -0800",
    "stats": {
      "files_changed": 4,
      "insertions": 3,
      "deletions": 11,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorContextUtils.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/AbstractDualSchemaRocksDBSegmentedBytesStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/AbstractRocksDBSegmentedBytesStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/InMemoryWindowStore.java"
      ]
    },
    "message": "MINOR: remove unncessary helper method (#13209)\n\nReviewers: Christo Lolov (@clolov), Lucas Brutschy <lbrutschy@confluent.io>, Ismael Juma <ismale@confluent.io>",
    "epoch": 1675779718,
    "epoch_utc": null
  },
  {
    "commit": "c2aaea3519c503cd1715a4ffc041e5c08db4d181",
    "author": "Manikumar Reddy",
    "author_email": "manikumar.reddy@gmail.com",
    "date": "Wed Feb 8 00:04:06 2023 +0530",
    "commit_by": "Manikumar Reddy",
    "commit_by_email": "manikumar.reddy@gmail.com",
    "commit_by_date": "Wed Feb 8 00:04:06 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 7,
      "deletions": 0,
      "files": [
        "docs/upgrade.html"
      ]
    },
    "message": "MINOR: Add 3.4 notable changes section to upgrade docs",
    "epoch": 1675825446,
    "epoch_utc": null
  },
  {
    "commit": "8cdf9564ab0f56845bb0cc0192a43b39c26c3375",
    "author": "Manikumar Reddy",
    "author_email": "manikumar.reddy@gmail.com",
    "date": "Mon Feb 6 17:59:22 2023 +0530",
    "commit_by": "Manikumar Reddy",
    "commit_by_email": "manikumar.reddy@gmail.com",
    "commit_by_date": "Tue Feb 7 23:10:18 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 4,
      "deletions": 1,
      "files": [
        "core/src/main/scala/kafka/zk/ZkData.scala",
        "core/src/test/scala/unit/kafka/security/auth/ZkAuthorizationTest.scala"
      ]
    },
    "message": "MINOR: Add FeatureZNode ZK node path to ZK root paths",
    "epoch": 1675717162,
    "epoch_utc": null
  },
  {
    "commit": "a0a9b6ffeaa61511f79e17fad8430d9114d472ef",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Tue Feb 7 16:37:45 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 7 17:37:45 2023 +0100",
    "stats": {
      "files_changed": 42,
      "insertions": 83,
      "deletions": 86,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/admin/AlterConfigOp.java",
        "clients/src/main/java/org/apache/kafka/common/ConsumerGroupState.java",
        "clients/src/main/java/org/apache/kafka/common/security/authenticator/CredentialCache.java",
        "clients/src/main/java/org/apache/kafka/common/utils/MappedIterator.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/Crypto.java",
        "generator/src/main/java/org/apache/kafka/message/MessageSpecType.java",
        "generator/src/main/java/org/apache/kafka/message/RequestListenerType.java",
        "metadata/src/main/java/org/apache/kafka/metadata/KafkaConfigSchema.java",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "metadata/src/test/java/org/apache/kafka/metalog/LocalLogManagerTest.java",
        "server-common/src/main/java/org/apache/kafka/timeline/TimelineHashMap.java",
        "server-common/src/test/java/org/apache/kafka/timeline/SnapshottableHashTableTest.java",
        "storage/src/main/java/org/apache/kafka/server/log/internals/AppendOrigin.java",
        "storage/src/main/java/org/apache/kafka/server/log/internals/IndexSearchType.java",
        "storage/src/main/java/org/apache/kafka/server/log/internals/LazyIndex.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/metadata/storage/RemoteLogSegmentLifecycleTest.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/InmemoryRemoteLogMetadataManager.java",
        "storage/src/test/java/org/apache/kafka/server/log/remote/storage/InmemoryRemoteStorageManager.java",
        "streams/src/main/java/org/apache/kafka/streams/query/FailureReason.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/KTableEfficientRangeQueryTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorStateManagerTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/SessionStoreFetchTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/WindowStoreFetchTest.java",
        "trogdor/src/main/java/org/apache/kafka/trogdor/coordinator/Coordinator.java",
        "trogdor/src/main/java/org/apache/kafka/trogdor/coordinator/NodeManager.java",
        "trogdor/src/main/java/org/apache/kafka/trogdor/coordinator/TaskManager.java",
        "trogdor/src/test/java/org/apache/kafka/trogdor/agent/AgentTest.java",
        "trogdor/src/test/java/org/apache/kafka/trogdor/basic/BasicPlatformTest.java",
        "trogdor/src/test/java/org/apache/kafka/trogdor/common/CapturingCommandRunner.java",
        "trogdor/src/test/java/org/apache/kafka/trogdor/common/ExpectedTasks.java",
        "trogdor/src/test/java/org/apache/kafka/trogdor/common/JsonSerializationTest.java",
        "trogdor/src/test/java/org/apache/kafka/trogdor/common/JsonUtilTest.java",
        "trogdor/src/test/java/org/apache/kafka/trogdor/common/MiniTrogdorCluster.java",
        "trogdor/src/test/java/org/apache/kafka/trogdor/common/StringFormatterTest.java",
        "trogdor/src/test/java/org/apache/kafka/trogdor/coordinator/CoordinatorClientTest.java",
        "trogdor/src/test/java/org/apache/kafka/trogdor/coordinator/CoordinatorTest.java",
        "trogdor/src/test/java/org/apache/kafka/trogdor/task/SampleTaskController.java",
        "trogdor/src/test/java/org/apache/kafka/trogdor/task/SampleTaskSpec.java",
        "trogdor/src/test/java/org/apache/kafka/trogdor/task/SampleTaskWorker.java",
        "trogdor/src/test/java/org/apache/kafka/trogdor/task/TaskSpecTest.java",
        "trogdor/src/test/java/org/apache/kafka/trogdor/workload/HistogramTest.java",
        "trogdor/src/test/java/org/apache/kafka/trogdor/workload/ThrottleTest.java"
      ]
    },
    "message": "MINOR: Remove unnecessary code (#13210)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Divij Vaidya <diviv@amazon.com>",
    "epoch": 1675798665,
    "epoch_utc": 1675787865
  },
  {
    "commit": "da2e8dce71a86143d0545a84b5449aabde48a44c",
    "author": "Satish Duggana",
    "author_email": "satishd@apache.org",
    "date": "Tue Feb 7 15:37:23 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 7 15:37:23 2023 +0530",
    "stats": {
      "files_changed": 27,
      "insertions": 990,
      "deletions": 803,
      "files": [
        "checkstyle/import-control.xml",
        "core/src/main/scala/kafka/log/LogLoader.scala",
        "core/src/main/scala/kafka/log/LogSegment.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/log/remote/RemoteLogManager.scala",
        "core/src/main/scala/kafka/server/LocalLeaderEndPoint.scala",
        "core/src/main/scala/kafka/server/ReplicaFetcherThread.scala",
        "core/src/main/scala/kafka/server/checkpoints/CheckpointFileWithFailureHandler.scala",
        "core/src/main/scala/kafka/server/checkpoints/LeaderEpochCheckpointFile.scala",
        "core/src/main/scala/kafka/server/checkpoints/OffsetCheckpointFile.scala",
        "core/src/main/scala/kafka/server/epoch/LeaderEpochFileCache.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionLockTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/log/LogLoaderTest.scala",
        "core/src/test/scala/unit/kafka/log/LogSegmentTest.scala",
        "core/src/test/scala/unit/kafka/log/LogTestUtils.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/log/remote/RemoteLogManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/checkpoints/LeaderEpochCheckpointFileWithFailureHandlerTest.scala",
        "core/src/test/scala/unit/kafka/server/checkpoints/OffsetCheckpointFileWithFailureHandlerTest.scala",
        "core/src/test/scala/unit/kafka/server/epoch/EpochDrivenReplicationProtocolAcceptanceTest.scala",
        "core/src/test/scala/unit/kafka/server/epoch/LeaderEpochFileCacheTest.scala",
        "storage/src/main/java/org/apache/kafka/server/log/internals/EpochEntry.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/checkpoint/CheckpointFileWithFailureHandler.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/checkpoint/LeaderEpochCheckpoint.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/checkpoint/LeaderEpochCheckpointFile.java",
        "storage/src/main/java/org/apache/kafka/storage/internals/epoch/LeaderEpochFileCache.java"
      ]
    },
    "message": "KAFKA-14551 Move/Rewrite LeaderEpochFileCache and its dependencies to the storage module. (#13046)\n\nKAFKA-14551 Move/Rewrite LeaderEpochFileCache and its dependencies to the storage module.\n\nFor broader context on this change, you may want to look at KAFKA-14470: Move log layer to the storage module\n\nReviewers: Ismael Juma <ismael@juma.me.uk>, Jun Rao <junrao@gmail.com>, Alexandre Dupriez <alexandre.dupriez@gmail.com>",
    "epoch": 1675795043,
    "epoch_utc": null
  },
  {
    "commit": "094e343f18d5319a871975985d24a1469f6b99a3",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Tue Feb 7 09:06:56 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Feb 7 09:06:56 2023 +0100",
    "stats": {
      "files_changed": 8,
      "insertions": 28,
      "deletions": 1,
      "files": [
        "build.gradle",
        "checkstyle/import-control.xml",
        "checkstyle/suppressions.xml",
        "core/src/main/scala/kafka/coordinator/group/GroupMetadataManager.scala",
        "{core => group-coordinator}/src/main/resources/common/message/GroupMetadataKey.json",
        "{core => group-coordinator}/src/main/resources/common/message/GroupMetadataValue.json",
        "{core => group-coordinator}/src/main/resources/common/message/OffsetCommitKey.json",
        "{core => group-coordinator}/src/main/resources/common/message/OffsetCommitValue.json"
      ]
    },
    "message": "KAFKA-14678; Move `__consumer_offsets` records from `core` to `group-coordinator` (#13200)\n\nThis patch moves the current `__consumer_offsets` records from the `core` module to the new `group-coordinator` module.\n\nReviewers: Christo Lolov <lolovc@amazon.com>, Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1675771616,
    "epoch_utc": null
  },
  {
    "commit": "6d11261d5deaca300e273bebe309f9e4f814f815",
    "author": "Ron Dagostino",
    "author_email": "rndgstn@gmail.com",
    "date": "Mon Feb 6 13:37:50 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Feb 6 10:37:50 2023 -0800",
    "stats": {
      "files_changed": 7,
      "insertions": 18,
      "deletions": 17,
      "files": [
        "core/src/test/java/kafka/test/ClusterTestExtensionsTest.java",
        "core/src/test/java/kafka/test/annotation/ClusterTest.java",
        "core/src/test/scala/integration/kafka/server/MetadataVersionIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/admin/FeatureCommandTest.scala",
        "metadata/src/test/java/org/apache/kafka/controller/QuorumControllerTest.java",
        "server-common/src/main/java/org/apache/kafka/server/common/MetadataVersion.java",
        "server-common/src/test/java/org/apache/kafka/server/common/MetadataVersionTest.java"
      ]
    },
    "message": "MINOR: IBP_3_4_IV1 should be IBP_3_5_IV0 because it is not in 3.4 (#13198)\n\nThe KIP-405 MetadataVersion changes will be released as part of AK 3.5, but were added as BP_3_4_IV1.\nThis change fixes them to be IBP_3_5_IV0. There is no incompatibility  because this feature has not yet\nbeen released. Also set didMetadataChange to false because KRaft metadata log records did not change.\n\nReviewers: Satish Duggana <satishd@apache.org>, Christo Lolov <christo_lolov@yahoo.com>, Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1675701470,
    "epoch_utc": null
  },
  {
    "commit": "5ec4ccfc9e37bb6a117673a5fc65fe28ffe133f0",
    "author": "Eric Haag",
    "author_email": "eah0592@gmail.com",
    "date": "Mon Feb 6 05:17:24 2023 -0600",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Feb 6 12:17:24 2023 +0100",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 0,
      "files": [
        "settings.gradle"
      ]
    },
    "message": "MINOR: Set root project name in build.gradle (#13128)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1675671444,
    "epoch_utc": null
  },
  {
    "commit": "8f00782be79e137c7c4708d3318ca4dffc590dd8",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Mon Feb 6 16:37:53 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Feb 6 12:07:53 2023 +0100",
    "stats": {
      "files_changed": 100,
      "insertions": 454,
      "deletions": 306,
      "files": [
        "connect/api/src/main/java/org/apache/kafka/connect/connector/ConnectRecord.java",
        "connect/api/src/main/java/org/apache/kafka/connect/connector/Connector.java",
        "connect/api/src/main/java/org/apache/kafka/connect/connector/ConnectorContext.java",
        "connect/api/src/main/java/org/apache/kafka/connect/connector/Task.java",
        ".../api/src/main/java/org/apache/kafka/connect/connector/policy/ConnectorClientConfigOverridePolicy.java",
        "connect/api/src/main/java/org/apache/kafka/connect/connector/policy/ConnectorClientConfigRequest.java",
        "connect/api/src/main/java/org/apache/kafka/connect/data/ConnectSchema.java",
        "connect/api/src/main/java/org/apache/kafka/connect/data/Date.java",
        "connect/api/src/main/java/org/apache/kafka/connect/data/Decimal.java",
        "connect/api/src/main/java/org/apache/kafka/connect/data/Schema.java",
        "connect/api/src/main/java/org/apache/kafka/connect/data/SchemaAndValue.java",
        "connect/api/src/main/java/org/apache/kafka/connect/data/SchemaBuilder.java",
        "connect/api/src/main/java/org/apache/kafka/connect/data/SchemaProjector.java",
        "connect/api/src/main/java/org/apache/kafka/connect/data/Struct.java",
        "connect/api/src/main/java/org/apache/kafka/connect/data/Time.java",
        "connect/api/src/main/java/org/apache/kafka/connect/data/Timestamp.java",
        "connect/api/src/main/java/org/apache/kafka/connect/data/Values.java",
        "connect/api/src/main/java/org/apache/kafka/connect/errors/SchemaBuilderException.java",
        "connect/api/src/main/java/org/apache/kafka/connect/errors/SchemaProjectorException.java",
        "connect/api/src/main/java/org/apache/kafka/connect/health/AbstractState.java",
        "connect/api/src/main/java/org/apache/kafka/connect/rest/ConnectRestExtension.java",
        "connect/api/src/main/java/org/apache/kafka/connect/rest/ConnectRestExtensionContext.java",
        "connect/api/src/main/java/org/apache/kafka/connect/sink/ErrantRecordReporter.java",
        "connect/api/src/main/java/org/apache/kafka/connect/sink/SinkRecord.java",
        "connect/api/src/main/java/org/apache/kafka/connect/sink/SinkTask.java",
        "connect/api/src/main/java/org/apache/kafka/connect/sink/SinkTaskContext.java",
        "connect/api/src/main/java/org/apache/kafka/connect/source/SourceRecord.java",
        "connect/api/src/main/java/org/apache/kafka/connect/source/SourceTask.java",
        "connect/api/src/main/java/org/apache/kafka/connect/source/SourceTaskContext.java",
        "connect/api/src/main/java/org/apache/kafka/connect/storage/Converter.java",
        "connect/api/src/main/java/org/apache/kafka/connect/storage/HeaderConverter.java",
        "connect/api/src/main/java/org/apache/kafka/connect/storage/StringConverter.java",
        "connect/api/src/main/java/org/apache/kafka/connect/transforms/Transformation.java",
        "connect/json/src/main/java/org/apache/kafka/connect/json/JsonConverter.java",
        "connect/json/src/main/java/org/apache/kafka/connect/json/JsonDeserializer.java",
        "connect/json/src/main/java/org/apache/kafka/connect/json/JsonSerializer.java",
        "connect/mirror-client/src/main/java/org/apache/kafka/connect/mirror/IdentityReplicationPolicy.java",
        "connect/mirror-client/src/main/java/org/apache/kafka/connect/mirror/RemoteClusterUtils.java",
        "connect/mirror-client/src/main/java/org/apache/kafka/connect/mirror/ReplicationPolicy.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java",
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorMakerConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/converters/ByteArrayConverter.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/converters/DoubleConverter.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/converters/FloatConverter.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/converters/IntegerConverter.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/converters/LongConverter.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/converters/NumberConverter.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/converters/ShortConverter.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectMetrics.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectorStatus.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ExactlyOnceWorkerSourceTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Herder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/PredicatedTransformation.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/RestartRequest.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/SinkConnectorConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/SourceTaskOffsetCommitter.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/TargetState.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/TopicCreationConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/TransformationChain.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerConnector.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSinkTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSourceTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/ConnectProtocol.java",
        ".../runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/ConnectProtocolCompatibility.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/EagerAssignor.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/ExtendedAssignment.java",
        ".../src/main/java/org/apache/kafka/connect/runtime/distributed/IncrementalCooperativeConnectProtocol.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/RebalanceNeededException.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/WorkerCoordinator.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/WorkerGroupMember.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/errors/Stage.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/RestClient.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/RestServer.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/errors/ConnectExceptionMapper.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/resources/LoggingResource.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/util/SSLUtils.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/standalone/StandaloneConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/ClusterConfigState.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/ConfigBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaConfigBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaStatusBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/MemoryConfigBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/MemoryStatusBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/OffsetStorageReaderImpl.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/OffsetStorageWriter.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/StatusBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/tools/MockConnector.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/tools/SchemaSourceConnector.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/tools/VerifiableSourceTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/ConnectUtils.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/ConvertingFutureCallback.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/FutureCallback.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/LoggingContext.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/TopicCreation.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/TopicCreationGroup.java"
      ]
    },
    "message": "MINOR: Connect Javadocs improvements (#13120)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Greg Harris <gharris1727@gmail.com>",
    "epoch": 1675712273,
    "epoch_utc": null
  },
  {
    "commit": "b20e2539b4e9579ac286598291f956b6a665bc80",
    "author": "Eric Haag",
    "author_email": "eah0592@gmail.com",
    "date": "Mon Feb 6 04:28:02 2023 -0600",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Feb 6 11:28:02 2023 +0100",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "build.gradle"
      ]
    },
    "message": "MINOR: Remove unnecessary call to asCollection causing eager dependency resolution (#13149)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Nelson Osacky",
    "epoch": 1675668482,
    "epoch_utc": null
  },
  {
    "commit": "9ab689f7d45458e92883019f54fdcf9a2d9ce456",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Mon Feb 6 04:53:58 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Feb 6 10:53:58 2023 +0100",
    "stats": {
      "files_changed": 2,
      "insertions": 71,
      "deletions": 22,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceTask.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorSourceTaskTest.java"
      ]
    },
    "message": "KAFKA-14610: Publish Mirror Maker 2 offset syncs in task commit() method (#13181)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Greg Harris <gharris1727@gmail.com>",
    "epoch": 1675670038,
    "epoch_utc": null
  },
  {
    "commit": "4a7fedd46a7fc1eff5411a0f4329781c9474f8e8",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Fri Feb 3 17:26:33 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Feb 3 17:26:33 2023 -0800",
    "stats": {
      "files_changed": 4,
      "insertions": 889,
      "deletions": 0,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/state/internals/LogicalKeyValueSegment.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/LogicalKeyValueSegments.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/LogicalKeyValueSegmentTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/LogicalKeyValueSegmentsTest.java"
      ]
    },
    "message": "KAFKA-14491: [3/N] Add logical key value segments (#13143)\n\nPart of KIP-889\n\nReviewers: Matthias J. Sax <matthias@confuent.io>",
    "epoch": 1675455993,
    "epoch_utc": null
  },
  {
    "commit": "6e2b86597d9cd7c8b2019cffb895522deb63c93a",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Fri Feb 3 19:30:08 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Feb 3 09:00:08 2023 -0500",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSinkTask.java"
      ]
    },
    "message": "MINOR: Update incorrect / misleading comment regarding rebalance exceptions in WorkerSinkTask (#13194)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1675463408,
    "epoch_utc": null
  },
  {
    "commit": "b8e606355b71528aa438e80ffeb3042d0d586998",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Thu Feb 2 21:48:40 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 2 21:48:40 2023 -0800",
    "stats": {
      "files_changed": 2,
      "insertions": 87,
      "deletions": 58,
      "files": [
        ".../main/java/org/apache/kafka/streams/state/internals/RocksDBVersionedStoreSegmentValueFormatter.java",
        ".../java/org/apache/kafka/streams/state/internals/RocksDBVersionedStoreSegmentValueFormatterTest.java"
      ]
    },
    "message": "KAFKA-14491: [4/N] Improvements to segment value format for RocksDB versioned store (#13186)\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1675385320,
    "epoch_utc": null
  },
  {
    "commit": "3cf13064cc9d99ded4a87ead2427b5b19e94f848",
    "author": "Shekhar Rajak",
    "author_email": "60732970+shekhar-rajak@users.noreply.github.com",
    "date": "Fri Feb 3 05:33:47 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 2 16:03:47 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 46,
      "deletions": 56,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/state/internals/TimeOrderedWindowStoreTest.java"
      ]
    },
    "message": "Replace EasyMock and PowerMock with Mockito - TimeOrderedWindowStoreTest (#12777)\n\nRelated to KAFKA-14059 and KAFKA-14132\n\n* Replace EasyMock and PowerMock with Mockito - TimeOrderedWindowStoreTest.java\n* Reset removed which was not needed\n\nReviewers: Divij Vaidya <diviv@amazon.com>, Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1675413227,
    "epoch_utc": null
  },
  {
    "commit": "a3cf8b54e03c60f92f3db5e62a45c2751306f0f3",
    "author": "Yash Mayya",
    "author_email": "yash.mayya@gmail.com",
    "date": "Thu Feb 2 21:33:38 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 2 11:03:38 2023 -0500",
    "stats": {
      "files_changed": 8,
      "insertions": 353,
      "deletions": 57,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/utils/Timer.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaConfigBackingStore.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/AbstractHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaConfigBackingStoreTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectCluster.java"
      ]
    },
    "message": "KAFKA-14455: Kafka Connect create and update REST APIs should surface failures while writing to the config topic (#12984)\n\nReviewers: Greg Harris <greg.harris@aiven.io>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1675384418,
    "epoch_utc": null
  },
  {
    "commit": "50e0e3c257c823192ca79644d4bfc2be088e903b",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Thu Feb 2 11:23:26 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Feb 2 11:23:26 2023 +0100",
    "stats": {
      "files_changed": 8,
      "insertions": 741,
      "deletions": 295,
      "files": [
        "build.gradle",
        "checkstyle/import-control.xml",
        "core/src/main/scala/kafka/tools/JmxTool.scala",
        "tests/kafkatest/services/monitor/jmx.py",
        "tools/src/main/java/org/apache/kafka/tools/JmxTool.java",
        "tools/src/test/java/org/apache/kafka/tools/JmxToolTest.java",
        "tools/src/test/java/org/apache/kafka/tools/ToolsTestUtils.java",
        "tools/src/test/java/org/apache/kafka/tools/TransactionsCommandTest.java"
      ]
    },
    "message": "KAFKA-14582: Move JmxTool to tools (#13136)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1675347806,
    "epoch_utc": null
  },
  {
    "commit": "65bb819313bbfe21f021f925b49a26e7ce0c954d",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Wed Feb 1 13:19:53 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Feb 1 13:19:53 2023 -0800",
    "stats": {
      "files_changed": 2,
      "insertions": 834,
      "deletions": 0,
      "files": [
        ".../main/java/org/apache/kafka/streams/state/internals/RocksDBVersionedStoreSegmentValueFormatter.java",
        ".../java/org/apache/kafka/streams/state/internals/RocksDBVersionedStoreSegmentValueFormatterTest.java"
      ]
    },
    "message": "KAFKA-14491: [1/N] Add segment value format for RocksDB versioned store (#13126)\n\nPart of KIP-889.\n\nThe KIP proposed the introduction of versioned key-value stores, as well as a RocksDB-based implementation. The RocksDB implementation will consist of a \"latest value store\" for storing the latest record version associated with each key, in addition to multiple \"segment stores\" to store older record versions. Within a segment store, multiple record versions for the same key will be combined into a single bytes array \"value\" associated with the key and stored to RocksDB.\n\nThis PR introduces the utility class that will be used to manage the value format of these segment stores, i.e., how multiple record versions for the same key will be combined into a single bytes array \"value.\" Follow-up PRs will introduce the versioned store implementation itself (which calls heavily upon this utility class).\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1675268393,
    "epoch_utc": null
  },
  {
    "commit": "6625214c52961fc40b7992a031d60c6805db4cec",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Wed Feb 1 09:42:03 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Feb 1 09:42:03 2023 -0800",
    "stats": {
      "files_changed": 7,
      "insertions": 226,
      "deletions": 55,
      "files": [
        "core/src/main/scala/kafka/network/SocketServer.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/test/scala/unit/kafka/network/SocketServerTest.scala",
        "core/src/test/scala/unit/kafka/server/ServerStartupTest.scala",
        "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
        "server-common/src/test/java/org/apache/kafka/server/util/FutureUtilsTest.java"
      ]
    },
    "message": "KAFKA-14658: Do not open broker ports until we are ready to accept traffic (#13169)\n\nWhen we are listening on fixed ports, we should defer opening ports until we're ready to accept\ntraffic. If we open the broker port too early, it can confuse monitoring and deployment systems.\nThis is a particular concern when in KRaft mode, since in that mode, we create the SocketServer\nobject earlier in the startup process than when in ZK mode.\n\nThe approach taken in this PR is to defer opening the acceptor port until Acceptor.start is called.\nNote that when we are listening on a random port, we continue to open the port \"early,\" in the\nSocketServer constructor. The reason for doing this is that there is no other way to find the\nrandom port number the kernel has selected. Since random port assignment is not used in production\ndeployments, this should be reasonable.\n\nFutureUtils.java: add chainFuture and tests.\n\nSocketServerTest.scala: add timeouts to cases where we call get() on futures.\n\nReviewers: David Arthur <mumrah@gmail.com>, Alexandre Dupriez <hangleton@users.noreply.github.com>",
    "epoch": 1675255323,
    "epoch_utc": null
  },
  {
    "commit": "7d61d4505a16f09b85f5eb37adeff9c3534ec02c",
    "author": "Jorge Esteban Quilcate Otoya",
    "author_email": "quilcate.jorge@gmail.com",
    "date": "Tue Jan 31 21:55:50 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jan 31 15:55:50 2023 -0600",
    "stats": {
      "files_changed": 5,
      "insertions": 19,
      "deletions": 31,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/KTableKTableJoinNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/ProcessorParameters.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/StreamToTableNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/TableProcessorNode.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/TableSourceNode.java"
      ]
    },
    "message": "KAFKA-14409: Clean ProcessorParameters from casting (#12879)\n\nReviewers: A. Sophie Blee-Goldman <ableegoldman@gmail.com>, John Roesler <vvcephei@apache.org>",
    "epoch": 1675212950,
    "epoch_utc": 1675202150
  },
  {
    "commit": "eb7f490159c924ca0f21394d58366c257998f52e",
    "author": "Lucas Brutschy",
    "author_email": "lucasbru@users.noreply.github.com",
    "date": "Tue Jan 31 18:00:48 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jan 31 09:00:48 2023 -0800",
    "stats": {
      "files_changed": 12,
      "insertions": 66,
      "deletions": 54,
      "files": [
        "build.gradle",
        "streams/streams-scala/src/main/scala/org/apache/kafka/streams/scala/kstream/Branched.scala",
        "streams/streams-scala/src/main/scala/org/apache/kafka/streams/scala/kstream/BranchedKStream.scala",
        "streams/streams-scala/src/main/scala/org/apache/kafka/streams/scala/kstream/Consumed.scala",
        "streams/streams-scala/src/main/scala/org/apache/kafka/streams/scala/kstream/Grouped.scala",
        "streams/streams-scala/src/main/scala/org/apache/kafka/streams/scala/kstream/Joined.scala",
        "streams/streams-scala/src/main/scala/org/apache/kafka/streams/scala/kstream/KStream.scala",
        "streams/streams-scala/src/main/scala/org/apache/kafka/streams/scala/kstream/KTable.scala",
        "streams/streams-scala/src/main/scala/org/apache/kafka/streams/scala/kstream/Materialized.scala",
        "streams/streams-scala/src/main/scala/org/apache/kafka/streams/scala/kstream/Produced.scala",
        "streams/streams-scala/src/main/scala/org/apache/kafka/streams/scala/kstream/Repartitioned.scala",
        "streams/streams-scala/src/main/scala/org/apache/kafka/streams/scala/kstream/StreamJoined.scala"
      ]
    },
    "message": "chore: Fix scaladoc warnings (#13164)\n\nMake sure no scaladoc warnings are emitted from the streams-scala project build.\nWe cannot fully fix all scaladoc warnings due to limitations of the scaladoc tool,\nso this is a best-effort attempt at fixing as many warnings as possible. We also\ndisable one problematic class of scaladoc wornings (link errors) in the gradle build.\n\nThe causes of existing warnings are that we link to java members from scaladoc, which\nis not possible, or we fail to disambiguate some members.\n\nThe broad rule applied in the changes is\n- For links to Java members such as [[StateStore]], we use the fully qualified name in a code tag\nto make manual link resolution via a search engine easy.\n- For some common terms that are also linked to Java members, like [[Serde]], we omit the link.\n- We disambiguate where possible.\n- In the special case of @throws declarations with Java Exceptions, we do not seem to be able\nto avoid the warning altogther.\n\nReviewers: Matthias J. Sax <mjsax@apache.org>, Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1675198848,
    "epoch_utc": null
  },
  {
    "commit": "6c98544a964b40ede6bbe1b3440f8e5db96a4ad6",
    "author": "Victoria Xia",
    "author_email": "victoria.xia@confluent.io",
    "date": "Tue Jan 31 00:05:43 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jan 31 00:05:43 2023 -0800",
    "stats": {
      "files_changed": 7,
      "insertions": 242,
      "deletions": 50,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/state/internals/ManagedKeyValueIterator.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBRangeIterator.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBTimestampedStore.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDbIterator.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBRangeIteratorTest.java",
        "streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBStoreTest.java"
      ]
    },
    "message": "KAFKA-14491: [2/N] Refactor RocksDB store open iterator management (#13142)\n\nThis PR refactors how the list of open iterators for RocksDB stores is managed. Prior to this PR, the `openIterators` list was passed into the constructor for the iterators themselves, allowing `RocksDbIterator.close()` to remove the iterator from the `openIterators` list. After this PR, the iterators themselves will not know about lists of open iterators. Instead, a generic close callback is exposed, and it's the responsibility of the store that creates a new iterator to set the callback on the iterator, to ensure that closing an iterator removes the iterator from the list of open iterators.\n\nThis refactor is desirable because it enables more flexible iterator lifecycle management. Building on top of this, RocksDBStore is updated with an option to allow the user (i.e., the caller of methods such as `range()` and `prefixScan()` which return iterators) to pass a custom `openIterators` list for the new iterator to be stored in. This will allow for a new Segments implementation where multiple Segments can share the same RocksDBStore instance, while having each Segment manage its own open iterators.\n\nPart of KIP-889.\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1675134343,
    "epoch_utc": null
  },
  {
    "commit": "dc011992712805e22009bbc3eb81be81228ed0b9",
    "author": "Matthias J. Sax",
    "author_email": "matthias@confluent.io",
    "date": "Mon Jan 30 23:39:41 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jan 30 23:39:41 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 4,
      "deletions": 0,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/StickyTaskAssignor.java"
      ]
    },
    "message": "KAFAK-14660: Fix divide-by-zero vulnerability (#13175)\n\nThis PR adds a safe-guard for divide-by-zero. While `totalCapacity` can never be zero, an explicit error message is desirable.\n\nReviewers: Bill Bejeck <bill@confluent.io>, Guozhang Wang <guozhang@confluent.io>",
    "epoch": 1675132781,
    "epoch_utc": null
  },
  {
    "commit": "89a4735c35b80abcf5cd80f5c5ae80fc39107571",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Tue Jan 31 01:31:45 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jan 30 22:31:45 2023 -0800",
    "stats": {
      "files_changed": 14,
      "insertions": 334,
      "deletions": 56,
      "files": [
        "core/src/main/scala/kafka/common/InterBrokerSendThread.scala",
        "core/src/main/scala/kafka/migration/MigrationPropagator.scala",
        "core/src/main/scala/kafka/server/BrokerToControllerChannelManager.scala",
        "core/src/main/scala/kafka/zk/ZkMigrationClient.scala",
        "core/src/test/java/kafka/test/junit/ZkClusterInvocationContext.java",
        "core/src/test/scala/integration/kafka/zk/ZkMigrationIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/integration/KafkaServerTestHarness.scala",
        "core/src/test/scala/unit/kafka/zk/ZkMigrationClientTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/ProducerIdControlManager.java",
        "metadata/src/main/java/org/apache/kafka/image/ClientQuotaImage.java",
        "metadata/src/main/java/org/apache/kafka/image/ConfigurationImage.java",
        "metadata/src/main/java/org/apache/kafka/image/ConfigurationsImage.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/MigrationClient.java"
      ]
    },
    "message": "KAFKA-14656: Send UMR first during ZK migration (#13159)\n\nWhen in migration-from-ZK mode and sending RPCs to ZK-based brokers, the KRaft controller must send\nfull UpdateMetadataRequests prior to sending full LeaderAndIsrRequests. If the controller sends the\nrequests in the other order, and the ZK-based broker does not already know about some of the nodes\nreferenced in the LeaderAndIsrRequest, it will reject the request.\n\nThis PR includes an integration test, and a number of other small fixes for dual-write.\n\nCo-authored-by: Akhilesh C <akhileshchg@users.noreply.github.com>\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1675139505,
    "epoch_utc": null
  },
  {
    "commit": "eb7d5cbf15b2e53249d8126859c4cbb2c7019f5c",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Mon Jan 30 11:29:30 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jan 30 11:29:30 2023 -0800",
    "stats": {
      "files_changed": 12,
      "insertions": 386,
      "deletions": 43,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/utils/Time.java",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/test/java/kafka/testkit/KafkaClusterTestKit.java",
        "core/src/test/scala/integration/kafka/api/PlaintextAdminIntegrationTest.scala",
        "core/src/test/scala/integration/kafka/server/QuorumTestHarness.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala",
        "server-common/src/main/java/org/apache/kafka/server/util/Deadline.java",
        "server-common/src/main/java/org/apache/kafka/server/util/FutureUtils.java",
        "server-common/src/test/java/org/apache/kafka/server/util/DeadlineTest.java",
        "server-common/src/test/java/org/apache/kafka/server/util/FutureUtilsTest.java"
      ]
    },
    "message": "MINOR: add startup timeouts to KRaft integration tests (#13153)\n\nWhen running junit tests, it is not good to block forever on CompletableFuture objects.  When there\nare bugs, this can lead to junit tests hanging forever. Jenkins does not deal with this well -- it\noften brings down the whole multi-hour test run.  Therefore, when running integration tests in\nJUnit, set some reasonable time limits on broker and controller startup time.\n\nReviewers: Jason Gustafson <jason@confluent.io>",
    "epoch": 1675088970,
    "epoch_utc": null
  },
  {
    "commit": "17559d581e9ba89eb3c96b32f232cfa03d8b45a5",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Mon Jan 30 12:06:02 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jan 30 18:06:02 2023 +0100",
    "stats": {
      "files_changed": 3,
      "insertions": 61,
      "deletions": 44,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractHerder.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/isolation/Plugins.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/AbstractHerderTest.java"
      ]
    },
    "message": "KAFKA-14645: Use plugin classloader when retrieving connector plugin config definitions (#13148)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Greg Harris <gharris1727@gmail.com>",
    "epoch": 1675091162,
    "epoch_utc": null
  },
  {
    "commit": "72cfc994f5675be349d4494ece3528efed290651",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Thu Jan 26 20:06:09 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jan 26 20:06:09 2023 +0100",
    "stats": {
      "files_changed": 38,
      "insertions": 664,
      "deletions": 567,
      "files": [
        "build.gradle",
        "checkstyle/import-control-core.xml",
        "checkstyle/import-control.xml",
        "core/src/main/scala/kafka/Kafka.scala",
        "core/src/main/scala/kafka/admin/AclCommand.scala",
        "core/src/main/scala/kafka/admin/BrokerApiVersionsCommand.scala",
        "core/src/main/scala/kafka/admin/ConfigCommand.scala",
        "core/src/main/scala/kafka/admin/ConsumerGroupCommand.scala",
        "core/src/main/scala/kafka/admin/DelegationTokenCommand.scala",
        "core/src/main/scala/kafka/admin/DeleteRecordsCommand.scala",
        "core/src/main/scala/kafka/admin/LeaderElectionCommand.scala",
        "core/src/main/scala/kafka/admin/LogDirsCommand.scala",
        "core/src/main/scala/kafka/admin/ReassignPartitionsCommand.scala",
        "core/src/main/scala/kafka/admin/TopicCommand.scala",
        "core/src/main/scala/kafka/admin/ZkSecurityMigrator.scala",
        "core/src/main/scala/kafka/tools/ConsoleConsumer.scala",
        "core/src/main/scala/kafka/tools/ConsoleProducer.scala",
        "core/src/main/scala/kafka/tools/ConsumerPerformance.scala",
        "core/src/main/scala/kafka/tools/DumpLogSegments.scala",
        "core/src/main/scala/kafka/tools/GetOffsetShell.scala",
        "core/src/main/scala/kafka/tools/JmxTool.scala",
        "core/src/main/scala/kafka/tools/MirrorMaker.scala",
        "core/src/main/scala/kafka/tools/PerfConfig.scala",
        "core/src/main/scala/kafka/tools/ReplicaVerificationTool.scala",
        "core/src/main/scala/kafka/tools/StateChangeLogMerger.scala",
        "core/src/main/scala/kafka/tools/StreamsResetter.java",
        "core/src/main/scala/kafka/tools/TestRaftServer.scala",
        "core/src/main/scala/kafka/utils/CommandDefaultOptions.scala",
        "core/src/main/scala/kafka/utils/CommandLineUtils.scala",
        "core/src/main/scala/kafka/utils/ToolsUtils.scala",
        "core/src/test/scala/kafka/tools/LogCompactionTester.scala",
        "core/src/test/scala/other/kafka/TestLinearWriteSpeed.scala",
        "core/src/test/scala/other/kafka/TestPurgatoryPerformance.scala",
        "core/src/test/scala/unit/kafka/admin/ReassignPartitionsCommandArgsTest.scala",
        "core/src/test/scala/unit/kafka/utils/CommandLineUtilsTest.scala",
        "server-common/src/main/java/org/apache/kafka/server/util/CommandDefaultOptions.java",
        "server-common/src/main/java/org/apache/kafka/server/util/CommandLineUtils.java",
        "server-common/src/test/java/org/apache/kafka/server/util/CommandLineUtilsTest.java"
      ]
    },
    "message": "KAFKA-14628: Move CommandLineUtils and CommandDefaultOptions to tools (#13131)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Christo Lolov <christololov@gmail.com>, Sagar Rao <sagarmeansocean@gmail.com>",
    "epoch": 1674774369,
    "epoch_utc": null
  },
  {
    "commit": "f9e0d0327478e882c27a7b090a358ca593e89243",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Wed Jan 25 15:52:01 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jan 25 15:52:01 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 2,
      "files": [
        "raft/src/main/java/org/apache/kafka/raft/LeaderState.java"
      ]
    },
    "message": "MINOR; Make granting voter immutable (#13154)\n\nMake LeaderState's grantingVoters field explicitly immutable. The set of voters that granted their voter to the current leader was already immutable. This change makes that explicit.\n\nReviewers: Jason Gustafson <jason@confluent.io>, Mathew Hogan <mathewdhogan@@users.noreply.github.com>",
    "epoch": 1674672721,
    "epoch_utc": null
  },
  {
    "commit": "598ba5f2fd57fc2cea21013a438650d98cda6623",
    "author": "Jason Gustafson",
    "author_email": "jason@confluent.io",
    "date": "Wed Jan 25 09:41:38 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jan 25 09:41:38 2023 -0800",
    "stats": {
      "files_changed": 5,
      "insertions": 39,
      "deletions": 11,
      "files": [
        "core/src/main/scala/kafka/raft/RaftManager.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/server/SharedServer.scala",
        "core/src/main/scala/kafka/tools/TestRaftServer.scala",
        "core/src/test/scala/unit/kafka/raft/RaftManagerTest.scala"
      ]
    },
    "message": "KAFKA-14644: Process should crash after failure in Raft IO thread (#13140)\n\nUnexpected errors caught in the Raft IO thread should cause the process to stop. This is similar to the handling of exceptions in the controller.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1674650498,
    "epoch_utc": null
  },
  {
    "commit": "0711375b1efacd6f4b572317438d73953dba44c6",
    "author": "Alyssa Huang",
    "author_email": "ahuang@confluent.io",
    "date": "Tue Jan 24 16:08:33 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jan 24 16:08:33 2023 -0800",
    "stats": {
      "files_changed": 4,
      "insertions": 70,
      "deletions": 12,
      "files": [
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/test/scala/integration/kafka/server/KRaftClusterTest.scala"
      ]
    },
    "message": "KRaft brokers and controllesr should fail on Authorizer failure (#13151)\n\nKRaft brokers and controllesr should fail to start if any authorizer fails to start.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1674587313,
    "epoch_utc": null
  },
  {
    "commit": "1d0585563b41775ca69ca1b53c19dbd017e5c6f6",
    "author": "Lucas Brutschy",
    "author_email": "lucasbru@users.noreply.github.com",
    "date": "Wed Jan 25 00:32:04 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jan 24 15:32:04 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 1,
      "files": [
        "streams/src/test/java/org/apache/kafka/test/StreamsTestUtils.java"
      ]
    },
    "message": "MINOR: fix flaky DefaultStateUpdaterTest (#13160)\n\nMockito should not make named topologies paused by default.\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1674617524,
    "epoch_utc": null
  },
  {
    "commit": "bc1ce9f0f1b249fddb9f9dc988f49f2f74c5a158",
    "author": "Kirk True",
    "author_email": "kirk@kirktrue.pro",
    "date": "Tue Jan 24 11:06:24 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jan 24 19:06:24 2023 +0000",
    "stats": {
      "files_changed": 1,
      "insertions": 12,
      "deletions": 5,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/security/oauthbearer/internals/secured/HttpAccessTokenRetriever.java"
      ]
    },
    "message": "KAFKA-14623: OAuth's HttpAccessTokenRetriever potentially leaks secrets in logging (#13119)\n\nRemoves logging of the HTTP response directly in all known cases to prevent potentially logging access tokens.\n\nReviewers:  Sushant Mahajan <sushant.mahajan88@gmail.com>, Rajini Sivaram <rajinisivaram@googlemail.com>",
    "epoch": 1674569184,
    "epoch_utc": null
  },
  {
    "commit": "3799708ff09b174883eddc1f6a857ddc518fa35f",
    "author": "A. Sophie Blee-Goldman",
    "author_email": "sophie@confluent.io",
    "date": "Tue Jan 24 00:14:20 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jan 24 00:14:20 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/integration/SmokeTestDriverIntegrationTest.java"
      ]
    },
    "message": "KAFKA-14533: re-enable 'false' and disable the 'true' parameter of SmokeTestDriverIntegrationTest (#13156)\n\nI immediately saw a failure with stateUpdaterEnabled = true after disabling the false parameter, which suggests the problem actually does lie in the state updater itself and not the act of parametrization of the test. To verify this theory, and help stabilize the 3.4 release branch, let's try one more test by swapping out the true build in favor of the false one. If the listOffsets requests stop failing and causing this integration test to hit the global timeout as is currently happening at such a high rate, then we have pretty good evidence pointing at the state updater and should be able to debug things more easily from there.\n\nAfter getting in a few builds to see whether the flakiness subsides, we should merge this PR to re-enable both parameters going forward: https://github.com/apache/kafka/pull/13155\n\nReviewers: Anna Sophie Blee-Goldman <ableegoldman@apache.org>",
    "epoch": 1674530060,
    "epoch_utc": null
  },
  {
    "commit": "26119bae901ab83bc7105dfb1e8f099a6778344b",
    "author": "Nikolay",
    "author_email": "nizhikov@apache.org",
    "date": "Tue Jan 24 05:38:37 2023 +0300",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jan 23 21:38:37 2023 -0500",
    "stats": {
      "files_changed": 7,
      "insertions": 60,
      "deletions": 16,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorMaker.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractHerder.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/connector/policy/BaseConnectorClientConfigOverridePolicyTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/AbstractHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedHerderTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/SampleConnectorClientConfigOverridePolicy.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerderTest.java"
      ]
    },
    "message": "KAFKA-14463 Close ConnectorClientConfigOverridePolicy instances (#13144)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1674549517,
    "epoch_utc": null
  },
  {
    "commit": "ee8e7578789e02e369ce933341501a383b62d5dd",
    "author": "A. Sophie Blee-Goldman",
    "author_email": "sophie@confluent.io",
    "date": "Mon Jan 23 15:24:35 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jan 23 15:24:35 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 4,
      "deletions": 3,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/integration/SmokeTestDriverIntegrationTest.java"
      ]
    },
    "message": "temporarily disable the 'false' parameter (#13147)\n\nNeed to get a clean build for 3.4 and this test has been extremely flaky. I'm looking into the failure as well, and want to pinpoint whether it's the true build that's broken or it's the parameterization itself causing this -- thus, let's start by temporarily disabling the false parameter first.\n\nSee KAFKA-14533 for more details\n\nReviewers: Lucas Brutschy <lbrutschy@confluent.io>",
    "epoch": 1674498275,
    "epoch_utc": null
  },
  {
    "commit": "66412462c8d93b62ca17d922965f039bed4807a3",
    "author": "Ron Dagostino",
    "author_email": "rndgstn@gmail.com",
    "date": "Mon Jan 23 17:04:59 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jan 23 17:04:59 2023 -0500",
    "stats": {
      "files_changed": 3,
      "insertions": 7,
      "deletions": 7,
      "files": [
        "core/src/main/scala/kafka/server/ControllerApis.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "docs/ops.html"
      ]
    },
    "message": "MINOR: fix some typos in comments/docs/variable names (#13118)\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1674504299,
    "epoch_utc": null
  },
  {
    "commit": "b2cb546fba03bbdc4054c7d120b0b2654c7cf34e",
    "author": "Jason Gustafson",
    "author_email": "jason@confluent.io",
    "date": "Mon Jan 23 12:45:24 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jan 23 12:45:24 2023 -0800",
    "stats": {
      "files_changed": 11,
      "insertions": 365,
      "deletions": 376,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/CoordinatorRequestManager.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThread.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ErrorEventHandler.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/NetworkClientDelegate.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/RequestState.java",
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/events/ErrorBackgroundEvent.java",
        "clients/src/test/java/org/apache/kafka/clients/MockClient.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/CoordinatorRequestManagerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/DefaultBackgroundThreadTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/NetworkClientDelegateTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/RequestStateTest.java"
      ]
    },
    "message": "MINOR: Small cleanups in refactored consumer implementation (#13138)\n\nThis patch contains a few cleanups and fixes in the new refactored consumer logic:\n\n- Use `CompletableFuture` instead of `RequestFuture` in `NetworkClientDelegate`. This is a much more extensible API and it avoids tying the new implementation to `ConsumerNetworkClient`.\n- Fix call to `isReady` in `NetworkClientDelegate`. We need the call to `ready` to initiate the connection.\n- Ensure backoff is enforced even after successful `FindCoordinator` requests. This avoids a tight loop while metadata is converging after a coordinator change.\n- `RequestState` was incorrectly using the reconnect backoff as the retry backoff. In fact, we don't currently have a retry backoff max implemented in the consumer, so the use of `ExponentialBackoff` is unnecessary, but I've left it since we may add this with https://cwiki.apache.org/confluence/display/KAFKA/KIP-580%3A+Exponential+Backoff+for+Kafka+Clients.\n- Minor cleanups in test cases to avoid unused classes/fields.\n\nReviewers: Philip Nee <pnee@confluent.i>, Guozhang Wang <guozhang@apache.org>",
    "epoch": 1674488724,
    "epoch_utc": null
  },
  {
    "commit": "cfbd8979bc70dec21ebc5f81547acefddf4a6767",
    "author": "vamossagar12",
    "author_email": "sagarmeansocean@gmail.com",
    "date": "Tue Jan 24 00:45:59 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jan 23 14:15:59 2023 -0500",
    "stats": {
      "files_changed": 2,
      "insertions": 46,
      "deletions": 19,
      "files": [
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedHerderTest.java"
      ]
    },
    "message": "KAFKA-14311: Cleanly cleanly stop connectors/tasks on Connect worker shutdown (#12802)\n\nReviewers: Chris Egerton <chrise@aiven.io>",
    "epoch": 1674531959,
    "epoch_utc": null
  },
  {
    "commit": "00e5803cd3af89011254e734232308618403309d",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Mon Jan 23 13:07:44 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jan 23 13:07:44 2023 +0100",
    "stats": {
      "files_changed": 60,
      "insertions": 274,
      "deletions": 327,
      "files": [
        "clients/src/test/java/org/apache/kafka/clients/ClusterConnectionStatesTest.java",
        "clients/src/test/java/org/apache/kafka/clients/MockClient.java",
        "clients/src/test/java/org/apache/kafka/clients/NetworkClientTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/ConsumerRecordsTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerInterceptorsTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerMetadataTest.java",
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerNetworkClientTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/ProducerRecordTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/RecordSendTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/RoundRobinPartitionerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/UniformStickyPartitionerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/BufferPoolTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/DefaultPartitionerTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/ProducerBatchTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/RecordAccumulatorTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/SenderTest.java",
        "clients/src/test/java/org/apache/kafka/clients/producer/internals/StickyPartitionCacheTest.java",
        "clients/src/test/java/org/apache/kafka/common/KafkaFutureTest.java",
        "clients/src/test/java/org/apache/kafka/common/acl/AclOperationTest.java",
        "clients/src/test/java/org/apache/kafka/common/acl/AclPermissionTypeTest.java",
        "clients/src/test/java/org/apache/kafka/common/cache/LRUCacheTest.java",
        "clients/src/test/java/org/apache/kafka/common/config/ConfigDefTest.java",
        "clients/src/test/java/org/apache/kafka/common/config/ConfigTransformerTest.java",
        "clients/src/test/java/org/apache/kafka/common/config/provider/DirectoryConfigProviderTest.java",
        "clients/src/test/java/org/apache/kafka/common/config/provider/FileConfigProviderTest.java",
        "clients/src/test/java/org/apache/kafka/common/header/internals/RecordHeadersTest.java",
        "clients/src/test/java/org/apache/kafka/common/internals/PartitionStatesTest.java",
        "clients/src/test/java/org/apache/kafka/common/message/RecordsSerdeTest.java",
        "clients/src/test/java/org/apache/kafka/common/metrics/KafkaMbeanTest.java",
        "clients/src/test/java/org/apache/kafka/common/metrics/MetricsTest.java",
        "clients/src/test/java/org/apache/kafka/common/metrics/SensorTest.java",
        "clients/src/test/java/org/apache/kafka/common/metrics/stats/FrequenciesTest.java",
        "clients/src/test/java/org/apache/kafka/common/network/EchoServer.java",
        "clients/src/test/java/org/apache/kafka/common/network/NioEchoServer.java",
        "clients/src/test/java/org/apache/kafka/common/network/PlaintextSender.java",
        "clients/src/test/java/org/apache/kafka/common/network/SelectorTest.java",
        "clients/src/test/java/org/apache/kafka/common/network/SslSelectorTest.java",
        "clients/src/test/java/org/apache/kafka/common/network/SslSender.java",
        "clients/src/test/java/org/apache/kafka/common/record/DefaultRecordTest.java",
        "clients/src/test/java/org/apache/kafka/common/record/FileRecordsTest.java",
        "clients/src/test/java/org/apache/kafka/common/security/JaasContextTest.java",
        ".../{OAuthBearerSaslClienCallbackHandlerTest.java => OAuthBearerSaslClientCallbackHandlerTest.java}",
        ".../java/org/apache/kafka/common/security/oauthbearer/internals/OAuthBearerClientInitialResponseTest.java",
        "clients/src/test/java/org/apache/kafka/common/security/oauthbearer/internals/OAuthBearerSaslServerTest.java",
        ".../apache/kafka/common/security/oauthbearer/internals/expiring/ExpiringCredentialRefreshingLoginTest.java",
        ".../java/org/apache/kafka/common/security/oauthbearer/internals/secured/HttpAccessTokenRetrieverTest.java",
        "clients/src/test/java/org/apache/kafka/common/security/oauthbearer/internals/secured/RetryTest.java",
        ".../common/security/oauthbearer/internals/unsecured/OAuthBearerUnsecuredValidatorCallbackHandlerTest.java",
        "clients/src/test/java/org/apache/kafka/common/security/plain/internals/PlainSaslServerTest.java",
        "clients/src/test/java/org/apache/kafka/common/security/scram/internals/ScramSaslServerTest.java",
        "clients/src/test/java/org/apache/kafka/common/security/ssl/SslFactoryTest.java",
        "clients/src/test/java/org/apache/kafka/common/security/ssl/mock/TestTrustManagerFactory.java",
        "clients/src/test/java/org/apache/kafka/common/serialization/SerializationTest.java",
        "clients/src/test/java/org/apache/kafka/common/utils/AbstractIteratorTest.java",
        "clients/src/test/java/org/apache/kafka/common/utils/ExitTest.java",
        "clients/src/test/java/org/apache/kafka/common/utils/ImplicitLinkedHashCollectionTest.java",
        "clients/src/test/java/org/apache/kafka/common/utils/MockScheduler.java",
        "clients/src/test/java/org/apache/kafka/common/utils/UtilsTest.java",
        "clients/src/test/java/org/apache/kafka/test/Microbenchmarks.java",
        "clients/src/test/java/org/apache/kafka/test/TestSslUtils.java"
      ]
    },
    "message": "MINOR: Various cleanups in client tests (#13094)\n\n\nReviewers: Luke Chen <showuon@gmail.com>, Ismael Juma <mlists@juma.me.uk>, Divij Vaidya <diviv@amazon.com>, Christo Lolov <christololov@gmail.com>",
    "epoch": 1674490064,
    "epoch_utc": null
  },
  {
    "commit": "86c953d42e61af787765f930e7cb685bc6f17dd4",
    "author": "Kamal Chandraprakash",
    "author_email": "kchandraprakash@uber.com",
    "date": "Mon Jan 23 17:28:41 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jan 23 12:58:41 2023 +0100",
    "stats": {
      "files_changed": 3,
      "insertions": 12,
      "deletions": 2,
      "files": [
        "core/src/main/scala/kafka/admin/ConfigCommand.scala",
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala"
      ]
    },
    "message": "MINOR: KafkaConfig should not expose internal config when queried for non-internal configs. (#13059)\n\nSide fix: Print the topic/broker/broker-loggers configurations in the alphabetical/sorted order. This will be useful when the user supplies '--all' flag.\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Luke Chen <showuon@gmail.com>",
    "epoch": 1674505721,
    "epoch_utc": null
  },
  {
    "commit": "0601fa0935b03318ed08bfc578685fc4155ee948",
    "author": "A. Sophie Blee-Goldman",
    "author_email": "sophie@confluent.io",
    "date": "Sun Jan 22 15:57:58 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Jan 22 15:57:58 2023 -0800",
    "stats": {
      "files_changed": 21,
      "insertions": 271,
      "deletions": 276,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/integration/ConsistencyVectorIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/EmitOnChangeIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/EosIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/InternalTopicIntegrationTest.java",
        ".../apache/kafka/streams/integration/KTableKTableForeignKeyInnerJoinCustomPartitionerIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/KafkaStreamsCloseOptionsIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/LagFetchIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/NamedTopologyIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/OptimizedKTableIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/QueryableStateIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/RangeQueryIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/RegexSourceIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/RestoreIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/StandbyTaskEOSIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/StoreQueryIntegrationTest.java",
        ".../test/java/org/apache/kafka/streams/integration/StreamsUncaughtExceptionHandlerIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/TaskMetadataIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/utils/IntegrationTestUtils.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/DefaultStateUpdaterTest.java",
        "streams/src/test/java/org/apache/kafka/test/StreamsTestUtils.java"
      ]
    },
    "message": "MINOR: fix flaky integrations tests by using 60s default timeout for startup (#13141)\n\nThe timeouts used for starting up Streams and waiting for the RUNNING state are all over the place across our integration tests, with some as low as 15s (which are unsurprisingly rather flaky). We use 60s as the default timeout for other APIs in the IntegrationTestUtils so we should do the same for #startApplicationAndWaitUntilRunning\n\nI also noticed that we have several versions of that exact API in StreamsTestUtils, so I migrated everyone over to the IntegrationTestUtils#startApplicationAndWaitUntilRunning and added a few overloads for ease of use, including one for single KafkaStreams apps and one for using the default timeout\n\nReviewers: Matthias J. Sax <mjsax@apache.org>",
    "epoch": 1674413878,
    "epoch_utc": null
  },
  {
    "commit": "8b4423765574e8fc68a24bce0ac36dd29eb81c98",
    "author": "Mickael Maison",
    "author_email": "mimaison@users.noreply.github.com",
    "date": "Sun Jan 22 12:50:43 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Jan 22 12:50:43 2023 +0100",
    "stats": {
      "files_changed": 5,
      "insertions": 206,
      "deletions": 200,
      "files": [
        "bin/kafka-cluster.sh",
        "core/src/main/scala/kafka/tools/ClusterTool.scala",
        "core/src/test/scala/unit/kafka/tools/ClusterToolTest.scala",
        "tools/src/main/java/org/apache/kafka/tools/ClusterTool.java",
        "tools/src/test/java/org/apache/kafka/tools/ClusterToolTest.java"
      ]
    },
    "message": "KAFKA-14575: Move ClusterTool to tools module (#13080)\n\n\nReviewers: dengziming <dengziming1993@gmail.com>, Federico Valeri  <fedevaleri@gmail.com>",
    "epoch": 1674402643,
    "epoch_utc": null
  },
  {
    "commit": "01aee55fc4f5a09e1905cafe411df74bf944fd4d",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Sat Jan 21 07:42:50 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Jan 21 07:42:50 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 6,
      "files": [
        "build.gradle"
      ]
    },
    "message": "MINOR: Remove some connect tests from Java 17 block list (#13121)\n\nMost were converted not to use PowerMock, but some no\nlonger exist.\n\nReviewers: Chris Egerton <chrise@aiven.io>, Christo Lolov  <christo_lolov@yahoo.com>",
    "epoch": 1674297770,
    "epoch_utc": null
  },
  {
    "commit": "ca80502ebe98cb91788a0e54d0d71499f6b0ef5d",
    "author": "Philip Nee",
    "author_email": "pnee@confluent.io",
    "date": "Fri Jan 20 14:53:20 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jan 20 14:53:20 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 8,
      "deletions": 9,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/consumer/internals/SubscriptionState.java"
      ]
    },
    "message": "Update outdated documentation. (#13139)\n\nThe current documentation indicates two positions are tracked, but these positions were removed a few years ago. Now we use a single position to track the last consumed record. Updated the documentation to reflect to the current state.\n\nReviewers: Guozhang Wang <wangguoz@gmail.com>",
    "epoch": 1674237200,
    "epoch_utc": null
  },
  {
    "commit": "123e0e9ca9e9e23709cf59b83b01c8ae885c5f43",
    "author": "A. Sophie Blee-Goldman",
    "author_email": "sophie@confluent.io",
    "date": "Fri Jan 20 14:19:11 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jan 20 14:19:11 2023 -0800",
    "stats": {
      "files_changed": 8,
      "insertions": 20,
      "deletions": 16,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/TopologyConfig.java",
        "streams/src/main/java/org/apache/kafka/streams/TopologyDescription.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/KStream.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/Produced.java",
        "streams/src/main/java/org/apache/kafka/streams/kstream/Repartitioned.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/StreamPartitioner.java",
        "streams/src/main/java/org/apache/kafka/streams/query/Position.java",
        "streams/src/main/java/org/apache/kafka/streams/query/QueryResult.java"
      ]
    },
    "message": "MINOR: fix warnings in Streams javadocs (#13132)\n\nWhile working on the 3.4 release I noticed we've built up an embarrassingly long list of warnings within the Streams javadocs. It's unavoidable for some links to break as the source code changes, but let's reset back to a good state before the list gets even longer\n\nReviewers: Matthias J. Sax <mjsax@apache.org>, Walker Carlson <wcarlson@confluent.io>",
    "epoch": 1674235151,
    "epoch_utc": null
  },
  {
    "commit": "79b12cbe65f77c3ea9e7161e10a379e82155f30f",
    "author": "A. Sophie Blee-Goldman",
    "author_email": "sophie@confluent.io",
    "date": "Fri Jan 20 13:56:38 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jan 20 13:56:38 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "clients/src/test/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignorTest.java"
      ]
    },
    "message": "MINOR: fix flaky StickyAssignorTest.testLargeAssignmentAndGroupWithNonEqualSubscription (#13134)\n\nThis test is supposed to be a sanity check that rebalancing with a large number of partitions/consumers won't start to take obscenely long or approach the max.poll.interval.ms -- bumping up the timeout by another 30s still feels very reasonable considering the test is for 1 million partitions\n\nReviewers: Matthias J. Sax <mjsax@apache.org>",
    "epoch": 1674233798,
    "epoch_utc": null
  },
  {
    "commit": "2e0a005dd47d922d66c1da9b20b6ab7f5d1be5a1",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Fri Jan 20 08:38:21 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jan 20 08:38:21 2023 +0100",
    "stats": {
      "files_changed": 22,
      "insertions": 328,
      "deletions": 143,
      "files": [
        "build.gradle",
        "checkstyle/import-control-jmh-benchmarks.xml",
        "core/src/main/java/kafka/server/builders/KafkaApisBuilder.java",
        "core/src/main/scala/kafka/coordinator/group/GroupCoordinator.scala",
        "core/src/main/scala/kafka/coordinator/group/GroupCoordinatorAdapter.scala",
        "core/src/main/scala/kafka/coordinator/group/GroupMetadataManager.scala",
        "core/src/main/scala/kafka/server/AutoTopicCreationManager.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/main/scala/kafka/server/KafkaBroker.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/server/RequestHandlerHelper.scala",
        "core/src/main/scala/kafka/server/metadata/BrokerMetadataPublisher.scala",
        "core/src/test/scala/integration/kafka/server/DynamicBrokerReconfigurationTest.scala",
        "core/src/test/scala/integration/kafka/server/MultipleListenersWithSameSecurityProtocolBaseTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupMetadataManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/AutoTopicCreationManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinator.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/metadata/MetadataRequestBenchmark.java"
      ]
    },
    "message": "KAFKA-14367; Add internal APIs to the new `GroupCoordinator` interface (#13112)\n\nThis patch migrates all the internal APIs of the current group coordinator to the new `GroupCoordinator` interface. It also makes the current implementation package private to ensure that it is not used anymore.\n\nReviewers: Justine Olshan <jolshan@confluent.io>",
    "epoch": 1674214701,
    "epoch_utc": null
  },
  {
    "commit": "4b7526576138da0c1f262d297055387742bf0cb6",
    "author": "Alex Sorokoumov",
    "author_email": "918393+Gerrrr@users.noreply.github.com",
    "date": "Thu Jan 19 18:55:32 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jan 19 18:55:32 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 2,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java"
      ]
    },
    "message": "KAFKA-14638: Elaborate when transaction.timeout.ms resets (#13129)\n\nReviewers: Matthias J. Sax <matthias@confluent.io>, Justine Olshan <jolshan@confluent.io>, Jason Gustafson <jason@confluent.io>",
    "epoch": 1674165332,
    "epoch_utc": null
  },
  {
    "commit": "e235e1a3fee53a34d855f44ed44da5da2f352b06",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Thu Jan 19 19:44:08 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jan 19 18:44:08 2023 +0100",
    "stats": {
      "files_changed": 2,
      "insertions": 146,
      "deletions": 273,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/RepartitionTopicsTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StateManagerUtilTest.java"
      ]
    },
    "message": "KAFKA-14132: Replace PowerMock and EasyMock with Mockito in streams tests (#12821)\n\nBatch 1 of the tests detailed in https://issues.apache.org/jira/browse/KAFKA-14132 which use PowerMock/EasyMock and need to be moved to Mockito.\n\nReviewer: Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1674168248,
    "epoch_utc": null
  },
  {
    "commit": "7a22c0c98f33ce0514ef93318bab322e84ba1e41",
    "author": "Akhilesh C",
    "author_email": "akhileshchg@users.noreply.github.com",
    "date": "Thu Jan 19 07:55:59 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jan 19 10:55:59 2023 -0500",
    "stats": {
      "files_changed": 4,
      "insertions": 99,
      "deletions": 15,
      "files": [
        "core/src/main/scala/kafka/server/BrokerMetadataCheckpoint.scala",
        "core/src/main/scala/kafka/server/KafkaRaftServer.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/test/scala/kafka/server/BrokerMetadataCheckpointTest.scala"
      ]
    },
    "message": "KAFKA-14637 Fix upgrade compatibility issue from older versions to 3.4 (#13130)\n\n3.4 introduced a change that requires cluster.id to be present in meta.properties if the file is available. This information is not persisted by the brokers in old versions (< 0.10). So on upgrade, the requirement check fails and halts the broker start up. This patch fixes the requirement to ensure that cluster.id is not required in zk mode on upgrade.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>, Colin P. McCabe <cmccabe@apache.org>, David Arthur <mumrah@gmail.com>",
    "epoch": 1674125759,
    "epoch_utc": null
  },
  {
    "commit": "a1db17b8aadaf81e3ab7e79bb68d51429936a9ef",
    "author": "Matthias Seiler",
    "author_email": "39630142+maseiler@users.noreply.github.com",
    "date": "Thu Jan 19 16:34:07 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jan 19 10:34:07 2023 -0500",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "docs/streams/developer-guide/dsl-api.html"
      ]
    },
    "message": "MINOR: Rename description of flatMapValues transformation (#8431)\n\nThe table of (stateless) transformations uses the transformation name in the first column and a description in the second column. I adjusted the transformation name for FlatMapValues accordingly.\n\nReviewers: Matthias J. Sax <mjsax@apache.org>, Bill Bejeck <bbejeck@apache.org>",
    "epoch": 1674156847,
    "epoch_utc": null
  },
  {
    "commit": "90967e81e28f3e98b50e98fb05dac032774889cb",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Thu Jan 19 15:55:01 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jan 19 14:55:01 2023 +0100",
    "stats": {
      "files_changed": 6,
      "insertions": 369,
      "deletions": 473,
      "files": [
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/InternalTopicManagerTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorContextImplTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsAssignmentScaleTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/WriteConsistencyVectorTest.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/AssignmentTestUtils.java"
      ]
    },
    "message": "Replace EasyMock with Mockito in streams tests (#12818)\n\nBatch 6 of the tests detailed in https://issues.apache.org/jira/browse/KAFKA-14133 which use EasyMock and need to be moved to Mockito.\n\nReviewer: Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1674154501,
    "epoch_utc": null
  },
  {
    "commit": "653e284fcce3f992a0e97d6551717e891df016d5",
    "author": "Jason Gustafson",
    "author_email": "jason@confluent.io",
    "date": "Wed Jan 18 10:26:48 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jan 18 10:26:48 2023 -0800",
    "stats": {
      "files_changed": 4,
      "insertions": 94,
      "deletions": 28,
      "files": [
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/integration/kafka/admin/ReassignPartitionsIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala"
      ]
    },
    "message": "KAFKA-13972; Ensure replica state deleted after reassignment cancellation (#13107)\n\nWhen a reassignment is cancelled, we need to delete the partition state of adding replicas. Failing to do so causes \"stray\" replicas which take up disk space and can cause topicId conflicts if the topic is later recreated. Currently, this logic does not work because the leader epoch does not always get bumped after cancellation. Without a leader epoch bump, the replica will ignore StopReplica requests sent by the controller and the replica may remain online.\n\nIn this patch, we fix the problem by loosening the epoch check on the broker side when a StopReplica request is received. Instead of ignoring the request when the request epoch matches the current epoch, the request will be accepted.\n\nNote, this problem only affects the ZK controller. The integration tests added here nevertheless cover both metadata modes.\n\nReviewers:  David Jacot <djacot@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1674048408,
    "epoch_utc": null
  },
  {
    "commit": "b7e3ee72ce0493dade24e2da821807d3356bcba1",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Tue Jan 17 16:10:38 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jan 17 16:10:38 2023 -0500",
    "stats": {
      "files_changed": 2,
      "insertions": 13,
      "deletions": 0,
      "files": [
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/test/scala/unit/kafka/server/KafkaConfigTest.scala"
      ]
    },
    "message": "KAFKA-14621 Disallow authorizers during ZK migration (#13117)\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1673982638,
    "epoch_utc": null
  },
  {
    "commit": "700947aa5a64a707264caac8959fe2dc6b7e7fd0",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Tue Jan 17 20:39:01 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jan 17 20:39:01 2023 +0100",
    "stats": {
      "files_changed": 6,
      "insertions": 498,
      "deletions": 94,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/OffsetDeleteResponse.java",
        "core/src/main/scala/kafka/coordinator/group/GroupCoordinatorAdapter.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorAdapterTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinator.java"
      ]
    },
    "message": "KAFKA-14367; Add `OffsetDelete` to the new `GroupCoordinator` interface (#12902)\n\nThis patch adds `OffsetDelete` to the new `GroupCoordinator` interface and updates `KafkaApis` to use it.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1673998741,
    "epoch_utc": null
  },
  {
    "commit": "b2bc72dc794a28f0cdaf63d806bafd8871b9cddb",
    "author": "Divij Vaidya",
    "author_email": "diviv@amazon.com",
    "date": "Mon Jan 16 00:03:23 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Jan 15 15:03:23 2023 -0800",
    "stats": {
      "files_changed": 5,
      "insertions": 5,
      "deletions": 5,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/protocol/types/CompactArrayOf.java",
        "clients/src/main/java/org/apache/kafka/common/protocol/types/TaggedFields.java",
        "clients/src/main/java/org/apache/kafka/common/security/scram/internals/ScramMessages.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StateManagerUtil.java",
        "streams/src/main/java/org/apache/kafka/streams/state/internals/AbstractSegments.java"
      ]
    },
    "message": "MINOR: Include the inner exception stack trace when re-throwing an exception (#12229)\n\nWhile wrapping the caught exception into a custom one, information about the caught\nexception is being lost, including information about the stack trace of the exception.\n\nWhen re-throwing an exception, we either include the original exception or the relevant\ninformation is added to the exception message.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>, Luke Chen <showuon@gmail.com>, dengziming <dengziming1993@gmail.com>, Matthew de Detrich <mdedetrich@gmail.com>",
    "epoch": 1673838203,
    "epoch_utc": null
  },
  {
    "commit": "8d2e157b37902055bd5a8f4bd0f6ac29080910eb",
    "author": "drgnchan",
    "author_email": "40224023+drgnchan@users.noreply.github.com",
    "date": "Sun Jan 15 15:06:18 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Jan 14 23:06:18 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "docs/implementation.html"
      ]
    },
    "message": "MINOR: Fix docs to state that sendfile implemented in `TransferableRecords` instead of `MessageSet` (#13109)\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1673805978,
    "epoch_utc": null
  },
  {
    "commit": "d2556e02a25af28cf4cc093a190cc0154145121e",
    "author": "Cheryl Simmons",
    "author_email": "csimmons@confluent.io",
    "date": "Fri Jan 13 13:35:49 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jan 13 16:35:49 2023 -0500",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java"
      ]
    },
    "message": "Update ProducerConfig.java (#13115)\n\nThis should be greater than 1 to be consistent with behavior described inmax.in.flight.requests.per.connection.\n\nReviewers: Bill Bejeck <bbejeck@apache.org>",
    "epoch": 1673627749,
    "epoch_utc": null
  },
  {
    "commit": "058d8d530b0cda41c4f709b57621043ad858cd47",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Fri Jan 13 10:06:38 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jan 13 10:06:38 2023 -0800",
    "stats": {
      "files_changed": 10,
      "insertions": 52,
      "deletions": 53,
      "files": [
        "core/src/main/scala/kafka/server/metadata/BrokerServerMetrics.scala",
        "core/src/test/scala/kafka/server/metadata/BrokerServerMetricsTest.scala",
        "metadata/src/main/java/org/apache/kafka/image/MetadataImage.java",
        "metadata/src/main/java/org/apache/kafka/image/MetadataProvenance.java",
        "metadata/src/main/java/org/apache/kafka/image/loader/MetadataLoader.java",
        "metadata/src/main/java/org/apache/kafka/image/publisher/SnapshotEmitter.java",
        "metadata/src/main/java/org/apache/kafka/image/publisher/SnapshotGenerator.java",
        "metadata/src/test/java/org/apache/kafka/image/loader/MetadataLoaderTest.java",
        "metadata/src/test/java/org/apache/kafka/image/publisher/SnapshotEmitterTest.java",
        "raft/src/main/java/org/apache/kafka/snapshot/Snapshots.java"
      ]
    },
    "message": "KAFKA-14618; Fix off by one error in snapshot id (#13108)\n\nThe KRaft client expects the offset of the snapshot id to be an end offset. End offsets are\nexclusive. The MetadataProvenance type was createing a snapshot id using the last contained offset\nwhich is inclusive. This change fixes that and renames some of the fields to make this difference\nmore obvious.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1673615198,
    "epoch_utc": null
  },
  {
    "commit": "a382acd31d1b53cd8695ff9488977566083540b1",
    "author": "Chris Egerton",
    "author_email": "chrise@aiven.io",
    "date": "Fri Jan 13 09:19:29 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jan 13 09:19:29 2023 -0500",
    "stats": {
      "files_changed": 11,
      "insertions": 29,
      "deletions": 28,
      "files": [
        "connect/api/src/main/java/org/apache/kafka/connect/source/ExactlyOnceSupport.java",
        "connect/api/src/main/java/org/apache/kafka/connect/source/SourceConnector.java",
        "connect/file/src/main/java/org/apache/kafka/connect/file/FileStreamSourceConnector.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractWorkerSourceTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ExactlyOnceWorkerSourceTask.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/SourceConnectorConfig.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/Worker.java",
        "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/integration/ExactlyOnceSourceIntegrationTest.java",
        "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedHerderTest.java",
        "docs/connect.html"
      ]
    },
    "message": "KAFKA-13709 (follow-up): Avoid mention of 'exactly-once delivery' or 'delivery guarantees' in Connect (#13106)",
    "epoch": 1673612369,
    "epoch_utc": null
  },
  {
    "commit": "a2926edc2f1b59b0d69524fac28ad77ffe56ffcf",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Fri Jan 13 09:54:54 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jan 13 09:54:54 2023 +0100",
    "stats": {
      "files_changed": 7,
      "insertions": 643,
      "deletions": 128,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/TxnOffsetCommitRequest.java",
        "clients/src/main/java/org/apache/kafka/common/requests/TxnOffsetCommitResponse.java",
        "core/src/main/scala/kafka/coordinator/group/GroupCoordinatorAdapter.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorAdapterTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinator.java"
      ]
    },
    "message": "KAFKA-14367; Add `TxnOffsetCommit` to the new `GroupCoordinator` interface (#12901)\n\nThis patch adds `TxnOffsetCommit` to the new `GroupCoordinator` interface and updates `KafkaApis` to use it.\n\nReviewers: Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1673614494,
    "epoch_utc": null
  },
  {
    "commit": "111f02cc74cd3a742f9b6b6cd7f183ec2a494354",
    "author": "Federico Valeri",
    "author_email": "fedevaleri@gmail.com",
    "date": "Fri Jan 13 06:32:23 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jan 12 21:32:23 2023 -0800",
    "stats": {
      "files_changed": 42,
      "insertions": 583,
      "deletions": 457,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/FetchRequest.java",
        "core/src/main/scala/kafka/api/Request.scala",
        "core/src/main/scala/kafka/cluster/Partition.scala",
        "core/src/main/scala/kafka/coordinator/group/GroupMetadataManager.scala",
        "core/src/main/scala/kafka/coordinator/transaction/TransactionStateManager.scala",
        "core/src/main/scala/kafka/log/LocalLog.scala",
        "core/src/main/scala/kafka/log/LogSegment.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/raft/KafkaMetadataLog.scala",
        "core/src/main/scala/kafka/server/DelayedFetch.scala",
        "core/src/main/scala/kafka/server/FetchDataInfo.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/main/scala/kafka/server/LocalLeaderEndPoint.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/main/scala/kafka/tools/ReplicaVerificationTool.scala",
        "core/src/test/scala/integration/kafka/api/AuthorizerIntegrationTest.scala",
        "core/src/test/scala/integration/kafka/server/DelayedFetchTest.scala",
        "core/src/test/scala/other/kafka/StressTestLog.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionLockTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupMetadataManagerTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionCoordinatorConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionStateManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/BrokerCompressionTest.scala",
        "core/src/test/scala/unit/kafka/log/LocalLogTest.scala",
        "core/src/test/scala/unit/kafka/log/LogConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/log/LogLoaderTest.scala",
        "core/src/test/scala/unit/kafka/log/LogManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogTestUtils.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaAlterLogDirsThreadTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerQuotasTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "core/src/test/scala/unit/kafka/tools/DumpLogSegmentsTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala",
        "storage/src/main/java/org/apache/kafka/server/log/internals/FetchDataInfo.java",
        "storage/src/main/java/org/apache/kafka/server/log/internals/FetchIsolation.java",
        "storage/src/main/java/org/apache/kafka/server/log/internals/FetchParams.java",
        "storage/src/main/java/org/apache/kafka/server/log/internals/FetchPartitionData.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/utils/IntegrationTestUtils.java"
      ]
    },
    "message": "KAFKA-14568: Move FetchDataInfo and related to storage module (#13085)\n\nPart of KAFKA-14470: Move log layer to storage module.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>\n\nCo-authored-by: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1673602343,
    "epoch_utc": null
  },
  {
    "commit": "0d9a7022a4486e08dc4bd71e2fd7632ecdd3b76f",
    "author": "andymg3",
    "author_email": "97484553+andymg3@users.noreply.github.com",
    "date": "Thu Jan 12 19:23:57 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jan 12 16:23:57 2023 -0800",
    "stats": {
      "files_changed": 4,
      "insertions": 130,
      "deletions": 26,
      "files": [
        "metadata/src/main/java/org/apache/kafka/controller/ConfigurationControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/ReplicationControlManager.java",
        "metadata/src/test/java/org/apache/kafka/controller/ConfigurationControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/controller/ReplicationControlManagerTest.java"
      ]
    },
    "message": "KAFKA-14612: Make sure to write a new topics ConfigRecords to metadata log iff the topic is created (#13104)\n\n### JIRA\nhttps://issues.apache.org/jira/browse/KAFKA-14612\n\n### Details\nMakes sure we emit `ConfigRecord`s for a topic iff it actually gets created. Currently, we might emit `ConfigRecord`s even if the topic creation fails later in the `createTopics` method.\n\nI created a new method `incrementalAlterConfig` in `ConfigurationControlManager` that is similar to `incrementalAlterConfig` but it just handles one config at a time. This is used in `ReplicationControlManager` for each topic. By handling one topic's config at a time, it's easier to isolate each topic's config records. This enables us to make sure we only write config records for topics that get created.\n\nI refactored `incrementalAlterConfigResource` to return an `ApiError`. This made it easier to implement the new method `incrementalAlterConfig` in `ConfigurationControlManager` because it then doesnt have to search in the `Map` for the result.\n\n### Testing\nEnhanced pre-existing test `ReplicationControlManagerTest.testCreateTopicsWithConfigs`. I ran the tests without the changes to `ReplicationControlManager` and made sure each assertion ends up failing. Also ran `./gradlew metadata:test --tests org.apache.kafka.controller.ReplicationControlManagerTest`.\n\nReviewers: Jason Gustafson <jason@confluent.io>",
    "epoch": 1673562237,
    "epoch_utc": null
  },
  {
    "commit": "8478bbb5892d09bcd3f7d2794db1b5db1a29c077",
    "author": "Colin Patrick McCabe",
    "author_email": "cmccabe@apache.org",
    "date": "Thu Jan 12 10:03:14 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jan 12 10:03:14 2023 -0800",
    "stats": {
      "files_changed": 10,
      "insertions": 340,
      "deletions": 129,
      "files": [
        "checkstyle/suppressions.xml",
        "core/src/main/scala/kafka/server/BrokerLifecycleManager.scala",
        "core/src/main/scala/kafka/server/metadata/BrokerMetadataSnapshotter.scala",
        "metadata/src/main/java/org/apache/kafka/image/loader/MetadataLoader.java",
        "metadata/src/main/java/org/apache/kafka/metadata/util/SnapshotFileReader.java",
        "metadata/src/test/java/org/apache/kafka/metalog/LocalLogManager.java",
        "server-common/src/main/java/org/apache/kafka/queue/EventQueue.java",
        "server-common/src/main/java/org/apache/kafka/queue/KafkaEventQueue.java",
        "server-common/src/test/java/org/apache/kafka/queue/KafkaEventQueueTest.java",
        "server-common/src/test/resources/test/log4j.properties"
      ]
    },
    "message": "KAFKA-14601: Improve exception handling in KafkaEventQueue #13089\n\nIf KafkaEventQueue gets an InterruptedException while waiting for a condition variable, it\ncurrently exits immediately. Instead, it should complete the remaining events exceptionally and\nthen execute the cleanup event. This will allow us to finish any necessary cleanup steps.\n\nIn order to do this, we require the cleanup event to be provided when the queue is contructed,\nrather than when it's being shut down.\n\nAlso, handle cases where Event#handleException itself throws an exception.\n\nRemove timed shutdown from the event queue code since nobody was using it, and it adds complexity.\n\nAdd server-common/src/test/resources/test/log4j.properties since this gradle module somehow avoided\nhaving a test log4j.properties up to this point.\n\nReviewers: David Arthur <mumrah@gmail.com>",
    "epoch": 1673528594,
    "epoch_utc": null
  },
  {
    "commit": "e6669672ef11ee869e3e4e5ae04bad6c505d5342",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Thu Jan 12 18:05:49 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jan 12 18:05:49 2023 +0100",
    "stats": {
      "files_changed": 10,
      "insertions": 627,
      "deletions": 134,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/OffsetCommitRequest.java",
        "clients/src/main/java/org/apache/kafka/common/requests/OffsetCommitResponse.java",
        "core/src/main/java/kafka/server/builders/KafkaApisBuilder.java",
        "core/src/main/scala/kafka/coordinator/group/GroupCoordinatorAdapter.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorAdapterTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinator.java"
      ]
    },
    "message": "KAFKA-14367; Add `OffsetCommit` to the new `GroupCoordinator` interface (#12886)\n\nThis patch adds `OffsetCommit` to the new `GroupCoordinator` interface and updates `KafkaApis` to use it.\n\nReviewers: Omnia G H Ibrahim <o.g.h.ibrahim@gmail.com>, Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1673557549,
    "epoch_utc": null
  },
  {
    "commit": "22606a0a4d45dfb37b72a40de3728778ac4ffe84",
    "author": "Lucas Brutschy",
    "author_email": "lucasbru@users.noreply.github.com",
    "date": "Thu Jan 12 12:40:07 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jan 12 12:40:07 2023 +0100",
    "stats": {
      "files_changed": 2,
      "insertions": 43,
      "deletions": 24,
      "files": [
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java",
        "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java"
      ]
    },
    "message": "KAFKA-14530: Check state updater more often (#13017)\n\nIn the new state restoration code, the state updater needs to be checked regularly\nby the main thread to transfer ownership of tasks back to the main thread once the\nstate of the task is restored. The more often we check this, the faster we can\nstart processing the tasks.\n\nCurrently, we only check the state updater once in every loop iteration of the state\nupdater. And while we couldn't observe this to be strictly not often enough, we can\nincrease the number of checks easily by moving the check inside the inner processing\nloop. This would mean that once we have iterated over `numIterations` records, we can\nalready start processing tasks that have finished restoration in the meantime.\n\nReviewer: Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1673538007,
    "epoch_utc": null
  },
  {
    "commit": "0bb05d8679b684ad8fbb2eb40dfc00066186a75a",
    "author": "David Arthur",
    "author_email": "mumrah@gmail.com",
    "date": "Wed Jan 11 14:36:56 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jan 11 14:36:56 2023 -0500",
    "stats": {
      "files_changed": 14,
      "insertions": 121,
      "deletions": 61,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/BrokerRegistrationRequest.java",
        "clients/src/main/resources/common/message/BrokerRegistrationRequest.json",
        "core/src/main/scala/kafka/server/BrokerLifecycleManager.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/test/scala/integration/kafka/server/KafkaServerKRaftRegistrationTest.scala",
        "core/src/test/scala/unit/kafka/server/BrokerLifecycleManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/BrokerRegistrationRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaConfigTest.scala",
        "metadata/src/main/java/org/apache/kafka/controller/ClusterControlManager.java",
        "metadata/src/main/java/org/apache/kafka/metadata/BrokerRegistration.java",
        "metadata/src/main/resources/common/metadata/RegisterBrokerRecord.json",
        "metadata/src/test/java/org/apache/kafka/metadata/BrokerRegistrationTest.java"
      ]
    },
    "message": "KAFKA-14304 Use boolean for ZK migrating brokers in RPC/record (#13103)\n\nWith the new broker epoch validation logic introduced in #12998, we no longer need the ZK broker epoch to be sent to the KRaft controller. This patch removes that epoch and replaces it with a boolean.\n\nAnother small fix is included in this patch for controlled shutdown in migration mode. Previously, if a ZK broker was in migration mode, it would always try to do controlled shutdown via BrokerLifecycleManager. Since there is no ordering dependency between bringing up ZK brokers and the KRaft quorum during migration, a ZK broker could be running in migration mode, but talking to a ZK controller. A small check was added to see if the current controller is ZK or KRaft before decided which controlled shutdown to attempt.\n\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1673458616,
    "epoch_utc": null
  },
  {
    "commit": "78d4458b94e585bc602a4ae307d3de54fcedf2af",
    "author": "Christo Lolov",
    "author_email": "lolovc@amazon.com",
    "date": "Wed Jan 11 10:26:48 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jan 11 09:26:48 2023 +0100",
    "stats": {
      "files_changed": 12,
      "insertions": 177,
      "deletions": 225,
      "files": [
        ".../java/org/apache/kafka/streams/integration/KTableKTableForeignKeyInnerJoinMultiIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/KTableKTableForeignKeyJoinDistributedTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/LagFetchIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/MetricsIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/MetricsReporterIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/NamedTopologyIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/OptimizedKTableIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/PurgeRepartitionTopicIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/QueryableStateIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/RegexSourceIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/SmokeTestDriverIntegrationTest.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/StandbyTaskCreationIntegrationTest.java"
      ]
    },
    "message": "KAFKA-14003 Kafka Streams JUnit4 to JUnit5 migration part 2 (#12301)\n\nThis pull request addresses https://issues.apache.org/jira/browse/KAFKA-14003. It is the second of a series of pull requests which address the move of Kafka Streams tests from JUnit 4 to JUnit 5.\n\nReviewer: Bruno Cadonna <cadonna@apache.org>",
    "epoch": 1673443608,
    "epoch_utc": null
  },
  {
    "commit": "8ac644d2b198a386f67b213db35bb9cbd8eda073",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Tue Jan 10 23:51:58 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jan 10 23:51:58 2023 -0800",
    "stats": {
      "files_changed": 52,
      "insertions": 613,
      "deletions": 460,
      "files": [
        "build.gradle",
        "core/src/main/java/kafka/server/builders/LogManagerBuilder.java",
        "core/src/main/java/kafka/server/builders/ReplicaManagerBuilder.java",
        "core/src/main/scala/kafka/controller/KafkaController.scala",
        "core/src/main/scala/kafka/coordinator/group/GroupMetadataManager.scala",
        "core/src/main/scala/kafka/coordinator/transaction/TransactionCoordinator.scala",
        "core/src/main/scala/kafka/coordinator/transaction/TransactionStateManager.scala",
        "core/src/main/scala/kafka/log/LocalLog.scala",
        "core/src/main/scala/kafka/log/LogLoader.scala",
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/raft/KafkaMetadataLog.scala",
        "core/src/main/scala/kafka/raft/RaftManager.scala",
        "core/src/main/scala/kafka/server/AlterPartitionManager.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/KafkaBroker.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/main/scala/kafka/server/ZkAlterPartitionManager.scala",
        "core/src/main/scala/kafka/utils/KafkaScheduler.scala",
        "core/src/main/scala/kafka/zookeeper/ZooKeeperClient.scala",
        "core/src/test/scala/kafka/server/LocalLeaderEndPointTest.scala",
        "core/src/test/scala/other/kafka/TestLinearWriteSpeed.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/AbstractCoordinatorConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupMetadataManagerTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionCoordinatorTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionStateManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/LocalLogTest.scala",
        "core/src/test/scala/unit/kafka/log/LogConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/log/LogLoaderTest.scala",
        "core/src/test/scala/unit/kafka/log/LogTestUtils.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/server/AlterPartitionManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala",
        "core/src/test/scala/unit/kafka/server/HighwatermarkPersistenceTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerQuotasTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "core/src/test/scala/unit/kafka/utils/MockScheduler.scala",
        "core/src/test/scala/unit/kafka/utils/MockTime.scala",
        "core/src/test/scala/unit/kafka/utils/SchedulerTest.scala",
        "core/src/test/scala/unit/kafka/zookeeper/ZooKeeperClientTest.scala",
        "gradle/spotbugs-exclude.xml",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/fetcher/ReplicaFetcherThreadBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/partition/PartitionMakeFollowerBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/partition/UpdateFollowerFetchStateBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/server/CheckpointBench.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/server/PartitionCreationBench.java",
        "server-common/src/main/java/org/apache/kafka/server/util/KafkaScheduler.java",
        "server-common/src/main/java/org/apache/kafka/server/util/Scheduler.java",
        "server-common/src/test/java/org/apache/kafka/server/util/MockScheduler.java"
      ]
    },
    "message": "KAFKA-14607: Move Scheduler/KafkaScheduler to server-common (#13092)\n\nThere were some concurrency inconsistencies in `KafkaScheduler` flagged by spotBugs\nthat had to be fixed, summary of changes below:\n* Executor is `volatile`\n* We always synchronize and check `isStarted` as the first thing within the critical\nsection when a mutating operation is performed.\n* We don't synchronize (but ensure the executor is not null in a safe way) in read-only\noperations that operate on the executor.\n\nWith regards to `MockScheduler/MockTask`:\n* Set the type of `nextExecution` to `AtomicLong` and replaced inconsistent synchronization\n* Extracted logic into `MockTask.rescheduleIfPeriodic`\n\nTweaked the `Scheduler` interface a bit:\n* Removed `unit` parameter since we always used `ms` except one invocation\n* Introduced a couple of `scheduleOnce` overloads to replace the usage of default\narguments in Scala\n* Pulled up `resizeThreadPool` to the interface and removed `isStarted` from the\ninterface.\n\nOther cleanups:\n* Removed spotBugs exclusion affecting `kafka.log.LogConfig`, which no longer exists.\n\nFor broader context, see:\n* KAFKA-14470: Move log layer to storage module\n\nReviewers: Jun Rao <junrao@gmail.com>",
    "epoch": 1673405518,
    "epoch_utc": null
  },
  {
    "commit": "24a86423e9907b751d98fddc7196332feea2b48d",
    "author": "David Jacot",
    "author_email": "djacot@confluent.io",
    "date": "Tue Jan 10 20:38:31 2023 +0100",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jan 10 11:38:31 2023 -0800",
    "stats": {
      "files_changed": 9,
      "insertions": 799,
      "deletions": 124,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/requests/OffsetFetchRequest.java",
        "clients/src/main/java/org/apache/kafka/common/requests/OffsetFetchResponse.java",
        "clients/src/main/resources/common/message/OffsetFetchResponse.json",
        "core/src/main/scala/kafka/coordinator/group/GroupCoordinatorAdapter.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorAdapterTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "core/src/test/scala/unit/kafka/server/OffsetFetchRequestTest.scala",
        "group-coordinator/src/main/java/org/apache/kafka/coordinator/group/GroupCoordinator.java"
      ]
    },
    "message": "KAFKA-14367; Add `OffsetFetch` to the new `GroupCoordinator` interface (#12870)\n\nThis patch adds OffsetFetch to the new GroupCoordinator interface and updates KafkaApis to use it.\n\nReviewers: Philip Nee <pnee@confluent.i>, Jeff Kim <jeff.kim@confluent.io>, Justine Olshan <jolshan@confluent.io>",
    "epoch": 1673393911,
    "epoch_utc": null
  },
  {
    "commit": "2fc1875d0b1e5cd58727bbe80ee6d06602671993",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Tue Jan 10 10:18:40 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jan 10 10:18:40 2023 -0800",
    "stats": {
      "files_changed": 4,
      "insertions": 189,
      "deletions": 53,
      "files": [
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/main/scala/kafka/raft/RaftManager.scala",
        "core/src/main/scala/kafka/server/KafkaRaftServer.scala",
        "core/src/test/scala/unit/kafka/raft/RaftManagerTest.scala"
      ]
    },
    "message": "KAFKA-14557; Lock metadata log dir (#13058)\n\nThis change makes sure that Kafka grabs a log dir lock in the following additional cases:\n\n1. When a Kafka node runs in controller only. The current implementation doesn't grab a file lock because the LogManager is never instantiated.\n2. When the metadata log dir is different from the log dir(s). The current implementation of LogManager doesn't load or grab a lock on the metadata dir.\n\nReviewers: Ron Dagostino <rdagostino@confluent.io> , dengziming <dengziming1993@gmail.com>",
    "epoch": 1673356720,
    "epoch_utc": null
  },
  {
    "commit": "43f531d87a0ad6c49f0cfc343e8d21c7319ad397",
    "author": "andymg3",
    "author_email": "97484553+andymg3@users.noreply.github.com",
    "date": "Tue Jan 10 13:00:59 2023 -0500",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jan 10 10:00:59 2023 -0800",
    "stats": {
      "files_changed": 4,
      "insertions": 35,
      "deletions": 4,
      "files": [
        "metadata/src/main/java/org/apache/kafka/metadata/placement/PartitionAssignment.java",
        "metadata/src/main/java/org/apache/kafka/metadata/placement/TopicAssignment.java",
        "metadata/src/test/java/org/apache/kafka/metadata/placement/PartitionAssignmentTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/placement/TopicAssignmentTest.java"
      ]
    },
    "message": "MINOR: Implement toString method for TopicAssignment and PartitionAssignment (#13101)\n\nImplements `toString` method for classes `TopicAssignment` and` PartitionAssignment`. Also removes the `final` keyword from the constructor arguments for consistency.\n\nReviewers: Jos\u00e9 Armando Garc\u00eda Sancio <jsancio@apache.org>",
    "epoch": 1673366459,
    "epoch_utc": null
  },
  {
    "commit": "6e7e2e08a982c6667476a932e2571f8ef4b70dc3",
    "author": "emilnkrastev",
    "author_email": "emilnkrastev@gmail.com",
    "date": "Tue Jan 10 16:46:25 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jan 10 09:46:25 2023 -0500",
    "stats": {
      "files_changed": 3,
      "insertions": 156,
      "deletions": 11,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorSourceTask.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorSourceTaskTest.java",
        ".../src/test/java/org/apache/kafka/connect/mirror/integration/MirrorConnectorsIntegrationBaseTest.java"
      ]
    },
    "message": "KAFKA-12558: Do not prematurely mutate internal partition state in Mirror Maker 2 (#11818)\n\nReviewers: Greg Harris <greg.harris@aiven.io>, Chris Egerton <chrise@aiven.io>",
    "epoch": 1673379985,
    "epoch_utc": null
  },
  {
    "commit": "def8d724c82f84964f353f8cf45ef8d52247b2cc",
    "author": "Michael Marshall",
    "author_email": "mikemarsh17@gmail.com",
    "date": "Tue Jan 10 04:50:07 2023 -0600",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jan 10 11:50:07 2023 +0100",
    "stats": {
      "files_changed": 2,
      "insertions": 68,
      "deletions": 1,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/protocol/DataOutputStreamWritable.java",
        "clients/src/test/java/org/apache/kafka/common/protocol/DataOutputStreamWritableTest.java"
      ]
    },
    "message": "KAFKA-14540: Fix DataOutputStreamWritable#writeByteBuffer (#13032)\n\nWhen writing a ByteBuffer backed by a HeapBuffer to a DataOutputStream, it is necessary to pass in the offset and the position, not just the position. It is also necessary to pass the remain length, not the limit. The current code results in writing the wrong data to DataOutputStream. While the DataOutputStreamWritable is used in the project, I do not see any references that would utilize this code path, so this bug fix is relatively minor.\n\nI added a new test to cover the exact bug. The test fails without this change.",
    "epoch": 1673337007,
    "epoch_utc": null
  },
  {
    "commit": "1c9d7c2398faca867b7dfa88c13f8fa2dcf014dd",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Tue Jan 10 02:48:31 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Tue Jan 10 11:48:31 2023 +0100",
    "stats": {
      "files_changed": 1,
      "insertions": 2,
      "deletions": 2,
      "files": [
        "core/src/test/scala/integration/kafka/api/ProducerIdExpirationTest.scala"
      ]
    },
    "message": "KAFKA-14600: Reduce flakiness in ProducerIdExpirationTest (#13087)\n\nThe broker appears to be timing out the producer ID before the test can see it.\nIncrease the timeouts to compensate for slower CI environments.\n\nSigned-off-by: Greg Harris <greg.harris@aiven.io>",
    "epoch": 1673329711,
    "epoch_utc": null
  },
  {
    "commit": "896573f9bc2c6a695cb265df027c4f21214bc933",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Mon Jan 9 23:37:05 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jan 9 23:37:05 2023 -0800",
    "stats": {
      "files_changed": 14,
      "insertions": 1358,
      "deletions": 7,
      "files": [
        "build.gradle",
        "gradle/dependencies.gradle",
        "settings.gradle",
        "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java",
        ".../src/main/java/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionWrapperSerde.java",
        "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.java",
        "streams/upgrade-system-tests-33/src/test/java/org/apache/kafka/streams/tests/SmokeTestClient.java",
        "streams/upgrade-system-tests-33/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java",
        "streams/upgrade-system-tests-33/src/test/java/org/apache/kafka/streams/tests/SmokeTestUtil.java",
        "streams/upgrade-system-tests-33/src/test/java/org/apache/kafka/streams/tests/StreamsSmokeTest.java",
        "streams/upgrade-system-tests-33/src/test/java/org/apache/kafka/streams/tests/StreamsUpgradeTest.java",
        "tests/kafkatest/tests/streams/streams_application_upgrade_test.py",
        "tests/kafkatest/tests/streams/streams_broker_compatibility_test.py",
        "tests/kafkatest/tests/streams/streams_upgrade_test.py"
      ]
    },
    "message": "KAFKA-14279: Add 3.3.x streams system tests (#13077)\n\nReviewers: Matthias J. Sax <matthias@confluent.io>",
    "epoch": 1673318225,
    "epoch_utc": null
  },
  {
    "commit": "2060b057b055b7e8cc62cbcf8aed710ca8bbe671",
    "author": "A. Sophie Blee-Goldman",
    "author_email": "sophie@confluent.io",
    "date": "Mon Jan 9 15:51:44 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jan 9 15:51:44 2023 -0800",
    "stats": {
      "files_changed": 4,
      "insertions": 6,
      "deletions": 3,
      "files": [
        "gradle.properties",
        "streams/quickstart/java/pom.xml",
        "streams/quickstart/java/src/main/resources/archetype-resources/pom.xml",
        "streams/quickstart/pom.xml"
      ]
    },
    "message": "MINOR: bump streams quickstart pom versions and add to list in gradle.properties (#13064)\n\nThe three pom files for the Streams quickstart also need to bump their versions after a branch cut. For some reason these are included (late) in the Release Process guide, but are missing from the list of what to update when bumping the version in gradle.properties. This commit adds the missing files to this list to help future RMs locate all the required version changes\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1673290304,
    "epoch_utc": null
  },
  {
    "commit": "77a395b1b4cb1a9a7e6ca052f6acd724e503d6d7",
    "author": "A. Sophie Blee-Goldman",
    "author_email": "sophie@confluent.io",
    "date": "Mon Jan 9 15:51:12 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jan 9 15:51:12 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 21,
      "deletions": 2,
      "files": [
        "docs/upgrade.html"
      ]
    },
    "message": "MINOR: Update KRaft cluster upgrade documentation for 3.4 (#13063)\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1673290272,
    "epoch_utc": null
  },
  {
    "commit": "db490707606855c265bc938e1b236070e0e2eba5",
    "author": "Akhilesh C",
    "author_email": "akhileshchg@users.noreply.github.com",
    "date": "Mon Jan 9 10:44:11 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jan 9 10:44:11 2023 -0800",
    "stats": {
      "files_changed": 54,
      "insertions": 1383,
      "deletions": 179,
      "files": [
        "checkstyle/import-control-core.xml",
        "checkstyle/import-control.xml",
        "clients/src/main/java/org/apache/kafka/common/requests/BrokerRegistrationRequest.java",
        "clients/src/main/resources/common/message/BrokerRegistrationRequest.json",
        "clients/src/main/resources/common/message/BrokerRegistrationResponse.json",
        "core/src/main/scala/kafka/log/LocalLog.scala",
        "core/src/main/scala/kafka/migration/MigrationControllerChannelContext.scala",
        "core/src/main/scala/kafka/migration/MigrationPropagator.scala",
        "core/src/main/scala/kafka/server/BrokerLifecycleManager.scala",
        "core/src/main/scala/kafka/server/BrokerMetadataCheckpoint.scala",
        "core/src/main/scala/kafka/server/BrokerServer.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/KafkaApis.scala",
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/main/scala/kafka/server/KafkaServer.scala",
        "core/src/main/scala/kafka/server/MetadataSupport.scala",
        "core/src/main/scala/kafka/server/ZkBrokerEpochManager.scala",
        "core/src/main/scala/kafka/zk/KafkaZkClient.scala",
        "core/src/main/scala/kafka/zk/ZkData.scala",
        "core/src/main/scala/kafka/zk/ZkMigrationClient.scala",
        "core/src/test/java/kafka/test/junit/RaftClusterInvocationContext.java",
        "core/src/test/java/kafka/test/junit/ZkClusterInvocationContext.java",
        "core/src/test/scala/integration/kafka/server/KafkaServerKRaftRegistrationTest.scala",
        "core/src/test/scala/unit/kafka/server/BrokerLifecycleManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/BrokerRegistrationRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala",
        "core/src/test/scala/unit/kafka/zk/EmbeddedZookeeper.scala",
        "core/src/test/scala/unit/kafka/zk/KafkaZkClientTest.scala",
        "core/src/test/scala/unit/kafka/zk/ZkMigrationClientTest.scala",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/metadata/MetadataRequestBenchmark.java",
        "metadata/src/main/java/org/apache/kafka/controller/ClusterControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/ControllerMetricsManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/MigrationControlManager.java",
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java",
        "metadata/src/main/java/org/apache/kafka/image/ClusterDelta.java",
        "metadata/src/main/java/org/apache/kafka/image/ClusterImage.java",
        "metadata/src/main/java/org/apache/kafka/image/MetadataDelta.java",
        "metadata/src/main/java/org/apache/kafka/image/loader/LogDeltaManifest.java",
        "metadata/src/main/java/org/apache/kafka/image/loader/MetadataLoader.java",
        "metadata/src/main/java/org/apache/kafka/metadata/BrokerRegistration.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/KRaftMigrationDriver.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/LegacyPropagator.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/MigrationClient.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/MigrationState.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/ZkMigrationLeadershipState.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/ZkRecordConsumer.java",
        "metadata/src/main/resources/common/metadata/RegisterBrokerRecord.json",
        "metadata/src/test/java/org/apache/kafka/image/loader/MetadataLoaderTest.java",
        "metadata/src/test/java/org/apache/kafka/image/publisher/SnapshotGeneratorTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/BrokerRegistrationTest.java",
        "storage/src/main/java/org/apache/kafka/server/log/internals/CorruptSnapshotException.java",
        "tests/kafkatest/services/kafka/kafka.py",
        "tests/kafkatest/services/kafka/quorum.py",
        "tests/kafkatest/tests/core/zookeeper_migration_test.py"
      ]
    },
    "message": "KAFKA-14493: Introduce Zk to KRaft migration state machine STUBs in KRaft controller. (#12998)\n\nThis patch introduces a preliminary state machine that can be used by KRaft\ncontroller to drive online migration from Zk to KRaft.\n\nMigrationState -- Defines the states we can have while migration from Zk to\nKRaft.\n\nKRaftMigrationDriver -- Defines the state transitions, and events to handle\nactions like controller change, metadata change, broker change and have\ninterfaces through which it claims Zk controllership, performs zk writes and\nsends RPCs to ZkBrokers.\n\nMigrationClient -- Interface that defines the functions used to claim and\nrelinquish Zk controllership, read to and write from Zk.\n\nCo-authored-by: David Arthur <mumrah@gmail.com>\nReviewers: Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1673271851,
    "epoch_utc": null
  },
  {
    "commit": "e38526e375389868664c8977c7a2125e5da2388c",
    "author": "iamazy",
    "author_email": "iamazy.me@outlook.com",
    "date": "Mon Jan 9 18:15:01 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jan 9 11:15:01 2023 +0100",
    "stats": {
      "files_changed": 1,
      "insertions": 3,
      "deletions": 3,
      "files": [
        "clients/src/main/java/org/apache/kafka/clients/FetchSessionHandler.java"
      ]
    },
    "message": "KAFKA-14570: Fix parenthesis in verifyFullFetchResponsePartitions output (#13072)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1673298901,
    "epoch_utc": null
  },
  {
    "commit": "55212ec2aff2c1c0294a123290363b7763020715",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Sun Jan 8 07:16:14 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sun Jan 8 20:46:14 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 57,
      "deletions": 32,
      "files": [
        "storage/src/main/java/org/apache/kafka/server/log/internals/ProducerAppendInfo.java",
        "storage/src/main/java/org/apache/kafka/server/log/internals/ProducerStateEntry.java"
      ]
    },
    "message": "MINOR: Remove public mutable fields from ProducerAppendInfo (#13091)\n\nReplace them with accessors and mutators.\n\nReviewers: Satish Duggana <satishd@apache.org>",
    "epoch": 1673172974,
    "epoch_utc": null
  },
  {
    "commit": "2dec39d6e49da4cfb502da3e84d4f9c50508e809",
    "author": "Satish Duggana",
    "author_email": "satishd@apache.org",
    "date": "Sun Jan 8 09:43:38 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Jan 7 20:13:38 2023 -0800",
    "stats": {
      "files_changed": 12,
      "insertions": 665,
      "deletions": 377,
      "files": [
        "core/src/main/scala/kafka/log/LogCleaner.scala",
        "core/src/main/scala/kafka/log/LogSegment.scala",
        "core/src/main/scala/kafka/log/ProducerStateManager.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/tools/DumpLogSegments.scala",
        "core/src/test/scala/unit/kafka/log/LogSegmentTest.scala",
        "core/src/test/scala/unit/kafka/log/ProducerStateManagerTest.scala",
        "storage/src/main/java/org/apache/kafka/server/log/internals/BatchMetadata.java",
        "storage/src/main/java/org/apache/kafka/server/log/internals/LastRecord.java",
        "storage/src/main/java/org/apache/kafka/server/log/internals/ProducerAppendInfo.java",
        "storage/src/main/java/org/apache/kafka/server/log/internals/ProducerStateEntry.java",
        "storage/src/main/java/org/apache/kafka/server/log/internals/TxnMetadata.java"
      ]
    },
    "message": "KAFKA-14558: Move/Rewrite LastRecord, TxnMetadata, BatchMetadata, ProducerStateEntry, and ProducerAppendInfo to the storage module (#13043)\n\nFor broader context on this change, see:\n* KAFKA-14470: Move log layer to storage module.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1673181818,
    "epoch_utc": null
  },
  {
    "commit": "d798ec779c25dba31fa5ee9384d159ed54c6e07b",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Sat Jan 7 07:35:04 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Jan 7 21:05:04 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 0,
      "files": [
        "core/src/test/scala/integration/kafka/api/EndToEndAuthorizationTest.scala"
      ]
    },
    "message": "KAFKA-14535: Fix flaky EndToEndAuthorization tests which were sensitive to ACL change reordering (#13086)\n\nThe ACL change methods (create, delete) are eventually consistent across a Kafka cluster.\nAs part of that, changes to the same resource made to different brokers may be reordered.\nIn this test, a delete operation initiated in noConsumeWithoutDescribeAclSetup was being\nreordered to an unexpected time later in the test, causing an expected ACL to be missing.\n\nTo fix this, add a wait condition that asserts that the delete operations initiated in\nnoConsumeWithoutDescribeAclSetup are completely applied before returning from the method.\n\nNote: test failures were present for both the ZK and KRAFT iterations of the test, but\nthe ZK iteration encountered it much more often, and was used to diagnose the reordering.\n\nSigned-off-by: Greg Harris <greg.harris@aiven.io>\nReviewers: Manikumar Reddy <manikumar.reddy@gmail.com>",
    "epoch": 1673087704,
    "epoch_utc": null
  },
  {
    "commit": "b99be76ff1e79b10dd284375c41437f214ca587f",
    "author": "Chia-Ping Tsai",
    "author_email": "chia7712@gmail.com",
    "date": "Sat Jan 7 15:24:36 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Jan 7 15:24:36 2023 +0800",
    "stats": {
      "files_changed": 2,
      "insertions": 61,
      "deletions": 4,
      "files": [
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala"
      ]
    },
    "message": "KAFKA-9087 Replace log high watermark by future log high watermark wh\u2026 (#13075)\n\nReviewers: Ismael Juma <ismael@juma.me.uk>, Justine Olshan <jolshan@confluent.io>, Jun Rao <junrao@gmail.com>",
    "epoch": 1673115876,
    "epoch_utc": null
  },
  {
    "commit": "6b5e9e989b7a1f8c387a79dea0117e52401853e1",
    "author": "Luke Chen",
    "author_email": "showuon@gmail.com",
    "date": "Sat Jan 7 09:27:59 2023 +0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Sat Jan 7 09:27:59 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 4,
      "deletions": 4,
      "files": [
        "metadata/src/main/java/org/apache/kafka/controller/QuorumController.java"
      ]
    },
    "message": "MINOR: add error reason when controller failed to handle events (#13050)\n\nIn KRaft, when controller failed to handle events, we'll log error and return back to brokers. But in some cases, we only log error class name, and return error class name back to brokers, which is un-useful for troubleshooting. Ex: When broker registration failed with unsupported version error, it showed:\n\n2022-12-28T17:46:42.876+0800 [DEBUG] [TestEventLogger]     [2022-12-28 17:46:42,877] INFO [Controller 3000] registerBroker: failed with UnsupportedVersionException in 2888 us (org.apache.kafka.controller.QuorumController:447)\n\n2022-12-28T17:46:42.877+0800 [DEBUG] [TestEventLogger]     [2022-12-28 17:46:42,878] INFO [BrokerLifecycleManager id=0] Unable to register broker 0 because the controller returned error UNSUPPORTED_VERSION (kafka.server.BrokerLifecycleManager:66)\n\nChecking the logs, we still don't know which version it supports.\nAfter this PR, it will show:\n\n2022-12-28T17:54:59.671+0800 [DEBUG] [TestEventLogger]     [2022-12-28 17:54:59,671] INFO [Controller 3000] registerBroker: failed with UnsupportedVersionException in 291 us. Reason: Unable to register because the broker does not support version 8 of metadata.version. It wants a version between 4 and 4, inclusive. (org.apache.kafka.controller.QuorumController:447)\n\n2022-12-28T17:54:59.671+0800 [DEBUG] [TestEventLogger]     [2022-12-28 17:54:59,672] INFO [BrokerLifecycleManager id=0] Unable to register broker 0 because the controller returned error UNSUPPORTED_VERSION (kafka.server.BrokerLifecycleManager:66)\n\nReviewers: dengziming <dengziming1993@gmail.com>, Federico Valeri <fvaleri@redhat.com >",
    "epoch": 1673094479,
    "epoch_utc": null
  },
  {
    "commit": "95910af3a9125c3c67fe5daebf1e01d7ec6f20c7",
    "author": "Tom Bentley",
    "author_email": "tombentley@users.noreply.github.com",
    "date": "Fri Jan 6 10:31:12 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Fri Jan 6 10:31:12 2023 +0000",
    "stats": {
      "files_changed": 1,
      "insertions": 7,
      "deletions": 1,
      "files": [
        "docs/security.html"
      ]
    },
    "message": "MINOR: doc: note how JDK-8136913 can affect client SASL (#13071)\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Federico Valeri <fedevaleri@gmail.com>",
    "epoch": 1673011872,
    "epoch_utc": 1673001072
  },
  {
    "commit": "7bf3fbacfcb2517930191c9deadbfbc3bc5523d0",
    "author": "A. Sophie Blee-Goldman",
    "author_email": "sophie@confluent.io",
    "date": "Thu Jan 5 18:51:49 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jan 5 18:51:49 2023 -0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "NOTICE"
      ]
    },
    "message": "2023 (#13083)\n\nIt's 2023 now y'all\n\nReviewers: Anna Sophie Blee-Goldman <ableegoldman@apache.org>",
    "epoch": 1672955509,
    "epoch_utc": null
  },
  {
    "commit": "f668c8e44bb901f96523e2fed13f8579787e05ed",
    "author": "Jos\u00e9 Armando Garc\u00eda Sancio",
    "author_email": "jsancio@users.noreply.github.com",
    "date": "Thu Jan 5 11:28:12 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jan 5 11:28:12 2023 -0800",
    "stats": {
      "files_changed": 5,
      "insertions": 15,
      "deletions": 6,
      "files": [
        "tests/kafkatest/tests/client/client_compatibility_features_test.py",
        "tests/kafkatest/tests/client/client_compatibility_produce_consume_test.py",
        "tests/kafkatest/tests/core/compatibility_test_new_broker_test.py",
        "tests/kafkatest/tests/core/downgrade_test.py",
        "tests/kafkatest/tests/core/upgrade_test.py"
      ]
    },
    "message": "KAFKA-14279; Add 3.3.x to core compatibility tests (#13076)\n\nNow that 3.3.x exist, add system tests for upgrade, downgrade and client\ncompatibility.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1672928892,
    "epoch_utc": null
  },
  {
    "commit": "47288806b3f9dd0a1e3ff115a05bff68e671a217",
    "author": "Satish Duggana",
    "author_email": "satishd@apache.org",
    "date": "Thu Jan 5 13:21:20 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jan 5 13:21:20 2023 +0530",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "build.gradle"
      ]
    },
    "message": "MINOR Fixed doc generation for LogConfig class in genTopicConfigDocs. (#13079)\n\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1672935680,
    "epoch_utc": null
  },
  {
    "commit": "5126fe251b536859c8b1b4669152bf4acd456281",
    "author": "Ivan Yurchenko",
    "author_email": "ivan@ivanyu.me",
    "date": "Thu Jan 5 05:27:55 2023 +0200",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Thu Jan 5 08:57:55 2023 +0530",
    "stats": {
      "files_changed": 2,
      "insertions": 67,
      "deletions": 6,
      "files": [
        "core/src/main/scala/kafka/log/LogLoader.scala",
        "storage/src/main/java/org/apache/kafka/server/log/internals/LoadedLogOffsets.java"
      ]
    },
    "message": "KAFKA-14482: Move LoadedLogOffsets to storage module (#13065)\n\nThis is a relatively independent change in the context of KAFKA-14482.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>, Christo Lolov <lolovc@amazon.com>, Divij Vaidya <diviv@amazon.com>, Satish Duggana <satishd@apache.org>",
    "epoch": 1672907275,
    "epoch_utc": null
  },
  {
    "commit": "0e51a2026c9f0e43e69e848075f75d241e85b796",
    "author": "Akhilesh Chaganti",
    "author_email": "akhileshchg@users.noreply.github.com",
    "date": "Wed Jan 4 16:54:58 2023 -0800",
    "commit_by": "Colin P. McCabe",
    "commit_by_email": "cmccabe@apache.org",
    "commit_by_date": "Wed Jan 4 16:54:58 2023 -0800",
    "stats": {
      "files_changed": 17,
      "insertions": 763,
      "deletions": 117,
      "files": [
        "core/src/main/scala/kafka/cluster/Broker.scala",
        "core/src/main/scala/kafka/controller/ControllerChannelContext.scala",
        "core/src/main/scala/kafka/controller/ControllerChannelManager.scala",
        "core/src/main/scala/kafka/controller/ControllerContext.scala",
        "core/src/main/scala/kafka/controller/KafkaController.scala",
        "core/src/main/scala/kafka/migration/MigrationControllerChannelContext.scala",
        "core/src/main/scala/kafka/migration/MigrationPropagator.scala",
        "core/src/main/scala/kafka/migration/MigrationPropagatorBatch.scala",
        "core/src/test/scala/unit/kafka/controller/ControllerChannelManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/BrokerEpochIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/server/LeaderElectionTest.scala",
        "core/src/test/scala/unit/kafka/server/ServerShutdownTest.scala",
        "metadata/src/main/java/org/apache/kafka/image/ClusterDelta.java",
        "metadata/src/main/java/org/apache/kafka/image/ClusterImage.java",
        "metadata/src/main/java/org/apache/kafka/image/TopicsDelta.java",
        "metadata/src/main/java/org/apache/kafka/image/TopicsImage.java",
        "metadata/src/main/java/org/apache/kafka/metadata/migration/LegacyPropagator.java"
      ]
    },
    "message": "KAFKA-14458: Introduce RPC support during ZK migration #13028\n\nAdd infrastructure for sending UpdateMetadataRequest and LeaderAndIsr RPCs during the migration\nprocess from ZK to KRaft. The new classes use ControllerChannelManager to send the RPCs.  The\ninformation to send comes from MetadataDelta and MetadataImage.\n\nReviewers: David Arthur <mumrah@gmail.com>, Colin P. McCabe <cmccabe@apache.org>",
    "epoch": 1672862098,
    "epoch_utc": null
  },
  {
    "commit": "ef3b581ff0c4eba1fbf1e1d60507365ef141f0c3",
    "author": "Edoardo Comar",
    "author_email": "ecomar@uk.ibm.com",
    "date": "Wed Jan 4 22:24:16 2023 +0000",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jan 4 14:24:16 2023 -0800",
    "stats": {
      "files_changed": 2,
      "insertions": 3,
      "deletions": 3,
      "files": [
        "core/src/main/scala/kafka/server/metadata/ZkMetadataCache.scala",
        "core/src/test/scala/unit/kafka/server/MetadataCacheTest.scala"
      ]
    },
    "message": "KAFKA-14571: Include rack info in ZkMetadataCache.getClusterMetadata (#13073)\n\nZkMetadataCache.getClusterMetadata returns a Cluster object where the aliveNodes were\nmissing their rack info.\n\nProblem: when ZkMetadataCache updates the metadataSnapshot, includes the rack in\naliveBrokers but not in aliveNodes\n\nTrivial fix with matching assertion in existing unit test.\n\nNote that the Cluster object returned from `MetadataCache.getClusterMetadata(...)`\nis passed to `ClientQuotaCallback.updateClusterMetadata(...)`\nso it is used, though not by clients, but by service providers.\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1672881856,
    "epoch_utc": 1672871056
  },
  {
    "commit": "ad94dc2134474c9d790fe0bb79c0d390c562846a",
    "author": "csolidum",
    "author_email": "chris2987@gmail.com",
    "date": "Wed Jan 4 03:02:52 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jan 4 12:02:52 2023 +0100",
    "stats": {
      "files_changed": 2,
      "insertions": 18,
      "deletions": 6,
      "files": [
        "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorCheckpointTask.java",
        "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorCheckpointTaskTest.java"
      ]
    },
    "message": "KAFKA-14545: Make MirrorCheckpointTask.checkpoint handle null OffsetAndMetadata gracefully (#13052)\n\n\nReviewers: Mickael Maison <mickael.maison@gmail.com>, Greg Harris <gharris1727@gmail.com>",
    "epoch": 1672812172,
    "epoch_utc": null
  },
  {
    "commit": "96d9710c17b34d4e80259f09845d21de66a5efaf",
    "author": "Ismael Juma",
    "author_email": "ismael@juma.me.uk",
    "date": "Wed Jan 4 02:42:52 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jan 4 02:42:52 2023 -0800",
    "stats": {
      "files_changed": 102,
      "insertions": 1673,
      "deletions": 1596,
      "files": [
        "checkstyle/import-control.xml",
        "core/src/main/java/kafka/server/builders/LogManagerBuilder.java",
        "core/src/main/scala/kafka/admin/ConfigCommand.scala",
        "core/src/main/scala/kafka/admin/ReassignPartitionsCommand.scala",
        "core/src/main/scala/kafka/admin/TopicCommand.scala",
        "core/src/main/scala/kafka/coordinator/group/GroupCoordinator.scala",
        "core/src/main/scala/kafka/coordinator/transaction/TransactionStateManager.scala",
        "core/src/main/scala/kafka/log/CleanerConfig.scala",
        "core/src/main/scala/kafka/log/LocalLog.scala",
        "core/src/main/scala/kafka/log/LogCleaner.scala",
        "core/src/main/scala/kafka/log/LogConfig.scala",
        "core/src/main/scala/kafka/log/LogLoader.scala",
        "core/src/main/scala/kafka/log/LogManager.scala",
        "core/src/main/scala/kafka/log/LogSegment.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/raft/KafkaMetadataLog.scala",
        "core/src/main/scala/kafka/server/ConfigHandler.scala",
        "core/src/main/scala/kafka/server/ConfigHelper.scala",
        "core/src/main/scala/kafka/server/ControllerConfigurationValidator.scala",
        "core/src/main/scala/kafka/server/ControllerServer.scala",
        "core/src/main/scala/kafka/server/DynamicBrokerConfig.scala",
        "core/src/main/scala/kafka/server/DynamicConfig.scala",
        "core/src/main/scala/kafka/server/KafkaConfig.scala",
        "core/src/main/scala/kafka/server/KafkaRaftServer.scala",
        "core/src/main/scala/kafka/server/ReplicaManager.scala",
        "core/src/main/scala/kafka/server/ZkAdminManager.scala",
        "core/src/main/scala/kafka/zk/AdminZkClient.scala",
        "core/src/main/scala/kafka/zk/KafkaZkClient.scala",
        "core/src/test/scala/integration/kafka/api/AdminClientWithPoliciesIntegrationTest.scala",
        "core/src/test/scala/integration/kafka/api/AuthorizerIntegrationTest.scala",
        "core/src/test/scala/integration/kafka/api/BaseProducerSendTest.scala",
        "core/src/test/scala/integration/kafka/api/ConsumerWithLegacyMessageFormatIntegrationTest.scala",
        "core/src/test/scala/integration/kafka/api/MetricsTest.scala",
        "core/src/test/scala/integration/kafka/api/PlaintextAdminIntegrationTest.scala",
        "core/src/test/scala/integration/kafka/api/PlaintextConsumerTest.scala",
        "core/src/test/scala/integration/kafka/api/PlaintextProducerSendTest.scala",
        "core/src/test/scala/integration/kafka/api/ProducerFailureHandlingTest.scala",
        "core/src/test/scala/integration/kafka/api/SaslSslAdminIntegrationTest.scala",
        "core/src/test/scala/integration/kafka/server/DynamicBrokerReconfigurationTest.scala",
        "core/src/test/scala/kafka/raft/KafkaMetadataLogTest.scala",
        "core/src/test/scala/other/kafka/StressTestLog.scala",
        "core/src/test/scala/other/kafka/TestLinearWriteSpeed.scala",
        "core/src/test/scala/unit/kafka/admin/ReplicationQuotaUtils.scala",
        "core/src/test/scala/unit/kafka/cluster/AbstractPartitionTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionLockTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionTest.scala",
        "core/src/test/scala/unit/kafka/cluster/PartitionWithLegacyMessageFormatTest.scala",
        "core/src/test/scala/unit/kafka/controller/PartitionStateMachineTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/AbstractCoordinatorConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionCoordinatorConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionStateManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/AbstractLogCleanerIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/BrokerCompressionTest.scala",
        "core/src/test/scala/unit/kafka/log/LocalLogTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerLagIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerParameterizedIntegrationTest.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/log/LogConfigTest.scala",
        "core/src/test/scala/unit/kafka/log/LogLoaderTest.scala",
        "core/src/test/scala/unit/kafka/log/LogManagerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogSegmentTest.scala",
        "core/src/test/scala/unit/kafka/log/LogTestUtils.scala",
        "core/src/test/scala/unit/kafka/log/UnifiedLogTest.scala",
        "core/src/test/scala/unit/kafka/metrics/MetricsTest.scala",
        "core/src/test/scala/unit/kafka/server/BaseFetchRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/CreateTopicsRequestWithPolicyTest.scala",
        "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala",
        "core/src/test/scala/unit/kafka/server/DynamicConfigChangeTest.scala",
        "core/src/test/scala/unit/kafka/server/FetchRequestDownConversionConfigTest.scala",
        "core/src/test/scala/unit/kafka/server/FetchRequestMaxBytesTest.scala",
        "core/src/test/scala/unit/kafka/server/FetchRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/FetchRequestWithLegacyMessageFormatTest.scala",
        "core/src/test/scala/unit/kafka/server/HighwatermarkPersistenceTest.scala",
        "core/src/test/scala/unit/kafka/server/KafkaConfigTest.scala",
        "core/src/test/scala/unit/kafka/server/ProduceRequestTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerConcurrencyTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicaManagerTest.scala",
        "core/src/test/scala/unit/kafka/server/ReplicationQuotasTest.scala",
        "core/src/test/scala/unit/kafka/server/RequestQuotaTest.scala",
        "core/src/test/scala/unit/kafka/tools/DumpLogSegmentsTest.scala",
        "core/src/test/scala/unit/kafka/utils/SchedulerTest.scala",
        "core/src/test/scala/unit/kafka/utils/TestUtils.scala",
        "core/src/test/scala/unit/kafka/zk/AdminZkClientTest.scala",
        "core/src/test/scala/unit/kafka/zk/KafkaZkClientTest.scala",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/fetcher/ReplicaFetcherThreadBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/partition/PartitionMakeFollowerBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/partition/UpdateFollowerFetchStateBenchmark.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/server/CheckpointBench.java",
        "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/server/PartitionCreationBench.java",
        "metadata/src/main/java/org/apache/kafka/metadata/KafkaConfigSchema.java",
        "metadata/src/test/java/org/apache/kafka/controller/ConfigurationControlManagerTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/ConfigSynonymTest.java",
        "metadata/src/test/java/org/apache/kafka/metadata/KafkaConfigSchemaTest.java",
        ".../kafka/metadata => server-common/src/main/java/org/apache/kafka/server/config}/ConfigSynonym.java",
        "server-common/src/main/java/org/apache/kafka/server/config/ServerTopicConfigSynonyms.java",
        "storage/src/main/java/org/apache/kafka/server/log/internals/CleanerConfig.java",
        "storage/src/main/java/org/apache/kafka/server/log/internals/LogConfig.java",
        "storage/src/main/java/org/apache/kafka/server/log/internals/ThrottledReplicaListValidator.java",
        "streams/src/test/java/org/apache/kafka/streams/integration/InternalTopicIntegrationTest.java"
      ]
    },
    "message": "KAFKA-14478: Move LogConfig/CleanerConfig and related to storage module (#13049)\n\nAdditional notable changes to fix multiple dependency ordering issues:\n\n* Moved `ConfigSynonym` to `server-common`\n* Moved synonyms from `LogConfig` to `ServerTopicConfigSynonyms `\n* Removed `LogConfigDef` `define` overrides and rely on\n`ServerTopicConfigSynonyms` instead.\n* Moved `LogConfig.extractLogConfigMap` to `KafkaConfig`\n* Consolidated relevant defaults from `KafkaConfig`/`LogConfig` in the latter\n* Consolidate relevant config name definitions in `TopicConfig`\n* Move `ThrottledReplicaListValidator` to `storage`\n\nReviewers: Satish Duggana <satishd@apache.org>, Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1672810972,
    "epoch_utc": null
  },
  {
    "commit": "b8ab09820cd96290176afd24cf7b03e7cda7f783",
    "author": "Brendan Ribera",
    "author_email": "brendan.ribera@gmail.com",
    "date": "Wed Jan 4 00:55:05 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Wed Jan 4 16:55:05 2023 +0800",
    "stats": {
      "files_changed": 1,
      "insertions": 1,
      "deletions": 1,
      "files": [
        "gradle/dependencies.gradle"
      ]
    },
    "message": "KAFKA-14564: Upgrade netty to 4.1.86 to address CVE-2022-41881, CVE-2022-41915 (#13070)\n\nFor KAFKA-14564: upgrade to Netty 4.1.86\n\nFixes the following:\n\nCVE-2022-41881\nCVE-2022-41915\n\nReviewers: Luke Chen <showuon@gmail.com>",
    "epoch": 1672804505,
    "epoch_utc": null
  },
  {
    "commit": "1477c311983cbcf4a4b8f6b0ef2cd0acf31a3dd7",
    "author": "Greg Harris",
    "author_email": "greg.harris@aiven.io",
    "date": "Mon Jan 2 09:38:52 2023 -0800",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jan 2 18:38:52 2023 +0100",
    "stats": {
      "files_changed": 1,
      "insertions": 20,
      "deletions": 0,
      "files": [
        "storage/api/src/main/java/org/apache/kafka/server/log/remote/storage/package-info.java"
      ]
    },
    "message": "KAFKA-13881: Add Storage package info (#13053)\n\nThis module exposes a single package as public API that needs a package description.\n\nSigned-off-by: Greg Harris <greg.harris@aiven.io>\nReviewers: Mickael Maison <mickael.maison@gmail.com>",
    "epoch": 1672663132,
    "epoch_utc": null
  },
  {
    "commit": "026105d05f66d15544db6468f800fba6a6d4e171",
    "author": "Satish Duggana",
    "author_email": "satishd@apache.org",
    "date": "Mon Jan 2 21:01:40 2023 +0530",
    "commit_by": "GitHub",
    "commit_by_email": "noreply@github.com",
    "commit_by_date": "Mon Jan 2 07:31:40 2023 -0800",
    "stats": {
      "files_changed": 16,
      "insertions": 186,
      "deletions": 95,
      "files": [
        "clients/src/main/java/org/apache/kafka/common/utils/Utils.java",
        "clients/src/test/java/org/apache/kafka/common/utils/UtilsTest.java",
        "core/src/main/scala/kafka/log/LocalLog.scala",
        "core/src/main/scala/kafka/log/LogLoader.scala",
        "core/src/main/scala/kafka/log/LogSegment.scala",
        "core/src/main/scala/kafka/log/ProducerStateManager.scala",
        "core/src/main/scala/kafka/log/UnifiedLog.scala",
        "core/src/main/scala/kafka/log/remote/RemoteIndexCache.scala",
        "core/src/main/scala/kafka/tools/DumpLogSegments.scala",
        "core/src/main/scala/kafka/utils/CoreUtils.scala",
        "core/src/test/scala/unit/kafka/log/LogCleanerTest.scala",
        "core/src/test/scala/unit/kafka/log/LogLoaderTest.scala",
        "core/src/test/scala/unit/kafka/utils/CoreUtilsTest.scala",
        "storage/src/main/java/org/apache/kafka/server/log/internals/CorruptSnapshotException.java",
        "storage/src/main/java/org/apache/kafka/server/log/internals/LogFileUtils.java",
        "storage/src/main/java/org/apache/kafka/server/log/internals/SnapshotFile.java"
      ]
    },
    "message": "KAFKA-14550: Move SnapshotFile and CorruptSnapshotException to storage module (#13039)\n\nFor broader context on this change, see:\n\n* KAFKA-14470: Move log layer to storage module\n\nReviewers: Ismael Juma <ismael@juma.me.uk>",
    "epoch": 1672704100,
    "epoch_utc": null
  }
]
